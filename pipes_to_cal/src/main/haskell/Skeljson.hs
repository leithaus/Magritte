module Skeljson where

-- Haskell module generated by the BNF converter

import Absjson
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transJSONObject :: JSONObject -> Result
transJSONObject x = case x of
  JObject jsonpairs  -> failure x


transJSONPair :: JSONPair -> Result
transJSONPair x = case x of
  JPair str jsonvalue  -> failure x


transJSONArray :: JSONArray -> Result
transJSONArray x = case x of
  JArray jsonvalues  -> failure x


transJSONValue :: JSONValue -> Result
transJSONValue x = case x of
  JStr str  -> failure x
  JNum d  -> failure x
  JObj jsonobject  -> failure x
  JArr jsonarray  -> failure x
  JTru  -> failure x
  JFal  -> failure x
  JNul  -> failure x



