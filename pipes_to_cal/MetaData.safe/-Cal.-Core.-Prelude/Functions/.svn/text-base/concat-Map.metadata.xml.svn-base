<?xml version="1.0" encoding="UTF-8"?><functionMetadata xmlns="http://www.businessobjects.com/cal/metadata" xmlns:metadata="http://www.businessobjects.com/cal/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.businessobjects.com/cal/metadata file:metadata.xsd"><functionalAgentMetadata><scopedEntityMetadata><featureMetadata><resourceName xmlns="http://www.businessobjects.com/cal/workspace"><type><![CDATA[LocalizedResourceName]]></type><featureName><type><![CDATA[FUNCTION]]></type><name><![CDATA[Cal.Core.Prelude.concatMap]]></name></featureName></resourceName><displayName/><version/><author><![CDATA[Business Objects]]></author><shortDescription/><longDescription><![CDATA[This gem takes a list of values and a function that returns a list for each value.  

The resulting lists are concatenated together to form a single list which is returned.]]></longDescription><modificationDate><![CDATA[2006-05-08T14:51:04]]></modificationDate><creationDate><![CDATA[2003-12-02T09:57:28]]></creationDate><expertFeature><![CDATA[false]]></expertFeature><hiddenFeature><![CDATA[false]]></hiddenFeature><preferredFeature><![CDATA[false]]></preferredFeature><attributes/><relatedFeatures/></featureMetadata></scopedEntityMetadata><categories/><arguments><argumentMetadata><featureMetadata><resourceName xmlns="http://www.businessobjects.com/cal/workspace"><type><![CDATA[LocalizedResourceName]]></type><featureName><type><![CDATA[ARGUMENT]]></type><name><![CDATA[0]]></name></featureName></resourceName><displayName><![CDATA[mapFunction]]></displayName><version/><author/><shortDescription><![CDATA[A function that takes elements of the list as arguments.]]></shortDescription><longDescription/><modificationDate><![CDATA[2006-05-08T14:51:04]]></modificationDate><creationDate><![CDATA[2003-12-02T09:57:28]]></creationDate><expertFeature><![CDATA[false]]></expertFeature><hiddenFeature><![CDATA[false]]></hiddenFeature><preferredFeature><![CDATA[false]]></preferredFeature><attributes/><relatedFeatures/></featureMetadata><defaultValuesOnly><![CDATA[false]]></defaultValuesOnly><defaultValuesExpression><expression/></defaultValuesExpression><promptingTextExpression><expression/></promptingTextExpression></argumentMetadata><argumentMetadata><featureMetadata><resourceName xmlns="http://www.businessobjects.com/cal/workspace"><type><![CDATA[LocalizedResourceName]]></type><featureName><type><![CDATA[ARGUMENT]]></type><name><![CDATA[1]]></name></featureName></resourceName><displayName><![CDATA[list]]></displayName><version/><author/><shortDescription><![CDATA[A list of arguments for function f.]]></shortDescription><longDescription/><modificationDate><![CDATA[2006-05-08T14:51:04]]></modificationDate><creationDate><![CDATA[2003-12-02T09:57:28]]></creationDate><expertFeature><![CDATA[false]]></expertFeature><hiddenFeature><![CDATA[false]]></hiddenFeature><preferredFeature><![CDATA[false]]></preferredFeature><attributes/><relatedFeatures/></featureMetadata><defaultValuesOnly><![CDATA[false]]></defaultValuesOnly><defaultValuesExpression><expression/></defaultValuesExpression><promptingTextExpression><expression/></promptingTextExpression></argumentMetadata></arguments><examples><example><description><![CDATA[This example shows how concatMap uses a function to replicate each element of the list that number of times.]]></description><evaluateExpression><![CDATA[true]]></evaluateExpression><expression><moduleContext><![CDATA[Cal.Core.Prelude]]></moduleContext><calExpressionText><![CDATA[concatMap (\n -> replicate n n) [1, 2, 3]]]></calExpressionText><qualifiedCalExpressionText><![CDATA[concatMap (\n -> replicate n n) [1, 2, 3]]]></qualifiedCalExpressionText><qualificationMap><functions><mapping module="Cal.Core.Prelude" unqualifiedName="replicate"/><mapping module="Cal.Core.Prelude" unqualifiedName="concatMap"/></functions><constructors/><types/><classes/></qualificationMap></expression></example><example><description><![CDATA[This example uses concatMap to replicate each letter 3 times.]]></description><evaluateExpression><![CDATA[true]]></evaluateExpression><expression><moduleContext><![CDATA[Cal.Core.Prelude]]></moduleContext><calExpressionText><![CDATA[concatMap  (replicate 3) ['a', 'b', 'c']]]></calExpressionText><qualifiedCalExpressionText><![CDATA[concatMap  (replicate 3) ['a', 'b', 'c']]]></qualifiedCalExpressionText><qualificationMap><functions><mapping module="Cal.Core.Prelude" unqualifiedName="replicate"/><mapping module="Cal.Core.Prelude" unqualifiedName="concatMap"/></functions><constructors/><types/><classes/></qualificationMap></expression></example></examples></functionalAgentMetadata><returnValue/></functionMetadata>