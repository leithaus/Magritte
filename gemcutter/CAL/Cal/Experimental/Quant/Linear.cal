/**
 * Cal.Experimental.Algebra.Linear.cal.
 *
 * {@summary This module was automatically generated by JFit.@}
 *
 * Creation Date: Sep 3, 2008
 * @author elam
 */
module Cal.Experimental.Quant.Linear;
import Cal.Core.Prelude using
    typeConstructor = Double, Long, String, Int, Boolean, JObject;
    typeClass = Inputable, Outputable, Eq, Ord;
    ;
import Cal.Core.Debug using
    typeClass = Show;
    ;
data foreign unsafe import jvm public "java.io.BufferedReader"
    public JBufferedReader deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.CholeskyDecomposition"
    public JCholeskyDecomposition deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "java.lang.Class"
    public JClass deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "double[]"
    public JDoubleArray deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "double[][]"
    public JDoubleArray2 deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.EigenvalueDecomposition"
    public JEigenvalueDecomposition deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "int[]"
    public JIntArray deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.LUDecomposition"
    public JLUDecomposition deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.examples.MagicSquareExample"
    public JMagicSquareExample deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.util.Maths"
    public JMaths deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.Matrix"
    public JMatrix deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "java.text.NumberFormat"
    public JNumberFormat deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "java.io.PrintWriter"
    public JPrintWriter deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.QRDecomposition"
    public JQRDecomposition deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.SingularValueDecomposition"
    public JSingularValueDecomposition deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "java.lang.String[]"
    public JStringArray deriving Show, Inputable, Outputable, Eq;
data foreign unsafe import jvm public "Jama.test.TestMatrix"
    public JTestMatrix deriving Show, Inputable, Outputable, Eq;
foreign unsafe import jvm "constructor"
    public singularValueDecomposition_new ::
        JMatrix -> JSingularValueDecomposition;
foreign unsafe import jvm "method cond"
    public singularValueDecomposition_cond ::
        JSingularValueDecomposition -> Double;
foreign unsafe import jvm "method equals"
    public singularValueDecomposition_equals ::
        JSingularValueDecomposition -> JObject -> Boolean;
foreign unsafe import jvm "method getClass"
    public singularValueDecomposition_getClass ::
        JSingularValueDecomposition -> JClass;
foreign unsafe import jvm "method getS"
    public singularValueDecomposition_getS ::
        JSingularValueDecomposition -> JMatrix;
foreign unsafe import jvm "method getSingularValues"
    public singularValueDecomposition_getSingularValues ::
        JSingularValueDecomposition -> JDoubleArray;
foreign unsafe import jvm "method getU"
    public singularValueDecomposition_getU ::
        JSingularValueDecomposition -> JMatrix;
foreign unsafe import jvm "method getV"
    public singularValueDecomposition_getV ::
        JSingularValueDecomposition -> JMatrix;
foreign unsafe import jvm "method hashCode"
    public singularValueDecomposition_hashCode ::
        JSingularValueDecomposition -> Int;
foreign unsafe import jvm "method norm2"
    public singularValueDecomposition_norm2 ::
        JSingularValueDecomposition -> Double;
foreign unsafe import jvm "method notify"
    public singularValueDecomposition_notify ::
        JSingularValueDecomposition -> ();
foreign unsafe import jvm "method notifyAll"
    public singularValueDecomposition_notifyAll ::
        JSingularValueDecomposition -> ();
foreign unsafe import jvm "method rank"
    public singularValueDecomposition_rank ::
        JSingularValueDecomposition -> Int;
foreign unsafe import jvm "method toString"
    public singularValueDecomposition_toString ::
        JSingularValueDecomposition -> String;
foreign unsafe import jvm "method wait"
    public singularValueDecomposition_wait ::
        JSingularValueDecomposition -> ();
foreign unsafe import jvm "method wait"
    public singularValueDecomposition_wait_Long ::
        JSingularValueDecomposition -> Long -> ();
foreign unsafe import jvm "method wait"
    public singularValueDecomposition_wait_Long_Int ::
        JSingularValueDecomposition -> Long -> Int -> ();
foreign unsafe import jvm "constructor"
    public luDecomposition_new :: JMatrix -> JLUDecomposition;
foreign unsafe import jvm "method det"
    public luDecomposition_det :: JLUDecomposition -> Double;
foreign unsafe import jvm "method equals"
    public luDecomposition_equals :: JLUDecomposition -> JObject -> Boolean;
foreign unsafe import jvm "method getClass"
    public luDecomposition_getClass :: JLUDecomposition -> JClass;
foreign unsafe import jvm "method getDoublePivot"
    public luDecomposition_getDoublePivot :: JLUDecomposition -> JDoubleArray;
foreign unsafe import jvm "method getL"
    public luDecomposition_getL :: JLUDecomposition -> JMatrix;
foreign unsafe import jvm "method getPivot"
    public luDecomposition_getPivot :: JLUDecomposition -> JIntArray;
foreign unsafe import jvm "method getU"
    public luDecomposition_getU :: JLUDecomposition -> JMatrix;
foreign unsafe import jvm "method hashCode"
    public luDecomposition_hashCode :: JLUDecomposition -> Int;
foreign unsafe import jvm "method isNonsingular"
    public luDecomposition_isNonsingular :: JLUDecomposition -> Boolean;
foreign unsafe import jvm "method notify"
    public luDecomposition_notify :: JLUDecomposition -> ();
foreign unsafe import jvm "method notifyAll"
    public luDecomposition_notifyAll :: JLUDecomposition -> ();
foreign unsafe import jvm "method solve"
    public luDecomposition_solve :: JLUDecomposition -> JMatrix -> JMatrix;
foreign unsafe import jvm "method toString"
    public luDecomposition_toString :: JLUDecomposition -> String;
foreign unsafe import jvm "method wait"
    public luDecomposition_wait :: JLUDecomposition -> ();
foreign unsafe import jvm "method wait"
    public luDecomposition_wait_Long :: JLUDecomposition -> Long -> ();
foreign unsafe import jvm "method wait"
    public luDecomposition_wait_Long_Int ::
        JLUDecomposition -> Long -> Int -> ();
foreign unsafe import jvm "constructor" public testMatrix_new :: JTestMatrix;
foreign unsafe import jvm "method equals"
    public testMatrix_equals :: JTestMatrix -> JObject -> Boolean;
foreign unsafe import jvm "method getClass"
    public testMatrix_getClass :: JTestMatrix -> JClass;
foreign unsafe import jvm "method hashCode"
    public testMatrix_hashCode :: JTestMatrix -> Int;
foreign unsafe import jvm "static method Jama.test.TestMatrix.main"
    public testMatrix_main :: JStringArray -> ();
foreign unsafe import jvm "method notify"
    public testMatrix_notify :: JTestMatrix -> ();
foreign unsafe import jvm "method notifyAll"
    public testMatrix_notifyAll :: JTestMatrix -> ();
foreign unsafe import jvm "method toString"
    public testMatrix_toString :: JTestMatrix -> String;
foreign unsafe import jvm "method wait"
    public testMatrix_wait :: JTestMatrix -> ();
foreign unsafe import jvm "method wait"
    public testMatrix_wait_Long :: JTestMatrix -> Long -> ();
foreign unsafe import jvm "method wait"
    public testMatrix_wait_Long_Int :: JTestMatrix -> Long -> Int -> ();
foreign unsafe import jvm "constructor"
    public magicSquareExample_new :: JMagicSquareExample;
foreign unsafe import jvm "method equals"
    public magicSquareExample_equals ::
        JMagicSquareExample -> JObject -> Boolean;
foreign unsafe import jvm "static method Jama.examples.MagicSquareExample.fixedWidthDoubletoString"
    public magicSquareExample_fixedWidthDoubletoString ::
        Double -> Int -> Int -> String;
foreign unsafe import jvm "static method Jama.examples.MagicSquareExample.fixedWidthIntegertoString"
    public magicSquareExample_fixedWidthIntegertoString ::
        Int -> Int -> String;
foreign unsafe import jvm "method getClass"
    public magicSquareExample_getClass :: JMagicSquareExample -> JClass;
foreign unsafe import jvm "method hashCode"
    public magicSquareExample_hashCode :: JMagicSquareExample -> Int;
foreign unsafe import jvm "static method Jama.examples.MagicSquareExample.magic"
    public magicSquareExample_magic :: Int -> JMatrix;
foreign unsafe import jvm "static method Jama.examples.MagicSquareExample.main"
    public magicSquareExample_main :: JStringArray -> ();
foreign unsafe import jvm "method notify"
    public magicSquareExample_notify :: JMagicSquareExample -> ();
foreign unsafe import jvm "method notifyAll"
    public magicSquareExample_notifyAll :: JMagicSquareExample -> ();
foreign unsafe import jvm "method toString"
    public magicSquareExample_toString :: JMagicSquareExample -> String;
foreign unsafe import jvm "method wait"
    public magicSquareExample_wait :: JMagicSquareExample -> ();
foreign unsafe import jvm "method wait"
    public magicSquareExample_wait_Long :: JMagicSquareExample -> Long -> ();
foreign unsafe import jvm "method wait"
    public magicSquareExample_wait_Long_Int ::
        JMagicSquareExample -> Long -> Int -> ();
foreign unsafe import jvm "constructor"
    public matrix_new_JDoubleArray2 :: JDoubleArray2 -> JMatrix;
foreign unsafe import jvm "constructor"
    public matrix_new_Int_Int :: Int -> Int -> JMatrix;
foreign unsafe import jvm "constructor"
    public matrix_new_JDoubleArray_Int :: JDoubleArray -> Int -> JMatrix;
foreign unsafe import jvm "constructor"
    public matrix_new_Int_Int_Double :: Int -> Int -> Double -> JMatrix;
foreign unsafe import jvm "constructor"
    public matrix_new_JDoubleArray2_Int_Int ::
        JDoubleArray2 -> Int -> Int -> JMatrix;
foreign unsafe import jvm "method arrayLeftDivide"
    public matrix_arrayLeftDivide :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method arrayLeftDivideEquals"
    public matrix_arrayLeftDivideEquals :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method arrayRightDivide"
    public matrix_arrayRightDivide :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method arrayRightDivideEquals"
    public matrix_arrayRightDivideEquals :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method arrayTimes"
    public matrix_arrayTimes :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method arrayTimesEquals"
    public matrix_arrayTimesEquals :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method chol"
    public matrix_chol :: JMatrix -> JCholeskyDecomposition;
foreign unsafe import jvm "method clone"
    public matrix_clone :: JMatrix -> JObject;
foreign unsafe import jvm "method cond"
    public matrix_cond :: JMatrix -> Double;
foreign unsafe import jvm "static method Jama.Matrix.constructWithCopy"
    public matrix_constructWithCopy :: JDoubleArray2 -> JMatrix;
foreign unsafe import jvm "method copy"
    public matrix_copy :: JMatrix -> JMatrix;
foreign unsafe import jvm "method det" public matrix_det :: JMatrix -> Double;
foreign unsafe import jvm "method eig"
    public matrix_eig :: JMatrix -> JEigenvalueDecomposition;
foreign unsafe import jvm "method equals"
    public matrix_equals :: JMatrix -> JObject -> Boolean;
foreign unsafe import jvm "method get"
    public matrix_get :: JMatrix -> Int -> Int -> Double;
foreign unsafe import jvm "method getArray"
    public matrix_getArray :: JMatrix -> JDoubleArray2;
foreign unsafe import jvm "method getArrayCopy"
    public matrix_getArrayCopy :: JMatrix -> JDoubleArray2;
foreign unsafe import jvm "method getClass"
    public matrix_getClass :: JMatrix -> JClass;
foreign unsafe import jvm "method getColumnDimension"
    public matrix_getColumnDimension :: JMatrix -> Int;
foreign unsafe import jvm "method getColumnPackedCopy"
    public matrix_getColumnPackedCopy :: JMatrix -> JDoubleArray;
foreign unsafe import jvm "method getMatrix"
    public matrix_getMatrix_JIntArray_JIntArray ::
        JMatrix -> JIntArray -> JIntArray -> JMatrix;
foreign unsafe import jvm "method getMatrix"
    public matrix_getMatrix_Int_Int_JIntArray ::
        JMatrix -> Int -> Int -> JIntArray -> JMatrix;
foreign unsafe import jvm "method getMatrix"
    public matrix_getMatrix_JIntArray_Int_Int ::
        JMatrix -> JIntArray -> Int -> Int -> JMatrix;
foreign unsafe import jvm "method getMatrix"
    public matrix_getMatrix_Int_Int_Int_Int ::
        JMatrix -> Int -> Int -> Int -> Int -> JMatrix;
foreign unsafe import jvm "method getRowDimension"
    public matrix_getRowDimension :: JMatrix -> Int;
foreign unsafe import jvm "method getRowPackedCopy"
    public matrix_getRowPackedCopy :: JMatrix -> JDoubleArray;
foreign unsafe import jvm "method hashCode"
    public matrix_hashCode :: JMatrix -> Int;
foreign unsafe import jvm "static method Jama.Matrix.identity"
    public matrix_identity :: Int -> Int -> JMatrix;
foreign unsafe import jvm "method inverse"
    public matrix_inverse :: JMatrix -> JMatrix;
foreign unsafe import jvm "method lu"
    public matrix_lu :: JMatrix -> JLUDecomposition;
foreign unsafe import jvm "method minus"
    public matrix_minus :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method minusEquals"
    public matrix_minusEquals :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method norm1"
    public matrix_norm1 :: JMatrix -> Double;
foreign unsafe import jvm "method norm2"
    public matrix_norm2 :: JMatrix -> Double;
foreign unsafe import jvm "method normF"
    public matrix_normF :: JMatrix -> Double;
foreign unsafe import jvm "method normInf"
    public matrix_normInf :: JMatrix -> Double;
foreign unsafe import jvm "method notify"
    public matrix_notify :: JMatrix -> ();
foreign unsafe import jvm "method notifyAll"
    public matrix_notifyAll :: JMatrix -> ();
foreign unsafe import jvm "method plus"
    public matrix_plus :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method plusEquals"
    public matrix_plusEquals :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method print"
    public matrix_print_Int_Int :: JMatrix -> Int -> Int -> ();
foreign unsafe import jvm "method print"
    public matrix_print_JNumberFormat_Int ::
        JMatrix -> JNumberFormat -> Int -> ();
foreign unsafe import jvm "method print"
    public matrix_print_JPrintWriter_Int_Int ::
        JMatrix -> JPrintWriter -> Int -> Int -> ();
foreign unsafe import jvm "method print"
    public matrix_print_JPrintWriter_JNumberFormat_Int ::
        JMatrix -> JPrintWriter -> JNumberFormat -> Int -> ();
foreign unsafe import jvm "method qr"
    public matrix_qr :: JMatrix -> JQRDecomposition;
foreign unsafe import jvm "static method Jama.Matrix.random"
    public matrix_random :: Int -> Int -> JMatrix;
foreign unsafe import jvm "method rank" public matrix_rank :: JMatrix -> Int;
foreign unsafe import jvm "static method Jama.Matrix.read"
    public matrix_read :: JBufferedReader -> JMatrix;
foreign unsafe import jvm "method set"
    public matrix_set :: JMatrix -> Int -> Int -> Double -> ();
foreign unsafe import jvm "method setMatrix"
    public matrix_setMatrix_JIntArray_JIntArray_JMatrix ::
        JMatrix -> JIntArray -> JIntArray -> JMatrix -> ();
foreign unsafe import jvm "method setMatrix"
    public matrix_setMatrix_Int_Int_JIntArray_JMatrix ::
        JMatrix -> Int -> Int -> JIntArray -> JMatrix -> ();
foreign unsafe import jvm "method setMatrix"
    public matrix_setMatrix_JIntArray_Int_Int_JMatrix ::
        JMatrix -> JIntArray -> Int -> Int -> JMatrix -> ();
foreign unsafe import jvm "method setMatrix"
    public matrix_setMatrix_Int_Int_Int_Int_JMatrix ::
        JMatrix -> Int -> Int -> Int -> Int -> JMatrix -> ();
foreign unsafe import jvm "method solve"
    public matrix_solve :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method solveTranspose"
    public matrix_solveTranspose :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method svd"
    public matrix_svd :: JMatrix -> JSingularValueDecomposition;
foreign unsafe import jvm "method times"
    public matrix_times_Double :: JMatrix -> Double -> JMatrix;
foreign unsafe import jvm "method times"
    public matrix_times_JMatrix :: JMatrix -> JMatrix -> JMatrix;
foreign unsafe import jvm "method timesEquals"
    public matrix_timesEquals :: JMatrix -> Double -> JMatrix;
foreign unsafe import jvm "method toString"
    public matrix_toString :: JMatrix -> String;
foreign unsafe import jvm "method trace"
    public matrix_trace :: JMatrix -> Double;
foreign unsafe import jvm "method transpose"
    public matrix_transpose :: JMatrix -> JMatrix;
foreign unsafe import jvm "method uminus"
    public matrix_uminus :: JMatrix -> JMatrix;
foreign unsafe import jvm "method wait" public matrix_wait :: JMatrix -> ();
foreign unsafe import jvm "method wait"
    public matrix_wait_Long :: JMatrix -> Long -> ();
foreign unsafe import jvm "method wait"
    public matrix_wait_Long_Int :: JMatrix -> Long -> Int -> ();
foreign unsafe import jvm "constructor"
    public eigenvalueDecomposition_new :: JMatrix -> JEigenvalueDecomposition;
foreign unsafe import jvm "method equals"
    public eigenvalueDecomposition_equals ::
        JEigenvalueDecomposition -> JObject -> Boolean;
foreign unsafe import jvm "method getClass"
    public eigenvalueDecomposition_getClass ::
        JEigenvalueDecomposition -> JClass;
foreign unsafe import jvm "method getD"
    public eigenvalueDecomposition_getD :: JEigenvalueDecomposition -> JMatrix;
foreign unsafe import jvm "method getImagEigenvalues"
    public eigenvalueDecomposition_getImagEigenvalues ::
        JEigenvalueDecomposition -> JDoubleArray;
foreign unsafe import jvm "method getRealEigenvalues"
    public eigenvalueDecomposition_getRealEigenvalues ::
        JEigenvalueDecomposition -> JDoubleArray;
foreign unsafe import jvm "method getV"
    public eigenvalueDecomposition_getV :: JEigenvalueDecomposition -> JMatrix;
foreign unsafe import jvm "method hashCode"
    public eigenvalueDecomposition_hashCode :: JEigenvalueDecomposition -> Int;
foreign unsafe import jvm "method notify"
    public eigenvalueDecomposition_notify :: JEigenvalueDecomposition -> ();
foreign unsafe import jvm "method notifyAll"
    public eigenvalueDecomposition_notifyAll :: JEigenvalueDecomposition -> ();
foreign unsafe import jvm "method toString"
    public eigenvalueDecomposition_toString ::
        JEigenvalueDecomposition -> String;
foreign unsafe import jvm "method wait"
    public eigenvalueDecomposition_wait :: JEigenvalueDecomposition -> ();
foreign unsafe import jvm "method wait"
    public eigenvalueDecomposition_wait_Long ::
        JEigenvalueDecomposition -> Long -> ();
foreign unsafe import jvm "method wait"
    public eigenvalueDecomposition_wait_Long_Int ::
        JEigenvalueDecomposition -> Long -> Int -> ();
foreign unsafe import jvm "constructor"
    public choleskyDecomposition_new :: JMatrix -> JCholeskyDecomposition;
foreign unsafe import jvm "method equals"
    public choleskyDecomposition_equals ::
        JCholeskyDecomposition -> JObject -> Boolean;
foreign unsafe import jvm "method getClass"
    public choleskyDecomposition_getClass :: JCholeskyDecomposition -> JClass;
foreign unsafe import jvm "method getL"
    public choleskyDecomposition_getL :: JCholeskyDecomposition -> JMatrix;
foreign unsafe import jvm "method hashCode"
    public choleskyDecomposition_hashCode :: JCholeskyDecomposition -> Int;
foreign unsafe import jvm "method isSPD"
    public choleskyDecomposition_isSPD :: JCholeskyDecomposition -> Boolean;
foreign unsafe import jvm "method notify"
    public choleskyDecomposition_notify :: JCholeskyDecomposition -> ();
foreign unsafe import jvm "method notifyAll"
    public choleskyDecomposition_notifyAll :: JCholeskyDecomposition -> ();
foreign unsafe import jvm "method solve"
    public choleskyDecomposition_solve ::
        JCholeskyDecomposition -> JMatrix -> JMatrix;
foreign unsafe import jvm "method toString"
    public choleskyDecomposition_toString :: JCholeskyDecomposition -> String;
foreign unsafe import jvm "method wait"
    public choleskyDecomposition_wait :: JCholeskyDecomposition -> ();
foreign unsafe import jvm "method wait"
    public choleskyDecomposition_wait_Long ::
        JCholeskyDecomposition -> Long -> ();
foreign unsafe import jvm "method wait"
    public choleskyDecomposition_wait_Long_Int ::
        JCholeskyDecomposition -> Long -> Int -> ();
foreign unsafe import jvm "constructor" public maths_new :: JMaths;
foreign unsafe import jvm "method equals"
    public maths_equals :: JMaths -> JObject -> Boolean;
foreign unsafe import jvm "method getClass"
    public maths_getClass :: JMaths -> JClass;
foreign unsafe import jvm "method hashCode"
    public maths_hashCode :: JMaths -> Int;
foreign unsafe import jvm "static method Jama.util.Maths.hypot"
    public maths_hypot :: Double -> Double -> Double;
foreign unsafe import jvm "method notify" public maths_notify :: JMaths -> ();
foreign unsafe import jvm "method notifyAll"
    public maths_notifyAll :: JMaths -> ();
foreign unsafe import jvm "method toString"
    public maths_toString :: JMaths -> String;
foreign unsafe import jvm "method wait" public maths_wait :: JMaths -> ();
foreign unsafe import jvm "method wait"
    public maths_wait_Long :: JMaths -> Long -> ();
foreign unsafe import jvm "method wait"
    public maths_wait_Long_Int :: JMaths -> Long -> Int -> ();
foreign unsafe import jvm "constructor"
    public qrDecomposition_new :: JMatrix -> JQRDecomposition;
foreign unsafe import jvm "method equals"
    public qrDecomposition_equals :: JQRDecomposition -> JObject -> Boolean;
foreign unsafe import jvm "method getClass"
    public qrDecomposition_getClass :: JQRDecomposition -> JClass;
foreign unsafe import jvm "method getH"
    public qrDecomposition_getH :: JQRDecomposition -> JMatrix;
foreign unsafe import jvm "method getQ"
    public qrDecomposition_getQ :: JQRDecomposition -> JMatrix;
foreign unsafe import jvm "method getR"
    public qrDecomposition_getR :: JQRDecomposition -> JMatrix;
foreign unsafe import jvm "method hashCode"
    public qrDecomposition_hashCode :: JQRDecomposition -> Int;
foreign unsafe import jvm "method isFullRank"
    public qrDecomposition_isFullRank :: JQRDecomposition -> Boolean;
foreign unsafe import jvm "method notify"
    public qrDecomposition_notify :: JQRDecomposition -> ();
foreign unsafe import jvm "method notifyAll"
    public qrDecomposition_notifyAll :: JQRDecomposition -> ();
foreign unsafe import jvm "method solve"
    public qrDecomposition_solve :: JQRDecomposition -> JMatrix -> JMatrix;
foreign unsafe import jvm "method toString"
    public qrDecomposition_toString :: JQRDecomposition -> String;
foreign unsafe import jvm "method wait"
    public qrDecomposition_wait :: JQRDecomposition -> ();
foreign unsafe import jvm "method wait"
    public qrDecomposition_wait_Long :: JQRDecomposition -> Long -> ();
foreign unsafe import jvm "method wait"
    public qrDecomposition_wait_Long_Int ::
        JQRDecomposition -> Long -> Int -> ();
