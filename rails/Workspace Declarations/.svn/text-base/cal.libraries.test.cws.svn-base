/*
 * Copyright (c) 2007 BUSINESS OBJECTS SOFTWARE LIMITED
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *  
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *  
 *     * Neither the name of Business Objects nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *  
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */


/*
 * cal.libraries.test.cws
 * Creation date: Mar 16, 2005.
 * By: Edward Lam
 */

/**
 * The test workspace for the CAL libraries.
 *
 * Modules are specified as: VaultType ModuleName [LocationString [RevisionNumber]].
 * Workspaces specified as:  import VaultType WorkspaceName [LocationString [RevisionNumber]].
 *   where LocationString is a vault-specific identifier
 *
 * Module precedence is textual order.  
 * eg. suppose this declaration contains the line "VaultA ModuleName", and an imported declaration contains the line "VaultB ModuleName"
 *     If "VaultA ModuleName" appears before the import, the VaultA module is used.  If it appears after the import, the VaultB module is used.
 *
 * Java-style comments (slash-slash and slash-star) are treated as such.
 * Use single- and double-quotes to enclose strings with whitespace and comment tokens.
 * The usual escape characters (such as "\n") are recognized and converted within strings.
 */
//SimpleCALFile Prelude "file:///C:/dev/cal/Prelude.cal"

StandardVault Cal.Test.Data.DataGems_Tests
StandardVault Cal.Test.IO.File_Tests
StandardVault Cal.Test.Utilities.PrettyPrinter_Tests
StandardVault Cal.Test.Utilities.RangeTests
StandardVault Cal.Test.Data.Sql_Tests
StandardVault Cal.Test.Utilities.Summary_Tests
StandardVault Cal.Test.Data.SqlParser_Tests
StandardVault Cal.Test.Utilities.Parser_Tests
StandardVault Cal.Test.Utilities.ExpressionLexer_Tests
StandardVault Cal.Test.Utilities.RelativeTime_Tests
StandardVault Cal.Test.Utilities.Accumulate_Tests
StandardVault Cal.Test.Utilities.XmlBuilder_Tests
StandardVault Cal.Test.Experimental.Utilities.Encoding_Tests
StandardVault Cal.Test.Experimental.Utilities.XmlCharacterClasses_Tests
StandardVault Cal.Test.Experimental.Utilities.XmlParserEngine_Tests
StandardVault Cal.Test.Utilities.DirectedGraph_Tests
StandardVault Cal.Test.CAL_Libraries_TestSuite
StandardVault Cal.Test.Experimental.Graphics.Drawing_Tests
StandardVault Cal.Test.Experimental.Concurrent.Parallel_Tests
StandardVault Cal.Experimental.Concurrent.BoundedParallel
StandardVault Cal.Test.Experimental.Concurrent.ParallelList_Tests
StandardVault Cal.Experimental.Utilities.RegEx
StandardVault Cal.Experimental.Utilities.FormatRecord
StandardVault Cal.Test.Experimental.Utilities.FormatRecord_Tests

import StandardVault cal.platform.test.cws
import StandardVault cal.libraries.cws
