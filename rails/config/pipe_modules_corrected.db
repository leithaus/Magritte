LOCK TABLES `pipe_modules` WRITE;
/*!40000 ALTER TABLE `pipe_modules` DISABLE KEYS */;
INSERT INTO `pipe_modules` VALUES (1,'induceComparator','Cal.Core.Prelude.induceComparator','Cal.Core.Prelude.induceComparator',NULL,'[CALDoc] Induces an comparator on a type <code>a</code> via projecting to a type <code>b</code> and using the <code>Ord</code> instance on <code>b</code>.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(2,'maybeApply','Cal.Core.Prelude.maybeApply','Cal.Core.Prelude.maybeApply',NULL,'[CALDoc] Returns <code>Nothing</code> on <code>Nothing</code> or <code>Just (func maybeArg)</code> on <code>Just maybeArg</code>.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(3,'absShort','Cal.Core.Prelude.absShort','Cal.Core.Prelude.absShort',NULL,'[CALDoc] ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(4,'compareDouble','Cal.Core.Prelude.compareDouble','Cal.Core.Prelude.compareDouble',NULL,'[CALDoc] ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(5,'charactersToString','Cal.Core.Prelude.charactersToString','Cal.Core.Prelude.charactersToString',NULL,'[CALDoc] Converts the list of characters to a string.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(6,'isDoubleType','Cal.Core.Prelude.isDoubleType','Cal.Core.Prelude.isDoubleType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of the <code>Double</code> type and <code>False</code> otherwise.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(7,'compareComparable','Cal.Core.Prelude.compareComparable','Cal.Core.Prelude.compareComparable',NULL,'[CALDoc] ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(8,'tuple7','Cal.Core.Prelude.tuple7','Cal.Core.Prelude.tuple7',NULL,'[CALDoc] Creates a 7-tuple.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(9,'isRight','Cal.Core.Prelude.isRight','Cal.Core.Prelude.isRight',NULL,'[CALDoc] Returns <code>True</code> if <code>eitherValue</code> is a <code>Right</code> value and <code>False</code> otherwise.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(10,'notEqualsObject','Cal.Core.Prelude.notEqualsObject','Cal.Core.Prelude.notEqualsObject',NULL,'[CALDoc] ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(11,'fromLeft','Cal.Core.Prelude.fromLeft','Cal.Core.Prelude.fromLeft',NULL,'[CALDoc] Extracts the <code>value</code> field of a <code>Left</code> value or terminates in an error if <code>eitherValue</code> is\na <code>Right</code> value.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(12,'tuple3','Cal.Core.Prelude.tuple3','Cal.Core.Prelude.tuple3',NULL,'[CALDoc] Creates a 3-tuple.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(13,'lessThanDecimal','Cal.Core.Prelude.lessThanDecimal','Cal.Core.Prelude.lessThanDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(14,'comparatorToEqualityFunction','Cal.Core.Prelude.comparatorToEqualityFunction','Cal.Core.Prelude.comparatorToEqualityFunction',NULL,'[CALDoc] Converts a comparator to an equality function. \n','2008-04-20 18:16:13','2008-04-20 18:16:13'),(15,'isForeignType','Cal.Core.Prelude.isForeignType','Cal.Core.Prelude.isForeignType',NULL,'[CALDoc] Returns: <code>True</code> if the type was declared with a foreign data declaration.','2008-04-20 18:16:13','2008-04-20 18:16:13'),(16,'signumInt','Cal.Core.Prelude.signumInt','Cal.Core.Prelude.signumInt',NULL,'[CALDoc] ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(17,'concatMap','Cal.Core.Prelude.concatMap','Cal.Core.Prelude.concatMap',NULL,'[CALDoc] <code>concatMap mapFunction list</code> applies <code>mapFunction</code> to each element of list and then concatenates the resulting\nlist. ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(18,'compareByte','Cal.Core.Prelude.compareByte','Cal.Core.Prelude.compareByte',NULL,'[CALDoc] ','2008-04-20 18:16:13','2008-04-20 18:16:13'),(19,'emptyString','Cal.Core.Prelude.emptyString','Cal.Core.Prelude.emptyString',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(20,'strictTuple6','Cal.Core.Prelude.strictTuple6','Cal.Core.Prelude.strictTuple6',NULL,'[CALDoc] Creates a 6-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(21,'testPreludeModule','Cal.Core.Prelude.testPreludeModule','Cal.Core.Prelude.testPreludeModule',NULL,'[CALDoc] Tests all the examples in the Prelude module.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(22,'intToEnumCheckedInt','Cal.Core.Prelude.intToEnumCheckedInt','Cal.Core.Prelude.intToEnumCheckedInt',NULL,'[CALDoc] The <code>intToEnum</code> instance function for the <code>Int</code> type.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(23,'floatToInteger','Cal.Core.Prelude.floatToInteger','Cal.Core.Prelude.floatToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(24,'compareInteger','Cal.Core.Prelude.compareInteger','Cal.Core.Prelude.compareInteger',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(25,'shortToInteger','Cal.Core.Prelude.shortToInteger','Cal.Core.Prelude.shortToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(26,'field2','Cal.Core.Prelude.field2','Cal.Core.Prelude.field2',NULL,'[CALDoc] Extracts the second field of the specified tuple / the ordinal field <code>#2</code> of the specified record.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(27,'equalsRecordExamples','Cal.Core.Prelude.equalsRecordExamples','Cal.Core.Prelude.equalsRecordExamples',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(28,'tuple5','Cal.Core.Prelude.tuple5','Cal.Core.Prelude.tuple5',NULL,'[CALDoc] Creates a 5-tuple.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(29,'minDefault','Cal.Core.Prelude.minDefault','Cal.Core.Prelude.minDefault',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(30,'strictTuple4','Cal.Core.Prelude.strictTuple4','Cal.Core.Prelude.strictTuple4',NULL,'[CALDoc] Creates a 4-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(31,'outputBooleanToJObject','Cal.Core.Prelude.outputBooleanToJObject','Cal.Core.Prelude.outputBooleanToJObject',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(32,'minRecord','Cal.Core.Prelude.minRecord','Cal.Core.Prelude.minRecord',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(33,'isPreludeNumTypeExamples','Cal.Core.Prelude.isPreludeNumTypeExamples','Cal.Core.Prelude.isPreludeNumTypeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(34,'isPreludeNumType','Cal.Core.Prelude.isPreludeNumType','Cal.Core.Prelude.isPreludeNumType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of one of the types defined in the Prelude\nmodule as instances of the <code>Num</code> type class (<code>Byte</code>, <code>Short</code>, <code>Int</code>,\n<code>Long</code>, <code>Float</code>, <code>Double</code>, <code>Integer</code>) or <code>Decimal</code>\nand False otherwise.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(35,'sameRootTypeExamples','Cal.Core.Prelude.sameRootTypeExamples','Cal.Core.Prelude.sameRootTypeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(36,'sameRootType','Cal.Core.Prelude.sameRootType','Cal.Core.Prelude.sameRootType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation of the root types of the 2 arguments are the same.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(37,'until','Cal.Core.Prelude.until','Cal.Core.Prelude.until',NULL,'[CALDoc] Keeps applying <code>iterationFunction</code> until <code>stopConditionFunction</code> holds.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(38,'const','Cal.Core.Prelude.const','Cal.Core.Prelude.const',NULL,'[CALDoc] A constant function.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(39,'greaterThanDefault','Cal.Core.Prelude.greaterThanDefault','Cal.Core.Prelude.greaterThanDefault',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(40,'remainderByte','Cal.Core.Prelude.remainderByte','Cal.Core.Prelude.remainderByte',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(41,'minShort','Cal.Core.Prelude.minShort','Cal.Core.Prelude.minShort',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(42,'signumByte','Cal.Core.Prelude.signumByte','Cal.Core.Prelude.signumByte',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(43,'notEqualsDefault','Cal.Core.Prelude.notEqualsDefault','Cal.Core.Prelude.notEqualsDefault',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(44,'typeRepToStringExamples','Cal.Core.Prelude.typeRepToStringExamples','Cal.Core.Prelude.typeRepToStringExamples',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(45,'multiplyByte','Cal.Core.Prelude.multiplyByte','Cal.Core.Prelude.multiplyByte',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(46,'outputMaybe','Cal.Core.Prelude.outputMaybe','Cal.Core.Prelude.outputMaybe',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(47,'field6','Cal.Core.Prelude.field6','Cal.Core.Prelude.field6',NULL,'[CALDoc] Extracts the sixth field of the specified tuple / the ordinal field <code>#6</code> of the specified record.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(48,'isRecordTypeExamples','Cal.Core.Prelude.isRecordTypeExamples','Cal.Core.Prelude.isRecordTypeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(49,'strict','Cal.Core.Prelude.strict','Cal.Core.Prelude.strict',NULL,'[CALDoc] Strict function application. ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(50,'maybeToList','Cal.Core.Prelude.maybeToList','Cal.Core.Prelude.maybeToList',NULL,'[CALDoc] Returns an empty list when given <code>Nothing</code> or a singleton list when not given <code>Nothing</code>.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(51,'snd','Cal.Core.Prelude.snd','Cal.Core.Prelude.snd',NULL,'[CALDoc] Extracts the second component of a pair.','2008-04-20 18:16:14','2008-04-20 18:16:14'),(52,'greaterThanEqualsInteger','Cal.Core.Prelude.greaterThanEqualsInteger','Cal.Core.Prelude.greaterThanEqualsInteger',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(53,'isEmptyString','Cal.Core.Prelude.isEmptyString','Cal.Core.Prelude.isEmptyString',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(54,'minByte','Cal.Core.Prelude.minByte','Cal.Core.Prelude.minByte',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(55,'castExamples','Cal.Core.Prelude.castExamples','Cal.Core.Prelude.castExamples',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(56,'compareDecimal','Cal.Core.Prelude.compareDecimal','Cal.Core.Prelude.compareDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:14','2008-04-20 18:16:14'),(57,'curry','Cal.Core.Prelude.curry','Cal.Core.Prelude.curry',NULL,'[CALDoc] Converts a function of a single pair argument to a function accepting 2 input arguments.\n','2008-04-20 18:16:15','2008-04-20 18:16:15'),(58,'divideByte','Cal.Core.Prelude.divideByte','Cal.Core.Prelude.divideByte',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(59,'field7','Cal.Core.Prelude.field7','Cal.Core.Prelude.field7',NULL,'[CALDoc] Extracts the seventh field of the specified tuple / the ordinal field <code>#7</code> of the specified record.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(60,'intToEnumShort','Cal.Core.Prelude.intToEnumShort','Cal.Core.Prelude.intToEnumShort',NULL,'[CALDoc] The <code>intToEnum</code> instance function for the <code>Short</code> type.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(61,'isEmptyOrdering','Cal.Core.Prelude.isEmptyOrdering','Cal.Core.Prelude.isEmptyOrdering',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(62,'negateShort','Cal.Core.Prelude.negateShort','Cal.Core.Prelude.negateShort',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(63,'typeRepToString','Cal.Core.Prelude.typeRepToString','Cal.Core.Prelude.typeRepToString',NULL,'[CALDoc] Returns the canonical string representation of a <code>TypeRep</code> value.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(64,'maxChar','Cal.Core.Prelude.maxChar','Cal.Core.Prelude.maxChar',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(65,'strictTuple3','Cal.Core.Prelude.strictTuple3','Cal.Core.Prelude.strictTuple3',NULL,'[CALDoc] Creates a 3-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(66,'shortToDecimal','Cal.Core.Prelude.shortToDecimal','Cal.Core.Prelude.shortToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(67,'testMaybeInstances','Cal.Core.Prelude.testMaybeInstances','Cal.Core.Prelude.testMaybeInstances',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(68,'concatList','Cal.Core.Prelude.concatList','Cal.Core.Prelude.concatList',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(69,'downFrom','Cal.Core.Prelude.downFrom','Cal.Core.Prelude.downFrom',NULL,'[CALDoc] <code>downFrom start</code> creates the infinite list <code>[start, start - 1, start - 2, ...]</code>.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(70,'and','Cal.Core.Prelude.and','Cal.Core.Prelude.and',NULL,'[CALDoc] Returns the result of a logical AND operation on the two arguments.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(71,'divideShort','Cal.Core.Prelude.divideShort','Cal.Core.Prelude.divideShort',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(72,'isNothing','Cal.Core.Prelude.isNothing','Cal.Core.Prelude.isNothing',NULL,'[CALDoc] Returns <code>True</code> iff the argument is <code>Nothing</code>.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(73,'outputEither','Cal.Core.Prelude.outputEither','Cal.Core.Prelude.outputEither',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(74,'greaterThanEqualsComparable','Cal.Core.Prelude.greaterThanEqualsComparable','Cal.Core.Prelude.greaterThanEqualsComparable',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(75,'ordinalValueExamples','Cal.Core.Prelude.ordinalValueExamples','Cal.Core.Prelude.ordinalValueExamples',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(76,'compareInt','Cal.Core.Prelude.compareInt','Cal.Core.Prelude.compareInt',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(77,'lessThanDefault','Cal.Core.Prelude.lessThanDefault','Cal.Core.Prelude.lessThanDefault',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(78,'emptyList','Cal.Core.Prelude.emptyList','Cal.Core.Prelude.emptyList',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(79,'nTypeArguments','Cal.Core.Prelude.nTypeArguments','Cal.Core.Prelude.nTypeArguments',NULL,'[CALDoc] Returns the number of type arguments. i.e. <code>nTypeArguments typeRep == length (typeArguments typeRep)</code>.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(80,'lessThanEqualsDecimal','Cal.Core.Prelude.lessThanEqualsDecimal','Cal.Core.Prelude.lessThanEqualsDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(81,'greaterThanRecord','Cal.Core.Prelude.greaterThanRecord','Cal.Core.Prelude.greaterThanRecord',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(82,'subtractByte','Cal.Core.Prelude.subtractByte','Cal.Core.Prelude.subtractByte',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(83,'addByte','Cal.Core.Prelude.addByte','Cal.Core.Prelude.addByte',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(84,'makeQuery','Cal.Core.Prelude.makeQuery','Cal.Core.Prelude.makeQuery',NULL,'[CALDoc] <code>makeQuery defaultResult f x</code> behaves as follows: if <code>x</code>\'s type is the same as <code>f</code>\'s\nargument type, use <code>f</code> to interrogate <code>x</code>; otherwise return <code>defaultResult</code>.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(85,'lessThanInteger','Cal.Core.Prelude.lessThanInteger','Cal.Core.Prelude.lessThanInteger',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(86,'greaterThanEqualsRecord','Cal.Core.Prelude.greaterThanEqualsRecord','Cal.Core.Prelude.greaterThanEqualsRecord',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(87,'negateByte','Cal.Core.Prelude.negateByte','Cal.Core.Prelude.negateByte',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(88,'compareChar','Cal.Core.Prelude.compareChar','Cal.Core.Prelude.compareChar',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(89,'maxShort','Cal.Core.Prelude.maxShort','Cal.Core.Prelude.maxShort',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(90,'flip','Cal.Core.Prelude.flip','Cal.Core.Prelude.flip',NULL,'[CALDoc] <code>flip</code> converts a function of 2 arguments to another function of 2 arguments that accepts its\narguments in the opposite order. ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(91,'outputCalValueStrict','Cal.Core.Prelude.outputCalValueStrict','Cal.Core.Prelude.outputCalValueStrict',NULL,'[CALDoc] When <code>outputCalValueStrict calValue</code> is evaluated, the argument <code>calValue</code> is first evaluated to weak-head normal form itself,\nand then converted to a Java object that is suitable for external Java clients to use as a handle to the <code>calValue</code>. \n','2008-04-20 18:16:15','2008-04-20 18:16:15'),(92,'concatString','Cal.Core.Prelude.concatString','Cal.Core.Prelude.concatString',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(93,'notEqualsRecordType','Cal.Core.Prelude.notEqualsRecordType','Cal.Core.Prelude.notEqualsRecordType',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(94,'equalsRecordType','Cal.Core.Prelude.equalsRecordType','Cal.Core.Prelude.equalsRecordType',NULL,'[CALDoc] ','2008-04-20 18:16:15','2008-04-20 18:16:15'),(95,'triple','Cal.Core.Prelude.triple','Cal.Core.Prelude.triple',NULL,'[CALDoc] Creates a triple (3-tuple).','2008-04-20 18:16:15','2008-04-20 18:16:15'),(96,'truncate','Cal.Core.Prelude.truncate','Cal.Core.Prelude.truncate',NULL,'[CALDoc] Truncates a number towards 0.','2008-04-20 18:16:15','2008-04-20 18:16:15'),(97,'isStringType','Cal.Core.Prelude.isStringType','Cal.Core.Prelude.isStringType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of the <code>String</code> type and <code>False</code> otherwise.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(98,'isListTypeExamples','Cal.Core.Prelude.isListTypeExamples','Cal.Core.Prelude.isListTypeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(99,'lessThanEqualsDefault','Cal.Core.Prelude.lessThanEqualsDefault','Cal.Core.Prelude.lessThanEqualsDefault',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(100,'intToDecimal','Cal.Core.Prelude.intToDecimal','Cal.Core.Prelude.intToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(101,'tuple2','Cal.Core.Prelude.tuple2','Cal.Core.Prelude.tuple2',NULL,'[CALDoc] Creates a 2-tuple.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(102,'inputRecord','Cal.Core.Prelude.inputRecord','Cal.Core.Prelude.inputRecord',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(103,'isMaybeTypeExamples','Cal.Core.Prelude.isMaybeTypeExamples','Cal.Core.Prelude.isMaybeTypeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(104,'isMaybeType','Cal.Core.Prelude.isMaybeType','Cal.Core.Prelude.isMaybeType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of the <code>Maybe</code> type and <code>False</code> otherwise.\n','2008-04-20 18:16:16','2008-04-20 18:16:16'),(105,'isCharType','Cal.Core.Prelude.isCharType','Cal.Core.Prelude.isCharType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of the <code>Char</code> type and <code>False</code> otherwise.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(106,'compareShort','Cal.Core.Prelude.compareShort','Cal.Core.Prelude.compareShort',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(107,'maxComparable','Cal.Core.Prelude.maxComparable','Cal.Core.Prelude.maxComparable',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(108,'testEnumInstances','Cal.Core.Prelude.testEnumInstances','Cal.Core.Prelude.testEnumInstances',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(109,'testEnumBooleanInstance','Cal.Core.Prelude.testEnumBooleanInstance','Cal.Core.Prelude.testEnumBooleanInstance',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(110,'upFromBooleanExamples','Cal.Core.Prelude.upFromBooleanExamples','Cal.Core.Prelude.upFromBooleanExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(111,'upFromBoolean','Cal.Core.Prelude.upFromBoolean','Cal.Core.Prelude.upFromBoolean',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(112,'testEnumFloatInstance','Cal.Core.Prelude.testEnumFloatInstance','Cal.Core.Prelude.testEnumFloatInstance',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(113,'testEnumDoubleInstance','Cal.Core.Prelude.testEnumDoubleInstance','Cal.Core.Prelude.testEnumDoubleInstance',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(114,'upFromToDoubleExamples','Cal.Core.Prelude.upFromToDoubleExamples','Cal.Core.Prelude.upFromToDoubleExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(115,'upFromToDouble','Cal.Core.Prelude.upFromToDouble','Cal.Core.Prelude.upFromToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(116,'upFromThenDoubleExamples','Cal.Core.Prelude.upFromThenDoubleExamples','Cal.Core.Prelude.upFromThenDoubleExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(117,'testEnumLongInstance','Cal.Core.Prelude.testEnumLongInstance','Cal.Core.Prelude.testEnumLongInstance',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(118,'upFromThenToLongExamples','Cal.Core.Prelude.upFromThenToLongExamples','Cal.Core.Prelude.upFromThenToLongExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(119,'upFromToLongExamples','Cal.Core.Prelude.upFromToLongExamples','Cal.Core.Prelude.upFromToLongExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(120,'upFromToLong','Cal.Core.Prelude.upFromToLong','Cal.Core.Prelude.upFromToLong',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(121,'testEnumIntInstance','Cal.Core.Prelude.testEnumIntInstance','Cal.Core.Prelude.testEnumIntInstance',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(122,'upFromThenIntExamples','Cal.Core.Prelude.upFromThenIntExamples','Cal.Core.Prelude.upFromThenIntExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(123,'upFromThenInt','Cal.Core.Prelude.upFromThenInt','Cal.Core.Prelude.upFromThenInt',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(124,'upFromIntExamples','Cal.Core.Prelude.upFromIntExamples','Cal.Core.Prelude.upFromIntExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(125,'induceEqualityFunction','Cal.Core.Prelude.induceEqualityFunction','Cal.Core.Prelude.induceEqualityFunction',NULL,'[CALDoc] Induces an equality function on a type <code>a</code> via projecting to a type <code>b</code> and using the <code>Eq</code> instance\non <code>b</code>.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(126,'upFromToIntExamples','Cal.Core.Prelude.upFromToIntExamples','Cal.Core.Prelude.upFromToIntExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(127,'upFromToInt','Cal.Core.Prelude.upFromToInt','Cal.Core.Prelude.upFromToInt',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(128,'isIntType','Cal.Core.Prelude.isIntType','Cal.Core.Prelude.isIntType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of the <code>Int</code> type and <code>False</code> otherwise.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(129,'tuple4','Cal.Core.Prelude.tuple4','Cal.Core.Prelude.tuple4',NULL,'[CALDoc] Creates a 4-tuple.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(130,'upFromFloatExamples','Cal.Core.Prelude.upFromFloatExamples','Cal.Core.Prelude.upFromFloatExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(131,'intToInteger','Cal.Core.Prelude.intToInteger','Cal.Core.Prelude.intToInteger',NULL,'[CALDoc] Converts an <code>Int</code> value to the corresponding <code>Integer</code> value.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(132,'greaterThanListExamples','Cal.Core.Prelude.greaterThanListExamples','Cal.Core.Prelude.greaterThanListExamples',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(133,'inputListFromJObject','Cal.Core.Prelude.inputListFromJObject','Cal.Core.Prelude.inputListFromJObject',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(134,'listFromJIterator','Cal.Core.Prelude.listFromJIterator','Cal.Core.Prelude.listFromJIterator',NULL,'[CALDoc] Converts a Java iterator to a CAL list.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(135,'listFromJCollection','Cal.Core.Prelude.listFromJCollection','Cal.Core.Prelude.listFromJCollection',NULL,'[CALDoc] Converts a Java collection to a CAL list.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(136,'listFromJCollectionWith','Cal.Core.Prelude.listFromJCollectionWith','Cal.Core.Prelude.listFromJCollectionWith',NULL,'[CALDoc] Converts a Java collection to a CAL list using the element mapping function <code>f</code> of type <code>JObject -&gt; a</code> \nto convert elements of the Java list.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(137,'listFromJIteratorWith','Cal.Core.Prelude.listFromJIteratorWith','Cal.Core.Prelude.listFromJIteratorWith',NULL,'[CALDoc] Converts a Java iterator to a CAL list using the element mapping function <code>f</code> of \ntype <code>JObject -&gt; a</code> to convert iteration elements.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(138,'upFromInt','Cal.Core.Prelude.upFromInt','Cal.Core.Prelude.upFromInt',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(139,'map','Cal.Core.Prelude.map','Cal.Core.Prelude.map',NULL,'[CALDoc] <code>map mapFunction list</code> applies the function <code>mapFunction</code> to each element of the list and returns\nthe resulting list.','2008-04-20 18:16:16','2008-04-20 18:16:16'),(140,'maxBoundLong','Cal.Core.Prelude.maxBoundLong','Cal.Core.Prelude.maxBoundLong',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(141,'subtractShort','Cal.Core.Prelude.subtractShort','Cal.Core.Prelude.subtractShort',NULL,'[CALDoc] ','2008-04-20 18:16:16','2008-04-20 18:16:16'),(142,'appendStringExamples','Cal.Core.Prelude.appendStringExamples','Cal.Core.Prelude.appendStringExamples',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(143,'outputListToJObject','Cal.Core.Prelude.outputListToJObject','Cal.Core.Prelude.outputListToJObject',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(144,'outputList','Cal.Core.Prelude.outputList','Cal.Core.Prelude.outputList',NULL,'[CALDoc] Converts a CAL list to a Java list.','2008-04-20 18:16:17','2008-04-20 18:16:17'),(145,'fromJust','Cal.Core.Prelude.fromJust','Cal.Core.Prelude.fromJust',NULL,'[CALDoc] Extracts the element out of a <code>Just</code> or terminates in an error if the <code>Maybe</code> value\nis <code>Nothing</code>.','2008-04-20 18:16:17','2008-04-20 18:16:17'),(146,'intToEnumCheckedShort','Cal.Core.Prelude.intToEnumCheckedShort','Cal.Core.Prelude.intToEnumCheckedShort',NULL,'[CALDoc] The <code>intToEnumChecked</code> instance function for the <code>Short</code> type.','2008-04-20 18:16:17','2008-04-20 18:16:17'),(147,'compareLong','Cal.Core.Prelude.compareLong','Cal.Core.Prelude.compareLong',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(148,'inputEither','Cal.Core.Prelude.inputEither','Cal.Core.Prelude.inputEither',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(149,'jEitherToEither','Cal.Core.Prelude.jEitherToEither','Cal.Core.Prelude.jEitherToEither',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(150,'appendList','Cal.Core.Prelude.appendList','Cal.Core.Prelude.appendList',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(151,'deepStrict','Cal.Core.Prelude.deepStrict','Cal.Core.Prelude.deepStrict',NULL,'[CALDoc] Strict function application. ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(152,'testEnumCharInstance','Cal.Core.Prelude.testEnumCharInstance','Cal.Core.Prelude.testEnumCharInstance',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(153,'upFromThenToCharExamples','Cal.Core.Prelude.upFromThenToCharExamples','Cal.Core.Prelude.upFromThenToCharExamples',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(154,'upFromToCharExamples','Cal.Core.Prelude.upFromToCharExamples','Cal.Core.Prelude.upFromToCharExamples',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(155,'upFromThenCharExamples','Cal.Core.Prelude.upFromThenCharExamples','Cal.Core.Prelude.upFromThenCharExamples',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(156,'strictTuple7','Cal.Core.Prelude.strictTuple7','Cal.Core.Prelude.strictTuple7',NULL,'[CALDoc] Creates a 7-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.','2008-04-20 18:16:17','2008-04-20 18:16:17'),(157,'asTypeOf','Cal.Core.Prelude.asTypeOf','Cal.Core.Prelude.asTypeOf',NULL,'[CALDoc] <code>asTypeOf</code> is a type-restricted version of <code>const</code>. ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(158,'outputOrdering','Cal.Core.Prelude.outputOrdering','Cal.Core.Prelude.outputOrdering',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(159,'greaterThanComparable','Cal.Core.Prelude.greaterThanComparable','Cal.Core.Prelude.greaterThanComparable',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(160,'makeTransform','Cal.Core.Prelude.makeTransform','Cal.Core.Prelude.makeTransform',NULL,'[CALDoc] <code>makeTransform f x</code> applies <code>f</code> to <code>x</code> if <code>x</code>\'s type is the same as <code>f</code>\'s argument type,\nand otherwise applies the identity function <code>Prelude.id</code> to <code>x</code>.','2008-04-20 18:16:17','2008-04-20 18:16:17'),(161,'cast','Cal.Core.Prelude.cast','Cal.Core.Prelude.cast',NULL,'[CALDoc] Casts the argument value to the desired return type in a type-safe fashion.\n','2008-04-20 18:16:17','2008-04-20 18:16:17'),(162,'upFromToFloatExamples','Cal.Core.Prelude.upFromToFloatExamples','Cal.Core.Prelude.upFromToFloatExamples',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(163,'upFromToFloat','Cal.Core.Prelude.upFromToFloat','Cal.Core.Prelude.upFromToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(164,'upFromFloat','Cal.Core.Prelude.upFromFloat','Cal.Core.Prelude.upFromFloat',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(165,'pair','Cal.Core.Prelude.pair','Cal.Core.Prelude.pair',NULL,'[CALDoc] Creates a pair (2-tuple).','2008-04-20 18:16:17','2008-04-20 18:16:17'),(166,'doubleToInteger','Cal.Core.Prelude.doubleToInteger','Cal.Core.Prelude.doubleToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(167,'maxDefault','Cal.Core.Prelude.maxDefault','Cal.Core.Prelude.maxDefault',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(168,'maxRecord','Cal.Core.Prelude.maxRecord','Cal.Core.Prelude.maxRecord',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(169,'greaterThanEqualsDefault','Cal.Core.Prelude.greaterThanEqualsDefault','Cal.Core.Prelude.greaterThanEqualsDefault',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(170,'byteToDecimal','Cal.Core.Prelude.byteToDecimal','Cal.Core.Prelude.byteToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(171,'upFromToChar','Cal.Core.Prelude.upFromToChar','Cal.Core.Prelude.upFromToChar',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(172,'inputMaybe','Cal.Core.Prelude.inputMaybe','Cal.Core.Prelude.inputMaybe',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(173,'concatDefault','Cal.Core.Prelude.concatDefault','Cal.Core.Prelude.concatDefault',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(174,'foldRight','Cal.Core.Prelude.foldRight','Cal.Core.Prelude.foldRight',NULL,'[CALDoc] Similar to <code>Cal.Collections.List.foldLeft</code>, except that the folding process on the list is started with its rightmost element.\n','2008-04-20 18:16:17','2008-04-20 18:16:17'),(175,'upFromToBooleanExamples','Cal.Core.Prelude.upFromToBooleanExamples','Cal.Core.Prelude.upFromToBooleanExamples',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(176,'jMaybeToMaybe','Cal.Core.Prelude.jMaybeToMaybe','Cal.Core.Prelude.jMaybeToMaybe',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(177,'testEnumOrderingInstance','Cal.Core.Prelude.testEnumOrderingInstance','Cal.Core.Prelude.testEnumOrderingInstance',NULL,'[CALDoc] ','2008-04-20 18:16:17','2008-04-20 18:16:17'),(178,'upFromThenToOrderingExamples','Cal.Core.Prelude.upFromThenToOrderingExamples','Cal.Core.Prelude.upFromThenToOrderingExamples',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(179,'upFromToOrderingExamples','Cal.Core.Prelude.upFromToOrderingExamples','Cal.Core.Prelude.upFromToOrderingExamples',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(180,'upFromThenOrderingExamples','Cal.Core.Prelude.upFromThenOrderingExamples','Cal.Core.Prelude.upFromThenOrderingExamples',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(181,'upFromOrderingExamples','Cal.Core.Prelude.upFromOrderingExamples','Cal.Core.Prelude.upFromOrderingExamples',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(182,'either','Cal.Core.Prelude.either','Cal.Core.Prelude.either',NULL,'[CALDoc] Applies one of the two specified functions to a value encapsulated by an <code>Either</code> type.\n','2008-04-20 18:16:18','2008-04-20 18:16:18'),(183,'upFromThenToIntExamples','Cal.Core.Prelude.upFromThenToIntExamples','Cal.Core.Prelude.upFromThenToIntExamples',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(184,'upFromThenToInt','Cal.Core.Prelude.upFromThenToInt','Cal.Core.Prelude.upFromThenToInt',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(185,'upFromByDownToInt','Cal.Core.Prelude.upFromByDownToInt','Cal.Core.Prelude.upFromByDownToInt',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(186,'upFromByUpToInt','Cal.Core.Prelude.upFromByUpToInt','Cal.Core.Prelude.upFromByUpToInt',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(187,'strictTuple5','Cal.Core.Prelude.strictTuple5','Cal.Core.Prelude.strictTuple5',NULL,'[CALDoc] Creates a 5-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(188,'divMod','Cal.Core.Prelude.divMod','Cal.Core.Prelude.divMod',NULL,'[CALDoc] Simultaneous <code>divide</code> and <code>remainder</code> (or modulus) on <code>Int</code> values.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(189,'equalsTypeReps','Cal.Core.Prelude.equalsTypeReps','Cal.Core.Prelude.equalsTypeReps',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(190,'typeOfRecord','Cal.Core.Prelude.typeOfRecord','Cal.Core.Prelude.typeOfRecord',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(191,'upFromThenToDoubleExamples','Cal.Core.Prelude.upFromThenToDoubleExamples','Cal.Core.Prelude.upFromThenToDoubleExamples',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(192,'field1','Cal.Core.Prelude.field1','Cal.Core.Prelude.field1',NULL,'[CALDoc] Extracts the first field of the specified tuple / the ordinal field <code>#1</code> of the specified record.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(193,'signumLong','Cal.Core.Prelude.signumLong','Cal.Core.Prelude.signumLong',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(194,'fromMaybe','Cal.Core.Prelude.fromMaybe','Cal.Core.Prelude.fromMaybe',NULL,'[CALDoc] Extracts the element out of a <code>Just</code> or returns the specified default value if the <code>Maybe</code> value\nis <code>Nothing</code>.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(195,'notEqualsTypeReps','Cal.Core.Prelude.notEqualsTypeReps','Cal.Core.Prelude.notEqualsTypeReps',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(196,'field3','Cal.Core.Prelude.field3','Cal.Core.Prelude.field3',NULL,'[CALDoc] Extracts the third field of the specified tuple / the ordinal field <code>#3</code> of the specified record.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(197,'absByte','Cal.Core.Prelude.absByte','Cal.Core.Prelude.absByte',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(198,'fromRight','Cal.Core.Prelude.fromRight','Cal.Core.Prelude.fromRight',NULL,'[CALDoc] Extracts the <code>value</code> field of a <code>Right</code> value or terminates in an error if <code>eitherValue</code> is\na <code>Left</code> value.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(199,'outputJObject','Cal.Core.Prelude.outputJObject','Cal.Core.Prelude.outputJObject',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type that is not one of the \nprimitive Java types char, boolean, byte, short, int, long, float or double.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(200,'isEven','Cal.Core.Prelude.isEven','Cal.Core.Prelude.isEven',NULL,'[CALDoc] Returns whether the argument is even.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(201,'field5','Cal.Core.Prelude.field5','Cal.Core.Prelude.field5',NULL,'[CALDoc] Extracts the fifth field of the specified tuple / the ordinal field <code>#5</code> of the specified record.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(202,'zip','Cal.Core.Prelude.zip','Cal.Core.Prelude.zip',NULL,'[CALDoc] Converts two lists into a list of corresponding pairs.\n','2008-04-20 18:16:18','2008-04-20 18:16:18'),(203,'minChar','Cal.Core.Prelude.minChar','Cal.Core.Prelude.minChar',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(204,'tuple6','Cal.Core.Prelude.tuple6','Cal.Core.Prelude.tuple6',NULL,'[CALDoc] Creates a 6-tuple.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(205,'inputOrdering','Cal.Core.Prelude.inputOrdering','Cal.Core.Prelude.inputOrdering',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(206,'signumShort','Cal.Core.Prelude.signumShort','Cal.Core.Prelude.signumShort',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(207,'isBooleanType','Cal.Core.Prelude.isBooleanType','Cal.Core.Prelude.isBooleanType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of the <code>Boolean</code> type and <code>False</code> otherwise.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(208,'divideDecimal','Cal.Core.Prelude.divideDecimal','Cal.Core.Prelude.divideDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(209,'intToEnumCheckedByte','Cal.Core.Prelude.intToEnumCheckedByte','Cal.Core.Prelude.intToEnumCheckedByte',NULL,'[CALDoc] The <code>intToEnumChecked</code> instance function for the <code>Byte</code> type.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(210,'upFromThenToFloatExamples','Cal.Core.Prelude.upFromThenToFloatExamples','Cal.Core.Prelude.upFromThenToFloatExamples',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(211,'iff','Cal.Core.Prelude.iff','Cal.Core.Prelude.iff',NULL,'[CALDoc] Exposes the functionality of \"if-then-else\" as a function.\n<code>iff</code> can be thought of as the function form of the \"if-the-else\" construct.','2008-04-20 18:16:18','2008-04-20 18:16:18'),(212,'greaterThanEqualsDecimal','Cal.Core.Prelude.greaterThanEqualsDecimal','Cal.Core.Prelude.greaterThanEqualsDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(213,'compareFloat','Cal.Core.Prelude.compareFloat','Cal.Core.Prelude.compareFloat',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(214,'greaterThanInteger','Cal.Core.Prelude.greaterThanInteger','Cal.Core.Prelude.greaterThanInteger',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(215,'maxByte','Cal.Core.Prelude.maxByte','Cal.Core.Prelude.maxByte',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(216,'minComparable','Cal.Core.Prelude.minComparable','Cal.Core.Prelude.minComparable',NULL,'[CALDoc] ','2008-04-20 18:16:18','2008-04-20 18:16:18'),(217,'lessThanEqualsComparable','Cal.Core.Prelude.lessThanEqualsComparable','Cal.Core.Prelude.lessThanEqualsComparable',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(218,'greaterThanRecordExamples','Cal.Core.Prelude.greaterThanRecordExamples','Cal.Core.Prelude.greaterThanRecordExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(219,'equalsListExamples','Cal.Core.Prelude.equalsListExamples','Cal.Core.Prelude.equalsListExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(220,'inputStringList','Cal.Core.Prelude.inputStringList','Cal.Core.Prelude.inputStringList',NULL,'[CALDoc] A type-specialized version of <code>input</code> for use as a marshalling function in a standalone JAR.','2008-04-20 18:16:19','2008-04-20 18:16:19'),(221,'equalsDecimal','Cal.Core.Prelude.equalsDecimal','Cal.Core.Prelude.equalsDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(222,'outputUnit','Cal.Core.Prelude.outputUnit','Cal.Core.Prelude.outputUnit',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(223,'listToMaybe','Cal.Core.Prelude.listToMaybe','Cal.Core.Prelude.listToMaybe',NULL,'[CALDoc] Returns <code>Nothing</code> on an empty list or <code>Just firstElement</code> where <code>firstElement</code> is\nthe first element of the list.','2008-04-20 18:16:19','2008-04-20 18:16:19'),(224,'typeArgumentsExamples','Cal.Core.Prelude.typeArgumentsExamples','Cal.Core.Prelude.typeArgumentsExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(225,'typeArguments','Cal.Core.Prelude.typeArguments','Cal.Core.Prelude.typeArguments',NULL,'[CALDoc] Returns the type arguments of a type representation. ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(226,'recordType_fieldTypes','Cal.Core.Prelude.recordType_fieldTypes','Cal.Core.Prelude.recordType_fieldTypes',NULL,'[CALDoc] Returns: A list of <code>TypeRep</code>s representing the types of each field of the record value.\nThe 0th element of the list represents the type of the 0th field of the record,\nand so forth.','2008-04-20 18:16:19','2008-04-20 18:16:19'),(227,'recordType_getNthFieldType','Cal.Core.Prelude.recordType_getNthFieldType','Cal.Core.Prelude.recordType_getNthFieldType',NULL,'[CALDoc] Returns: a <code>TypeRep</code> representing the type of the nth field in the record whose type\nis represented by dictionary.','2008-04-20 18:16:19','2008-04-20 18:16:19'),(228,'orderingToInt','Cal.Core.Prelude.orderingToInt','Cal.Core.Prelude.orderingToInt',NULL,'[CALDoc] Converts an <code>Ordering</code> value to an <code>Int</code> value. ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(229,'intToEnumDefault','Cal.Core.Prelude.intToEnumDefault','Cal.Core.Prelude.intToEnumDefault',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(230,'upFromThenToBooleanExamples','Cal.Core.Prelude.upFromThenToBooleanExamples','Cal.Core.Prelude.upFromThenToBooleanExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(231,'upFromThenToBoolean','Cal.Core.Prelude.upFromThenToBoolean','Cal.Core.Prelude.upFromThenToBoolean',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(232,'upFromThenLongExamples','Cal.Core.Prelude.upFromThenLongExamples','Cal.Core.Prelude.upFromThenLongExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(233,'lessThanRecord','Cal.Core.Prelude.lessThanRecord','Cal.Core.Prelude.lessThanRecord',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(234,'upFromThenFloatExamples','Cal.Core.Prelude.upFromThenFloatExamples','Cal.Core.Prelude.upFromThenFloatExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(235,'remainderShort','Cal.Core.Prelude.remainderShort','Cal.Core.Prelude.remainderShort',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(236,'intToEnumCheckedOrdering','Cal.Core.Prelude.intToEnumCheckedOrdering','Cal.Core.Prelude.intToEnumCheckedOrdering',NULL,'[CALDoc] The <code>intToEnumChecked</code> instance function for the <code>Ordering</code> type.','2008-04-20 18:16:19','2008-04-20 18:16:19'),(237,'intToOrdering','Cal.Core.Prelude.intToOrdering','Cal.Core.Prelude.intToOrdering',NULL,'[CALDoc] Converts an <code>Int</code> value to an <code>Ordering</code> value. ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(238,'jOrderingToOrdering','Cal.Core.Prelude.jOrderingToOrdering','Cal.Core.Prelude.jOrderingToOrdering',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(239,'signumIntToOrdering','Cal.Core.Prelude.signumIntToOrdering','Cal.Core.Prelude.signumIntToOrdering',NULL,'[CALDoc] similar to <code>intToOrdering</code> but only handles the intValues -1, 0, 1. ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(240,'lessThanEqualsRecord','Cal.Core.Prelude.lessThanEqualsRecord','Cal.Core.Prelude.lessThanEqualsRecord',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(241,'testIntEnumInstances','Cal.Core.Prelude.testIntEnumInstances','Cal.Core.Prelude.testIntEnumInstances',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(242,'charIntEnumExamples','Cal.Core.Prelude.charIntEnumExamples','Cal.Core.Prelude.charIntEnumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(243,'byteIntEnumExamples','Cal.Core.Prelude.byteIntEnumExamples','Cal.Core.Prelude.byteIntEnumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(244,'shortIntEnumExamples','Cal.Core.Prelude.shortIntEnumExamples','Cal.Core.Prelude.shortIntEnumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(245,'maxBoundShortAsInt','Cal.Core.Prelude.maxBoundShortAsInt','Cal.Core.Prelude.maxBoundShortAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(246,'maxBoundShort','Cal.Core.Prelude.maxBoundShort','Cal.Core.Prelude.maxBoundShort',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(247,'minBoundShortAsInt','Cal.Core.Prelude.minBoundShortAsInt','Cal.Core.Prelude.minBoundShortAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(248,'minBoundShort','Cal.Core.Prelude.minBoundShort','Cal.Core.Prelude.minBoundShort',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(249,'intIntEnumExamples','Cal.Core.Prelude.intIntEnumExamples','Cal.Core.Prelude.intIntEnumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(250,'maxBoundInt','Cal.Core.Prelude.maxBoundInt','Cal.Core.Prelude.maxBoundInt',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(251,'minBoundInt','Cal.Core.Prelude.minBoundInt','Cal.Core.Prelude.minBoundInt',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(252,'orderingIntEnumExamples','Cal.Core.Prelude.orderingIntEnumExamples','Cal.Core.Prelude.orderingIntEnumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(253,'notEqualsDecimal','Cal.Core.Prelude.notEqualsDecimal','Cal.Core.Prelude.notEqualsDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(254,'lessThanEqualsInteger','Cal.Core.Prelude.lessThanEqualsInteger','Cal.Core.Prelude.lessThanEqualsInteger',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(255,'upFromCharExamples','Cal.Core.Prelude.upFromCharExamples','Cal.Core.Prelude.upFromCharExamples',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(256,'upFromChar','Cal.Core.Prelude.upFromChar','Cal.Core.Prelude.upFromChar',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(257,'upFromToBoolean','Cal.Core.Prelude.upFromToBoolean','Cal.Core.Prelude.upFromToBoolean',NULL,'[CALDoc] ','2008-04-20 18:16:19','2008-04-20 18:16:19'),(258,'field4','Cal.Core.Prelude.field4','Cal.Core.Prelude.field4',NULL,'[CALDoc] Extracts the fourth field of the specified tuple / the ordinal field <code>#4</code> of the specified record.','2008-04-20 18:16:19','2008-04-20 18:16:19'),(259,'composeExamples','Cal.Core.Prelude.composeExamples','Cal.Core.Prelude.composeExamples',NULL,'[CALDoc] Example usage of the compose function, in its different forms (regular\nfunction application, backquoted operator, and the <code>#</code> operator).','2008-04-20 18:16:19','2008-04-20 18:16:19'),(260,'compose','Cal.Core.Prelude.compose','Cal.Core.Prelude.compose',NULL,'[CALDoc] <code>(compose f g)</code> is the function composition of <code>f</code> with <code>g</code>. ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(261,'apply','Cal.Core.Prelude.apply','Cal.Core.Prelude.apply',NULL,'[CALDoc] A function application function. ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(262,'emptyOrdering','Cal.Core.Prelude.emptyOrdering','Cal.Core.Prelude.emptyOrdering',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(263,'multiplyShort','Cal.Core.Prelude.multiplyShort','Cal.Core.Prelude.multiplyShort',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(264,'testEnumShortInstance','Cal.Core.Prelude.testEnumShortInstance','Cal.Core.Prelude.testEnumShortInstance',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(265,'upFromThenToShortExamples','Cal.Core.Prelude.upFromThenToShortExamples','Cal.Core.Prelude.upFromThenToShortExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(266,'upFromToShortExamples','Cal.Core.Prelude.upFromToShortExamples','Cal.Core.Prelude.upFromToShortExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(267,'upFromToShort','Cal.Core.Prelude.upFromToShort','Cal.Core.Prelude.upFromToShort',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(268,'upFromShortExamples','Cal.Core.Prelude.upFromShortExamples','Cal.Core.Prelude.upFromShortExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(269,'upFromShort','Cal.Core.Prelude.upFromShort','Cal.Core.Prelude.upFromShort',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(270,'intToEnumByte','Cal.Core.Prelude.intToEnumByte','Cal.Core.Prelude.intToEnumByte',NULL,'[CALDoc] The <code>intToEnum</code> instance function for the <code>Byte</code> type.','2008-04-20 18:16:20','2008-04-20 18:16:20'),(271,'minBoundByteAsInt','Cal.Core.Prelude.minBoundByteAsInt','Cal.Core.Prelude.minBoundByteAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(272,'minBoundByte','Cal.Core.Prelude.minBoundByte','Cal.Core.Prelude.minBoundByte',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(273,'upFromDoubleExamples','Cal.Core.Prelude.upFromDoubleExamples','Cal.Core.Prelude.upFromDoubleExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(274,'replicateList','Cal.Core.Prelude.replicateList','Cal.Core.Prelude.replicateList',NULL,'[CALDoc] Replicates a list for a specified number of times.','2008-04-20 18:16:20','2008-04-20 18:16:20'),(275,'replicate','Cal.Core.Prelude.replicate','Cal.Core.Prelude.replicate',NULL,'[CALDoc] <code>replicate nCopies valueToReplicate</code> is a list of length <code>nCopies</code>, with every element equal to\n<code>valueToReplicate</code>.','2008-04-20 18:16:20','2008-04-20 18:16:20'),(276,'upFromThenShortExamples','Cal.Core.Prelude.upFromThenShortExamples','Cal.Core.Prelude.upFromThenShortExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(277,'upFromThenShort','Cal.Core.Prelude.upFromThenShort','Cal.Core.Prelude.upFromThenShort',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(278,'upFromThenLong','Cal.Core.Prelude.upFromThenLong','Cal.Core.Prelude.upFromThenLong',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(279,'upFromThenToDouble','Cal.Core.Prelude.upFromThenToDouble','Cal.Core.Prelude.upFromThenToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(280,'upFromThenDouble','Cal.Core.Prelude.upFromThenDouble','Cal.Core.Prelude.upFromThenDouble',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(281,'upFromThenToLong','Cal.Core.Prelude.upFromThenToLong','Cal.Core.Prelude.upFromThenToLong',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(282,'upFromByUpToLong','Cal.Core.Prelude.upFromByUpToLong','Cal.Core.Prelude.upFromByUpToLong',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(283,'strictTuple2','Cal.Core.Prelude.strictTuple2','Cal.Core.Prelude.strictTuple2',NULL,'[CALDoc] Creates a 2-tuple value, but ensures that the fields++ are evaluated (to weak-head normal form) prior to returning.','2008-04-20 18:16:20','2008-04-20 18:16:20'),(284,'floatToDecimal','Cal.Core.Prelude.floatToDecimal','Cal.Core.Prelude.floatToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(285,'or','Cal.Core.Prelude.or','Cal.Core.Prelude.or',NULL,'[CALDoc] Returns the result of a logical OR operation on the two arguments.','2008-04-20 18:16:20','2008-04-20 18:16:20'),(286,'upFromLongExamples','Cal.Core.Prelude.upFromLongExamples','Cal.Core.Prelude.upFromLongExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(287,'upFromLong','Cal.Core.Prelude.upFromLong','Cal.Core.Prelude.upFromLong',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(288,'id','Cal.Core.Prelude.id','Cal.Core.Prelude.id',NULL,'[CALDoc] An identity function.','2008-04-20 18:16:20','2008-04-20 18:16:20'),(289,'intToEnumChar','Cal.Core.Prelude.intToEnumChar','Cal.Core.Prelude.intToEnumChar',NULL,'[CALDoc] The <code>intToEnum</code> instance function for the <code>Char</code> type.','2008-04-20 18:16:20','2008-04-20 18:16:20'),(290,'testEnumIntegerInstance','Cal.Core.Prelude.testEnumIntegerInstance','Cal.Core.Prelude.testEnumIntegerInstance',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(291,'upFromThenToIntegerExamples','Cal.Core.Prelude.upFromThenToIntegerExamples','Cal.Core.Prelude.upFromThenToIntegerExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(292,'upFromToIntegerExamples','Cal.Core.Prelude.upFromToIntegerExamples','Cal.Core.Prelude.upFromToIntegerExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(293,'upFromToInteger','Cal.Core.Prelude.upFromToInteger','Cal.Core.Prelude.upFromToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(294,'upFromThenIntegerExamples','Cal.Core.Prelude.upFromThenIntegerExamples','Cal.Core.Prelude.upFromThenIntegerExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(295,'upFromThenInteger','Cal.Core.Prelude.upFromThenInteger','Cal.Core.Prelude.upFromThenInteger',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(296,'upFromIntegerExamples','Cal.Core.Prelude.upFromIntegerExamples','Cal.Core.Prelude.upFromIntegerExamples',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(297,'upFromInteger','Cal.Core.Prelude.upFromInteger','Cal.Core.Prelude.upFromInteger',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(298,'upFromThenToShort','Cal.Core.Prelude.upFromThenToShort','Cal.Core.Prelude.upFromThenToShort',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(299,'upFromByDownToShort','Cal.Core.Prelude.upFromByDownToShort','Cal.Core.Prelude.upFromByDownToShort',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(300,'combineComparators','Cal.Core.Prelude.combineComparators','Cal.Core.Prelude.combineComparators',NULL,'[CALDoc] Combines two comparators to form a new comparator. ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(301,'isEmptyList','Cal.Core.Prelude.isEmptyList','Cal.Core.Prelude.isEmptyList',NULL,'[CALDoc] ','2008-04-20 18:16:20','2008-04-20 18:16:20'),(302,'isJust','Cal.Core.Prelude.isJust','Cal.Core.Prelude.isJust',NULL,'[CALDoc] Returns <code>True</code> iff the argument is of the form <code>Just _</code>.','2008-04-20 18:16:21','2008-04-20 18:16:21'),(303,'isForeignReferenceTypeExamples','Cal.Core.Prelude.isForeignReferenceTypeExamples','Cal.Core.Prelude.isForeignReferenceTypeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(304,'isForeignReferenceType','Cal.Core.Prelude.isForeignReferenceType','Cal.Core.Prelude.isForeignReferenceType',NULL,'[CALDoc] Returns: <code>True</code> if the type of the value is a foreign type, that corresponds to a foreign reference\ntype i.e. not a primitive type such as \"int\".','2008-04-20 18:16:21','2008-04-20 18:16:21'),(305,'foreignClass','Cal.Core.Prelude.foreignClass','Cal.Core.Prelude.foreignClass',NULL,'[CALDoc] Returns: <code>Just javaClass</code>, where <code>javaClass</code> is the underlying Java class object\nof the foreign type, if <code>TypeRep</code> represents a non-foreign type. Otherwise <code>Nothing</code>.','2008-04-20 18:16:21','2008-04-20 18:16:21'),(306,'lessThanComparable','Cal.Core.Prelude.lessThanComparable','Cal.Core.Prelude.lessThanComparable',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(307,'jCompareComparable','Cal.Core.Prelude.jCompareComparable','Cal.Core.Prelude.jCompareComparable',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(308,'testEnumByteInstance','Cal.Core.Prelude.testEnumByteInstance','Cal.Core.Prelude.testEnumByteInstance',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(309,'upFromThenToByteExamples','Cal.Core.Prelude.upFromThenToByteExamples','Cal.Core.Prelude.upFromThenToByteExamples',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(310,'upFromToByteExamples','Cal.Core.Prelude.upFromToByteExamples','Cal.Core.Prelude.upFromToByteExamples',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(311,'upFromToByte','Cal.Core.Prelude.upFromToByte','Cal.Core.Prelude.upFromToByte',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(312,'upFromThenByteExamples','Cal.Core.Prelude.upFromThenByteExamples','Cal.Core.Prelude.upFromThenByteExamples',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(313,'upFromThenByte','Cal.Core.Prelude.upFromThenByte','Cal.Core.Prelude.upFromThenByte',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(314,'upFromThenToByte','Cal.Core.Prelude.upFromThenToByte','Cal.Core.Prelude.upFromThenToByte',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(315,'upFromByUpToByte','Cal.Core.Prelude.upFromByUpToByte','Cal.Core.Prelude.upFromByUpToByte',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(316,'upFromByteExamples','Cal.Core.Prelude.upFromByteExamples','Cal.Core.Prelude.upFromByteExamples',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(317,'upFromByte','Cal.Core.Prelude.upFromByte','Cal.Core.Prelude.upFromByte',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(318,'signumDecimal','Cal.Core.Prelude.signumDecimal','Cal.Core.Prelude.signumDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(319,'outputRecord','Cal.Core.Prelude.outputRecord','Cal.Core.Prelude.outputRecord',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(320,'addShort','Cal.Core.Prelude.addShort','Cal.Core.Prelude.addShort',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(321,'upFromByUpToShort','Cal.Core.Prelude.upFromByUpToShort','Cal.Core.Prelude.upFromByUpToShort',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(322,'reverseComparator','Cal.Core.Prelude.reverseComparator','Cal.Core.Prelude.reverseComparator',NULL,'[CALDoc] Reverses the order of a comparator (also known as a comparison function) so the\ncomparisons that result in <code>LT</code> become <code>GT</code> and those that result in <code>GT</code> become <code>LT</code>.','2008-04-20 18:16:21','2008-04-20 18:16:21'),(323,'maxBoundByteAsInt','Cal.Core.Prelude.maxBoundByteAsInt','Cal.Core.Prelude.maxBoundByteAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(324,'maxBoundByte','Cal.Core.Prelude.maxBoundByte','Cal.Core.Prelude.maxBoundByte',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(325,'upFromThenChar','Cal.Core.Prelude.upFromThenChar','Cal.Core.Prelude.upFromThenChar',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(326,'upFromThenToChar','Cal.Core.Prelude.upFromThenToChar','Cal.Core.Prelude.upFromThenToChar',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(327,'upFromByDownToChar','Cal.Core.Prelude.upFromByDownToChar','Cal.Core.Prelude.upFromByDownToChar',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(328,'upFromByUpToChar','Cal.Core.Prelude.upFromByUpToChar','Cal.Core.Prelude.upFromByUpToChar',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(329,'typeOfExamples','Cal.Core.Prelude.typeOfExamples','Cal.Core.Prelude.typeOfExamples',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(330,'undefined','Cal.Core.Prelude.undefined','Cal.Core.Prelude.undefined',NULL,'[CALDoc] The <code>undefined</code> function will cause execution to stop immediately. ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(331,'listToTypeReps','Cal.Core.Prelude.listToTypeReps','Cal.Core.Prelude.listToTypeReps',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(332,'updateTypeReps','Cal.Core.Prelude.updateTypeReps','Cal.Core.Prelude.updateTypeReps',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(333,'toCalValue','Cal.Core.Prelude.toCalValue','Cal.Core.Prelude.toCalValue',NULL,'[CALDoc] Converts any value in CAL to a value of type <code>CalValue</code>. ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(334,'length','Cal.Core.Prelude.length','Cal.Core.Prelude.length',NULL,'[CALDoc] Returns the length of the specified list. ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(335,'minBoundLong','Cal.Core.Prelude.minBoundLong','Cal.Core.Prelude.minBoundLong',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(336,'greaterThanDecimal','Cal.Core.Prelude.greaterThanDecimal','Cal.Core.Prelude.greaterThanDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(337,'upFromThenToInteger','Cal.Core.Prelude.upFromThenToInteger','Cal.Core.Prelude.upFromThenToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(338,'upFromByDownToInteger','Cal.Core.Prelude.upFromByDownToInteger','Cal.Core.Prelude.upFromByDownToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:21','2008-04-20 18:16:21'),(339,'upFromByUpToInteger','Cal.Core.Prelude.upFromByUpToInteger','Cal.Core.Prelude.upFromByUpToInteger',NULL,'[CALDoc] This function assumes that <code>step &gt;= 0</code>.','2008-04-20 18:16:21','2008-04-20 18:16:21'),(340,'isLeft','Cal.Core.Prelude.isLeft','Cal.Core.Prelude.isLeft',NULL,'[CALDoc] Returns <code>True</code> if <code>eitherValue</code> is a <code>Left</code> value and <code>False</code> otherwise.','2008-04-20 18:16:21','2008-04-20 18:16:21'),(341,'upFromByDownToByte','Cal.Core.Prelude.upFromByDownToByte','Cal.Core.Prelude.upFromByDownToByte',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(342,'upFromThenToFloat','Cal.Core.Prelude.upFromThenToFloat','Cal.Core.Prelude.upFromThenToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(343,'upFromThenFloat','Cal.Core.Prelude.upFromThenFloat','Cal.Core.Prelude.upFromThenFloat',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(344,'iterate','Cal.Core.Prelude.iterate','Cal.Core.Prelude.iterate',NULL,'[CALDoc] <code>iterate f x</code> returns the infinite list <code>[x, f x, f(f x), f(f(f x)), ...]</code>.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(345,'takeWhile','Cal.Core.Prelude.takeWhile','Cal.Core.Prelude.takeWhile',NULL,'[CALDoc] <code>takeWhile takeWhileTrueFunction list</code> returns the longest prefix of the list for which <code>takeWhileTrueFunction</code>\nis <code>True</code> for each element.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(346,'inputUnit','Cal.Core.Prelude.inputUnit','Cal.Core.Prelude.inputUnit',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(347,'foldLeftStrict','Cal.Core.Prelude.foldLeftStrict','Cal.Core.Prelude.foldLeftStrict',NULL,'[CALDoc] This is the strict version of <code>Cal.Collections.List.foldLeft</code>. ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(348,'upFromDouble','Cal.Core.Prelude.upFromDouble','Cal.Core.Prelude.upFromDouble',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(349,'signumInteger','Cal.Core.Prelude.signumInteger','Cal.Core.Prelude.signumInteger',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(350,'intToEnumCheckedChar','Cal.Core.Prelude.intToEnumCheckedChar','Cal.Core.Prelude.intToEnumCheckedChar',NULL,'[CALDoc] The <code>intToEnumChecked</code> instance function for the <code>Char</code> type.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(351,'maxBoundCharAsInt','Cal.Core.Prelude.maxBoundCharAsInt','Cal.Core.Prelude.maxBoundCharAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(352,'maxBoundChar','Cal.Core.Prelude.maxBoundChar','Cal.Core.Prelude.maxBoundChar',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(353,'minBoundCharAsInt','Cal.Core.Prelude.minBoundCharAsInt','Cal.Core.Prelude.minBoundCharAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(354,'minBoundChar','Cal.Core.Prelude.minBoundChar','Cal.Core.Prelude.minBoundChar',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(355,'intersperse','Cal.Core.Prelude.intersperse','Cal.Core.Prelude.intersperse',NULL,'[CALDoc] This function takes an element and a list and \"intersperses\" that element\nbetween the elements of the list.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(356,'fst','Cal.Core.Prelude.fst','Cal.Core.Prelude.fst',NULL,'[CALDoc] Extracts the first component of a pair.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(357,'byteToInteger','Cal.Core.Prelude.byteToInteger','Cal.Core.Prelude.byteToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(358,'isFunctionTypeExamples','Cal.Core.Prelude.isFunctionTypeExamples','Cal.Core.Prelude.isFunctionTypeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(359,'not','Cal.Core.Prelude.not','Cal.Core.Prelude.not',NULL,'[CALDoc] Returns the logical negation of the argument.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(360,'isFunctionType','Cal.Core.Prelude.isFunctionType','Cal.Core.Prelude.isFunctionType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of a function type and <code>False</code> otherwise.\n','2008-04-20 18:16:22','2008-04-20 18:16:22'),(361,'isRecordType','Cal.Core.Prelude.isRecordType','Cal.Core.Prelude.isRecordType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of a record type and <code>False</code> otherwise.\n','2008-04-20 18:16:22','2008-04-20 18:16:22'),(362,'mod','Cal.Core.Prelude.mod','Cal.Core.Prelude.mod',NULL,'[CALDoc] The remainder that corresponds to <code>divide</code>.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(363,'uncurry','Cal.Core.Prelude.uncurry','Cal.Core.Prelude.uncurry',NULL,'[CALDoc] Converts a function of 2 arguments to a function of a single pair argument.','2008-04-20 18:16:22','2008-04-20 18:16:22'),(364,'testEnumDecimalInstance','Cal.Core.Prelude.testEnumDecimalInstance','Cal.Core.Prelude.testEnumDecimalInstance',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(365,'upFromThenToDecimalExamples','Cal.Core.Prelude.upFromThenToDecimalExamples','Cal.Core.Prelude.upFromThenToDecimalExamples',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(366,'upFromThenToDecimal','Cal.Core.Prelude.upFromThenToDecimal','Cal.Core.Prelude.upFromThenToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:22','2008-04-20 18:16:22'),(367,'upFromThenDecimalExamples','Cal.Core.Prelude.upFromThenDecimalExamples','Cal.Core.Prelude.upFromThenDecimalExamples',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(368,'upFromThenDecimal','Cal.Core.Prelude.upFromThenDecimal','Cal.Core.Prelude.upFromThenDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(369,'upFromDecimalExamples','Cal.Core.Prelude.upFromDecimalExamples','Cal.Core.Prelude.upFromDecimalExamples',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(370,'upFromDecimal','Cal.Core.Prelude.upFromDecimal','Cal.Core.Prelude.upFromDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(371,'upFromToDecimalExamples','Cal.Core.Prelude.upFromToDecimalExamples','Cal.Core.Prelude.upFromToDecimalExamples',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(372,'upFromToDecimal','Cal.Core.Prelude.upFromToDecimal','Cal.Core.Prelude.upFromToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(373,'upFromByUpToDecimal','Cal.Core.Prelude.upFromByUpToDecimal','Cal.Core.Prelude.upFromByUpToDecimal',NULL,'[CALDoc] This function assumes that <code>step &gt;= 0</code>','2008-04-20 18:16:23','2008-04-20 18:16:23'),(374,'appendOrdering','Cal.Core.Prelude.appendOrdering','Cal.Core.Prelude.appendOrdering',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(375,'upFromByDownToLong','Cal.Core.Prelude.upFromByDownToLong','Cal.Core.Prelude.upFromByDownToLong',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(376,'isOdd','Cal.Core.Prelude.isOdd','Cal.Core.Prelude.isOdd',NULL,'[CALDoc] Returns whether the argument is odd.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(377,'upFromByDownToDecimal','Cal.Core.Prelude.upFromByDownToDecimal','Cal.Core.Prelude.upFromByDownToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(378,'outputListWith','Cal.Core.Prelude.outputListWith','Cal.Core.Prelude.outputListWith',NULL,'[CALDoc] Converts a CAL list to a Java list using the element mapping function <code>f</code> of type <code>a -&gt; JObject</code> \nto convert elements of the CAL list.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(379,'isListType','Cal.Core.Prelude.isListType','Cal.Core.Prelude.isListType',NULL,'[CALDoc] Returns <code>True</code> if the runtime type representation is that of a <code>List</code> and <code>False</code> otherwise.\n','2008-04-20 18:16:23','2008-04-20 18:16:23'),(380,'upFromThenBooleanExamples','Cal.Core.Prelude.upFromThenBooleanExamples','Cal.Core.Prelude.upFromThenBooleanExamples',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(381,'upFromThenBoolean','Cal.Core.Prelude.upFromThenBoolean','Cal.Core.Prelude.upFromThenBoolean',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(382,'repeat','Cal.Core.Prelude.repeat','Cal.Core.Prelude.repeat',NULL,'[CALDoc] <code>repeat valueToRepeat</code> returns the infinite list <code>[valueToRepeat, valueToRepeat, valueToRepeat, ...]</code>.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(383,'take','Cal.Core.Prelude.take','Cal.Core.Prelude.take',NULL,'[CALDoc] <code>take nElements list</code> returns a list consisting of the first <code>nElements</code> elements of <code>list</code>.\n','2008-04-20 18:16:23','2008-04-20 18:16:23'),(384,'assert','Cal.Core.Prelude.assert','Cal.Core.Prelude.assert',NULL,'[CALDoc] <code>assert</code> evaluates the given expression. ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(385,'typeRepsToList','Cal.Core.Prelude.typeRepsToList','Cal.Core.Prelude.typeRepsToList',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(386,'subscriptTypeReps','Cal.Core.Prelude.subscriptTypeReps','Cal.Core.Prelude.subscriptTypeReps',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(387,'unsafeFromCalValue','Cal.Core.Prelude.unsafeFromCalValue','Cal.Core.Prelude.unsafeFromCalValue',NULL,'[CALDoc] Converts a <code>CalValue</code> to a CAL value of type <code>a</code>. ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(388,'evaluateCalFunction','Cal.Core.Prelude.evaluateCalFunction','Cal.Core.Prelude.evaluateCalFunction',NULL,'[CALDoc] <code>evaluateCalFunction func arg</code> evaluates the CAL function represented by <code>func</code> at the value <code>arg</code>.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(389,'jObjectToJMap','Cal.Core.Prelude.jObjectToJMap','Cal.Core.Prelude.jObjectToJMap',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(390,'isJMap','Cal.Core.Prelude.isJMap','Cal.Core.Prelude.isJMap',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(391,'jObjectToJList','Cal.Core.Prelude.jObjectToJList','Cal.Core.Prelude.jObjectToJList',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(392,'isJList','Cal.Core.Prelude.isJList','Cal.Core.Prelude.isJList',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(393,'recordType_sameFields','Cal.Core.Prelude.recordType_sameFields','Cal.Core.Prelude.recordType_sameFields',NULL,'[CALDoc] Returns: <code>True</code> if the two <code>RecordType</code>s have the same set of field names (not necessarily field types).\nUsed internally to implemented <code>sameRootType</code> for records.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(394,'recordType_isTuple2OrMoreRecord','Cal.Core.Prelude.recordType_isTuple2OrMoreRecord','Cal.Core.Prelude.recordType_isTuple2OrMoreRecord',NULL,'[CALDoc] Returns: <code>True</code> if the record whose type is represented by the <code>RecordType</code> is a tuple with 2 or more\nfields, and <code>False</code> otherwise.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(395,'recordType_getNthFieldName','Cal.Core.Prelude.recordType_getNthFieldName','Cal.Core.Prelude.recordType_getNthFieldName',NULL,'[CALDoc] Returns: The name of the nth field of the record whose type is represented by the <code>RecordType</code>.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(396,'fieldNameToString','Cal.Core.Prelude.fieldNameToString','Cal.Core.Prelude.fieldNameToString',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(397,'recordType_getNthFieldValue','Cal.Core.Prelude.recordType_getNthFieldValue','Cal.Core.Prelude.recordType_getNthFieldValue',NULL,'[CALDoc] Returns: The nth value contained by the <code>RecordType</code> object.  This will be an internal CAL value representing a function\nthat accepts a single, ignored argument and returns a <code>TypeRep</code> representing the type of\nthe nth field of the record represented by the <code>RecordType</code>.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(398,'recordType_getNFields','Cal.Core.Prelude.recordType_getNFields','Cal.Core.Prelude.recordType_getNFields',NULL,'[CALDoc] Returns: The number of fields that the record represented by the <code>RecordType</code> contains.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(399,'executionContext_getForeignClass','Cal.Core.Prelude.executionContext_getForeignClass','Cal.Core.Prelude.executionContext_getForeignClass',NULL,'[CALDoc] Returns: the Java class object corresponding to this type for a foreign type. Otherwise null.','2008-04-20 18:16:23','2008-04-20 18:16:23'),(400,'class_String','Cal.Core.Prelude.class_String','Cal.Core.Prelude.class_String',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(401,'class_double','Cal.Core.Prelude.class_double','Cal.Core.Prelude.class_double',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(402,'class_float','Cal.Core.Prelude.class_float','Cal.Core.Prelude.class_float',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(403,'class_long','Cal.Core.Prelude.class_long','Cal.Core.Prelude.class_long',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(404,'class_int','Cal.Core.Prelude.class_int','Cal.Core.Prelude.class_int',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(405,'class_short','Cal.Core.Prelude.class_short','Cal.Core.Prelude.class_short',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(406,'class_byte','Cal.Core.Prelude.class_byte','Cal.Core.Prelude.class_byte',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(407,'class_char','Cal.Core.Prelude.class_char','Cal.Core.Prelude.class_char',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(408,'class_isPrimitive','Cal.Core.Prelude.class_isPrimitive','Cal.Core.Prelude.class_isPrimitive',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(409,'class_toString','Cal.Core.Prelude.class_toString','Cal.Core.Prelude.class_toString',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(410,'lengthTypeReps','Cal.Core.Prelude.lengthTypeReps','Cal.Core.Prelude.lengthTypeReps',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(411,'typeRepArray_update','Cal.Core.Prelude.typeRepArray_update','Cal.Core.Prelude.typeRepArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:23','2008-04-20 18:16:23'),(412,'typeRepArray_subscript','Cal.Core.Prelude.typeRepArray_subscript','Cal.Core.Prelude.typeRepArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(413,'typeRepArray_new','Cal.Core.Prelude.typeRepArray_new','Cal.Core.Prelude.typeRepArray_new',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(414,'longToString','Cal.Core.Prelude.longToString','Cal.Core.Prelude.longToString',NULL,'[CALDoc] Converts a <code>Long</code> value to its string representation.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(415,'intToString','Cal.Core.Prelude.intToString','Cal.Core.Prelude.intToString',NULL,'[CALDoc] Converts a <code>Integer</code> value to its string representation.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(416,'doubleToString','Cal.Core.Prelude.doubleToString','Cal.Core.Prelude.doubleToString',NULL,'[CALDoc] Converts a <code>Double</code> value to its string representation.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(417,'jStringBuilder_toString','Cal.Core.Prelude.jStringBuilder_toString','Cal.Core.Prelude.jStringBuilder_toString',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(418,'jStringBuilder_append','Cal.Core.Prelude.jStringBuilder_append','Cal.Core.Prelude.jStringBuilder_append',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(419,'jStringBuilder_append2','Cal.Core.Prelude.jStringBuilder_append2','Cal.Core.Prelude.jStringBuilder_append2',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(420,'jStringBuilder_new','Cal.Core.Prelude.jStringBuilder_new','Cal.Core.Prelude.jStringBuilder_new',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(421,'stringToDouble','Cal.Core.Prelude.stringToDouble','Cal.Core.Prelude.stringToDouble',NULL,'[CALDoc] Parses a string representation of a double value into a <code>Double</code> value.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(422,'stringToLongRadix','Cal.Core.Prelude.stringToLongRadix','Cal.Core.Prelude.stringToLongRadix',NULL,'[CALDoc] Parses a string representation of a long integer value in the specified radix\ninto a <code>Long</code> value.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(423,'stringToLong','Cal.Core.Prelude.stringToLong','Cal.Core.Prelude.stringToLong',NULL,'[CALDoc] Parses a string representation of a long integer value into a <code>Long</code> value.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(424,'stringToIntRadix','Cal.Core.Prelude.stringToIntRadix','Cal.Core.Prelude.stringToIntRadix',NULL,'[CALDoc] Parses a string representation of an integer value in the specified radix\ninto an <code>Int</code> value.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(425,'stringToInt','Cal.Core.Prelude.stringToInt','Cal.Core.Prelude.stringToInt',NULL,'[CALDoc] Parses a string representation of an integer value into an <code>Int</code> value.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(426,'negativeInfinity','Cal.Core.Prelude.negativeInfinity','Cal.Core.Prelude.negativeInfinity',NULL,'[CALDoc] The special negative infinity value for a <code>Double</code>.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(427,'positiveInfinity','Cal.Core.Prelude.positiveInfinity','Cal.Core.Prelude.positiveInfinity',NULL,'[CALDoc] The special positive infinity value for a <code>Double</code>.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(428,'isNotANumber','Cal.Core.Prelude.isNotANumber','Cal.Core.Prelude.isNotANumber',NULL,'[CALDoc] Checks whether a <code>Double</code> value is the special not-a-number value.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(429,'notANumber','Cal.Core.Prelude.notANumber','Cal.Core.Prelude.notANumber',NULL,'[CALDoc] The special not-a-number value for a <code>Double</code>.','2008-04-20 18:16:24','2008-04-20 18:16:24'),(430,'jList_add','Cal.Core.Prelude.jList_add','Cal.Core.Prelude.jList_add',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(431,'jArrayList_new','Cal.Core.Prelude.jArrayList_new','Cal.Core.Prelude.jArrayList_new',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(432,'jList7','Cal.Core.Prelude.jList7','Cal.Core.Prelude.jList7',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(433,'jList6','Cal.Core.Prelude.jList6','Cal.Core.Prelude.jList6',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(434,'jList5','Cal.Core.Prelude.jList5','Cal.Core.Prelude.jList5',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(435,'jList4','Cal.Core.Prelude.jList4','Cal.Core.Prelude.jList4',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(436,'jList3','Cal.Core.Prelude.jList3','Cal.Core.Prelude.jList3',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(437,'jList2','Cal.Core.Prelude.jList2','Cal.Core.Prelude.jList2',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(438,'jList1','Cal.Core.Prelude.jList1','Cal.Core.Prelude.jList1',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(439,'jList0','Cal.Core.Prelude.jList0','Cal.Core.Prelude.jList0',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(440,'javaArrayToJIterator','Cal.Core.Prelude.javaArrayToJIterator','Cal.Core.Prelude.javaArrayToJIterator',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(441,'isJavaArray','Cal.Core.Prelude.isJavaArray','Cal.Core.Prelude.isJavaArray',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(442,'jEnumerationToJIterator','Cal.Core.Prelude.jEnumerationToJIterator','Cal.Core.Prelude.jEnumerationToJIterator',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(443,'isJEnumeration','Cal.Core.Prelude.isJEnumeration','Cal.Core.Prelude.isJEnumeration',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(444,'isJIterator','Cal.Core.Prelude.isJIterator','Cal.Core.Prelude.isJIterator',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(445,'iterator_next','Cal.Core.Prelude.iterator_next','Cal.Core.Prelude.iterator_next',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(446,'iterator_hasNext','Cal.Core.Prelude.iterator_hasNext','Cal.Core.Prelude.iterator_hasNext',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(447,'collection_iterator','Cal.Core.Prelude.collection_iterator','Cal.Core.Prelude.collection_iterator',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(448,'isJCollection','Cal.Core.Prelude.isJCollection','Cal.Core.Prelude.isJCollection',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(449,'inputStringFromJObject','Cal.Core.Prelude.inputStringFromJObject','Cal.Core.Prelude.inputStringFromJObject',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(450,'unitValue_UNIT','Cal.Core.Prelude.unitValue_UNIT','Cal.Core.Prelude.unitValue_UNIT',NULL,'[CALDoc] ','2008-04-20 18:16:24','2008-04-20 18:16:24'),(451,'inputDouble','Cal.Core.Prelude.inputDouble','Cal.Core.Prelude.inputDouble',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"double\". \n','2008-04-20 18:16:24','2008-04-20 18:16:24'),(452,'outputDouble','Cal.Core.Prelude.outputDouble','Cal.Core.Prelude.outputDouble',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"double\".','2008-04-20 18:16:24','2008-04-20 18:16:24'),(453,'inputFloat','Cal.Core.Prelude.inputFloat','Cal.Core.Prelude.inputFloat',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"float\".\n','2008-04-20 18:16:24','2008-04-20 18:16:24'),(454,'outputFloat','Cal.Core.Prelude.outputFloat','Cal.Core.Prelude.outputFloat',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"float\".','2008-04-20 18:16:24','2008-04-20 18:16:24'),(455,'inputLong','Cal.Core.Prelude.inputLong','Cal.Core.Prelude.inputLong',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"long\". \n','2008-04-20 18:16:24','2008-04-20 18:16:24'),(456,'outputLong','Cal.Core.Prelude.outputLong','Cal.Core.Prelude.outputLong',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"long\".','2008-04-20 18:16:24','2008-04-20 18:16:24'),(457,'inputInt','Cal.Core.Prelude.inputInt','Cal.Core.Prelude.inputInt',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"int\".\n','2008-04-20 18:16:24','2008-04-20 18:16:24'),(458,'outputInt','Cal.Core.Prelude.outputInt','Cal.Core.Prelude.outputInt',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"int\".','2008-04-20 18:16:25','2008-04-20 18:16:25'),(459,'inputShort','Cal.Core.Prelude.inputShort','Cal.Core.Prelude.inputShort',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"short\".\n','2008-04-20 18:16:25','2008-04-20 18:16:25'),(460,'outputShort','Cal.Core.Prelude.outputShort','Cal.Core.Prelude.outputShort',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"short\".','2008-04-20 18:16:25','2008-04-20 18:16:25'),(461,'inputByte','Cal.Core.Prelude.inputByte','Cal.Core.Prelude.inputByte',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"byte\".\n','2008-04-20 18:16:25','2008-04-20 18:16:25'),(462,'outputByte','Cal.Core.Prelude.outputByte','Cal.Core.Prelude.outputByte',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"byte\".','2008-04-20 18:16:25','2008-04-20 18:16:25'),(463,'inputBoolean','Cal.Core.Prelude.inputBoolean','Cal.Core.Prelude.inputBoolean',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"boolean\".\n','2008-04-20 18:16:25','2008-04-20 18:16:25'),(464,'outputBoolean','Cal.Core.Prelude.outputBoolean','Cal.Core.Prelude.outputBoolean',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"boolean\".','2008-04-20 18:16:25','2008-04-20 18:16:25'),(465,'inputChar','Cal.Core.Prelude.inputChar','Cal.Core.Prelude.inputChar',NULL,'[CALDoc] Used to implement the <code>input</code> instance function for derived instances of\n<code>Inputable</code> for foreign types having implementation type \"char\".\n','2008-04-20 18:16:25','2008-04-20 18:16:25'),(466,'outputChar','Cal.Core.Prelude.outputChar','Cal.Core.Prelude.outputChar',NULL,'[CALDoc] Used to implement the <code>output</code> instance function for derived instances of\n<code>Outputable</code> for foreign types having implementation type \"char\".','2008-04-20 18:16:25','2008-04-20 18:16:25'),(467,'internal_algebraicValue_getNthArgument','Cal.Core.Prelude.internal_algebraicValue_getNthArgument','Cal.Core.Prelude.internal_algebraicValue_getNthArgument',NULL,'[CALDoc] This function is for internal use to support derived <code>Inputable</code> and <code>Outputable</code> instances.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(468,'internal_algebraicValue_getNArguments','Cal.Core.Prelude.internal_algebraicValue_getNArguments','Cal.Core.Prelude.internal_algebraicValue_getNArguments',NULL,'[CALDoc] This function is for internal use to support derived <code>Inputable</code> and <code>Outputable</code> instances.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(469,'internal_algebraicValue_getDataConstructorOrdinal','Cal.Core.Prelude.internal_algebraicValue_getDataConstructorOrdinal','Cal.Core.Prelude.internal_algebraicValue_getDataConstructorOrdinal',NULL,'[CALDoc] This function is for internal use to support derived <code>Inputable</code> and <code>Outputable</code> instances.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(470,'internal_algebraicValue_getDataConstructorName','Cal.Core.Prelude.internal_algebraicValue_getDataConstructorName','Cal.Core.Prelude.internal_algebraicValue_getDataConstructorName',NULL,'[CALDoc] This function is for internal use to support derived <code>Inputable</code> and <code>Outputable</code> instances.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(471,'internal_algebraicValue_new1','Cal.Core.Prelude.internal_algebraicValue_new1','Cal.Core.Prelude.internal_algebraicValue_new1',NULL,'[CALDoc] This function is for internal use to support derived <code>Inputable</code> and <code>Outputable</code> instances.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(472,'internal_algebraicValue_new0','Cal.Core.Prelude.internal_algebraicValue_new0','Cal.Core.Prelude.internal_algebraicValue_new0',NULL,'[CALDoc] This function is for internal use to support derived <code>Inputable</code> and <code>Outputable</code> instances.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(473,'internal_algebraicValue_new','Cal.Core.Prelude.internal_algebraicValue_new','Cal.Core.Prelude.internal_algebraicValue_new',NULL,'[CALDoc] This function is for internal use to support derived <code>Inputable</code> and <code>Outputable</code> instances.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(474,'lengthString','Cal.Core.Prelude.lengthString','Cal.Core.Prelude.lengthString',NULL,'[CALDoc] Returns the length of the string. ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(475,'appendString','Cal.Core.Prelude.appendString','Cal.Core.Prelude.appendString',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(476,'jStringBuilderToString','Cal.Core.Prelude.jStringBuilderToString','Cal.Core.Prelude.jStringBuilderToString',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(477,'floor','Cal.Core.Prelude.floor','Cal.Core.Prelude.floor',NULL,'[CALDoc] Returns the greatest integer less than or equal to <code>x</code>.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(478,'ceiling','Cal.Core.Prelude.ceiling','Cal.Core.Prelude.ceiling',NULL,'[CALDoc] Returns the smallest integer greater than or equal to <code>x</code>.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(479,'round','Cal.Core.Prelude.round','Cal.Core.Prelude.round',NULL,'[CALDoc] Rounds a number to the nearest integer. ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(480,'remainderDecimal','Cal.Core.Prelude.remainderDecimal','Cal.Core.Prelude.remainderDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(481,'jROUND_HALF_UP','Cal.Core.Prelude.jROUND_HALF_UP','Cal.Core.Prelude.jROUND_HALF_UP',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(482,'jDivideDecimal','Cal.Core.Prelude.jDivideDecimal','Cal.Core.Prelude.jDivideDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(483,'multiplyDecimal','Cal.Core.Prelude.multiplyDecimal','Cal.Core.Prelude.multiplyDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(484,'subtractDecimal','Cal.Core.Prelude.subtractDecimal','Cal.Core.Prelude.subtractDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(485,'addDecimal','Cal.Core.Prelude.addDecimal','Cal.Core.Prelude.addDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(486,'signumDecimalAsInt','Cal.Core.Prelude.signumDecimalAsInt','Cal.Core.Prelude.signumDecimalAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(487,'absDecimal','Cal.Core.Prelude.absDecimal','Cal.Core.Prelude.absDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(488,'negateDecimal','Cal.Core.Prelude.negateDecimal','Cal.Core.Prelude.negateDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(489,'maxDecimal','Cal.Core.Prelude.maxDecimal','Cal.Core.Prelude.maxDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(490,'minDecimal','Cal.Core.Prelude.minDecimal','Cal.Core.Prelude.minDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:25','2008-04-20 18:16:25'),(491,'jCompareToDecimal','Cal.Core.Prelude.jCompareToDecimal','Cal.Core.Prelude.jCompareToDecimal',NULL,'[CALDoc] Returns -1, 0, or 1.','2008-04-20 18:16:25','2008-04-20 18:16:25'),(492,'stringToDecimal','Cal.Core.Prelude.stringToDecimal','Cal.Core.Prelude.stringToDecimal',NULL,'[CALDoc] Parses a string (eg. <code>\"34.33\"</code>, <code>\"1.0e50000\"</code>) into a <code>Decimal</code>.\n','2008-04-20 18:16:25','2008-04-20 18:16:25'),(493,'integer_ZERO','Cal.Core.Prelude.integer_ZERO','Cal.Core.Prelude.integer_ZERO',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(494,'integer_ONE','Cal.Core.Prelude.integer_ONE','Cal.Core.Prelude.integer_ONE',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(495,'integerToString','Cal.Core.Prelude.integerToString','Cal.Core.Prelude.integerToString',NULL,'[CALDoc] Converts an <code>Integer</code> value to its string representation.','2008-04-20 18:16:26','2008-04-20 18:16:26'),(496,'powerInteger','Cal.Core.Prelude.powerInteger','Cal.Core.Prelude.powerInteger',NULL,'[CALDoc] Returns the result of raising the first argument to the power specified by the second argument.','2008-04-20 18:16:26','2008-04-20 18:16:26'),(497,'remainderInteger','Cal.Core.Prelude.remainderInteger','Cal.Core.Prelude.remainderInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(498,'divideInteger','Cal.Core.Prelude.divideInteger','Cal.Core.Prelude.divideInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(499,'multiplyInteger','Cal.Core.Prelude.multiplyInteger','Cal.Core.Prelude.multiplyInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(500,'subtractInteger','Cal.Core.Prelude.subtractInteger','Cal.Core.Prelude.subtractInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(501,'addInteger','Cal.Core.Prelude.addInteger','Cal.Core.Prelude.addInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(502,'negateInteger','Cal.Core.Prelude.negateInteger','Cal.Core.Prelude.negateInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(503,'stringToInteger','Cal.Core.Prelude.stringToInteger','Cal.Core.Prelude.stringToInteger',NULL,'[CALDoc] Parses a string representation of an integer into an <code>Integer</code> value.','2008-04-20 18:16:26','2008-04-20 18:16:26'),(504,'signumIntegerAsInt','Cal.Core.Prelude.signumIntegerAsInt','Cal.Core.Prelude.signumIntegerAsInt',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(505,'absInteger','Cal.Core.Prelude.absInteger','Cal.Core.Prelude.absInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(506,'minInteger','Cal.Core.Prelude.minInteger','Cal.Core.Prelude.minInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(507,'maxInteger','Cal.Core.Prelude.maxInteger','Cal.Core.Prelude.maxInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(508,'jCompareInteger','Cal.Core.Prelude.jCompareInteger','Cal.Core.Prelude.jCompareInteger',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(509,'absLong','Cal.Core.Prelude.absLong','Cal.Core.Prelude.absLong',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(510,'minLong','Cal.Core.Prelude.minLong','Cal.Core.Prelude.minLong',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(511,'maxLong','Cal.Core.Prelude.maxLong','Cal.Core.Prelude.maxLong',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(512,'signumDouble','Cal.Core.Prelude.signumDouble','Cal.Core.Prelude.signumDouble',NULL,'[CALDoc] There are some tricky aspects here in how NaN and -0 are handled.','2008-04-20 18:16:26','2008-04-20 18:16:26'),(513,'absDouble','Cal.Core.Prelude.absDouble','Cal.Core.Prelude.absDouble',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(514,'minDouble','Cal.Core.Prelude.minDouble','Cal.Core.Prelude.minDouble',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(515,'maxDouble','Cal.Core.Prelude.maxDouble','Cal.Core.Prelude.maxDouble',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(516,'jCompareDouble','Cal.Core.Prelude.jCompareDouble','Cal.Core.Prelude.jCompareDouble',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(517,'signumFloat','Cal.Core.Prelude.signumFloat','Cal.Core.Prelude.signumFloat',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(518,'absFloat','Cal.Core.Prelude.absFloat','Cal.Core.Prelude.absFloat',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(519,'minFloat','Cal.Core.Prelude.minFloat','Cal.Core.Prelude.minFloat',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(520,'maxFloat','Cal.Core.Prelude.maxFloat','Cal.Core.Prelude.maxFloat',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(521,'jCompareFloat','Cal.Core.Prelude.jCompareFloat','Cal.Core.Prelude.jCompareFloat',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(522,'absInt','Cal.Core.Prelude.absInt','Cal.Core.Prelude.absInt',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(523,'minInt','Cal.Core.Prelude.minInt','Cal.Core.Prelude.minInt',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(524,'maxInt','Cal.Core.Prelude.maxInt','Cal.Core.Prelude.maxInt',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(525,'jComparableToJObject','Cal.Core.Prelude.jComparableToJObject','Cal.Core.Prelude.jComparableToJObject',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(526,'jCompareComparableHelper','Cal.Core.Prelude.jCompareComparableHelper','Cal.Core.Prelude.jCompareComparableHelper',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(527,'equalsObject','Cal.Core.Prelude.equalsObject','Cal.Core.Prelude.equalsObject',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(528,'orderingValue_toInt','Cal.Core.Prelude.orderingValue_toInt','Cal.Core.Prelude.orderingValue_toInt',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(529,'orderingValue_GT','Cal.Core.Prelude.orderingValue_GT','Cal.Core.Prelude.orderingValue_GT',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(530,'orderingValue_EQ','Cal.Core.Prelude.orderingValue_EQ','Cal.Core.Prelude.orderingValue_EQ',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(531,'orderingValue_LT','Cal.Core.Prelude.orderingValue_LT','Cal.Core.Prelude.orderingValue_LT',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(532,'eitherValue_getValueField','Cal.Core.Prelude.eitherValue_getValueField','Cal.Core.Prelude.eitherValue_getValueField',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(533,'eitherValue_isLeft','Cal.Core.Prelude.eitherValue_isLeft','Cal.Core.Prelude.eitherValue_isLeft',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(534,'eitherValue_makeRight','Cal.Core.Prelude.eitherValue_makeRight','Cal.Core.Prelude.eitherValue_makeRight',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(535,'eitherValue_makeLeft','Cal.Core.Prelude.eitherValue_makeLeft','Cal.Core.Prelude.eitherValue_makeLeft',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(536,'maybeValue_getValueField','Cal.Core.Prelude.maybeValue_getValueField','Cal.Core.Prelude.maybeValue_getValueField',NULL,'[CALDoc] ','2008-04-20 18:16:26','2008-04-20 18:16:26'),(537,'maybeValue_isNothing','Cal.Core.Prelude.maybeValue_isNothing','Cal.Core.Prelude.maybeValue_isNothing',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(538,'maybeValue_makeJust','Cal.Core.Prelude.maybeValue_makeJust','Cal.Core.Prelude.maybeValue_makeJust',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(539,'maybeValue_makeNothing','Cal.Core.Prelude.maybeValue_makeNothing','Cal.Core.Prelude.maybeValue_makeNothing',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(540,'decimalToDecimal','Cal.Core.Prelude.decimalToDecimal','Cal.Core.Prelude.decimalToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(541,'decimalToInteger','Cal.Core.Prelude.decimalToInteger','Cal.Core.Prelude.decimalToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(542,'decimalToDouble','Cal.Core.Prelude.decimalToDouble','Cal.Core.Prelude.decimalToDouble',NULL,'[CALDoc] Attempts to convert a <code>Decimal</code> value to the nearest <code>Double</code> value.\n','2008-04-20 18:16:27','2008-04-20 18:16:27'),(543,'decimalToFloat','Cal.Core.Prelude.decimalToFloat','Cal.Core.Prelude.decimalToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(544,'decimalToLong','Cal.Core.Prelude.decimalToLong','Cal.Core.Prelude.decimalToLong',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(545,'decimalToInt','Cal.Core.Prelude.decimalToInt','Cal.Core.Prelude.decimalToInt',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(546,'decimalToShort','Cal.Core.Prelude.decimalToShort','Cal.Core.Prelude.decimalToShort',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(547,'decimalToByte','Cal.Core.Prelude.decimalToByte','Cal.Core.Prelude.decimalToByte',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(548,'integerToDecimal','Cal.Core.Prelude.integerToDecimal','Cal.Core.Prelude.integerToDecimal',NULL,'[CALDoc] Converts an <code>Integer</code> value to the equivalent <code>Decimal</code> value.\n','2008-04-20 18:16:27','2008-04-20 18:16:27'),(549,'integerToInteger','Cal.Core.Prelude.integerToInteger','Cal.Core.Prelude.integerToInteger',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(550,'integerToDouble','Cal.Core.Prelude.integerToDouble','Cal.Core.Prelude.integerToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(551,'integerToFloat','Cal.Core.Prelude.integerToFloat','Cal.Core.Prelude.integerToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(552,'integerToLong','Cal.Core.Prelude.integerToLong','Cal.Core.Prelude.integerToLong',NULL,'[CALDoc] Converts an <code>Integer</code> value to the corresponding <code>Long</code> value.','2008-04-20 18:16:27','2008-04-20 18:16:27'),(553,'integerToInt','Cal.Core.Prelude.integerToInt','Cal.Core.Prelude.integerToInt',NULL,'[CALDoc] Converts an <code>Integer</code> value to the corresponding <code>Int</code> value.','2008-04-20 18:16:27','2008-04-20 18:16:27'),(554,'integerToShort','Cal.Core.Prelude.integerToShort','Cal.Core.Prelude.integerToShort',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(555,'integerToByte','Cal.Core.Prelude.integerToByte','Cal.Core.Prelude.integerToByte',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(556,'doubleToDecimal','Cal.Core.Prelude.doubleToDecimal','Cal.Core.Prelude.doubleToDecimal',NULL,'[CALDoc] Converts a <code>Double</code> value to the equivalent <code>Decimal</code> value.\n','2008-04-20 18:16:27','2008-04-20 18:16:27'),(557,'doubleToDouble','Cal.Core.Prelude.doubleToDouble','Cal.Core.Prelude.doubleToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(558,'doubleToFloat','Cal.Core.Prelude.doubleToFloat','Cal.Core.Prelude.doubleToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(559,'doubleToLong','Cal.Core.Prelude.doubleToLong','Cal.Core.Prelude.doubleToLong',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(560,'doubleToInt','Cal.Core.Prelude.doubleToInt','Cal.Core.Prelude.doubleToInt',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(561,'doubleToChar','Cal.Core.Prelude.doubleToChar','Cal.Core.Prelude.doubleToChar',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(562,'doubleToShort','Cal.Core.Prelude.doubleToShort','Cal.Core.Prelude.doubleToShort',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(563,'doubleToByte','Cal.Core.Prelude.doubleToByte','Cal.Core.Prelude.doubleToByte',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(564,'floatToDouble','Cal.Core.Prelude.floatToDouble','Cal.Core.Prelude.floatToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(565,'floatToFloat','Cal.Core.Prelude.floatToFloat','Cal.Core.Prelude.floatToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(566,'floatToLong','Cal.Core.Prelude.floatToLong','Cal.Core.Prelude.floatToLong',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(567,'floatToInt','Cal.Core.Prelude.floatToInt','Cal.Core.Prelude.floatToInt',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(568,'floatToChar','Cal.Core.Prelude.floatToChar','Cal.Core.Prelude.floatToChar',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(569,'floatToShort','Cal.Core.Prelude.floatToShort','Cal.Core.Prelude.floatToShort',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(570,'floatToByte','Cal.Core.Prelude.floatToByte','Cal.Core.Prelude.floatToByte',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(571,'longToDecimal','Cal.Core.Prelude.longToDecimal','Cal.Core.Prelude.longToDecimal',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(572,'longToInteger','Cal.Core.Prelude.longToInteger','Cal.Core.Prelude.longToInteger',NULL,'[CALDoc] Converts a <code>Long</code> value to the corresponding <code>Integer</code> value.','2008-04-20 18:16:27','2008-04-20 18:16:27'),(573,'longToDouble','Cal.Core.Prelude.longToDouble','Cal.Core.Prelude.longToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(574,'longToFloat','Cal.Core.Prelude.longToFloat','Cal.Core.Prelude.longToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(575,'longToLong','Cal.Core.Prelude.longToLong','Cal.Core.Prelude.longToLong',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(576,'longToInt','Cal.Core.Prelude.longToInt','Cal.Core.Prelude.longToInt',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(577,'longToChar','Cal.Core.Prelude.longToChar','Cal.Core.Prelude.longToChar',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(578,'longToShort','Cal.Core.Prelude.longToShort','Cal.Core.Prelude.longToShort',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(579,'longToByte','Cal.Core.Prelude.longToByte','Cal.Core.Prelude.longToByte',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(580,'intToDouble','Cal.Core.Prelude.intToDouble','Cal.Core.Prelude.intToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(581,'intToFloat','Cal.Core.Prelude.intToFloat','Cal.Core.Prelude.intToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(582,'intToLong','Cal.Core.Prelude.intToLong','Cal.Core.Prelude.intToLong',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(583,'intToInt','Cal.Core.Prelude.intToInt','Cal.Core.Prelude.intToInt',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(584,'intToChar','Cal.Core.Prelude.intToChar','Cal.Core.Prelude.intToChar',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(585,'intToShort','Cal.Core.Prelude.intToShort','Cal.Core.Prelude.intToShort',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(586,'intToByte','Cal.Core.Prelude.intToByte','Cal.Core.Prelude.intToByte',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(587,'charToDouble','Cal.Core.Prelude.charToDouble','Cal.Core.Prelude.charToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(588,'charToFloat','Cal.Core.Prelude.charToFloat','Cal.Core.Prelude.charToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(589,'charToLong','Cal.Core.Prelude.charToLong','Cal.Core.Prelude.charToLong',NULL,'[CALDoc] ','2008-04-20 18:16:27','2008-04-20 18:16:27'),(590,'charToInt','Cal.Core.Prelude.charToInt','Cal.Core.Prelude.charToInt',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(591,'charToChar','Cal.Core.Prelude.charToChar','Cal.Core.Prelude.charToChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(592,'charToShort','Cal.Core.Prelude.charToShort','Cal.Core.Prelude.charToShort',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(593,'charToByte','Cal.Core.Prelude.charToByte','Cal.Core.Prelude.charToByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(594,'shortToDouble','Cal.Core.Prelude.shortToDouble','Cal.Core.Prelude.shortToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(595,'shortToFloat','Cal.Core.Prelude.shortToFloat','Cal.Core.Prelude.shortToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(596,'shortToLong','Cal.Core.Prelude.shortToLong','Cal.Core.Prelude.shortToLong',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(597,'shortToInt','Cal.Core.Prelude.shortToInt','Cal.Core.Prelude.shortToInt',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(598,'shortToChar','Cal.Core.Prelude.shortToChar','Cal.Core.Prelude.shortToChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(599,'shortToShort','Cal.Core.Prelude.shortToShort','Cal.Core.Prelude.shortToShort',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(600,'shortToByte','Cal.Core.Prelude.shortToByte','Cal.Core.Prelude.shortToByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(601,'byteToDouble','Cal.Core.Prelude.byteToDouble','Cal.Core.Prelude.byteToDouble',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(602,'byteToFloat','Cal.Core.Prelude.byteToFloat','Cal.Core.Prelude.byteToFloat',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(603,'byteToLong','Cal.Core.Prelude.byteToLong','Cal.Core.Prelude.byteToLong',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(604,'byteToInt','Cal.Core.Prelude.byteToInt','Cal.Core.Prelude.byteToInt',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(605,'byteToShort','Cal.Core.Prelude.byteToShort','Cal.Core.Prelude.byteToShort',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(606,'byteToChar','Cal.Core.Prelude.byteToChar','Cal.Core.Prelude.byteToChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(607,'byteToByte','Cal.Core.Prelude.byteToByte','Cal.Core.Prelude.byteToByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(608,'executionContext','Cal.Core.Prelude.executionContext','Cal.Core.Prelude.executionContext',NULL,'[CALDoc] Returns: the ExecutionContext that executed this call. Not a pure function.','2008-04-20 18:16:28','2008-04-20 18:16:28'),(609,'ordinalValue','Cal.Core.Prelude.ordinalValue','Cal.Core.Prelude.ordinalValue',NULL,'[CALDoc] This function should remain private. ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(610,'makeCalFunction','Cal.Core.Prelude.makeCalFunction','Cal.Core.Prelude.makeCalFunction',NULL,'[CALDoc] Creates a <code>CalFunction</code> value from a CAL function of type <code>JObject -&gt; JObject</code>.','2008-04-20 18:16:28','2008-04-20 18:16:28'),(611,'makeEquivalenceRelation','Cal.Core.Prelude.makeEquivalenceRelation','Cal.Core.Prelude.makeEquivalenceRelation',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(612,'makeComparator','Cal.Core.Prelude.makeComparator','Cal.Core.Prelude.makeComparator',NULL,'[CALDoc] Makes a comparator that uses the ordering function argument to implement the Java comparator\'s compare method.','2008-04-20 18:16:28','2008-04-20 18:16:28'),(613,'objectToCalValue','Cal.Core.Prelude.objectToCalValue','Cal.Core.Prelude.objectToCalValue',NULL,'[CALDoc] Returns: checks that <code>object</code> is indeed a handle to a <code>CalValue</code> and then returns the underlying CAL value\nevaluating it to weak-head normal form.','2008-04-20 18:16:28','2008-04-20 18:16:28'),(614,'calValueToObject','Cal.Core.Prelude.calValueToObject','Cal.Core.Prelude.calValueToObject',NULL,'[CALDoc] Returns: converts the <code>calValue</code> argument into a Java object that is suitable for external Java clients to use as a handle to the\n<code>calValue</code>. The <code>calValue</code> argument itself is not evaluated to weak-head normal form.','2008-04-20 18:16:28','2008-04-20 18:16:28'),(615,'recordToJListPrimitive','Cal.Core.Prelude.recordToJListPrimitive','Cal.Core.Prelude.recordToJListPrimitive',NULL,'[CALDoc] Returns a <code>java.util.List</code> value whose elements are obtained by applying <code>input</code> to each field in the CAL record \nin field-name order. ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(616,'recordFromJMapPrimitive','Cal.Core.Prelude.recordFromJMapPrimitive','Cal.Core.Prelude.recordFromJMapPrimitive',NULL,'[CALDoc] The CAL record obtained by applying <code>input</code> to each value of the Java map from <code>org.openquark.cal.compiler.FieldName</code>\nto <code>java.lang.Object</code>. ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(617,'recordFromJListPrimitive','Cal.Core.Prelude.recordFromJListPrimitive','Cal.Core.Prelude.recordFromJListPrimitive',NULL,'[CALDoc] The CAL record obtained by applying <code>input</code> to each element of the Java list. ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(618,'compareRecord','Cal.Core.Prelude.compareRecord','Cal.Core.Prelude.compareRecord',NULL,'[CALDoc] Returns: comparison using field-name ordering.','2008-04-20 18:16:28','2008-04-20 18:16:28'),(619,'notEqualsRecord','Cal.Core.Prelude.notEqualsRecord','Cal.Core.Prelude.notEqualsRecord',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(620,'equalsRecord','Cal.Core.Prelude.equalsRecord','Cal.Core.Prelude.equalsRecord',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(621,'recordTypeDictionary','Cal.Core.Prelude.recordTypeDictionary','Cal.Core.Prelude.recordTypeDictionary',NULL,'[CALDoc] Extracts the machine-internal type dictionary from a record.  ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(622,'unsafeCoerce','Cal.Core.Prelude.unsafeCoerce','Cal.Core.Prelude.unsafeCoerce',NULL,'[CALDoc] <code>unsafeCoerce</code> is equivalent to the identity function operationally.\n','2008-04-20 18:16:28','2008-04-20 18:16:28'),(623,'error','Cal.Core.Prelude.error','Cal.Core.Prelude.error',NULL,'[CALDoc] The <code>error</code> function will cause execution to stop immediately. ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(624,'eager','Cal.Core.Prelude.eager','Cal.Core.Prelude.eager',NULL,'[CALDoc] <code>eager</code> is used to force a strict evaluation of its argument to weak-head normal form.\n','2008-04-20 18:16:28','2008-04-20 18:16:28'),(625,'deepSeq','Cal.Core.Prelude.deepSeq','Cal.Core.Prelude.deepSeq',NULL,'[CALDoc] The <code>deepSeq</code> function is similar to the <code>seq</code> function, except that <code>deepSeq x y</code> evaluates the\nargument <code>x</code> to normal form (instead of weak head normal form). ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(626,'seq','Cal.Core.Prelude.seq','Cal.Core.Prelude.seq',NULL,'[CALDoc] <code>seq</code> is a primitive function used to explicitly control the order of evaluation of CAL.\n','2008-04-20 18:16:28','2008-04-20 18:16:28'),(627,'greaterThanChar','Cal.Core.Prelude.greaterThanChar','Cal.Core.Prelude.greaterThanChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(628,'greaterThanEqualsChar','Cal.Core.Prelude.greaterThanEqualsChar','Cal.Core.Prelude.greaterThanEqualsChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(629,'lessThanEqualsChar','Cal.Core.Prelude.lessThanEqualsChar','Cal.Core.Prelude.lessThanEqualsChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(630,'lessThanChar','Cal.Core.Prelude.lessThanChar','Cal.Core.Prelude.lessThanChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(631,'notEqualsChar','Cal.Core.Prelude.notEqualsChar','Cal.Core.Prelude.notEqualsChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(632,'equalsChar','Cal.Core.Prelude.equalsChar','Cal.Core.Prelude.equalsChar',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(633,'greaterThanByte','Cal.Core.Prelude.greaterThanByte','Cal.Core.Prelude.greaterThanByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(634,'greaterThanEqualsByte','Cal.Core.Prelude.greaterThanEqualsByte','Cal.Core.Prelude.greaterThanEqualsByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(635,'lessThanEqualsByte','Cal.Core.Prelude.lessThanEqualsByte','Cal.Core.Prelude.lessThanEqualsByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(636,'lessThanByte','Cal.Core.Prelude.lessThanByte','Cal.Core.Prelude.lessThanByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(637,'notEqualsByte','Cal.Core.Prelude.notEqualsByte','Cal.Core.Prelude.notEqualsByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(638,'equalsByte','Cal.Core.Prelude.equalsByte','Cal.Core.Prelude.equalsByte',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(639,'greaterThanShort','Cal.Core.Prelude.greaterThanShort','Cal.Core.Prelude.greaterThanShort',NULL,'[CALDoc] ','2008-04-20 18:16:28','2008-04-20 18:16:28'),(640,'greaterThanEqualsShort','Cal.Core.Prelude.greaterThanEqualsShort','Cal.Core.Prelude.greaterThanEqualsShort',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(641,'lessThanEqualsShort','Cal.Core.Prelude.lessThanEqualsShort','Cal.Core.Prelude.lessThanEqualsShort',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(642,'lessThanShort','Cal.Core.Prelude.lessThanShort','Cal.Core.Prelude.lessThanShort',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(643,'notEqualsShort','Cal.Core.Prelude.notEqualsShort','Cal.Core.Prelude.notEqualsShort',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(644,'equalsShort','Cal.Core.Prelude.equalsShort','Cal.Core.Prelude.equalsShort',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(645,'remainderLong','Cal.Core.Prelude.remainderLong','Cal.Core.Prelude.remainderLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(646,'negateLong','Cal.Core.Prelude.negateLong','Cal.Core.Prelude.negateLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(647,'divideLong','Cal.Core.Prelude.divideLong','Cal.Core.Prelude.divideLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(648,'multiplyLong','Cal.Core.Prelude.multiplyLong','Cal.Core.Prelude.multiplyLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(649,'subtractLong','Cal.Core.Prelude.subtractLong','Cal.Core.Prelude.subtractLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(650,'addLong','Cal.Core.Prelude.addLong','Cal.Core.Prelude.addLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(651,'greaterThanLong','Cal.Core.Prelude.greaterThanLong','Cal.Core.Prelude.greaterThanLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(652,'greaterThanEqualsLong','Cal.Core.Prelude.greaterThanEqualsLong','Cal.Core.Prelude.greaterThanEqualsLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(653,'lessThanEqualsLong','Cal.Core.Prelude.lessThanEqualsLong','Cal.Core.Prelude.lessThanEqualsLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(654,'lessThanLong','Cal.Core.Prelude.lessThanLong','Cal.Core.Prelude.lessThanLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(655,'notEqualsLong','Cal.Core.Prelude.notEqualsLong','Cal.Core.Prelude.notEqualsLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(656,'equalsLong','Cal.Core.Prelude.equalsLong','Cal.Core.Prelude.equalsLong',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(657,'remainderFloat','Cal.Core.Prelude.remainderFloat','Cal.Core.Prelude.remainderFloat',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(658,'negateFloat','Cal.Core.Prelude.negateFloat','Cal.Core.Prelude.negateFloat',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(659,'divideFloat','Cal.Core.Prelude.divideFloat','Cal.Core.Prelude.divideFloat',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(660,'multiplyFloat','Cal.Core.Prelude.multiplyFloat','Cal.Core.Prelude.multiplyFloat',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(661,'subtractFloat','Cal.Core.Prelude.subtractFloat','Cal.Core.Prelude.subtractFloat',NULL,'[CALDoc] ','2008-04-20 18:16:29','2008-04-20 18:16:29'),(662,'addFloat','Cal.Core.Prelude.addFloat','Cal.Core.Prelude.addFloat',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(663,'greaterThanFloat','Cal.Core.Prelude.greaterThanFloat','Cal.Core.Prelude.greaterThanFloat',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(664,'greaterThanEqualsFloat','Cal.Core.Prelude.greaterThanEqualsFloat','Cal.Core.Prelude.greaterThanEqualsFloat',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(665,'lessThanEqualsFloat','Cal.Core.Prelude.lessThanEqualsFloat','Cal.Core.Prelude.lessThanEqualsFloat',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(666,'lessThanFloat','Cal.Core.Prelude.lessThanFloat','Cal.Core.Prelude.lessThanFloat',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(667,'notEqualsFloat','Cal.Core.Prelude.notEqualsFloat','Cal.Core.Prelude.notEqualsFloat',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(668,'equalsFloat','Cal.Core.Prelude.equalsFloat','Cal.Core.Prelude.equalsFloat',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(669,'remainderDouble','Cal.Core.Prelude.remainderDouble','Cal.Core.Prelude.remainderDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(670,'negateDouble','Cal.Core.Prelude.negateDouble','Cal.Core.Prelude.negateDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(671,'divideDouble','Cal.Core.Prelude.divideDouble','Cal.Core.Prelude.divideDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(672,'multiplyDouble','Cal.Core.Prelude.multiplyDouble','Cal.Core.Prelude.multiplyDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(673,'subtractDouble','Cal.Core.Prelude.subtractDouble','Cal.Core.Prelude.subtractDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(674,'addDouble','Cal.Core.Prelude.addDouble','Cal.Core.Prelude.addDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(675,'greaterThanDouble','Cal.Core.Prelude.greaterThanDouble','Cal.Core.Prelude.greaterThanDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(676,'greaterThanEqualsDouble','Cal.Core.Prelude.greaterThanEqualsDouble','Cal.Core.Prelude.greaterThanEqualsDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(677,'lessThanEqualsDouble','Cal.Core.Prelude.lessThanEqualsDouble','Cal.Core.Prelude.lessThanEqualsDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(678,'lessThanDouble','Cal.Core.Prelude.lessThanDouble','Cal.Core.Prelude.lessThanDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(679,'notEqualsDouble','Cal.Core.Prelude.notEqualsDouble','Cal.Core.Prelude.notEqualsDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(680,'equalsDouble','Cal.Core.Prelude.equalsDouble','Cal.Core.Prelude.equalsDouble',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(681,'remainderInt','Cal.Core.Prelude.remainderInt','Cal.Core.Prelude.remainderInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(682,'negateInt','Cal.Core.Prelude.negateInt','Cal.Core.Prelude.negateInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(683,'divideInt','Cal.Core.Prelude.divideInt','Cal.Core.Prelude.divideInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(684,'multiplyInt','Cal.Core.Prelude.multiplyInt','Cal.Core.Prelude.multiplyInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(685,'subtractInt','Cal.Core.Prelude.subtractInt','Cal.Core.Prelude.subtractInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(686,'addInt','Cal.Core.Prelude.addInt','Cal.Core.Prelude.addInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(687,'greaterThanInt','Cal.Core.Prelude.greaterThanInt','Cal.Core.Prelude.greaterThanInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(688,'greaterThanEqualsInt','Cal.Core.Prelude.greaterThanEqualsInt','Cal.Core.Prelude.greaterThanEqualsInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(689,'lessThanEqualsInt','Cal.Core.Prelude.lessThanEqualsInt','Cal.Core.Prelude.lessThanEqualsInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(690,'lessThanInt','Cal.Core.Prelude.lessThanInt','Cal.Core.Prelude.lessThanInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(691,'notEqualsInt','Cal.Core.Prelude.notEqualsInt','Cal.Core.Prelude.notEqualsInt',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(692,'equalsInt','Cal.Core.Prelude.equalsInt','Cal.Core.Prelude.equalsInt',NULL,'[CALDoc] equalsInt is used to define the instance method equals for derived Eq instances\nfor foreign types where the underlying Java type is the primitive type \"int\".\n','2008-04-20 18:16:30','2008-04-20 18:16:30'),(693,'False','Cal.Core.Prelude.False','Cal.Core.Prelude.False',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(694,'True','Cal.Core.Prelude.True','Cal.Core.Prelude.True',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(695,'Nil','Cal.Core.Prelude.Nil','Cal.Core.Prelude.Nil',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(696,'Cons','Cal.Core.Prelude.Cons','Cal.Core.Prelude.Cons',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(697,'Unit','Cal.Core.Prelude.Unit','Cal.Core.Prelude.Unit',NULL,'[CALDoc] ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(698,'Nothing','Cal.Core.Prelude.Nothing','Cal.Core.Prelude.Nothing',NULL,'[CALDoc] A data constructor which represents the fact that a value was not supplied.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(699,'Just','Cal.Core.Prelude.Just','Cal.Core.Prelude.Just',NULL,'[CALDoc] A data constructor which represents the fact that a value was supplied.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(700,'Left','Cal.Core.Prelude.Left','Cal.Core.Prelude.Left',NULL,'[CALDoc] A data constructor that represents a value of the first of two possible types.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(701,'Right','Cal.Core.Prelude.Right','Cal.Core.Prelude.Right',NULL,'[CALDoc] A data constructor that represents a value of the second of two possible types.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(702,'LT','Cal.Core.Prelude.LT','Cal.Core.Prelude.LT',NULL,'[CALDoc] A data constructor that represents the ordering relationship of \"less than\".','2008-04-20 18:16:30','2008-04-20 18:16:30'),(703,'EQ','Cal.Core.Prelude.EQ','Cal.Core.Prelude.EQ',NULL,'[CALDoc] A data constructor that represents the ordering relationship of \"equal to\".','2008-04-20 18:16:30','2008-04-20 18:16:30'),(704,'GT','Cal.Core.Prelude.GT','Cal.Core.Prelude.GT',NULL,'[CALDoc] A data constructor that represents the ordering relationship of \"greater than\".','2008-04-20 18:16:30','2008-04-20 18:16:30'),(705,'AlgebraicTypeRep','Cal.Core.Prelude.AlgebraicTypeRep','Cal.Core.Prelude.AlgebraicTypeRep',NULL,'[CALDoc] Used for algebraic type constructors not supported via special TypeRep data constructors.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(706,'ForeignTypeRep','Cal.Core.Prelude.ForeignTypeRep','Cal.Core.Prelude.ForeignTypeRep',NULL,'[CALDoc] Used for foreign types i.e. the implementation type is a Java object type or a Java primitive\ntype. ','2008-04-20 18:16:30','2008-04-20 18:16:30'),(707,'RecordTypeRep','Cal.Core.Prelude.RecordTypeRep','Cal.Core.Prelude.RecordTypeRep',NULL,'[CALDoc] Used for representing records.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(708,'FunctionTypeRep','Cal.Core.Prelude.FunctionTypeRep','Cal.Core.Prelude.FunctionTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Function</code> type constructor \"-&gt;\" when fully saturated.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(709,'ListTypeRep','Cal.Core.Prelude.ListTypeRep','Cal.Core.Prelude.ListTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.List</code> type constructor when fully saturated.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(710,'UnitTypeRep','Cal.Core.Prelude.UnitTypeRep','Cal.Core.Prelude.UnitTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Unit</code> type constructor.\nrepresentation of the <code>()</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(711,'BooleanTypeRep','Cal.Core.Prelude.BooleanTypeRep','Cal.Core.Prelude.BooleanTypeRep',NULL,'[CALDoc] Used for the <code>Boolean</code> type constructor.\nrepresentation of the <code>Boolean</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(712,'IntTypeRep','Cal.Core.Prelude.IntTypeRep','Cal.Core.Prelude.IntTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Int</code> type constructor.\nrepresentation of the <code>Int</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(713,'ByteTypeRep','Cal.Core.Prelude.ByteTypeRep','Cal.Core.Prelude.ByteTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Byte</code> type constructor.\nrepresentation of the <code>Byte</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(714,'ShortTypeRep','Cal.Core.Prelude.ShortTypeRep','Cal.Core.Prelude.ShortTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Short</code> type constructor.\nrepresentation of the <code>Short</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(715,'LongTypeRep','Cal.Core.Prelude.LongTypeRep','Cal.Core.Prelude.LongTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Long</code> type constructor.\nrepresentation of the <code>Long</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(716,'FloatTypeRep','Cal.Core.Prelude.FloatTypeRep','Cal.Core.Prelude.FloatTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Float</code> type constructor.\nrepresentation of the <code>Float</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(717,'DoubleTypeRep','Cal.Core.Prelude.DoubleTypeRep','Cal.Core.Prelude.DoubleTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Double</code> type constructor.\nrepresentation of the <code>Double</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(718,'CharTypeRep','Cal.Core.Prelude.CharTypeRep','Cal.Core.Prelude.CharTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.Char</code> type constructor.\nrepresentation of the <code>Char</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(719,'StringTypeRep','Cal.Core.Prelude.StringTypeRep','Cal.Core.Prelude.StringTypeRep',NULL,'[CALDoc] Used for the <code>Prelude.String</code> type constructor.\nrepresentation of the <code>String</code> type','2008-04-20 18:16:30','2008-04-20 18:16:30'),(720,'minBound','Cal.Core.Prelude.minBound','Cal.Core.Prelude.minBound',NULL,'[CALDoc] Returns: the minimum bound of the instance type.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(721,'maxBound','Cal.Core.Prelude.maxBound','Cal.Core.Prelude.maxBound',NULL,'[CALDoc] Returns: the maximum bound of the instance type.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(722,'equals','Cal.Core.Prelude.equals','Cal.Core.Prelude.equals',NULL,'[CALDoc] Returns whether the two arguments are equal.','2008-04-20 18:16:30','2008-04-20 18:16:30'),(723,'notEquals','Cal.Core.Prelude.notEquals','Cal.Core.Prelude.notEquals',NULL,'[CALDoc] Returns whether the two arguments not equal.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(724,'lessThan','Cal.Core.Prelude.lessThan','Cal.Core.Prelude.lessThan',NULL,'[CALDoc] Returns whether the first argument is less than the second argument.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(725,'lessThanEquals','Cal.Core.Prelude.lessThanEquals','Cal.Core.Prelude.lessThanEquals',NULL,'[CALDoc] Returns whether the first argument is less than or equal to the second argument.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(726,'greaterThanEquals','Cal.Core.Prelude.greaterThanEquals','Cal.Core.Prelude.greaterThanEquals',NULL,'[CALDoc] Returns whether the first argument is greater than or equal to the second argument.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(727,'greaterThan','Cal.Core.Prelude.greaterThan','Cal.Core.Prelude.greaterThan',NULL,'[CALDoc] Returns whether the first argument is greater than the second argument.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(728,'compare','Cal.Core.Prelude.compare','Cal.Core.Prelude.compare',NULL,'[CALDoc] Returns an <code>Ordering</code> based on how the first argument compares to the second argument.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(729,'max','Cal.Core.Prelude.max','Cal.Core.Prelude.max',NULL,'[CALDoc] Given the two arguments, returns the value that is the greater of the two.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(730,'min','Cal.Core.Prelude.min','Cal.Core.Prelude.min',NULL,'[CALDoc] Given the two arguments, returns the value that is the lesser of the two.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(731,'negate','Cal.Core.Prelude.negate','Cal.Core.Prelude.negate',NULL,'[CALDoc] Negates the given number.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(732,'add','Cal.Core.Prelude.add','Cal.Core.Prelude.add',NULL,'[CALDoc] Returns the sum of two numbers.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(733,'subtract','Cal.Core.Prelude.subtract','Cal.Core.Prelude.subtract',NULL,'[CALDoc] Returns the result of subtracting the second number from the first number.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(734,'multiply','Cal.Core.Prelude.multiply','Cal.Core.Prelude.multiply',NULL,'[CALDoc] Returns the product of two numbers.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(735,'divide','Cal.Core.Prelude.divide','Cal.Core.Prelude.divide',NULL,'[CALDoc] Returns the result of dividing the first number by the second number.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(736,'remainder','Cal.Core.Prelude.remainder','Cal.Core.Prelude.remainder',NULL,'[CALDoc] Returns the remainder from division.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(737,'abs','Cal.Core.Prelude.abs','Cal.Core.Prelude.abs',NULL,'[CALDoc] Returns the absolute value of the given number.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(738,'signum','Cal.Core.Prelude.signum','Cal.Core.Prelude.signum',NULL,'[CALDoc] Returns the sign of the given number.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(739,'fromByte','Cal.Core.Prelude.fromByte','Cal.Core.Prelude.fromByte',NULL,'[CALDoc] Converts a <code>Byte</code> value to the corresponding value in a type that is an instance of <code>Num</code>.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(740,'fromShort','Cal.Core.Prelude.fromShort','Cal.Core.Prelude.fromShort',NULL,'[CALDoc] Converts a <code>Short</code> value to the corresponding value in a type that is an instance of <code>Num</code>.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(741,'fromInt','Cal.Core.Prelude.fromInt','Cal.Core.Prelude.fromInt',NULL,'[CALDoc] Converts an <code>Int</code> value to the corresponding value in a type that is an instance of <code>Num</code>.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(742,'fromLong','Cal.Core.Prelude.fromLong','Cal.Core.Prelude.fromLong',NULL,'[CALDoc] Converts a <code>Long</code> value to the corresponding value in a type that is an instance of <code>Num</code>.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(743,'fromFloat','Cal.Core.Prelude.fromFloat','Cal.Core.Prelude.fromFloat',NULL,'[CALDoc] Converts a <code>Float</code> value to the corresponding value in a type that is an instance of <code>Num</code>.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(744,'fromDouble','Cal.Core.Prelude.fromDouble','Cal.Core.Prelude.fromDouble',NULL,'[CALDoc] Converts a <code>Double</code> value to the corresponding value in a type that is an instance of <code>Num</code>.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(745,'fromInteger','Cal.Core.Prelude.fromInteger','Cal.Core.Prelude.fromInteger',NULL,'[CALDoc] Converts an <code>Integer</code> value to a value of the instance type.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(746,'fromDecimal','Cal.Core.Prelude.fromDecimal','Cal.Core.Prelude.fromDecimal',NULL,'[CALDoc] Converts a <code>Decimal</code> value to a value of the instance type.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(747,'toByte','Cal.Core.Prelude.toByte','Cal.Core.Prelude.toByte',NULL,'[CALDoc] Converts a value of the instance type to a <code>Byte</code> value.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(748,'toShort','Cal.Core.Prelude.toShort','Cal.Core.Prelude.toShort',NULL,'[CALDoc] Converts a value of the instance type to a <code>Short</code> value.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(749,'toInt','Cal.Core.Prelude.toInt','Cal.Core.Prelude.toInt',NULL,'[CALDoc] Converts a value of the instance type to an <code>Int</code> value.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(750,'toLong','Cal.Core.Prelude.toLong','Cal.Core.Prelude.toLong',NULL,'[CALDoc] Converts a value of the instance type to a <code>Long</code> value.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(751,'toFloat','Cal.Core.Prelude.toFloat','Cal.Core.Prelude.toFloat',NULL,'[CALDoc] Converts a value of the instance type to a <code>Float</code> value.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(752,'toDouble','Cal.Core.Prelude.toDouble','Cal.Core.Prelude.toDouble',NULL,'[CALDoc] Converts a value of the instance type to a <code>Double</code> value.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(753,'toInteger','Cal.Core.Prelude.toInteger','Cal.Core.Prelude.toInteger',NULL,'[CALDoc] Converts a value of the instance type to an <code>Integer</code> value.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(754,'toDecimal','Cal.Core.Prelude.toDecimal','Cal.Core.Prelude.toDecimal',NULL,'[CALDoc] Converts a value of the instance type to a <code>Decimal</code> value.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(755,'empty','Cal.Core.Prelude.empty','Cal.Core.Prelude.empty',NULL,'[CALDoc] Returns the empty value of the instance type.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(756,'isEmpty','Cal.Core.Prelude.isEmpty','Cal.Core.Prelude.isEmpty',NULL,'[CALDoc] Returns whether the specified value is the empty value.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(757,'append','Cal.Core.Prelude.append','Cal.Core.Prelude.append',NULL,'[CALDoc] Returns the concatenation of the two values.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(758,'concat','Cal.Core.Prelude.concat','Cal.Core.Prelude.concat',NULL,'[CALDoc] Returns the concatenation of the values in the specified list.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(759,'input','Cal.Core.Prelude.input','Cal.Core.Prelude.input',NULL,'[CALDoc] Converts a Java value into a value of the instance type.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(760,'output','Cal.Core.Prelude.output','Cal.Core.Prelude.output',NULL,'[CALDoc] Converts a value of the instance type into a Java value.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(761,'typeOf','Cal.Core.Prelude.typeOf','Cal.Core.Prelude.typeOf',NULL,'[CALDoc] Returns the <code>TypeRep</code> value representing the type of the argument.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(762,'upFrom','Cal.Core.Prelude.upFrom','Cal.Core.Prelude.upFrom',NULL,'[CALDoc] For numeric types, <code>upFrom start creates</code> the list <code>[start, start + 1, start + 2, ...]</code>.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(763,'upFromThen','Cal.Core.Prelude.upFromThen','Cal.Core.Prelude.upFromThen',NULL,'[CALDoc] For numeric types, <code>upFromThen start next</code> creates the arithmetic sequence with first 2 terms <code>start</code> and\n<code>next</code>. and then following with that difference i.e.\n<code>[start, next, next + (next - start), next + 2*(next - start),...]</code>.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(764,'upFromTo','Cal.Core.Prelude.upFromTo','Cal.Core.Prelude.upFromTo',NULL,'[CALDoc] For numeric types, <code>upFromTo start end</code> creates the list <code>[start, start + 1, start + 2, ..., end]</code>.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(765,'upFromThenTo','Cal.Core.Prelude.upFromThenTo','Cal.Core.Prelude.upFromThenTo',NULL,'[CALDoc] For numeric types, <code>upFromThenTo start next edn</code>, creates the arithmetic sequence with first 2 terms <code>start</code>\nand <code>next</code>. and then following with that difference i.e.\n<code>[start, next, next + (next - start), next + 2*(next - start),..., end]</code>.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(766,'intToEnum','Cal.Core.Prelude.intToEnum','Cal.Core.Prelude.intToEnum',NULL,'[CALDoc] Converts an <code>Int</code> value to its corresponding value of type <code>IntEnum a =&gt; a</code>.\n','2008-04-20 18:16:31','2008-04-20 18:16:31'),(767,'intToEnumChecked','Cal.Core.Prelude.intToEnumChecked','Cal.Core.Prelude.intToEnumChecked',NULL,'[CALDoc] Converts an <code>Int</code> value to its corresponding value of type <code>IntEnum a =&gt; a</code>, if such a value exists,\nor returns <code>Nothing</code> if such a value does not exist.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(768,'enumToInt','Cal.Core.Prelude.enumToInt','Cal.Core.Prelude.enumToInt',NULL,'[CALDoc] Converts a value of type <code>IntEnum a =&gt; a</code> to its canonical underlying representation as an <code>Int</code>.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(769,'spanInclusiveExamples','Cal.Collections.Array.spanInclusiveExamples','Cal.Collections.Array.spanInclusiveExamples',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(770,'compressBytes','Cal.Collections.Array.compressBytes','Cal.Collections.Array.compressBytes',NULL,'[CALDoc] Returns a compressed version of a byte array.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(771,'isEmptyArray','Cal.Collections.Array.isEmptyArray','Cal.Collections.Array.isEmptyArray',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(772,'minArray','Cal.Collections.Array.minArray','Cal.Collections.Array.minArray',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(773,'coarbitraryArray','Cal.Collections.Array.coarbitraryArray','Cal.Collections.Array.coarbitraryArray',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(774,'replaceAllExamples','Cal.Collections.Array.replaceAllExamples','Cal.Collections.Array.replaceAllExamples',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(775,'replaceAll','Cal.Collections.Array.replaceAll','Cal.Collections.Array.replaceAll',NULL,'[CALDoc] Applies the predicate to each element and returns the array \nwhere every element for which the predicate evaluated to <code>True</code> is replaced by <code>replaceWithValue</code>.','2008-04-20 18:16:31','2008-04-20 18:16:31'),(776,'replaceAtExamples','Cal.Collections.Array.replaceAtExamples','Cal.Collections.Array.replaceAtExamples',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(777,'greaterThanEqualsArray','Cal.Collections.Array.greaterThanEqualsArray','Cal.Collections.Array.greaterThanEqualsArray',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(778,'greaterThanArray','Cal.Collections.Array.greaterThanArray','Cal.Collections.Array.greaterThanArray',NULL,'[CALDoc] ','2008-04-20 18:16:31','2008-04-20 18:16:31'),(779,'replaceAt','Cal.Collections.Array.replaceAt','Cal.Collections.Array.replaceAt',NULL,'[CALDoc] Returns the array with the value at a specified offset replaced by a specified value.\n','2008-04-20 18:16:32','2008-04-20 18:16:32'),(780,'arbitraryArray','Cal.Collections.Array.arbitraryArray','Cal.Collections.Array.arbitraryArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(781,'notEqualsArray','Cal.Collections.Array.notEqualsArray','Cal.Collections.Array.notEqualsArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(782,'appendArray','Cal.Collections.Array.appendArray','Cal.Collections.Array.appendArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(783,'spanExamples','Cal.Collections.Array.spanExamples','Cal.Collections.Array.spanExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(784,'spanInclusive','Cal.Collections.Array.spanInclusive','Cal.Collections.Array.spanInclusive',NULL,'[CALDoc] <code>spanInclusive predicate array</code> breaks up array into a pair of arrays. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(785,'maxArray','Cal.Collections.Array.maxArray','Cal.Collections.Array.maxArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(786,'showArray','Cal.Collections.Array.showArray','Cal.Collections.Array.showArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(787,'span','Cal.Collections.Array.span','Cal.Collections.Array.span',NULL,'[CALDoc] <code>span predicate array</code> breaks up <code>array</code> into a pair of arrays. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(788,'isElem','Cal.Collections.Array.isElem','Cal.Collections.Array.isElem',NULL,'[CALDoc] <code>isElem elementValue array</code> returns <code>True</code> if <code>elementValue</code> is an element of the array.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(789,'decompressBytes','Cal.Collections.Array.decompressBytes','Cal.Collections.Array.decompressBytes',NULL,'[CALDoc] Returns an uncompressed version of a compressed byte array.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(790,'breakExamples','Cal.Collections.Array.breakExamples','Cal.Collections.Array.breakExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(791,'break','Cal.Collections.Array.break','Cal.Collections.Array.break',NULL,'[CALDoc] <code>break predicate array</code> breaks up array into a pair of arrays. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(792,'foldLeft','Cal.Collections.Array.foldLeft','Cal.Collections.Array.foldLeft',NULL,'[CALDoc] <code>foldLeft foldFunction initialValue list</code> collapses or \'folds\' the array down to a single result, starting\nfrom the left of the array. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(793,'product','Cal.Collections.Array.product','Cal.Collections.Array.product',NULL,'[CALDoc] <code>product array</code> return the product of all the elements of <code>array</code>, multiplying from left to right.\n<code>product</code> applied to an empty array is 1.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(794,'lessThanArray','Cal.Collections.Array.lessThanArray','Cal.Collections.Array.lessThanArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(795,'outputArray','Cal.Collections.Array.outputArray','Cal.Collections.Array.outputArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(796,'foldLeftStrictAlt','Cal.Collections.Array.foldLeftStrictAlt','Cal.Collections.Array.foldLeftStrictAlt',NULL,'[CALDoc] WARNING- keep private, this is for explanation and benchmarking purposes only.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(797,'equalsArray','Cal.Collections.Array.equalsArray','Cal.Collections.Array.equalsArray',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(798,'testModule','Cal.Collections.Array.testModule','Cal.Collections.Array.testModule',NULL,'[CALDoc] Unit test for the <code>Array</code> module.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(799,'periodizeExamples','Cal.Collections.Array.periodizeExamples','Cal.Collections.Array.periodizeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(800,'periodize','Cal.Collections.Array.periodize','Cal.Collections.Array.periodize',NULL,'[CALDoc] Periodizes an array at the specified frequency, returning an array of arrays, one for each modulo of the frequency.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(801,'zipWith3Examples','Cal.Collections.Array.zipWith3Examples','Cal.Collections.Array.zipWith3Examples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(802,'zipWithExamples','Cal.Collections.Array.zipWithExamples','Cal.Collections.Array.zipWithExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(803,'zip4Examples','Cal.Collections.Array.zip4Examples','Cal.Collections.Array.zip4Examples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(804,'zip4','Cal.Collections.Array.zip4','Cal.Collections.Array.zip4',NULL,'[CALDoc] Converts four arrays into an array of corresponding 4-tuples.\n','2008-04-20 18:16:32','2008-04-20 18:16:32'),(805,'unzip4Examples','Cal.Collections.Array.unzip4Examples','Cal.Collections.Array.unzip4Examples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(806,'unzip4','Cal.Collections.Array.unzip4','Cal.Collections.Array.unzip4',NULL,'[CALDoc] Transforms an array of 4-tuples into a 4-tuple of arrays.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(807,'unzip3Examples','Cal.Collections.Array.unzip3Examples','Cal.Collections.Array.unzip3Examples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(808,'unzip3','Cal.Collections.Array.unzip3','Cal.Collections.Array.unzip3',NULL,'[CALDoc] Transforms an array of triples into a triple of arrays.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(809,'takeWhileExamples','Cal.Collections.Array.takeWhileExamples','Cal.Collections.Array.takeWhileExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(810,'toStringExamples','Cal.Collections.Array.toStringExamples','Cal.Collections.Array.toStringExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(811,'toString','Cal.Collections.Array.toString','Cal.Collections.Array.toString',NULL,'[CALDoc] Converts an <code>Array Char</code> to a <code>String</code>.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(812,'toListWithExamples','Cal.Collections.Array.toListWithExamples','Cal.Collections.Array.toListWithExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(813,'toListExamples','Cal.Collections.Array.toListExamples','Cal.Collections.Array.toListExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(814,'sumExamples','Cal.Collections.Array.sumExamples','Cal.Collections.Array.sumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(815,'sum','Cal.Collections.Array.sum','Cal.Collections.Array.sum',NULL,'[CALDoc] <code>sum array</code> returns the sum of all the elements of <code>array</code>, adding from left to right. <code>sum</code> applied\nto an empty array is 0.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(816,'subscriptExamples','Cal.Collections.Array.subscriptExamples','Cal.Collections.Array.subscriptExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(817,'startsWithExamples','Cal.Collections.Array.startsWithExamples','Cal.Collections.Array.startsWithExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(818,'startsWithByExamples','Cal.Collections.Array.startsWithByExamples','Cal.Collections.Array.startsWithByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(819,'sortExamples','Cal.Collections.Array.sortExamples','Cal.Collections.Array.sortExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(820,'sortPrimitive','Cal.Collections.Array.sortPrimitive','Cal.Collections.Array.sortPrimitive',NULL,'[CALDoc] Sorts the specified array. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(821,'sort','Cal.Collections.Array.sort','Cal.Collections.Array.sort',NULL,'[CALDoc] Sorts the specified array. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(822,'showArrayInstanceExamples','Cal.Collections.Array.showArrayInstanceExamples','Cal.Collections.Array.showArrayInstanceExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(823,'replicateArrayExamples','Cal.Collections.Array.replicateArrayExamples','Cal.Collections.Array.replicateArrayExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(824,'replicateArray','Cal.Collections.Array.replicateArray','Cal.Collections.Array.replicateArray',NULL,'[CALDoc] Replicates a array for a specified number of times.','2008-04-20 18:16:32','2008-04-20 18:16:32'),(825,'orArrayExamples','Cal.Collections.Array.orArrayExamples','Cal.Collections.Array.orArrayExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(826,'minimumExamples','Cal.Collections.Array.minimumExamples','Cal.Collections.Array.minimumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(827,'minimum','Cal.Collections.Array.minimum','Cal.Collections.Array.minimum',NULL,'[CALDoc] Returns the minimum value in the specified array.\n','2008-04-20 18:16:32','2008-04-20 18:16:32'),(828,'minimumByExamples','Cal.Collections.Array.minimumByExamples','Cal.Collections.Array.minimumByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(829,'minimumBy','Cal.Collections.Array.minimumBy','Cal.Collections.Array.minimumBy',NULL,'[CALDoc] This function takes a comparison function and a array and returns the least\nelement of the array by the comparison function. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(830,'maximumExamples','Cal.Collections.Array.maximumExamples','Cal.Collections.Array.maximumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(831,'maximum','Cal.Collections.Array.maximum','Cal.Collections.Array.maximum',NULL,'[CALDoc] Returns the maximum value in the specified array.\n','2008-04-20 18:16:32','2008-04-20 18:16:32'),(832,'maximumByExamples','Cal.Collections.Array.maximumByExamples','Cal.Collections.Array.maximumByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(833,'maximumBy','Cal.Collections.Array.maximumBy','Cal.Collections.Array.maximumBy',NULL,'[CALDoc] This function takes a comparison function and a array and returns the greatest\nelement of the array by the comparison function. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(834,'foldLeft1Strict','Cal.Collections.Array.foldLeft1Strict','Cal.Collections.Array.foldLeft1Strict',NULL,'[CALDoc] <code>foldLeft1Strict</code> is similar to <code>foldLeftStrict</code>, except that it uses the first element of the array as\nthe initial value in the folding process. ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(835,'mapIndexedExamples','Cal.Collections.Array.mapIndexedExamples','Cal.Collections.Array.mapIndexedExamples',NULL,'[CALDoc] ','2008-04-20 18:16:32','2008-04-20 18:16:32'),(836,'mapIndexed','Cal.Collections.Array.mapIndexed','Cal.Collections.Array.mapIndexed',NULL,'[CALDoc] <code>mapIndexed mapFunction array</code> applies the function <code>mapFunction</code> to each element of the array, where\n<code>mapFunction</code> is passed both the element value, and its zero-based index in the array.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(837,'makeArrayFromIndicesExamples','Cal.Collections.Array.makeArrayFromIndicesExamples','Cal.Collections.Array.makeArrayFromIndicesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(838,'lastIndexOfExamples','Cal.Collections.Array.lastIndexOfExamples','Cal.Collections.Array.lastIndexOfExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(839,'lastIndexOf','Cal.Collections.Array.lastIndexOf','Cal.Collections.Array.lastIndexOf',NULL,'[CALDoc] Finds the index of the last occurrence of <code>valueToFind</code> in <code>array</code> or -1 if the value does not occur.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(840,'insertByExamples','Cal.Collections.Array.insertByExamples','Cal.Collections.Array.insertByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(841,'insertArrayAtExamples','Cal.Collections.Array.insertArrayAtExamples','Cal.Collections.Array.insertArrayAtExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(842,'inputArrayExamples','Cal.Collections.Array.inputArrayExamples','Cal.Collections.Array.inputArrayExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(843,'fromStringExamples','Cal.Collections.Array.fromStringExamples','Cal.Collections.Array.fromStringExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(844,'fromListWithExamples','Cal.Collections.Array.fromListWithExamples','Cal.Collections.Array.fromListWithExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(845,'fromListWith','Cal.Collections.Array.fromListWith','Cal.Collections.Array.fromListWith',NULL,'[CALDoc] Builds an array from a list with the help of an element conversion function <code>f</code>.\n','2008-04-20 18:16:33','2008-04-20 18:16:33'),(846,'fromListWithInternal','Cal.Collections.Array.fromListWithInternal','Cal.Collections.Array.fromListWithInternal',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(847,'foldRightExamples','Cal.Collections.Array.foldRightExamples','Cal.Collections.Array.foldRightExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(848,'foldRight','Cal.Collections.Array.foldRight','Cal.Collections.Array.foldRight',NULL,'[CALDoc] Similar to <code>foldLeft</code>, except that the folding process on the array is started with its rightmost element.\n','2008-04-20 18:16:33','2008-04-20 18:16:33'),(849,'findIndexExamples','Cal.Collections.Array.findIndexExamples','Cal.Collections.Array.findIndexExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(850,'filterExamples','Cal.Collections.Array.filterExamples','Cal.Collections.Array.filterExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(851,'comparePrimitiveExamples','Cal.Collections.Array.comparePrimitiveExamples','Cal.Collections.Array.comparePrimitiveExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(852,'elemIndexExamples','Cal.Collections.Array.elemIndexExamples','Cal.Collections.Array.elemIndexExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(853,'elemIndex','Cal.Collections.Array.elemIndex','Cal.Collections.Array.elemIndex',NULL,'[CALDoc] Returns the index of the first element in the given array which is equal to\nthe specified value, or <code>Nothing</code> if there is no such element.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(854,'indexOf','Cal.Collections.Array.indexOf','Cal.Collections.Array.indexOf',NULL,'[CALDoc] Finds the index of the first occurrence of <code>valueToFind</code> in <code>array</code> or -1 if the value does not occur.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(855,'dropWhileExamples','Cal.Collections.Array.dropWhileExamples','Cal.Collections.Array.dropWhileExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(856,'dropExamples','Cal.Collections.Array.dropExamples','Cal.Collections.Array.dropExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(857,'deleteByExamples','Cal.Collections.Array.deleteByExamples','Cal.Collections.Array.deleteByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(858,'deleteExamples','Cal.Collections.Array.deleteExamples','Cal.Collections.Array.deleteExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(859,'deleteAtExamples','Cal.Collections.Array.deleteAtExamples','Cal.Collections.Array.deleteAtExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(860,'concatArrayExamples','Cal.Collections.Array.concatArrayExamples','Cal.Collections.Array.concatArrayExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(861,'binarySearchByExamples','Cal.Collections.Array.binarySearchByExamples','Cal.Collections.Array.binarySearchByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(862,'appendExamples','Cal.Collections.Array.appendExamples','Cal.Collections.Array.appendExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(863,'array7','Cal.Collections.Array.array7','Cal.Collections.Array.array7',NULL,'[CALDoc] Constructs an array of seven items.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(864,'array7Internal','Cal.Collections.Array.array7Internal','Cal.Collections.Array.array7Internal',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(865,'array5','Cal.Collections.Array.array5','Cal.Collections.Array.array5',NULL,'[CALDoc] Constructs an array of five items.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(866,'anyExamples','Cal.Collections.Array.anyExamples','Cal.Collections.Array.anyExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(867,'andArrayExamples','Cal.Collections.Array.andArrayExamples','Cal.Collections.Array.andArrayExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(868,'alternateExamples','Cal.Collections.Array.alternateExamples','Cal.Collections.Array.alternateExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(869,'alternate','Cal.Collections.Array.alternate','Cal.Collections.Array.alternate',NULL,'[CALDoc] Alternate items from the 2 arrays.\n','2008-04-20 18:16:33','2008-04-20 18:16:33'),(870,'allExamples','Cal.Collections.Array.allExamples','Cal.Collections.Array.allExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(871,'replicate','Cal.Collections.Array.replicate','Cal.Collections.Array.replicate',NULL,'[CALDoc] <code>replicate nCopies valueToReplicate</code> is an array of length <code>nCopies</code>, with every element equal to\n<code>valueToReplicate</code>.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(872,'lengthExamples','Cal.Collections.Array.lengthExamples','Cal.Collections.Array.lengthExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(873,'array5Internal','Cal.Collections.Array.array5Internal','Cal.Collections.Array.array5Internal',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(874,'updateAtExamples','Cal.Collections.Array.updateAtExamples','Cal.Collections.Array.updateAtExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(875,'takeExamples','Cal.Collections.Array.takeExamples','Cal.Collections.Array.takeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(876,'zipExamples','Cal.Collections.Array.zipExamples','Cal.Collections.Array.zipExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(877,'isElemByExamples','Cal.Collections.Array.isElemByExamples','Cal.Collections.Array.isElemByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(878,'binarySearchExamples','Cal.Collections.Array.binarySearchExamples','Cal.Collections.Array.binarySearchExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(879,'concatExamples','Cal.Collections.Array.concatExamples','Cal.Collections.Array.concatExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(880,'array0','Cal.Collections.Array.array0','Cal.Collections.Array.array0',NULL,'[CALDoc] Constructs an empty array.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(881,'concat','Cal.Collections.Array.concat','Cal.Collections.Array.concat',NULL,'[CALDoc] An Array version of the regular <code>concat</code> function','2008-04-20 18:16:33','2008-04-20 18:16:33'),(882,'inputPrimitiveExamples','Cal.Collections.Array.inputPrimitiveExamples','Cal.Collections.Array.inputPrimitiveExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(883,'outputPrimitive','Cal.Collections.Array.outputPrimitive','Cal.Collections.Array.outputPrimitive',NULL,'[CALDoc] Outputs the given array to a Java array.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(884,'outputArrayToJObjectArray','Cal.Collections.Array.outputArrayToJObjectArray','Cal.Collections.Array.outputArrayToJObjectArray',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(885,'inputPrimitive','Cal.Collections.Array.inputPrimitive','Cal.Collections.Array.inputPrimitive',NULL,'[CALDoc] Inputs an array from a Java array.','2008-04-20 18:16:33','2008-04-20 18:16:33'),(886,'equalsPrimitiveExamples','Cal.Collections.Array.equalsPrimitiveExamples','Cal.Collections.Array.equalsPrimitiveExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(887,'toListWith','Cal.Collections.Array.toListWith','Cal.Collections.Array.toListWith',NULL,'[CALDoc] Converts an array to a list with the help of an element conversion function <code>f</code>','2008-04-20 18:16:33','2008-04-20 18:16:33'),(888,'insertExamples','Cal.Collections.Array.insertExamples','Cal.Collections.Array.insertExamples',NULL,'[CALDoc] ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(889,'insert','Cal.Collections.Array.insert','Cal.Collections.Array.insert',NULL,'[CALDoc] This function takes an element and an array and inserts the element into the\narray at the last position where it is still less than or equal to the next\nelement. ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(890,'insertBy','Cal.Collections.Array.insertBy','Cal.Collections.Array.insertBy',NULL,'[CALDoc] This function takes an element and an array and inserts the element into the\narray at the last position where it is still less than or equal to the next\nelement. ','2008-04-20 18:16:33','2008-04-20 18:16:33'),(891,'deleteRangeExamples','Cal.Collections.Array.deleteRangeExamples','Cal.Collections.Array.deleteRangeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(892,'zip','Cal.Collections.Array.zip','Cal.Collections.Array.zip',NULL,'[CALDoc] Converts two arrays into an array of corresponding pairs.\n','2008-04-20 18:16:34','2008-04-20 18:16:34'),(893,'inputArrayFromJObjectArray','Cal.Collections.Array.inputArrayFromJObjectArray','Cal.Collections.Array.inputArrayFromJObjectArray',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(894,'inputArray','Cal.Collections.Array.inputArray','Cal.Collections.Array.inputArray',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(895,'updateAt','Cal.Collections.Array.updateAt','Cal.Collections.Array.updateAt',NULL,'[CALDoc] Updates an array at a specified index with a new element value. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(896,'lessThanEqualsArray','Cal.Collections.Array.lessThanEqualsArray','Cal.Collections.Array.lessThanEqualsArray',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(897,'compareArray','Cal.Collections.Array.compareArray','Cal.Collections.Array.compareArray',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(898,'mergeExamples','Cal.Collections.Array.mergeExamples','Cal.Collections.Array.mergeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(899,'merge','Cal.Collections.Array.merge','Cal.Collections.Array.merge',NULL,'[CALDoc] Assuming that <code>array1</code> and <code>array2</code> are sorted, <code>merge array1 array2</code> will merge all\nthe elements of the two arrays into a single sorted array. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(900,'orArray','Cal.Collections.Array.orArray','Cal.Collections.Array.orArray',NULL,'[CALDoc] <code>orArray array</code> returns <code>True</code> if at least one element of the array is <code>True</code>.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(901,'zipWith4Examples','Cal.Collections.Array.zipWith4Examples','Cal.Collections.Array.zipWith4Examples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(902,'zipWith4','Cal.Collections.Array.zipWith4','Cal.Collections.Array.zipWith4',NULL,'[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of four arrays.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(903,'lastExamples','Cal.Collections.Array.lastExamples','Cal.Collections.Array.lastExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(904,'isElemBy','Cal.Collections.Array.isElemBy','Cal.Collections.Array.isElemBy',NULL,'[CALDoc] Returns whether a value is an element of an array, according to the specified equality comparison function.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(905,'findExamples','Cal.Collections.Array.findExamples','Cal.Collections.Array.findExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(906,'find','Cal.Collections.Array.find','Cal.Collections.Array.find',NULL,'[CALDoc] <code>find predicate array</code> returns the first value of array for which the predicate function is <code>True</code>,\nif there is one, or <code>Nothing</code> otherwise.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(907,'reverse','Cal.Collections.Array.reverse','Cal.Collections.Array.reverse',NULL,'[CALDoc] Reverses the elements of an array. <code>reverse</code> is O(n) time where n is the length of the array.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(908,'filterIndexedExamples','Cal.Collections.Array.filterIndexedExamples','Cal.Collections.Array.filterIndexedExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(909,'insertAt','Cal.Collections.Array.insertAt','Cal.Collections.Array.insertAt',NULL,'[CALDoc] Inserts a value into a array at the specified index.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(910,'foldLeft1','Cal.Collections.Array.foldLeft1','Cal.Collections.Array.foldLeft1',NULL,'[CALDoc] <code>foldLeft1</code> is similar to <code>foldLeft</code>, except that it uses the first element of the array as the initial value\nin the folding process. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(911,'sortByExamples','Cal.Collections.Array.sortByExamples','Cal.Collections.Array.sortByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(912,'sortBy','Cal.Collections.Array.sortBy','Cal.Collections.Array.sortBy',NULL,'[CALDoc] Sorts the specified array according to the specified comparison function. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(913,'makeArrayFromCalValues','Cal.Collections.Array.makeArrayFromCalValues','Cal.Collections.Array.makeArrayFromCalValues',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(914,'internalArrayValues','Cal.Collections.Array.internalArrayValues','Cal.Collections.Array.internalArrayValues',NULL,'[CALDoc] Exposes the values array held onto by each object as a Java array of CAL values. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(915,'zipWith','Cal.Collections.Array.zipWith','Cal.Collections.Array.zipWith',NULL,'[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of two arrays.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(916,'eqArrayInstanceExamples','Cal.Collections.Array.eqArrayInstanceExamples','Cal.Collections.Array.eqArrayInstanceExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(917,'any','Cal.Collections.Array.any','Cal.Collections.Array.any',NULL,'[CALDoc] <code>any predicate array</code> returns <code>True</code> if the predicate function evaluates to <code>True</code> on at least\none element of the array.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(918,'dropWhile','Cal.Collections.Array.dropWhile','Cal.Collections.Array.dropWhile',NULL,'[CALDoc] <code>dropWhile dropWhileTrueFunction list</code> drops the longest prefix of the array for which <code>dropWhileTrueFunction</code>\nis <code>True</code> for each element.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(919,'drop','Cal.Collections.Array.drop','Cal.Collections.Array.drop',NULL,'[CALDoc] <code>drop nElements array</code> drops the first <code>nElements</code> elements of the array and returns the remaining elements','2008-04-20 18:16:34','2008-04-20 18:16:34'),(920,'indexOfFrom','Cal.Collections.Array.indexOfFrom','Cal.Collections.Array.indexOfFrom',NULL,'[CALDoc] Finds the index of the first occurrence at index greater than or equal to <code>fromIndex</code> of <code>valueToFind</code> in <code>array</code>\nor -1 if the value does not occur from <code>fromIndex</code> onwards.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(921,'last','Cal.Collections.Array.last','Cal.Collections.Array.last',NULL,'[CALDoc] Returns the last element of the specified array. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(922,'chopExamples','Cal.Collections.Array.chopExamples','Cal.Collections.Array.chopExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(923,'chop','Cal.Collections.Array.chop','Cal.Collections.Array.chop',NULL,'[CALDoc] Chops up an Array into equals subarrays of length <code>chopLength</code>.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(924,'makeArrayFromIndices','Cal.Collections.Array.makeArrayFromIndices','Cal.Collections.Array.makeArrayFromIndices',NULL,'[CALDoc] Creates an <code>Array</code> calling a function for each of the indices in the resultant array','2008-04-20 18:16:34','2008-04-20 18:16:34'),(925,'zipWith3','Cal.Collections.Array.zipWith3','Cal.Collections.Array.zipWith3',NULL,'[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of three arrays.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(926,'startsWith','Cal.Collections.Array.startsWith','Cal.Collections.Array.startsWith',NULL,'[CALDoc] Returns whether <code>arrayToTest</code> starts with the specified prefix.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(927,'startsWithBy','Cal.Collections.Array.startsWithBy','Cal.Collections.Array.startsWithBy',NULL,'[CALDoc] Returns whether <code>arrayToTest</code> starts with the specified prefix using <code>eq</code> as the notion of equality between \nelements of the prefix and elements of the arrayToTest.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(928,'findIndex','Cal.Collections.Array.findIndex','Cal.Collections.Array.findIndex',NULL,'[CALDoc] <code>findIndex predicate array</code> returns the first index of array for which the predicate function is <code>True</code>,\nif there is one, or <code>Nothing</code> otherwise. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(929,'comparePrimitive','Cal.Collections.Array.comparePrimitive','Cal.Collections.Array.comparePrimitive',NULL,'[CALDoc] Returns an <code>Ordering</code> based on how the first array compares to the second array.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(930,'EmptyArray','Cal.Collections.Array.EmptyArray','Cal.Collections.Array.EmptyArray',NULL,'[CALDoc] Used for an empty array.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(931,'mergeByExamples','Cal.Collections.Array.mergeByExamples','Cal.Collections.Array.mergeByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(932,'mergeBy','Cal.Collections.Array.mergeBy','Cal.Collections.Array.mergeBy',NULL,'[CALDoc] Assuming that <code>array1</code> and <code>array2</code> are sorted according to <code>comparator</code>,\n<code>mergeBy comparator array1 array2</code> will merge all the elements of the two arrays into\na single array sorted according to <code>comparator</code>. ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(933,'nonEmptyArrayCopy','Cal.Collections.Array.nonEmptyArrayCopy','Cal.Collections.Array.nonEmptyArrayCopy',NULL,'[CALDoc] Performs the analogous functionality to <code>System.arraycopy</code> in Java.\n','2008-04-20 18:16:34','2008-04-20 18:16:34'),(934,'andArray','Cal.Collections.Array.andArray','Cal.Collections.Array.andArray',NULL,'[CALDoc] <code>andArray array</code> returns <code>True</code> if every element of the array is <code>True</code>.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(935,'intToMaybe','Cal.Collections.Array.intToMaybe','Cal.Collections.Array.intToMaybe',NULL,'[CALDoc] Converts a failure code of -1 into a <code>Nothing</code> value.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(936,'takeWhile','Cal.Collections.Array.takeWhile','Cal.Collections.Array.takeWhile',NULL,'[CALDoc] <code>takeWhile takeWhileTrueFunction array</code> returns the longest prefix of the array for which <code>takeWhileTrueFunction</code>\nis <code>True</code> for each element.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(937,'take','Cal.Collections.Array.take','Cal.Collections.Array.take',NULL,'[CALDoc] <code>take nElements array</code> returns an array consisting of the first <code>nElements</code> elements of <code>array</code>.\n','2008-04-20 18:16:34','2008-04-20 18:16:34'),(938,'filterIndexed','Cal.Collections.Array.filterIndexed','Cal.Collections.Array.filterIndexed',NULL,'[CALDoc] <code>filterIndexed keepIfTrueFunction array</code> applies the predicate function <code>keepIfTrueFunction</code> to each\nelement of the array, and returns the array of elements for which the predicate evaluates to <code>True</code>.\n<code>keepIfTrueFunction</code> is a function that is passed both the element value, and its zero-based index in the array.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(939,'mapExamples','Cal.Collections.Array.mapExamples','Cal.Collections.Array.mapExamples',NULL,'[CALDoc] ','2008-04-20 18:16:34','2008-04-20 18:16:34'),(940,'map','Cal.Collections.Array.map','Cal.Collections.Array.map',NULL,'[CALDoc] <code>map mapFunction array</code> applies the function <code>mapFunction</code> to each element of array and returns the\nresulting array.','2008-04-20 18:16:34','2008-04-20 18:16:34'),(941,'delete','Cal.Collections.Array.delete','Cal.Collections.Array.delete',NULL,'[CALDoc] <code>delete x array</code> returns the array with the first element equivalent to <code>x</code> removed.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(942,'deleteBy','Cal.Collections.Array.deleteBy','Cal.Collections.Array.deleteBy',NULL,'[CALDoc] <code>deleteBy eq element array</code> returns the array with the first element equivalent to <code>x</code> (under <code>eq</code>) removed.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(943,'deleteAt','Cal.Collections.Array.deleteAt','Cal.Collections.Array.deleteAt',NULL,'[CALDoc] Removes the array item at the specified index.\n','2008-04-20 18:16:35','2008-04-20 18:16:35'),(944,'deleteRange','Cal.Collections.Array.deleteRange','Cal.Collections.Array.deleteRange',NULL,'[CALDoc] Removes the array items at the specified range of indices.\n','2008-04-20 18:16:35','2008-04-20 18:16:35'),(945,'findIndicesExamples','Cal.Collections.Array.findIndicesExamples','Cal.Collections.Array.findIndicesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(946,'findIndices','Cal.Collections.Array.findIndices','Cal.Collections.Array.findIndices',NULL,'[CALDoc] Returns the indices of all elements satisfying the specified predicate, in ascending order. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(947,'fromString','Cal.Collections.Array.fromString','Cal.Collections.Array.fromString',NULL,'[CALDoc] Converts a <code>String</code> to an <code>Array Char</code>.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(948,'isNotElem','Cal.Collections.Array.isNotElem','Cal.Collections.Array.isNotElem',NULL,'[CALDoc] <code>isNotElem elementValue array</code> returns <code>True</code> if <code>elementValue</code> is not an element of the array.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(949,'all','Cal.Collections.Array.all','Cal.Collections.Array.all',NULL,'[CALDoc] <code>all predicate array</code> returns <code>True</code> if the predicate function evaluates to <code>True</code> on all the\nelements of the array (and the array is finite).','2008-04-20 18:16:35','2008-04-20 18:16:35'),(950,'filter','Cal.Collections.Array.filter','Cal.Collections.Array.filter',NULL,'[CALDoc] <code>filter keepIfTrueFunction array</code> applies the predicate function to each element of the array, and returns\nthe array of elements for which the predicate evaluates to <code>True</code>.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(951,'toList','Cal.Collections.Array.toList','Cal.Collections.Array.toList',NULL,'[CALDoc] Converts an array to a list.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(952,'zip3Examples','Cal.Collections.Array.zip3Examples','Cal.Collections.Array.zip3Examples',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(953,'zip3','Cal.Collections.Array.zip3','Cal.Collections.Array.zip3',NULL,'[CALDoc] Converts three arrays into an array of corresponding triples.\n','2008-04-20 18:16:35','2008-04-20 18:16:35'),(954,'binarySearchPrimitive','Cal.Collections.Array.binarySearchPrimitive','Cal.Collections.Array.binarySearchPrimitive',NULL,'[CALDoc] Searches the array for the specified value using the binary search algorithm. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(955,'equalsPrimitive','Cal.Collections.Array.equalsPrimitive','Cal.Collections.Array.equalsPrimitive',NULL,'[CALDoc] Returns whether the two arrays are equal.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(956,'typeableElementType_fromValue','Cal.Collections.Array.typeableElementType_fromValue','Cal.Collections.Array.typeableElementType_fromValue',NULL,'[CALDoc] It is important that this function does not touch the value argument.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(957,'typeableElementType_fromTypeRep','Cal.Collections.Array.typeableElementType_fromTypeRep','Cal.Collections.Array.typeableElementType_fromTypeRep',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(958,'foldLeftStrict','Cal.Collections.Array.foldLeftStrict','Cal.Collections.Array.foldLeftStrict',NULL,'[CALDoc] This is the strict version of <code>foldLeft</code>. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(959,'breakAfterExamples','Cal.Collections.Array.breakAfterExamples','Cal.Collections.Array.breakAfterExamples',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(960,'array6','Cal.Collections.Array.array6','Cal.Collections.Array.array6',NULL,'[CALDoc] Constructs an array of six items.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(961,'array6Internal','Cal.Collections.Array.array6Internal','Cal.Collections.Array.array6Internal',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(962,'breakAfter','Cal.Collections.Array.breakAfter','Cal.Collections.Array.breakAfter',NULL,'[CALDoc] <code>breakAfter predicate array</code> breaks up array into a pair of arrays. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(963,'indexOfBy','Cal.Collections.Array.indexOfBy','Cal.Collections.Array.indexOfBy',NULL,'[CALDoc] Returns: index of the first element for which predicate returns True, or\n-1 if predicate returns False for all elements','2008-04-20 18:16:35','2008-04-20 18:16:35'),(964,'splitAt','Cal.Collections.Array.splitAt','Cal.Collections.Array.splitAt',NULL,'[CALDoc] <code>splitAt nElemsToSplit list</code> returns a pair of arrays. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(965,'foldRight1Examples','Cal.Collections.Array.foldRight1Examples','Cal.Collections.Array.foldRight1Examples',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(966,'array1','Cal.Collections.Array.array1','Cal.Collections.Array.array1',NULL,'[CALDoc] Constructs an array of one item.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(967,'array1Internal','Cal.Collections.Array.array1Internal','Cal.Collections.Array.array1Internal',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(968,'array2','Cal.Collections.Array.array2','Cal.Collections.Array.array2',NULL,'[CALDoc] Constructs an array of two items.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(969,'array2Internal','Cal.Collections.Array.array2Internal','Cal.Collections.Array.array2Internal',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(970,'array3','Cal.Collections.Array.array3','Cal.Collections.Array.array3',NULL,'[CALDoc] Constructs an array of three items.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(971,'array3Internal','Cal.Collections.Array.array3Internal','Cal.Collections.Array.array3Internal',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(972,'array4','Cal.Collections.Array.array4','Cal.Collections.Array.array4',NULL,'[CALDoc] Constructs an array of four items.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(973,'array4Internal','Cal.Collections.Array.array4Internal','Cal.Collections.Array.array4Internal',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(974,'foldRight1','Cal.Collections.Array.foldRight1','Cal.Collections.Array.foldRight1',NULL,'[CALDoc] Similar to <code>foldLeft1</code>, except that the folding process on the array is started with its rightmost element.\n','2008-04-20 18:16:35','2008-04-20 18:16:35'),(975,'foldRightHelper','Cal.Collections.Array.foldRightHelper','Cal.Collections.Array.foldRightHelper',NULL,'[CALDoc] Helper function used in the implementation of <code>foldRight</code> and <code>foldRight1</code>','2008-04-20 18:16:35','2008-04-20 18:16:35'),(976,'unzipExamples','Cal.Collections.Array.unzipExamples','Cal.Collections.Array.unzipExamples',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(977,'unzip','Cal.Collections.Array.unzip','Cal.Collections.Array.unzip',NULL,'[CALDoc] Transforms an array of pairs into a pair of arrays.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(978,'elemIndicesExamples','Cal.Collections.Array.elemIndicesExamples','Cal.Collections.Array.elemIndicesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(979,'fromList','Cal.Collections.Array.fromList','Cal.Collections.Array.fromList',NULL,'[CALDoc] Builds an array from a list. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(980,'fromNonEmptyListInternal','Cal.Collections.Array.fromNonEmptyListInternal','Cal.Collections.Array.fromNonEmptyListInternal',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(981,'elemIndices','Cal.Collections.Array.elemIndices','Cal.Collections.Array.elemIndices',NULL,'[CALDoc] Returns the indices of all elements of the specified array equal to the\nspecified value, in ascending order.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(982,'update','Cal.Collections.Array.update','Cal.Collections.Array.update',NULL,'[CALDoc] Destructive array update function. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(983,'makeDefaultInternal','Cal.Collections.Array.makeDefaultInternal','Cal.Collections.Array.makeDefaultInternal',NULL,'[CALDoc] Creates a default array of the given size. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(984,'binarySearch','Cal.Collections.Array.binarySearch','Cal.Collections.Array.binarySearch',NULL,'[CALDoc] Searches the array for the specified value using the binary search algorithm. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(985,'binarySearchBy','Cal.Collections.Array.binarySearchBy','Cal.Collections.Array.binarySearchBy',NULL,'[CALDoc] Searches the array for the specified value using the binary search algorithm. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(986,'lastIndexOfFrom','Cal.Collections.Array.lastIndexOfFrom','Cal.Collections.Array.lastIndexOfFrom',NULL,'[CALDoc] Finds the index of the last occurrence at index less than or equal to <code>fromIndex</code> of <code>valueToFind</code>\nin <code>array</code> or -1 if the value does not occur from <code>fromIndex</code> and earlier.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(987,'insertArrayAt','Cal.Collections.Array.insertArrayAt','Cal.Collections.Array.insertArrayAt',NULL,'[CALDoc] Inserts values into a array at the specified index.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(988,'length','Cal.Collections.Array.length','Cal.Collections.Array.length',NULL,'[CALDoc] Returns the length of the specified array. ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(989,'subArray','Cal.Collections.Array.subArray','Cal.Collections.Array.subArray',NULL,'[CALDoc] Extracts a portion of the argument array as a new array.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(990,'concatArray','Cal.Collections.Array.concatArray','Cal.Collections.Array.concatArray',NULL,'[CALDoc] ','2008-04-20 18:16:35','2008-04-20 18:16:35'),(991,'elementType_fromNonEmptyArray','Cal.Collections.Array.elementType_fromNonEmptyArray','Cal.Collections.Array.elementType_fromNonEmptyArray',NULL,'[CALDoc] Returns the element type for the underlying value type of the first (internal) value in\na non-empty array.','2008-04-20 18:16:35','2008-04-20 18:16:35'),(992,'subscript','Cal.Collections.Array.subscript','Cal.Collections.Array.subscript',NULL,'[CALDoc] <code>subscript array index</code> returns the nth element of the array where n = <code>index</code>. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(993,'elementType_fromValue','Cal.Collections.Array.elementType_fromValue','Cal.Collections.Array.elementType_fromValue',NULL,'[CALDoc] Returns the element type for the underlying value type of an internal value.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(994,'concatNonEmptyArrayInternal','Cal.Collections.Array.concatNonEmptyArrayInternal','Cal.Collections.Array.concatNonEmptyArrayInternal',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(995,'nonEmptyArrayValues','Cal.Collections.Array.nonEmptyArrayValues','Cal.Collections.Array.nonEmptyArrayValues',NULL,'[CALDoc] Exposes the primitive array values held by the array argument. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(996,'jListToJObjectArray','Cal.Collections.Array.jListToJObjectArray','Cal.Collections.Array.jListToJObjectArray',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(997,'isJList','Cal.Collections.Array.isJList','Cal.Collections.Array.isJList',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(998,'system_arraycopy','Cal.Collections.Array.system_arraycopy','Cal.Collections.Array.system_arraycopy',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(999,'jGetElementType','Cal.Collections.Array.jGetElementType','Cal.Collections.Array.jGetElementType',NULL,'[CALDoc] Returns the integer representation of the enumeration value (of type <code>Array.ElementType</code>)\nfor the underlying value type of an internal value.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1000,'CharArray','Cal.Collections.Array.CharArray','Cal.Collections.Array.CharArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"char\"   \nsuch as the <code>Prelude.Char</code> type. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1001,'BooleanArray','Cal.Collections.Array.BooleanArray','Cal.Collections.Array.BooleanArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"boolean\".\n','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1002,'ByteArray','Cal.Collections.Array.ByteArray','Cal.Collections.Array.ByteArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"byte\"   \nsuch as the <code>Prelude.Byte</code> type. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1003,'ShortArray','Cal.Collections.Array.ShortArray','Cal.Collections.Array.ShortArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"short\"   \nsuch as the <code>Prelude.Short</code> type. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1004,'IntArray','Cal.Collections.Array.IntArray','Cal.Collections.Array.IntArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"int\"   \nsuch as the <code>Prelude.Int</code> type. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1005,'LongArray','Cal.Collections.Array.LongArray','Cal.Collections.Array.LongArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"short\"   \nsuch as the <code>Prelude.Short</code> type. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1006,'FloatArray','Cal.Collections.Array.FloatArray','Cal.Collections.Array.FloatArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"float\"   \nsuch as the <code>Prelude.Float</code> type. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1007,'DoubleArray','Cal.Collections.Array.DoubleArray','Cal.Collections.Array.DoubleArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"double\"   \nsuch as the <code>Prelude.Double</code> type. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1008,'ObjectArray','Cal.Collections.Array.ObjectArray','Cal.Collections.Array.ObjectArray',NULL,'[CALDoc] Used for arrays of values of CAL foreign reference types. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1009,'CalValueArray','Cal.Collections.Array.CalValueArray','Cal.Collections.Array.CalValueArray',NULL,'[CALDoc] Used for arrays of values of CAL types other than the ones above. ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1010,'CharType','Cal.Collections.Array.CharType','Cal.Collections.Array.CharType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1011,'BooleanType','Cal.Collections.Array.BooleanType','Cal.Collections.Array.BooleanType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1012,'ByteType','Cal.Collections.Array.ByteType','Cal.Collections.Array.ByteType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1013,'ShortType','Cal.Collections.Array.ShortType','Cal.Collections.Array.ShortType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1014,'IntType','Cal.Collections.Array.IntType','Cal.Collections.Array.IntType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1015,'LongType','Cal.Collections.Array.LongType','Cal.Collections.Array.LongType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1016,'FloatType','Cal.Collections.Array.FloatType','Cal.Collections.Array.FloatType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1017,'DoubleType','Cal.Collections.Array.DoubleType','Cal.Collections.Array.DoubleType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1018,'ObjectType','Cal.Collections.Array.ObjectType','Cal.Collections.Array.ObjectType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1019,'CalValueType','Cal.Collections.Array.CalValueType','Cal.Collections.Array.CalValueType',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1020,'booleanArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.booleanArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.booleanArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Boolean</code>s to a Java array of primitive Java booleans.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1021,'byteArray_toCalValueArray','Cal.Collections.ArrayPrimitives.byteArray_toCalValueArray','Cal.Collections.ArrayPrimitives.byteArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java bytes to a Java array of CAL <code>Byte</code>s.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1022,'floatArray_concat','Cal.Collections.ArrayPrimitives.floatArray_concat','Cal.Collections.ArrayPrimitives.floatArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1023,'longArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.longArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.longArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Long</code>s to a Java array of primitive Java longs.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1024,'doubleArray_concat','Cal.Collections.ArrayPrimitives.doubleArray_concat','Cal.Collections.ArrayPrimitives.doubleArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1025,'calValueArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.calValueArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.calValueArray_fromCalValueArray',NULL,'[CALDoc] Identity on the container Java array of CAL values.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1026,'calValueArray_isEmpty','Cal.Collections.ArrayPrimitives.calValueArray_isEmpty','Cal.Collections.ArrayPrimitives.calValueArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1027,'intArray_compare','Cal.Collections.ArrayPrimitives.intArray_compare','Cal.Collections.ArrayPrimitives.intArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1028,'intArray_toCalValueArray','Cal.Collections.ArrayPrimitives.intArray_toCalValueArray','Cal.Collections.ArrayPrimitives.intArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java ints to a Java array of CAL <code>Int</code>s.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1029,'shortArray_compare','Cal.Collections.ArrayPrimitives.shortArray_compare','Cal.Collections.ArrayPrimitives.shortArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1030,'charArray_isEmpty','Cal.Collections.ArrayPrimitives.charArray_isEmpty','Cal.Collections.ArrayPrimitives.charArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1031,'byteArray_concat','Cal.Collections.ArrayPrimitives.byteArray_concat','Cal.Collections.ArrayPrimitives.byteArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1032,'byteArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.byteArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.byteArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Byte</code>s to a Java array of primitive Java bytes.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1033,'charArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.charArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.charArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Char</code>s to a Java array of primitive Java chars.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1034,'floatArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.floatArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.floatArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Float</code>s to a Java array of primitive Java floats.','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1035,'booleanArray_isEmpty','Cal.Collections.ArrayPrimitives.booleanArray_isEmpty','Cal.Collections.ArrayPrimitives.booleanArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:36','2008-04-20 18:16:36'),(1036,'floatArray_compare','Cal.Collections.ArrayPrimitives.floatArray_compare','Cal.Collections.ArrayPrimitives.floatArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1037,'booleanArray_concat','Cal.Collections.ArrayPrimitives.booleanArray_concat','Cal.Collections.ArrayPrimitives.booleanArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1038,'doubleArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.doubleArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.doubleArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Double</code>s to a Java array of primitive Java doubles.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1039,'intArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.intArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.intArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Int</code>s to a Java array of primitive Java ints.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1040,'doubleArray_toCalValueArray','Cal.Collections.ArrayPrimitives.doubleArray_toCalValueArray','Cal.Collections.ArrayPrimitives.doubleArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java doubles to a Java array of CAL <code>Double</code>s.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1041,'longArray_toCalValueArray','Cal.Collections.ArrayPrimitives.longArray_toCalValueArray','Cal.Collections.ArrayPrimitives.longArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java longs to a Java array of CAL <code>Long</code>s.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1042,'intArray_isEmpty','Cal.Collections.ArrayPrimitives.intArray_isEmpty','Cal.Collections.ArrayPrimitives.intArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1043,'emptyArray_subscript','Cal.Collections.ArrayPrimitives.emptyArray_subscript','Cal.Collections.ArrayPrimitives.emptyArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1044,'objectArray_isEmpty','Cal.Collections.ArrayPrimitives.objectArray_isEmpty','Cal.Collections.ArrayPrimitives.objectArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1045,'objectArray_concat','Cal.Collections.ArrayPrimitives.objectArray_concat','Cal.Collections.ArrayPrimitives.objectArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1046,'charArray_concat','Cal.Collections.ArrayPrimitives.charArray_concat','Cal.Collections.ArrayPrimitives.charArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1047,'doubleArray_isEmpty','Cal.Collections.ArrayPrimitives.doubleArray_isEmpty','Cal.Collections.ArrayPrimitives.doubleArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1048,'intArray_concat','Cal.Collections.ArrayPrimitives.intArray_concat','Cal.Collections.ArrayPrimitives.intArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1049,'longArray_isEmpty','Cal.Collections.ArrayPrimitives.longArray_isEmpty','Cal.Collections.ArrayPrimitives.longArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1050,'byteArray_compare','Cal.Collections.ArrayPrimitives.byteArray_compare','Cal.Collections.ArrayPrimitives.byteArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1051,'longArray_compare','Cal.Collections.ArrayPrimitives.longArray_compare','Cal.Collections.ArrayPrimitives.longArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1052,'charArray_compare','Cal.Collections.ArrayPrimitives.charArray_compare','Cal.Collections.ArrayPrimitives.charArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1053,'floatArray_toCalValueArray','Cal.Collections.ArrayPrimitives.floatArray_toCalValueArray','Cal.Collections.ArrayPrimitives.floatArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java floats to a Java array of CAL <code>Float</code>s.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1054,'doubleArray_compare','Cal.Collections.ArrayPrimitives.doubleArray_compare','Cal.Collections.ArrayPrimitives.doubleArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1055,'charArray_toCalValueArray','Cal.Collections.ArrayPrimitives.charArray_toCalValueArray','Cal.Collections.ArrayPrimitives.charArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java chars to a Java array of CAL <code>Char</code>s.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1056,'longArray_concat','Cal.Collections.ArrayPrimitives.longArray_concat','Cal.Collections.ArrayPrimitives.longArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1057,'floatArray_isEmpty','Cal.Collections.ArrayPrimitives.floatArray_isEmpty','Cal.Collections.ArrayPrimitives.floatArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1058,'objectArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.objectArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.objectArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL Objects to a Java array of primitive Java Objects.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1059,'shortArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.shortArray_fromCalValueArray','Cal.Collections.ArrayPrimitives.shortArray_fromCalValueArray',NULL,'[CALDoc] Converts a Java array of CAL <code>Short</code>s to a Java array of primitive Java shorts.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1060,'shortArray_concat','Cal.Collections.ArrayPrimitives.shortArray_concat','Cal.Collections.ArrayPrimitives.shortArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1061,'byteArray_isEmpty','Cal.Collections.ArrayPrimitives.byteArray_isEmpty','Cal.Collections.ArrayPrimitives.byteArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1062,'calValueArray_concat','Cal.Collections.ArrayPrimitives.calValueArray_concat','Cal.Collections.ArrayPrimitives.calValueArray_concat',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1063,'objectArray_toCalValueArray','Cal.Collections.ArrayPrimitives.objectArray_toCalValueArray','Cal.Collections.ArrayPrimitives.objectArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java Objects to a Java array of CAL Objects.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1064,'emptyArray_update','Cal.Collections.ArrayPrimitives.emptyArray_update','Cal.Collections.ArrayPrimitives.emptyArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1065,'booleanArray_compare','Cal.Collections.ArrayPrimitives.booleanArray_compare','Cal.Collections.ArrayPrimitives.booleanArray_compare',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1066,'signumIntToOrdering','Cal.Collections.ArrayPrimitives.signumIntToOrdering','Cal.Collections.ArrayPrimitives.signumIntToOrdering',NULL,'[CALDoc] similar to <code>Prelude.intToOrdering</code> but only handles the intValues -1, 0, 1. ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1067,'shortArray_isEmpty','Cal.Collections.ArrayPrimitives.shortArray_isEmpty','Cal.Collections.ArrayPrimitives.shortArray_isEmpty',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1068,'shortArray_toCalValueArray','Cal.Collections.ArrayPrimitives.shortArray_toCalValueArray','Cal.Collections.ArrayPrimitives.shortArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java shorts to a Java array of CAL <code>Short</code>s.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1069,'booleanArray_toCalValueArray','Cal.Collections.ArrayPrimitives.booleanArray_toCalValueArray','Cal.Collections.ArrayPrimitives.booleanArray_toCalValueArray',NULL,'[CALDoc] Converts a Java array of primitive Java booleans to a Java array of CAL <code>Boolean</code>s.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1070,'calValueArray_toCalValueArray','Cal.Collections.ArrayPrimitives.calValueArray_toCalValueArray','Cal.Collections.ArrayPrimitives.calValueArray_toCalValueArray',NULL,'[CALDoc] copies the container Java array of CAL values.','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1071,'calValueArray_replicate','Cal.Collections.ArrayPrimitives.calValueArray_replicate','Cal.Collections.ArrayPrimitives.calValueArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1072,'calValueArray_removeRange','Cal.Collections.ArrayPrimitives.calValueArray_removeRange','Cal.Collections.ArrayPrimitives.calValueArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1073,'calValueArray_subArray','Cal.Collections.ArrayPrimitives.calValueArray_subArray','Cal.Collections.ArrayPrimitives.calValueArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1074,'calValueArray_reverse','Cal.Collections.ArrayPrimitives.calValueArray_reverse','Cal.Collections.ArrayPrimitives.calValueArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1075,'calValueArray_concatList','Cal.Collections.ArrayPrimitives.calValueArray_concatList','Cal.Collections.ArrayPrimitives.calValueArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1076,'calValueArray_append','Cal.Collections.ArrayPrimitives.calValueArray_append','Cal.Collections.ArrayPrimitives.calValueArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1077,'calValueArray_arrayToList','Cal.Collections.ArrayPrimitives.calValueArray_arrayToList','Cal.Collections.ArrayPrimitives.calValueArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1078,'calValueArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.calValueArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.calValueArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1079,'calValueArray_listToArray','Cal.Collections.ArrayPrimitives.calValueArray_listToArray','Cal.Collections.ArrayPrimitives.calValueArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1080,'calValueArray_update','Cal.Collections.ArrayPrimitives.calValueArray_update','Cal.Collections.ArrayPrimitives.calValueArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1081,'calValueArray_subscript','Cal.Collections.ArrayPrimitives.calValueArray_subscript','Cal.Collections.ArrayPrimitives.calValueArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1082,'calValueArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.calValueArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.calValueArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1083,'calValueArray_length','Cal.Collections.ArrayPrimitives.calValueArray_length','Cal.Collections.ArrayPrimitives.calValueArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:37','2008-04-20 18:16:37'),(1084,'calValueArray_array7','Cal.Collections.ArrayPrimitives.calValueArray_array7','Cal.Collections.ArrayPrimitives.calValueArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1085,'calValueArray_array6','Cal.Collections.ArrayPrimitives.calValueArray_array6','Cal.Collections.ArrayPrimitives.calValueArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1086,'calValueArray_array5','Cal.Collections.ArrayPrimitives.calValueArray_array5','Cal.Collections.ArrayPrimitives.calValueArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1087,'calValueArray_array4','Cal.Collections.ArrayPrimitives.calValueArray_array4','Cal.Collections.ArrayPrimitives.calValueArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1088,'calValueArray_array3','Cal.Collections.ArrayPrimitives.calValueArray_array3','Cal.Collections.ArrayPrimitives.calValueArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1089,'calValueArray_array2','Cal.Collections.ArrayPrimitives.calValueArray_array2','Cal.Collections.ArrayPrimitives.calValueArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1090,'calValueArray_array1','Cal.Collections.ArrayPrimitives.calValueArray_array1','Cal.Collections.ArrayPrimitives.calValueArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1091,'calValueArray_makeDefault','Cal.Collections.ArrayPrimitives.calValueArray_makeDefault','Cal.Collections.ArrayPrimitives.calValueArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1092,'calValueArray_empty','Cal.Collections.ArrayPrimitives.calValueArray_empty','Cal.Collections.ArrayPrimitives.calValueArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1093,'calValueArray_toShowString','Cal.Collections.ArrayPrimitives.calValueArray_toShowString','Cal.Collections.ArrayPrimitives.calValueArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1094,'objectArray_sort','Cal.Collections.ArrayPrimitives.objectArray_sort','Cal.Collections.ArrayPrimitives.objectArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1095,'objectArray_replicate','Cal.Collections.ArrayPrimitives.objectArray_replicate','Cal.Collections.ArrayPrimitives.objectArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1096,'objectArray_removeRange','Cal.Collections.ArrayPrimitives.objectArray_removeRange','Cal.Collections.ArrayPrimitives.objectArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1097,'objectArray_subArray','Cal.Collections.ArrayPrimitives.objectArray_subArray','Cal.Collections.ArrayPrimitives.objectArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1098,'objectArray_reverse','Cal.Collections.ArrayPrimitives.objectArray_reverse','Cal.Collections.ArrayPrimitives.objectArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1099,'objectArray_concatList','Cal.Collections.ArrayPrimitives.objectArray_concatList','Cal.Collections.ArrayPrimitives.objectArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1100,'objectArray_append','Cal.Collections.ArrayPrimitives.objectArray_append','Cal.Collections.ArrayPrimitives.objectArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1101,'objectArray_arrayToList','Cal.Collections.ArrayPrimitives.objectArray_arrayToList','Cal.Collections.ArrayPrimitives.objectArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1102,'objectArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.objectArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.objectArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1103,'objectArray_listToArray','Cal.Collections.ArrayPrimitives.objectArray_listToArray','Cal.Collections.ArrayPrimitives.objectArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1104,'objectArray_update','Cal.Collections.ArrayPrimitives.objectArray_update','Cal.Collections.ArrayPrimitives.objectArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1105,'objectArray_subscript','Cal.Collections.ArrayPrimitives.objectArray_subscript','Cal.Collections.ArrayPrimitives.objectArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1106,'objectArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.objectArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.objectArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1107,'objectArray_length','Cal.Collections.ArrayPrimitives.objectArray_length','Cal.Collections.ArrayPrimitives.objectArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1108,'objectArray_array7','Cal.Collections.ArrayPrimitives.objectArray_array7','Cal.Collections.ArrayPrimitives.objectArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1109,'objectArray_array6','Cal.Collections.ArrayPrimitives.objectArray_array6','Cal.Collections.ArrayPrimitives.objectArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1110,'objectArray_array5','Cal.Collections.ArrayPrimitives.objectArray_array5','Cal.Collections.ArrayPrimitives.objectArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1111,'objectArray_array4','Cal.Collections.ArrayPrimitives.objectArray_array4','Cal.Collections.ArrayPrimitives.objectArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1112,'objectArray_array3','Cal.Collections.ArrayPrimitives.objectArray_array3','Cal.Collections.ArrayPrimitives.objectArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1113,'objectArray_array2','Cal.Collections.ArrayPrimitives.objectArray_array2','Cal.Collections.ArrayPrimitives.objectArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1114,'objectArray_array1','Cal.Collections.ArrayPrimitives.objectArray_array1','Cal.Collections.ArrayPrimitives.objectArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1115,'objectArray_makeDefault','Cal.Collections.ArrayPrimitives.objectArray_makeDefault','Cal.Collections.ArrayPrimitives.objectArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1116,'objectArray_empty','Cal.Collections.ArrayPrimitives.objectArray_empty','Cal.Collections.ArrayPrimitives.objectArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1117,'objectArray_toShowString','Cal.Collections.ArrayPrimitives.objectArray_toShowString','Cal.Collections.ArrayPrimitives.objectArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1118,'doubleArray_binarySearch','Cal.Collections.ArrayPrimitives.doubleArray_binarySearch','Cal.Collections.ArrayPrimitives.doubleArray_binarySearch',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1119,'doubleArray_sort','Cal.Collections.ArrayPrimitives.doubleArray_sort','Cal.Collections.ArrayPrimitives.doubleArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1120,'doubleArray_replace','Cal.Collections.ArrayPrimitives.doubleArray_replace','Cal.Collections.ArrayPrimitives.doubleArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1121,'doubleArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1122,'doubleArray_lastIndexOf','Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf','Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1123,'doubleArray_indexOf2','Cal.Collections.ArrayPrimitives.doubleArray_indexOf2','Cal.Collections.ArrayPrimitives.doubleArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1124,'doubleArray_indexOf','Cal.Collections.ArrayPrimitives.doubleArray_indexOf','Cal.Collections.ArrayPrimitives.doubleArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1125,'doubleArray_min','Cal.Collections.ArrayPrimitives.doubleArray_min','Cal.Collections.ArrayPrimitives.doubleArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1126,'doubleArray_max','Cal.Collections.ArrayPrimitives.doubleArray_max','Cal.Collections.ArrayPrimitives.doubleArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:38','2008-04-20 18:16:38'),(1127,'doubleArray_greaterThan','Cal.Collections.ArrayPrimitives.doubleArray_greaterThan','Cal.Collections.ArrayPrimitives.doubleArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1128,'doubleArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.doubleArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.doubleArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1129,'doubleArray_lessThanEquals','Cal.Collections.ArrayPrimitives.doubleArray_lessThanEquals','Cal.Collections.ArrayPrimitives.doubleArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1130,'doubleArray_lessThan','Cal.Collections.ArrayPrimitives.doubleArray_lessThan','Cal.Collections.ArrayPrimitives.doubleArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1131,'doubleArray_compareHelper','Cal.Collections.ArrayPrimitives.doubleArray_compareHelper','Cal.Collections.ArrayPrimitives.doubleArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1132,'doubleArray_notEquals','Cal.Collections.ArrayPrimitives.doubleArray_notEquals','Cal.Collections.ArrayPrimitives.doubleArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1133,'doubleArray_equals','Cal.Collections.ArrayPrimitives.doubleArray_equals','Cal.Collections.ArrayPrimitives.doubleArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1134,'doubleArray_replicate','Cal.Collections.ArrayPrimitives.doubleArray_replicate','Cal.Collections.ArrayPrimitives.doubleArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1135,'doubleArray_removeRange','Cal.Collections.ArrayPrimitives.doubleArray_removeRange','Cal.Collections.ArrayPrimitives.doubleArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1136,'doubleArray_subArray','Cal.Collections.ArrayPrimitives.doubleArray_subArray','Cal.Collections.ArrayPrimitives.doubleArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1137,'doubleArray_reverse','Cal.Collections.ArrayPrimitives.doubleArray_reverse','Cal.Collections.ArrayPrimitives.doubleArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1138,'doubleArray_concatList','Cal.Collections.ArrayPrimitives.doubleArray_concatList','Cal.Collections.ArrayPrimitives.doubleArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1139,'doubleArray_append','Cal.Collections.ArrayPrimitives.doubleArray_append','Cal.Collections.ArrayPrimitives.doubleArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1140,'doubleArray_arrayToList','Cal.Collections.ArrayPrimitives.doubleArray_arrayToList','Cal.Collections.ArrayPrimitives.doubleArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1141,'doubleArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.doubleArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.doubleArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1142,'doubleArray_listToArray','Cal.Collections.ArrayPrimitives.doubleArray_listToArray','Cal.Collections.ArrayPrimitives.doubleArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1143,'doubleArray_update','Cal.Collections.ArrayPrimitives.doubleArray_update','Cal.Collections.ArrayPrimitives.doubleArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1144,'doubleArray_subscript','Cal.Collections.ArrayPrimitives.doubleArray_subscript','Cal.Collections.ArrayPrimitives.doubleArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1145,'doubleArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.doubleArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.doubleArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1146,'doubleArray_length','Cal.Collections.ArrayPrimitives.doubleArray_length','Cal.Collections.ArrayPrimitives.doubleArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1147,'doubleArray_array7','Cal.Collections.ArrayPrimitives.doubleArray_array7','Cal.Collections.ArrayPrimitives.doubleArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1148,'doubleArray_array6','Cal.Collections.ArrayPrimitives.doubleArray_array6','Cal.Collections.ArrayPrimitives.doubleArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1149,'doubleArray_array5','Cal.Collections.ArrayPrimitives.doubleArray_array5','Cal.Collections.ArrayPrimitives.doubleArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1150,'doubleArray_array4','Cal.Collections.ArrayPrimitives.doubleArray_array4','Cal.Collections.ArrayPrimitives.doubleArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1151,'doubleArray_array3','Cal.Collections.ArrayPrimitives.doubleArray_array3','Cal.Collections.ArrayPrimitives.doubleArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1152,'doubleArray_array2','Cal.Collections.ArrayPrimitives.doubleArray_array2','Cal.Collections.ArrayPrimitives.doubleArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1153,'doubleArray_array1','Cal.Collections.ArrayPrimitives.doubleArray_array1','Cal.Collections.ArrayPrimitives.doubleArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1154,'doubleArray_makeDefault','Cal.Collections.ArrayPrimitives.doubleArray_makeDefault','Cal.Collections.ArrayPrimitives.doubleArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1155,'doubleArray_empty','Cal.Collections.ArrayPrimitives.doubleArray_empty','Cal.Collections.ArrayPrimitives.doubleArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1156,'doubleArray_toShowString','Cal.Collections.ArrayPrimitives.doubleArray_toShowString','Cal.Collections.ArrayPrimitives.doubleArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1157,'floatArray_binarySearch','Cal.Collections.ArrayPrimitives.floatArray_binarySearch','Cal.Collections.ArrayPrimitives.floatArray_binarySearch',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1158,'floatArray_sort','Cal.Collections.ArrayPrimitives.floatArray_sort','Cal.Collections.ArrayPrimitives.floatArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1159,'floatArray_replace','Cal.Collections.ArrayPrimitives.floatArray_replace','Cal.Collections.ArrayPrimitives.floatArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1160,'floatArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1161,'floatArray_lastIndexOf','Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf','Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1162,'floatArray_indexOf2','Cal.Collections.ArrayPrimitives.floatArray_indexOf2','Cal.Collections.ArrayPrimitives.floatArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1163,'floatArray_indexOf','Cal.Collections.ArrayPrimitives.floatArray_indexOf','Cal.Collections.ArrayPrimitives.floatArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1164,'floatArray_min','Cal.Collections.ArrayPrimitives.floatArray_min','Cal.Collections.ArrayPrimitives.floatArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1165,'floatArray_max','Cal.Collections.ArrayPrimitives.floatArray_max','Cal.Collections.ArrayPrimitives.floatArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1166,'floatArray_greaterThan','Cal.Collections.ArrayPrimitives.floatArray_greaterThan','Cal.Collections.ArrayPrimitives.floatArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1167,'floatArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.floatArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.floatArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:39','2008-04-20 18:16:39'),(1168,'floatArray_lessThanEquals','Cal.Collections.ArrayPrimitives.floatArray_lessThanEquals','Cal.Collections.ArrayPrimitives.floatArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1169,'floatArray_lessThan','Cal.Collections.ArrayPrimitives.floatArray_lessThan','Cal.Collections.ArrayPrimitives.floatArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1170,'floatArray_compareHelper','Cal.Collections.ArrayPrimitives.floatArray_compareHelper','Cal.Collections.ArrayPrimitives.floatArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1171,'floatArray_notEquals','Cal.Collections.ArrayPrimitives.floatArray_notEquals','Cal.Collections.ArrayPrimitives.floatArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1172,'floatArray_equals','Cal.Collections.ArrayPrimitives.floatArray_equals','Cal.Collections.ArrayPrimitives.floatArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1173,'floatArray_replicate','Cal.Collections.ArrayPrimitives.floatArray_replicate','Cal.Collections.ArrayPrimitives.floatArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1174,'floatArray_removeRange','Cal.Collections.ArrayPrimitives.floatArray_removeRange','Cal.Collections.ArrayPrimitives.floatArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1175,'floatArray_subArray','Cal.Collections.ArrayPrimitives.floatArray_subArray','Cal.Collections.ArrayPrimitives.floatArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1176,'floatArray_reverse','Cal.Collections.ArrayPrimitives.floatArray_reverse','Cal.Collections.ArrayPrimitives.floatArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1177,'floatArray_concatList','Cal.Collections.ArrayPrimitives.floatArray_concatList','Cal.Collections.ArrayPrimitives.floatArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1178,'floatArray_append','Cal.Collections.ArrayPrimitives.floatArray_append','Cal.Collections.ArrayPrimitives.floatArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1179,'floatArray_arrayToList','Cal.Collections.ArrayPrimitives.floatArray_arrayToList','Cal.Collections.ArrayPrimitives.floatArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1180,'floatArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.floatArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.floatArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1181,'floatArray_listToArray','Cal.Collections.ArrayPrimitives.floatArray_listToArray','Cal.Collections.ArrayPrimitives.floatArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1182,'floatArray_update','Cal.Collections.ArrayPrimitives.floatArray_update','Cal.Collections.ArrayPrimitives.floatArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1183,'floatArray_subscript','Cal.Collections.ArrayPrimitives.floatArray_subscript','Cal.Collections.ArrayPrimitives.floatArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1184,'floatArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.floatArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.floatArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1185,'floatArray_length','Cal.Collections.ArrayPrimitives.floatArray_length','Cal.Collections.ArrayPrimitives.floatArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1186,'floatArray_array7','Cal.Collections.ArrayPrimitives.floatArray_array7','Cal.Collections.ArrayPrimitives.floatArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1187,'floatArray_array6','Cal.Collections.ArrayPrimitives.floatArray_array6','Cal.Collections.ArrayPrimitives.floatArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1188,'floatArray_array5','Cal.Collections.ArrayPrimitives.floatArray_array5','Cal.Collections.ArrayPrimitives.floatArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1189,'floatArray_array4','Cal.Collections.ArrayPrimitives.floatArray_array4','Cal.Collections.ArrayPrimitives.floatArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1190,'floatArray_array3','Cal.Collections.ArrayPrimitives.floatArray_array3','Cal.Collections.ArrayPrimitives.floatArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1191,'floatArray_array2','Cal.Collections.ArrayPrimitives.floatArray_array2','Cal.Collections.ArrayPrimitives.floatArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1192,'floatArray_array1','Cal.Collections.ArrayPrimitives.floatArray_array1','Cal.Collections.ArrayPrimitives.floatArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1193,'floatArray_makeDefault','Cal.Collections.ArrayPrimitives.floatArray_makeDefault','Cal.Collections.ArrayPrimitives.floatArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1194,'floatArray_empty','Cal.Collections.ArrayPrimitives.floatArray_empty','Cal.Collections.ArrayPrimitives.floatArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1195,'floatArray_toShowString','Cal.Collections.ArrayPrimitives.floatArray_toShowString','Cal.Collections.ArrayPrimitives.floatArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1196,'longArray_binarySearch','Cal.Collections.ArrayPrimitives.longArray_binarySearch','Cal.Collections.ArrayPrimitives.longArray_binarySearch',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1197,'longArray_sort','Cal.Collections.ArrayPrimitives.longArray_sort','Cal.Collections.ArrayPrimitives.longArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1198,'longArray_replace','Cal.Collections.ArrayPrimitives.longArray_replace','Cal.Collections.ArrayPrimitives.longArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1199,'longArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.longArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.longArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1200,'longArray_lastIndexOf','Cal.Collections.ArrayPrimitives.longArray_lastIndexOf','Cal.Collections.ArrayPrimitives.longArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1201,'longArray_indexOf2','Cal.Collections.ArrayPrimitives.longArray_indexOf2','Cal.Collections.ArrayPrimitives.longArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1202,'longArray_indexOf','Cal.Collections.ArrayPrimitives.longArray_indexOf','Cal.Collections.ArrayPrimitives.longArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1203,'longArray_min','Cal.Collections.ArrayPrimitives.longArray_min','Cal.Collections.ArrayPrimitives.longArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1204,'longArray_max','Cal.Collections.ArrayPrimitives.longArray_max','Cal.Collections.ArrayPrimitives.longArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1205,'longArray_greaterThan','Cal.Collections.ArrayPrimitives.longArray_greaterThan','Cal.Collections.ArrayPrimitives.longArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1206,'longArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.longArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.longArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1207,'longArray_lessThanEquals','Cal.Collections.ArrayPrimitives.longArray_lessThanEquals','Cal.Collections.ArrayPrimitives.longArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1208,'longArray_lessThan','Cal.Collections.ArrayPrimitives.longArray_lessThan','Cal.Collections.ArrayPrimitives.longArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1209,'longArray_compareHelper','Cal.Collections.ArrayPrimitives.longArray_compareHelper','Cal.Collections.ArrayPrimitives.longArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1210,'longArray_notEquals','Cal.Collections.ArrayPrimitives.longArray_notEquals','Cal.Collections.ArrayPrimitives.longArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1211,'longArray_equals','Cal.Collections.ArrayPrimitives.longArray_equals','Cal.Collections.ArrayPrimitives.longArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1212,'longArray_replicate','Cal.Collections.ArrayPrimitives.longArray_replicate','Cal.Collections.ArrayPrimitives.longArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1213,'longArray_removeRange','Cal.Collections.ArrayPrimitives.longArray_removeRange','Cal.Collections.ArrayPrimitives.longArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1214,'longArray_subArray','Cal.Collections.ArrayPrimitives.longArray_subArray','Cal.Collections.ArrayPrimitives.longArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:40','2008-04-20 18:16:40'),(1215,'longArray_reverse','Cal.Collections.ArrayPrimitives.longArray_reverse','Cal.Collections.ArrayPrimitives.longArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1216,'longArray_concatList','Cal.Collections.ArrayPrimitives.longArray_concatList','Cal.Collections.ArrayPrimitives.longArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1217,'longArray_append','Cal.Collections.ArrayPrimitives.longArray_append','Cal.Collections.ArrayPrimitives.longArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1218,'longArray_arrayToList','Cal.Collections.ArrayPrimitives.longArray_arrayToList','Cal.Collections.ArrayPrimitives.longArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1219,'longArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.longArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.longArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1220,'longArray_listToArray','Cal.Collections.ArrayPrimitives.longArray_listToArray','Cal.Collections.ArrayPrimitives.longArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1221,'longArray_update','Cal.Collections.ArrayPrimitives.longArray_update','Cal.Collections.ArrayPrimitives.longArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1222,'longArray_subscript','Cal.Collections.ArrayPrimitives.longArray_subscript','Cal.Collections.ArrayPrimitives.longArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1223,'longArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.longArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.longArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1224,'longArray_length','Cal.Collections.ArrayPrimitives.longArray_length','Cal.Collections.ArrayPrimitives.longArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1225,'longArray_array7','Cal.Collections.ArrayPrimitives.longArray_array7','Cal.Collections.ArrayPrimitives.longArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1226,'longArray_array6','Cal.Collections.ArrayPrimitives.longArray_array6','Cal.Collections.ArrayPrimitives.longArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1227,'longArray_array5','Cal.Collections.ArrayPrimitives.longArray_array5','Cal.Collections.ArrayPrimitives.longArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1228,'longArray_array4','Cal.Collections.ArrayPrimitives.longArray_array4','Cal.Collections.ArrayPrimitives.longArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1229,'longArray_array3','Cal.Collections.ArrayPrimitives.longArray_array3','Cal.Collections.ArrayPrimitives.longArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1230,'longArray_array2','Cal.Collections.ArrayPrimitives.longArray_array2','Cal.Collections.ArrayPrimitives.longArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1231,'longArray_array1','Cal.Collections.ArrayPrimitives.longArray_array1','Cal.Collections.ArrayPrimitives.longArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1232,'longArray_makeDefault','Cal.Collections.ArrayPrimitives.longArray_makeDefault','Cal.Collections.ArrayPrimitives.longArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1233,'longArray_empty','Cal.Collections.ArrayPrimitives.longArray_empty','Cal.Collections.ArrayPrimitives.longArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1234,'longArray_toShowString','Cal.Collections.ArrayPrimitives.longArray_toShowString','Cal.Collections.ArrayPrimitives.longArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1235,'intArray_binarySearch','Cal.Collections.ArrayPrimitives.intArray_binarySearch','Cal.Collections.ArrayPrimitives.intArray_binarySearch',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1236,'intArray_sort','Cal.Collections.ArrayPrimitives.intArray_sort','Cal.Collections.ArrayPrimitives.intArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1237,'intArray_replace','Cal.Collections.ArrayPrimitives.intArray_replace','Cal.Collections.ArrayPrimitives.intArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1238,'intArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.intArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.intArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1239,'intArray_lastIndexOf','Cal.Collections.ArrayPrimitives.intArray_lastIndexOf','Cal.Collections.ArrayPrimitives.intArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1240,'intArray_indexOf2','Cal.Collections.ArrayPrimitives.intArray_indexOf2','Cal.Collections.ArrayPrimitives.intArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1241,'intArray_indexOf','Cal.Collections.ArrayPrimitives.intArray_indexOf','Cal.Collections.ArrayPrimitives.intArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1242,'intArray_min','Cal.Collections.ArrayPrimitives.intArray_min','Cal.Collections.ArrayPrimitives.intArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1243,'intArray_max','Cal.Collections.ArrayPrimitives.intArray_max','Cal.Collections.ArrayPrimitives.intArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1244,'intArray_greaterThan','Cal.Collections.ArrayPrimitives.intArray_greaterThan','Cal.Collections.ArrayPrimitives.intArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1245,'intArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.intArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.intArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1246,'intArray_lessThanEquals','Cal.Collections.ArrayPrimitives.intArray_lessThanEquals','Cal.Collections.ArrayPrimitives.intArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1247,'intArray_lessThan','Cal.Collections.ArrayPrimitives.intArray_lessThan','Cal.Collections.ArrayPrimitives.intArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1248,'intArray_compareHelper','Cal.Collections.ArrayPrimitives.intArray_compareHelper','Cal.Collections.ArrayPrimitives.intArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1249,'intArray_notEquals','Cal.Collections.ArrayPrimitives.intArray_notEquals','Cal.Collections.ArrayPrimitives.intArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1250,'intArray_equals','Cal.Collections.ArrayPrimitives.intArray_equals','Cal.Collections.ArrayPrimitives.intArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:41','2008-04-20 18:16:41'),(1251,'intArray_replicate','Cal.Collections.ArrayPrimitives.intArray_replicate','Cal.Collections.ArrayPrimitives.intArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1252,'intArray_removeRange','Cal.Collections.ArrayPrimitives.intArray_removeRange','Cal.Collections.ArrayPrimitives.intArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1253,'intArray_subArray','Cal.Collections.ArrayPrimitives.intArray_subArray','Cal.Collections.ArrayPrimitives.intArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1254,'intArray_reverse','Cal.Collections.ArrayPrimitives.intArray_reverse','Cal.Collections.ArrayPrimitives.intArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1255,'intArray_concatList','Cal.Collections.ArrayPrimitives.intArray_concatList','Cal.Collections.ArrayPrimitives.intArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1256,'intArray_append','Cal.Collections.ArrayPrimitives.intArray_append','Cal.Collections.ArrayPrimitives.intArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1257,'intArray_arrayToList','Cal.Collections.ArrayPrimitives.intArray_arrayToList','Cal.Collections.ArrayPrimitives.intArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1258,'intArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.intArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.intArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1259,'intArray_listToArray','Cal.Collections.ArrayPrimitives.intArray_listToArray','Cal.Collections.ArrayPrimitives.intArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1260,'intArray_update','Cal.Collections.ArrayPrimitives.intArray_update','Cal.Collections.ArrayPrimitives.intArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1261,'intArray_subscript','Cal.Collections.ArrayPrimitives.intArray_subscript','Cal.Collections.ArrayPrimitives.intArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1262,'intArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.intArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.intArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1263,'intArray_length','Cal.Collections.ArrayPrimitives.intArray_length','Cal.Collections.ArrayPrimitives.intArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1264,'intArray_array7','Cal.Collections.ArrayPrimitives.intArray_array7','Cal.Collections.ArrayPrimitives.intArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1265,'intArray_array6','Cal.Collections.ArrayPrimitives.intArray_array6','Cal.Collections.ArrayPrimitives.intArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1266,'intArray_array5','Cal.Collections.ArrayPrimitives.intArray_array5','Cal.Collections.ArrayPrimitives.intArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1267,'intArray_array4','Cal.Collections.ArrayPrimitives.intArray_array4','Cal.Collections.ArrayPrimitives.intArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1268,'intArray_array3','Cal.Collections.ArrayPrimitives.intArray_array3','Cal.Collections.ArrayPrimitives.intArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1269,'intArray_array2','Cal.Collections.ArrayPrimitives.intArray_array2','Cal.Collections.ArrayPrimitives.intArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1270,'intArray_array1','Cal.Collections.ArrayPrimitives.intArray_array1','Cal.Collections.ArrayPrimitives.intArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1271,'intArray_makeDefault','Cal.Collections.ArrayPrimitives.intArray_makeDefault','Cal.Collections.ArrayPrimitives.intArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1272,'intArray_empty','Cal.Collections.ArrayPrimitives.intArray_empty','Cal.Collections.ArrayPrimitives.intArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1273,'intArray_toShowString','Cal.Collections.ArrayPrimitives.intArray_toShowString','Cal.Collections.ArrayPrimitives.intArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1274,'shortArray_binarySearch','Cal.Collections.ArrayPrimitives.shortArray_binarySearch','Cal.Collections.ArrayPrimitives.shortArray_binarySearch',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1275,'shortArray_sort','Cal.Collections.ArrayPrimitives.shortArray_sort','Cal.Collections.ArrayPrimitives.shortArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1276,'shortArray_replace','Cal.Collections.ArrayPrimitives.shortArray_replace','Cal.Collections.ArrayPrimitives.shortArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1277,'shortArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1278,'shortArray_lastIndexOf','Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf','Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1279,'shortArray_indexOf2','Cal.Collections.ArrayPrimitives.shortArray_indexOf2','Cal.Collections.ArrayPrimitives.shortArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1280,'shortArray_indexOf','Cal.Collections.ArrayPrimitives.shortArray_indexOf','Cal.Collections.ArrayPrimitives.shortArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1281,'shortArray_min','Cal.Collections.ArrayPrimitives.shortArray_min','Cal.Collections.ArrayPrimitives.shortArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1282,'shortArray_max','Cal.Collections.ArrayPrimitives.shortArray_max','Cal.Collections.ArrayPrimitives.shortArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1283,'shortArray_greaterThan','Cal.Collections.ArrayPrimitives.shortArray_greaterThan','Cal.Collections.ArrayPrimitives.shortArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1284,'shortArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.shortArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.shortArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1285,'shortArray_lessThanEquals','Cal.Collections.ArrayPrimitives.shortArray_lessThanEquals','Cal.Collections.ArrayPrimitives.shortArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1286,'shortArray_lessThan','Cal.Collections.ArrayPrimitives.shortArray_lessThan','Cal.Collections.ArrayPrimitives.shortArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1287,'shortArray_compareHelper','Cal.Collections.ArrayPrimitives.shortArray_compareHelper','Cal.Collections.ArrayPrimitives.shortArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1288,'shortArray_notEquals','Cal.Collections.ArrayPrimitives.shortArray_notEquals','Cal.Collections.ArrayPrimitives.shortArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1289,'shortArray_equals','Cal.Collections.ArrayPrimitives.shortArray_equals','Cal.Collections.ArrayPrimitives.shortArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1290,'shortArray_replicate','Cal.Collections.ArrayPrimitives.shortArray_replicate','Cal.Collections.ArrayPrimitives.shortArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1291,'shortArray_removeRange','Cal.Collections.ArrayPrimitives.shortArray_removeRange','Cal.Collections.ArrayPrimitives.shortArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1292,'shortArray_subArray','Cal.Collections.ArrayPrimitives.shortArray_subArray','Cal.Collections.ArrayPrimitives.shortArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1293,'shortArray_reverse','Cal.Collections.ArrayPrimitives.shortArray_reverse','Cal.Collections.ArrayPrimitives.shortArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1294,'shortArray_concatList','Cal.Collections.ArrayPrimitives.shortArray_concatList','Cal.Collections.ArrayPrimitives.shortArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1295,'shortArray_append','Cal.Collections.ArrayPrimitives.shortArray_append','Cal.Collections.ArrayPrimitives.shortArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1296,'shortArray_arrayToList','Cal.Collections.ArrayPrimitives.shortArray_arrayToList','Cal.Collections.ArrayPrimitives.shortArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1297,'shortArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.shortArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.shortArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:42','2008-04-20 18:16:42'),(1298,'shortArray_listToArray','Cal.Collections.ArrayPrimitives.shortArray_listToArray','Cal.Collections.ArrayPrimitives.shortArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1299,'shortArray_update','Cal.Collections.ArrayPrimitives.shortArray_update','Cal.Collections.ArrayPrimitives.shortArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1300,'shortArray_subscript','Cal.Collections.ArrayPrimitives.shortArray_subscript','Cal.Collections.ArrayPrimitives.shortArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1301,'shortArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.shortArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.shortArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1302,'shortArray_length','Cal.Collections.ArrayPrimitives.shortArray_length','Cal.Collections.ArrayPrimitives.shortArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1303,'shortArray_array7','Cal.Collections.ArrayPrimitives.shortArray_array7','Cal.Collections.ArrayPrimitives.shortArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1304,'shortArray_array6','Cal.Collections.ArrayPrimitives.shortArray_array6','Cal.Collections.ArrayPrimitives.shortArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1305,'shortArray_array5','Cal.Collections.ArrayPrimitives.shortArray_array5','Cal.Collections.ArrayPrimitives.shortArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1306,'shortArray_array4','Cal.Collections.ArrayPrimitives.shortArray_array4','Cal.Collections.ArrayPrimitives.shortArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1307,'shortArray_array3','Cal.Collections.ArrayPrimitives.shortArray_array3','Cal.Collections.ArrayPrimitives.shortArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1308,'shortArray_array2','Cal.Collections.ArrayPrimitives.shortArray_array2','Cal.Collections.ArrayPrimitives.shortArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1309,'shortArray_array1','Cal.Collections.ArrayPrimitives.shortArray_array1','Cal.Collections.ArrayPrimitives.shortArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1310,'shortArray_makeDefault','Cal.Collections.ArrayPrimitives.shortArray_makeDefault','Cal.Collections.ArrayPrimitives.shortArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1311,'shortArray_empty','Cal.Collections.ArrayPrimitives.shortArray_empty','Cal.Collections.ArrayPrimitives.shortArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1312,'shortArray_toShowString','Cal.Collections.ArrayPrimitives.shortArray_toShowString','Cal.Collections.ArrayPrimitives.shortArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1313,'byteArray_binarySearch','Cal.Collections.ArrayPrimitives.byteArray_binarySearch','Cal.Collections.ArrayPrimitives.byteArray_binarySearch',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1314,'byteArray_sort','Cal.Collections.ArrayPrimitives.byteArray_sort','Cal.Collections.ArrayPrimitives.byteArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1315,'byteArray_replace','Cal.Collections.ArrayPrimitives.byteArray_replace','Cal.Collections.ArrayPrimitives.byteArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1316,'byteArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1317,'byteArray_lastIndexOf','Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf','Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1318,'byteArray_indexOf2','Cal.Collections.ArrayPrimitives.byteArray_indexOf2','Cal.Collections.ArrayPrimitives.byteArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1319,'byteArray_indexOf','Cal.Collections.ArrayPrimitives.byteArray_indexOf','Cal.Collections.ArrayPrimitives.byteArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1320,'byteArray_min','Cal.Collections.ArrayPrimitives.byteArray_min','Cal.Collections.ArrayPrimitives.byteArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1321,'byteArray_max','Cal.Collections.ArrayPrimitives.byteArray_max','Cal.Collections.ArrayPrimitives.byteArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1322,'byteArray_greaterThan','Cal.Collections.ArrayPrimitives.byteArray_greaterThan','Cal.Collections.ArrayPrimitives.byteArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1323,'byteArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.byteArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.byteArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1324,'byteArray_lessThanEquals','Cal.Collections.ArrayPrimitives.byteArray_lessThanEquals','Cal.Collections.ArrayPrimitives.byteArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1325,'byteArray_lessThan','Cal.Collections.ArrayPrimitives.byteArray_lessThan','Cal.Collections.ArrayPrimitives.byteArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1326,'byteArray_compareHelper','Cal.Collections.ArrayPrimitives.byteArray_compareHelper','Cal.Collections.ArrayPrimitives.byteArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1327,'byteArray_notEquals','Cal.Collections.ArrayPrimitives.byteArray_notEquals','Cal.Collections.ArrayPrimitives.byteArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1328,'byteArray_equals','Cal.Collections.ArrayPrimitives.byteArray_equals','Cal.Collections.ArrayPrimitives.byteArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1329,'byteArray_decompress','Cal.Collections.ArrayPrimitives.byteArray_decompress','Cal.Collections.ArrayPrimitives.byteArray_decompress',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1330,'byteArray_compress','Cal.Collections.ArrayPrimitives.byteArray_compress','Cal.Collections.ArrayPrimitives.byteArray_compress',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1331,'byteArray_replicate','Cal.Collections.ArrayPrimitives.byteArray_replicate','Cal.Collections.ArrayPrimitives.byteArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1332,'byteArray_removeRange','Cal.Collections.ArrayPrimitives.byteArray_removeRange','Cal.Collections.ArrayPrimitives.byteArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1333,'byteArray_subArray','Cal.Collections.ArrayPrimitives.byteArray_subArray','Cal.Collections.ArrayPrimitives.byteArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1334,'byteArray_reverse','Cal.Collections.ArrayPrimitives.byteArray_reverse','Cal.Collections.ArrayPrimitives.byteArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1335,'byteArray_concatList','Cal.Collections.ArrayPrimitives.byteArray_concatList','Cal.Collections.ArrayPrimitives.byteArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1336,'byteArray_append','Cal.Collections.ArrayPrimitives.byteArray_append','Cal.Collections.ArrayPrimitives.byteArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1337,'byteArray_arrayToList','Cal.Collections.ArrayPrimitives.byteArray_arrayToList','Cal.Collections.ArrayPrimitives.byteArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1338,'byteArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.byteArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.byteArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:43','2008-04-20 18:16:43'),(1339,'byteArray_listToArray','Cal.Collections.ArrayPrimitives.byteArray_listToArray','Cal.Collections.ArrayPrimitives.byteArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1340,'byteArray_update','Cal.Collections.ArrayPrimitives.byteArray_update','Cal.Collections.ArrayPrimitives.byteArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1341,'byteArray_subscript','Cal.Collections.ArrayPrimitives.byteArray_subscript','Cal.Collections.ArrayPrimitives.byteArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1342,'byteArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.byteArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.byteArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1343,'byteArray_length','Cal.Collections.ArrayPrimitives.byteArray_length','Cal.Collections.ArrayPrimitives.byteArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1344,'byteArray_array7','Cal.Collections.ArrayPrimitives.byteArray_array7','Cal.Collections.ArrayPrimitives.byteArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1345,'byteArray_array6','Cal.Collections.ArrayPrimitives.byteArray_array6','Cal.Collections.ArrayPrimitives.byteArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1346,'byteArray_array5','Cal.Collections.ArrayPrimitives.byteArray_array5','Cal.Collections.ArrayPrimitives.byteArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1347,'byteArray_array4','Cal.Collections.ArrayPrimitives.byteArray_array4','Cal.Collections.ArrayPrimitives.byteArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1348,'byteArray_array3','Cal.Collections.ArrayPrimitives.byteArray_array3','Cal.Collections.ArrayPrimitives.byteArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1349,'byteArray_array2','Cal.Collections.ArrayPrimitives.byteArray_array2','Cal.Collections.ArrayPrimitives.byteArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1350,'byteArray_array1','Cal.Collections.ArrayPrimitives.byteArray_array1','Cal.Collections.ArrayPrimitives.byteArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1351,'byteArray_makeDefault','Cal.Collections.ArrayPrimitives.byteArray_makeDefault','Cal.Collections.ArrayPrimitives.byteArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1352,'byteArray_empty','Cal.Collections.ArrayPrimitives.byteArray_empty','Cal.Collections.ArrayPrimitives.byteArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1353,'byteArray_toShowString','Cal.Collections.ArrayPrimitives.byteArray_toShowString','Cal.Collections.ArrayPrimitives.byteArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1354,'booleanArray_sort','Cal.Collections.ArrayPrimitives.booleanArray_sort','Cal.Collections.ArrayPrimitives.booleanArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1355,'booleanArray_replace','Cal.Collections.ArrayPrimitives.booleanArray_replace','Cal.Collections.ArrayPrimitives.booleanArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1356,'booleanArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1357,'booleanArray_lastIndexOf','Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf','Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1358,'booleanArray_indexOf2','Cal.Collections.ArrayPrimitives.booleanArray_indexOf2','Cal.Collections.ArrayPrimitives.booleanArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1359,'booleanArray_indexOf','Cal.Collections.ArrayPrimitives.booleanArray_indexOf','Cal.Collections.ArrayPrimitives.booleanArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1360,'booleanArray_min','Cal.Collections.ArrayPrimitives.booleanArray_min','Cal.Collections.ArrayPrimitives.booleanArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1361,'booleanArray_max','Cal.Collections.ArrayPrimitives.booleanArray_max','Cal.Collections.ArrayPrimitives.booleanArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1362,'booleanArray_greaterThan','Cal.Collections.ArrayPrimitives.booleanArray_greaterThan','Cal.Collections.ArrayPrimitives.booleanArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1363,'booleanArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.booleanArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.booleanArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1364,'booleanArray_lessThanEquals','Cal.Collections.ArrayPrimitives.booleanArray_lessThanEquals','Cal.Collections.ArrayPrimitives.booleanArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1365,'booleanArray_lessThan','Cal.Collections.ArrayPrimitives.booleanArray_lessThan','Cal.Collections.ArrayPrimitives.booleanArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1366,'booleanArray_compareHelper','Cal.Collections.ArrayPrimitives.booleanArray_compareHelper','Cal.Collections.ArrayPrimitives.booleanArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1367,'booleanArray_notEquals','Cal.Collections.ArrayPrimitives.booleanArray_notEquals','Cal.Collections.ArrayPrimitives.booleanArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1368,'booleanArray_equals','Cal.Collections.ArrayPrimitives.booleanArray_equals','Cal.Collections.ArrayPrimitives.booleanArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1369,'booleanArray_replicate','Cal.Collections.ArrayPrimitives.booleanArray_replicate','Cal.Collections.ArrayPrimitives.booleanArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1370,'booleanArray_removeRange','Cal.Collections.ArrayPrimitives.booleanArray_removeRange','Cal.Collections.ArrayPrimitives.booleanArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1371,'booleanArray_subArray','Cal.Collections.ArrayPrimitives.booleanArray_subArray','Cal.Collections.ArrayPrimitives.booleanArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1372,'booleanArray_reverse','Cal.Collections.ArrayPrimitives.booleanArray_reverse','Cal.Collections.ArrayPrimitives.booleanArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1373,'booleanArray_concatList','Cal.Collections.ArrayPrimitives.booleanArray_concatList','Cal.Collections.ArrayPrimitives.booleanArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1374,'booleanArray_append','Cal.Collections.ArrayPrimitives.booleanArray_append','Cal.Collections.ArrayPrimitives.booleanArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1375,'booleanArray_arrayToList','Cal.Collections.ArrayPrimitives.booleanArray_arrayToList','Cal.Collections.ArrayPrimitives.booleanArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1376,'booleanArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.booleanArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.booleanArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1377,'booleanArray_listToArray','Cal.Collections.ArrayPrimitives.booleanArray_listToArray','Cal.Collections.ArrayPrimitives.booleanArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1378,'booleanArray_update','Cal.Collections.ArrayPrimitives.booleanArray_update','Cal.Collections.ArrayPrimitives.booleanArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1379,'booleanArray_subscript','Cal.Collections.ArrayPrimitives.booleanArray_subscript','Cal.Collections.ArrayPrimitives.booleanArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1380,'booleanArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.booleanArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.booleanArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:44','2008-04-20 18:16:44'),(1381,'booleanArray_length','Cal.Collections.ArrayPrimitives.booleanArray_length','Cal.Collections.ArrayPrimitives.booleanArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1382,'booleanArray_array7','Cal.Collections.ArrayPrimitives.booleanArray_array7','Cal.Collections.ArrayPrimitives.booleanArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1383,'booleanArray_array6','Cal.Collections.ArrayPrimitives.booleanArray_array6','Cal.Collections.ArrayPrimitives.booleanArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1384,'booleanArray_array5','Cal.Collections.ArrayPrimitives.booleanArray_array5','Cal.Collections.ArrayPrimitives.booleanArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1385,'booleanArray_array4','Cal.Collections.ArrayPrimitives.booleanArray_array4','Cal.Collections.ArrayPrimitives.booleanArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1386,'booleanArray_array3','Cal.Collections.ArrayPrimitives.booleanArray_array3','Cal.Collections.ArrayPrimitives.booleanArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1387,'booleanArray_array2','Cal.Collections.ArrayPrimitives.booleanArray_array2','Cal.Collections.ArrayPrimitives.booleanArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1388,'booleanArray_array1','Cal.Collections.ArrayPrimitives.booleanArray_array1','Cal.Collections.ArrayPrimitives.booleanArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1389,'booleanArray_makeDefault','Cal.Collections.ArrayPrimitives.booleanArray_makeDefault','Cal.Collections.ArrayPrimitives.booleanArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1390,'booleanArray_empty','Cal.Collections.ArrayPrimitives.booleanArray_empty','Cal.Collections.ArrayPrimitives.booleanArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1391,'booleanArray_toShowString','Cal.Collections.ArrayPrimitives.booleanArray_toShowString','Cal.Collections.ArrayPrimitives.booleanArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1392,'charArray_binarySearch','Cal.Collections.ArrayPrimitives.charArray_binarySearch','Cal.Collections.ArrayPrimitives.charArray_binarySearch',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1393,'charArray_sort','Cal.Collections.ArrayPrimitives.charArray_sort','Cal.Collections.ArrayPrimitives.charArray_sort',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1394,'charArray_replace','Cal.Collections.ArrayPrimitives.charArray_replace','Cal.Collections.ArrayPrimitives.charArray_replace',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1395,'charArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.charArray_lastIndexOf2','Cal.Collections.ArrayPrimitives.charArray_lastIndexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1396,'charArray_lastIndexOf','Cal.Collections.ArrayPrimitives.charArray_lastIndexOf','Cal.Collections.ArrayPrimitives.charArray_lastIndexOf',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1397,'charArray_indexOf2','Cal.Collections.ArrayPrimitives.charArray_indexOf2','Cal.Collections.ArrayPrimitives.charArray_indexOf2',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1398,'charArray_indexOf','Cal.Collections.ArrayPrimitives.charArray_indexOf','Cal.Collections.ArrayPrimitives.charArray_indexOf',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1399,'charArray_min','Cal.Collections.ArrayPrimitives.charArray_min','Cal.Collections.ArrayPrimitives.charArray_min',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1400,'charArray_max','Cal.Collections.ArrayPrimitives.charArray_max','Cal.Collections.ArrayPrimitives.charArray_max',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1401,'charArray_greaterThan','Cal.Collections.ArrayPrimitives.charArray_greaterThan','Cal.Collections.ArrayPrimitives.charArray_greaterThan',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1402,'charArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.charArray_greaterThanEquals','Cal.Collections.ArrayPrimitives.charArray_greaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1403,'charArray_lessThanEquals','Cal.Collections.ArrayPrimitives.charArray_lessThanEquals','Cal.Collections.ArrayPrimitives.charArray_lessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1404,'charArray_lessThan','Cal.Collections.ArrayPrimitives.charArray_lessThan','Cal.Collections.ArrayPrimitives.charArray_lessThan',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1405,'charArray_compareHelper','Cal.Collections.ArrayPrimitives.charArray_compareHelper','Cal.Collections.ArrayPrimitives.charArray_compareHelper',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1406,'charArray_notEquals','Cal.Collections.ArrayPrimitives.charArray_notEquals','Cal.Collections.ArrayPrimitives.charArray_notEquals',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1407,'charArray_equals','Cal.Collections.ArrayPrimitives.charArray_equals','Cal.Collections.ArrayPrimitives.charArray_equals',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1408,'charArray_replicate','Cal.Collections.ArrayPrimitives.charArray_replicate','Cal.Collections.ArrayPrimitives.charArray_replicate',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1409,'charArray_removeRange','Cal.Collections.ArrayPrimitives.charArray_removeRange','Cal.Collections.ArrayPrimitives.charArray_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1410,'charArray_subArray','Cal.Collections.ArrayPrimitives.charArray_subArray','Cal.Collections.ArrayPrimitives.charArray_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1411,'charArray_reverse','Cal.Collections.ArrayPrimitives.charArray_reverse','Cal.Collections.ArrayPrimitives.charArray_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1412,'charArray_concatList','Cal.Collections.ArrayPrimitives.charArray_concatList','Cal.Collections.ArrayPrimitives.charArray_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1413,'charArray_append','Cal.Collections.ArrayPrimitives.charArray_append','Cal.Collections.ArrayPrimitives.charArray_append',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1414,'charArray_arrayToList','Cal.Collections.ArrayPrimitives.charArray_arrayToList','Cal.Collections.ArrayPrimitives.charArray_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1415,'charArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.charArray_listToArrayWithFirstElement','Cal.Collections.ArrayPrimitives.charArray_listToArrayWithFirstElement',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1416,'charArray_listToArray','Cal.Collections.ArrayPrimitives.charArray_listToArray','Cal.Collections.ArrayPrimitives.charArray_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1417,'charArray_update','Cal.Collections.ArrayPrimitives.charArray_update','Cal.Collections.ArrayPrimitives.charArray_update',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1418,'charArray_subscript','Cal.Collections.ArrayPrimitives.charArray_subscript','Cal.Collections.ArrayPrimitives.charArray_subscript',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1419,'charArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.charArray_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.charArray_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1420,'charArray_length','Cal.Collections.ArrayPrimitives.charArray_length','Cal.Collections.ArrayPrimitives.charArray_length',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1421,'charArray_array7','Cal.Collections.ArrayPrimitives.charArray_array7','Cal.Collections.ArrayPrimitives.charArray_array7',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1422,'charArray_array6','Cal.Collections.ArrayPrimitives.charArray_array6','Cal.Collections.ArrayPrimitives.charArray_array6',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1423,'charArray_array5','Cal.Collections.ArrayPrimitives.charArray_array5','Cal.Collections.ArrayPrimitives.charArray_array5',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1424,'charArray_array4','Cal.Collections.ArrayPrimitives.charArray_array4','Cal.Collections.ArrayPrimitives.charArray_array4',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1425,'charArray_array3','Cal.Collections.ArrayPrimitives.charArray_array3','Cal.Collections.ArrayPrimitives.charArray_array3',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1426,'charArray_array2','Cal.Collections.ArrayPrimitives.charArray_array2','Cal.Collections.ArrayPrimitives.charArray_array2',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1427,'charArray_array1','Cal.Collections.ArrayPrimitives.charArray_array1','Cal.Collections.ArrayPrimitives.charArray_array1',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1428,'charArray_makeDefault','Cal.Collections.ArrayPrimitives.charArray_makeDefault','Cal.Collections.ArrayPrimitives.charArray_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1429,'charArray_empty','Cal.Collections.ArrayPrimitives.charArray_empty','Cal.Collections.ArrayPrimitives.charArray_empty',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1430,'charArray_toShowString','Cal.Collections.ArrayPrimitives.charArray_toShowString','Cal.Collections.ArrayPrimitives.charArray_toShowString',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1431,'charArray_toString','Cal.Collections.ArrayPrimitives.charArray_toString','Cal.Collections.ArrayPrimitives.charArray_toString',NULL,'[CALDoc] ','2008-04-20 18:16:45','2008-04-20 18:16:45'),(1432,'charArray_fromString','Cal.Collections.ArrayPrimitives.charArray_fromString','Cal.Collections.ArrayPrimitives.charArray_fromString',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1433,'emptyArray_isRemoveRangeOK','Cal.Collections.ArrayPrimitives.emptyArray_isRemoveRangeOK','Cal.Collections.ArrayPrimitives.emptyArray_isRemoveRangeOK',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1434,'emptyArray_isSubArrayOK','Cal.Collections.ArrayPrimitives.emptyArray_isSubArrayOK','Cal.Collections.ArrayPrimitives.emptyArray_isSubArrayOK',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1435,'emptyArray_throwArrayIndexOutOfBoundsException','Cal.Collections.ArrayPrimitives.emptyArray_throwArrayIndexOutOfBoundsException','Cal.Collections.ArrayPrimitives.emptyArray_throwArrayIndexOutOfBoundsException',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1436,'array_length','Cal.Collections.ArrayPrimitives.array_length','Cal.Collections.ArrayPrimitives.array_length',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1437,'array_makeDefault','Cal.Collections.ArrayPrimitives.array_makeDefault','Cal.Collections.ArrayPrimitives.array_makeDefault',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1438,'array_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.array_cloneReplacingNullArray','Cal.Collections.ArrayPrimitives.array_cloneReplacingNullArray',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1439,'array_listToArray','Cal.Collections.ArrayPrimitives.array_listToArray','Cal.Collections.ArrayPrimitives.array_listToArray',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1440,'array_arrayToList','Cal.Collections.ArrayPrimitives.array_arrayToList','Cal.Collections.ArrayPrimitives.array_arrayToList',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1441,'array_concatList','Cal.Collections.ArrayPrimitives.array_concatList','Cal.Collections.ArrayPrimitives.array_concatList',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1442,'array_reverse','Cal.Collections.ArrayPrimitives.array_reverse','Cal.Collections.ArrayPrimitives.array_reverse',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1443,'array_subArray','Cal.Collections.ArrayPrimitives.array_subArray','Cal.Collections.ArrayPrimitives.array_subArray',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1444,'array_removeRange','Cal.Collections.ArrayPrimitives.array_removeRange','Cal.Collections.ArrayPrimitives.array_removeRange',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1445,'array_toCalValueArray','Cal.Collections.ArrayPrimitives.array_toCalValueArray','Cal.Collections.ArrayPrimitives.array_toCalValueArray',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1446,'array_fromCalValueArray','Cal.Collections.ArrayPrimitives.array_fromCalValueArray','Cal.Collections.ArrayPrimitives.array_fromCalValueArray',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1447,'highestBitMaskLong','Cal.Core.Bits.highestBitMaskLong','Cal.Core.Bits.highestBitMaskLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1448,'highestBitMaskInt','Cal.Core.Bits.highestBitMaskInt','Cal.Core.Bits.highestBitMaskInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1449,'shiftRUnsignedLong','Cal.Core.Bits.shiftRUnsignedLong','Cal.Core.Bits.shiftRUnsignedLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1450,'shiftRLong','Cal.Core.Bits.shiftRLong','Cal.Core.Bits.shiftRLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1451,'shiftLLong','Cal.Core.Bits.shiftLLong','Cal.Core.Bits.shiftLLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1452,'complementLong','Cal.Core.Bits.complementLong','Cal.Core.Bits.complementLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1453,'bitwiseXorLong','Cal.Core.Bits.bitwiseXorLong','Cal.Core.Bits.bitwiseXorLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1454,'bitwiseOrLong','Cal.Core.Bits.bitwiseOrLong','Cal.Core.Bits.bitwiseOrLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1455,'bitwiseAndLong','Cal.Core.Bits.bitwiseAndLong','Cal.Core.Bits.bitwiseAndLong',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1456,'shiftRUnsignedInt','Cal.Core.Bits.shiftRUnsignedInt','Cal.Core.Bits.shiftRUnsignedInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1457,'shiftRInt','Cal.Core.Bits.shiftRInt','Cal.Core.Bits.shiftRInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1458,'shiftLInt','Cal.Core.Bits.shiftLInt','Cal.Core.Bits.shiftLInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1459,'complementInt','Cal.Core.Bits.complementInt','Cal.Core.Bits.complementInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1460,'bitwiseXorInt','Cal.Core.Bits.bitwiseXorInt','Cal.Core.Bits.bitwiseXorInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1461,'bitwiseOrInt','Cal.Core.Bits.bitwiseOrInt','Cal.Core.Bits.bitwiseOrInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1462,'bitwiseAndInt','Cal.Core.Bits.bitwiseAndInt','Cal.Core.Bits.bitwiseAndInt',NULL,'[CALDoc] ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1463,'bitwiseAnd','Cal.Core.Bits.bitwiseAnd','Cal.Core.Bits.bitwiseAnd',NULL,'[CALDoc] Combines its two arguments by performing a boolean AND operation on\ntheir individual bits. ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1464,'bitwiseOr','Cal.Core.Bits.bitwiseOr','Cal.Core.Bits.bitwiseOr',NULL,'[CALDoc] Combines its two arguments by performing a boolean OR operation on their \nindividual bits. ','2008-04-20 18:16:46','2008-04-20 18:16:46'),(1465,'bitwiseXor','Cal.Core.Bits.bitwiseXor','Cal.Core.Bits.bitwiseXor',NULL,'[CALDoc] Combines its two arguments by performing a boolean XOR operation on their\nindividual bits. ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1466,'complement','Cal.Core.Bits.complement','Cal.Core.Bits.complement',NULL,'[CALDoc] Inverts each bit of its input, converting ones to zeros and zeros to ones.\n','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1467,'highestBitMask','Cal.Core.Bits.highestBitMask','Cal.Core.Bits.highestBitMask',NULL,'[CALDoc] Clears all but the highest 1-bit of the input.\n','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1468,'shiftL','Cal.Core.Bits.shiftL','Cal.Core.Bits.shiftL',NULL,'[CALDoc] Shifts the bits of the first argument left by the number of places specified\nby the second argument. ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1469,'shiftR','Cal.Core.Bits.shiftR','Cal.Core.Bits.shiftR',NULL,'[CALDoc] Shifts the bits of the first argument to the right by the number of places\nspecified by the second argument. ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1470,'shiftRUnsigned','Cal.Core.Bits.shiftRUnsigned','Cal.Core.Bits.shiftRUnsigned',NULL,'[CALDoc] Works like <code>shiftR</code>, but always shifts zeros into the high-order bits of\nthe result, regardless of the sign of the first argument.\n','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1471,'inputDirectionality','Cal.Core.Char.inputDirectionality','Cal.Core.Char.inputDirectionality',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1472,'intToDigit','Cal.Core.Char.intToDigit','Cal.Core.Char.intToDigit',NULL,'[CALDoc] Converts an <code>Int</code> to a <code>Char</code> representing that <code>Int</code> as a hexadecimal digit.','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1473,'testModule','Cal.Core.Char.testModule','Cal.Core.Char.testModule',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1474,'typeExamples','Cal.Core.Char.typeExamples','Cal.Core.Char.typeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1475,'outputDirectionality','Cal.Core.Char.outputDirectionality','Cal.Core.Char.outputDirectionality',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1476,'directionalityExamples','Cal.Core.Char.directionalityExamples','Cal.Core.Char.directionalityExamples',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1477,'directionality','Cal.Core.Char.directionality','Cal.Core.Char.directionality',NULL,'[CALDoc] Returns: a <code>Directionality</code> value that represents the directionality of charValue.','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1478,'type','Cal.Core.Char.type','Cal.Core.Char.type',NULL,'[CALDoc] Returns: a <code>Type</code> value representing the type of the provided <code>Char</code>','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1479,'digitToInt','Cal.Core.Char.digitToInt','Cal.Core.Char.digitToInt',NULL,'[CALDoc] Converts a <code>Char</code> representing a hexadecimal digit to an <code>Int</code>.','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1480,'byteToDirectionality','Cal.Core.Char.byteToDirectionality','Cal.Core.Char.byteToDirectionality',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1481,'outputType','Cal.Core.Char.outputType','Cal.Core.Char.outputType',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1482,'inputType','Cal.Core.Char.inputType','Cal.Core.Char.inputType',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1483,'intToType','Cal.Core.Char.intToType','Cal.Core.Char.intToType',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1484,'jDirectionality','Cal.Core.Char.jDirectionality','Cal.Core.Char.jDirectionality',NULL,'[CALDoc] Returns: a <code>Byte</code> value that can be translated to a <code>Directionality</code> value\nusing <code>byteToDirectionality</code>.','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1485,'jDIRECTIONALITY_POP_DIRECTIONAL_FORMAT','Cal.Core.Char.jDIRECTIONALITY_POP_DIRECTIONAL_FORMAT','Cal.Core.Char.jDIRECTIONALITY_POP_DIRECTIONAL_FORMAT',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1486,'jDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1487,'jDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1488,'jDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE','Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE','Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1489,'jDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING','Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING','Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1490,'jDIRECTIONALITY_OTHER_NEUTRALS','Cal.Core.Char.jDIRECTIONALITY_OTHER_NEUTRALS','Cal.Core.Char.jDIRECTIONALITY_OTHER_NEUTRALS',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1491,'jDIRECTIONALITY_WHITESPACE','Cal.Core.Char.jDIRECTIONALITY_WHITESPACE','Cal.Core.Char.jDIRECTIONALITY_WHITESPACE',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1492,'jDIRECTIONALITY_SEGMENT_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_SEGMENT_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_SEGMENT_SEPARATOR',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1493,'jDIRECTIONALITY_PARAGRAPH_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_PARAGRAPH_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_PARAGRAPH_SEPARATOR',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1494,'jDIRECTIONALITY_BOUNDARY_NEUTRAL','Cal.Core.Char.jDIRECTIONALITY_BOUNDARY_NEUTRAL','Cal.Core.Char.jDIRECTIONALITY_BOUNDARY_NEUTRAL',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1495,'jDIRECTIONALITY_NONSPACING_MARK','Cal.Core.Char.jDIRECTIONALITY_NONSPACING_MARK','Cal.Core.Char.jDIRECTIONALITY_NONSPACING_MARK',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1496,'jDIRECTIONALITY_COMMON_NUMBER_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_COMMON_NUMBER_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_COMMON_NUMBER_SEPARATOR',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1497,'jDIRECTIONALITY_ARABIC_NUMBER','Cal.Core.Char.jDIRECTIONALITY_ARABIC_NUMBER','Cal.Core.Char.jDIRECTIONALITY_ARABIC_NUMBER',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1498,'jDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR','Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR','Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1499,'jDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR','Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1500,'jDIRECTIONALITY_EUROPEAN_NUMBER','Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER','Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1501,'jDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1502,'jDIRECTIONALITY_RIGHT_TO_LEFT','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT','Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1503,'jDIRECTIONALITY_LEFT_TO_RIGHT','Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT','Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1504,'jDIRECTIONALITY_UNDEFINED','Cal.Core.Char.jDIRECTIONALITY_UNDEFINED','Cal.Core.Char.jDIRECTIONALITY_UNDEFINED',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1505,'jType','Cal.Core.Char.jType','Cal.Core.Char.jType',NULL,'[CALDoc] Returns: an Int value that can be translated to a Type value by <code>intToType</code>','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1506,'jTYPE_FINAL_QUOTE_PUNCTUATION','Cal.Core.Char.jTYPE_FINAL_QUOTE_PUNCTUATION','Cal.Core.Char.jTYPE_FINAL_QUOTE_PUNCTUATION',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1507,'jTYPE_INITIAL_QUOTE_PUNCTUATION','Cal.Core.Char.jTYPE_INITIAL_QUOTE_PUNCTUATION','Cal.Core.Char.jTYPE_INITIAL_QUOTE_PUNCTUATION',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1508,'jTYPE_OTHER_SYMBOL','Cal.Core.Char.jTYPE_OTHER_SYMBOL','Cal.Core.Char.jTYPE_OTHER_SYMBOL',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1509,'jTYPE_MODIFIER_SYMBOL','Cal.Core.Char.jTYPE_MODIFIER_SYMBOL','Cal.Core.Char.jTYPE_MODIFIER_SYMBOL',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1510,'jTYPE_CURRENCY_SYMBOL','Cal.Core.Char.jTYPE_CURRENCY_SYMBOL','Cal.Core.Char.jTYPE_CURRENCY_SYMBOL',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1511,'jTYPE_MATH_SYMBOL','Cal.Core.Char.jTYPE_MATH_SYMBOL','Cal.Core.Char.jTYPE_MATH_SYMBOL',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1512,'jTYPE_OTHER_PUNCTUATION','Cal.Core.Char.jTYPE_OTHER_PUNCTUATION','Cal.Core.Char.jTYPE_OTHER_PUNCTUATION',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1513,'jTYPE_CONNECTOR_PUNCTUATION','Cal.Core.Char.jTYPE_CONNECTOR_PUNCTUATION','Cal.Core.Char.jTYPE_CONNECTOR_PUNCTUATION',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1514,'jTYPE_END_PUNCTUATION','Cal.Core.Char.jTYPE_END_PUNCTUATION','Cal.Core.Char.jTYPE_END_PUNCTUATION',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1515,'jTYPE_START_PUNCTUATION','Cal.Core.Char.jTYPE_START_PUNCTUATION','Cal.Core.Char.jTYPE_START_PUNCTUATION',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1516,'jTYPE_DASH_PUNCTUATION','Cal.Core.Char.jTYPE_DASH_PUNCTUATION','Cal.Core.Char.jTYPE_DASH_PUNCTUATION',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1517,'jTYPE_SURROGATE','Cal.Core.Char.jTYPE_SURROGATE','Cal.Core.Char.jTYPE_SURROGATE',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1518,'jTYPE_PRIVATE_USE','Cal.Core.Char.jTYPE_PRIVATE_USE','Cal.Core.Char.jTYPE_PRIVATE_USE',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1519,'jTYPE_FORMAT','Cal.Core.Char.jTYPE_FORMAT','Cal.Core.Char.jTYPE_FORMAT',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1520,'jTYPE_CONTROL','Cal.Core.Char.jTYPE_CONTROL','Cal.Core.Char.jTYPE_CONTROL',NULL,'[CALDoc] ','2008-04-20 18:16:47','2008-04-20 18:16:47'),(1521,'jTYPE_PARAGRAPH_SEPARATOR','Cal.Core.Char.jTYPE_PARAGRAPH_SEPARATOR','Cal.Core.Char.jTYPE_PARAGRAPH_SEPARATOR',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1522,'jTYPE_LINE_SEPARATOR','Cal.Core.Char.jTYPE_LINE_SEPARATOR','Cal.Core.Char.jTYPE_LINE_SEPARATOR',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1523,'jTYPE_SPACE_SEPARATOR','Cal.Core.Char.jTYPE_SPACE_SEPARATOR','Cal.Core.Char.jTYPE_SPACE_SEPARATOR',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1524,'jTYPE_OTHER_NUMBER','Cal.Core.Char.jTYPE_OTHER_NUMBER','Cal.Core.Char.jTYPE_OTHER_NUMBER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1525,'jTYPE_LETTER_NUMBER','Cal.Core.Char.jTYPE_LETTER_NUMBER','Cal.Core.Char.jTYPE_LETTER_NUMBER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1526,'jTYPE_DECIMAL_DIGIT_NUMBER','Cal.Core.Char.jTYPE_DECIMAL_DIGIT_NUMBER','Cal.Core.Char.jTYPE_DECIMAL_DIGIT_NUMBER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1527,'jTYPE_COMBINING_SPACING_MARK','Cal.Core.Char.jTYPE_COMBINING_SPACING_MARK','Cal.Core.Char.jTYPE_COMBINING_SPACING_MARK',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1528,'jTYPE_ENCLOSING_MARK','Cal.Core.Char.jTYPE_ENCLOSING_MARK','Cal.Core.Char.jTYPE_ENCLOSING_MARK',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1529,'jTYPE_NON_SPACING_MARK','Cal.Core.Char.jTYPE_NON_SPACING_MARK','Cal.Core.Char.jTYPE_NON_SPACING_MARK',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1530,'jTYPE_OTHER_LETTER','Cal.Core.Char.jTYPE_OTHER_LETTER','Cal.Core.Char.jTYPE_OTHER_LETTER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1531,'jTYPE_MODIFIER_LETTER','Cal.Core.Char.jTYPE_MODIFIER_LETTER','Cal.Core.Char.jTYPE_MODIFIER_LETTER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1532,'jTYPE_TITLECASE_LETTER','Cal.Core.Char.jTYPE_TITLECASE_LETTER','Cal.Core.Char.jTYPE_TITLECASE_LETTER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1533,'jTYPE_LOWERCASE_LETTER','Cal.Core.Char.jTYPE_LOWERCASE_LETTER','Cal.Core.Char.jTYPE_LOWERCASE_LETTER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1534,'jTYPE_UPPERCASE_LETTER','Cal.Core.Char.jTYPE_UPPERCASE_LETTER','Cal.Core.Char.jTYPE_UPPERCASE_LETTER',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1535,'jTYPE_UNASSIGNED','Cal.Core.Char.jTYPE_UNASSIGNED','Cal.Core.Char.jTYPE_UNASSIGNED',NULL,'[CALDoc] ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1536,'toLowerCase','Cal.Core.Char.toLowerCase','Cal.Core.Char.toLowerCase',NULL,'[CALDoc] Converts the character argument to lowercase using case mapping information\nfrom the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1537,'toUpperCase','Cal.Core.Char.toUpperCase','Cal.Core.Char.toUpperCase',NULL,'[CALDoc] Converts the character argument to uppercase using case mapping information\nfrom the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1538,'isLetterOrDigit','Cal.Core.Char.isLetterOrDigit','Cal.Core.Char.isLetterOrDigit',NULL,'[CALDoc] Determines if the specified character is a letter or digit according to the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1539,'isDigit','Cal.Core.Char.isDigit','Cal.Core.Char.isDigit',NULL,'[CALDoc] Determines if the specified character is a digit according to the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1540,'isLetter','Cal.Core.Char.isLetter','Cal.Core.Char.isLetter',NULL,'[CALDoc] Determines if the specified character is a letter according to the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1541,'isLowerCase','Cal.Core.Char.isLowerCase','Cal.Core.Char.isLowerCase',NULL,'[CALDoc] Determines if the specified character is a lowercase character according to the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1542,'isUpperCase','Cal.Core.Char.isUpperCase','Cal.Core.Char.isUpperCase',NULL,'[CALDoc] Determines if the specified character is an uppercase character according to the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1543,'isWhitespace','Cal.Core.Char.isWhitespace','Cal.Core.Char.isWhitespace',NULL,'[CALDoc] Determines if the specified character is white space according to Java. ','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1544,'isSpaceChar','Cal.Core.Char.isSpaceChar','Cal.Core.Char.isSpaceChar',NULL,'[CALDoc] Determines if the specified character is a space character according to the Unicode Standard.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1545,'fromInt','Cal.Core.Char.fromInt','Cal.Core.Char.fromInt',NULL,'[CALDoc] Converts an <code>Int</code> value to a <code>Char</code> value.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1546,'toInt','Cal.Core.Char.toInt','Cal.Core.Char.toInt',NULL,'[CALDoc] Converts a <code>Char</code> value to an <code>Int</code> value.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1547,'TYPE_UNASSIGNED','Cal.Core.Char.TYPE_UNASSIGNED','Cal.Core.Char.TYPE_UNASSIGNED',NULL,'[CALDoc] General category \"Cn\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1548,'TYPE_UPPERCASE_LETTER','Cal.Core.Char.TYPE_UPPERCASE_LETTER','Cal.Core.Char.TYPE_UPPERCASE_LETTER',NULL,'[CALDoc] General category \"Lu\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1549,'TYPE_LOWERCASE_LETTER','Cal.Core.Char.TYPE_LOWERCASE_LETTER','Cal.Core.Char.TYPE_LOWERCASE_LETTER',NULL,'[CALDoc] General category \"Ll\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1550,'TYPE_TITLECASE_LETTER','Cal.Core.Char.TYPE_TITLECASE_LETTER','Cal.Core.Char.TYPE_TITLECASE_LETTER',NULL,'[CALDoc] General category \"Lt\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1551,'TYPE_MODIFIER_LETTER','Cal.Core.Char.TYPE_MODIFIER_LETTER','Cal.Core.Char.TYPE_MODIFIER_LETTER',NULL,'[CALDoc] General category \"Lm\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1552,'TYPE_OTHER_LETTER','Cal.Core.Char.TYPE_OTHER_LETTER','Cal.Core.Char.TYPE_OTHER_LETTER',NULL,'[CALDoc] General category \"Lo\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1553,'TYPE_NON_SPACING_MARK','Cal.Core.Char.TYPE_NON_SPACING_MARK','Cal.Core.Char.TYPE_NON_SPACING_MARK',NULL,'[CALDoc] General category \"Mn\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1554,'TYPE_ENCLOSING_MARK','Cal.Core.Char.TYPE_ENCLOSING_MARK','Cal.Core.Char.TYPE_ENCLOSING_MARK',NULL,'[CALDoc] General category \"Me\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1555,'TYPE_COMBINING_SPACING_MARK','Cal.Core.Char.TYPE_COMBINING_SPACING_MARK','Cal.Core.Char.TYPE_COMBINING_SPACING_MARK',NULL,'[CALDoc] General category \"Mc\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1556,'TYPE_DECIMAL_DIGIT_NUMBER','Cal.Core.Char.TYPE_DECIMAL_DIGIT_NUMBER','Cal.Core.Char.TYPE_DECIMAL_DIGIT_NUMBER',NULL,'[CALDoc] General category \"Nd\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1557,'TYPE_LETTER_NUMBER','Cal.Core.Char.TYPE_LETTER_NUMBER','Cal.Core.Char.TYPE_LETTER_NUMBER',NULL,'[CALDoc] General category \"Nl\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1558,'TYPE_OTHER_NUMBER','Cal.Core.Char.TYPE_OTHER_NUMBER','Cal.Core.Char.TYPE_OTHER_NUMBER',NULL,'[CALDoc] General category \"No\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1559,'TYPE_SPACE_SEPARATOR','Cal.Core.Char.TYPE_SPACE_SEPARATOR','Cal.Core.Char.TYPE_SPACE_SEPARATOR',NULL,'[CALDoc] General category \"Zs\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1560,'TYPE_LINE_SEPARATOR','Cal.Core.Char.TYPE_LINE_SEPARATOR','Cal.Core.Char.TYPE_LINE_SEPARATOR',NULL,'[CALDoc] General category \"Zl\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1561,'TYPE_PARAGRAPH_SEPARATOR','Cal.Core.Char.TYPE_PARAGRAPH_SEPARATOR','Cal.Core.Char.TYPE_PARAGRAPH_SEPARATOR',NULL,'[CALDoc] General category \"Zp\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1562,'TYPE_CONTROL','Cal.Core.Char.TYPE_CONTROL','Cal.Core.Char.TYPE_CONTROL',NULL,'[CALDoc] General category \"Cc\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1563,'TYPE_FORMAT','Cal.Core.Char.TYPE_FORMAT','Cal.Core.Char.TYPE_FORMAT',NULL,'[CALDoc] General category \"Cf\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1564,'TYPE_PRIVATE_USE','Cal.Core.Char.TYPE_PRIVATE_USE','Cal.Core.Char.TYPE_PRIVATE_USE',NULL,'[CALDoc] General category \"Co\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1565,'TYPE_SURROGATE','Cal.Core.Char.TYPE_SURROGATE','Cal.Core.Char.TYPE_SURROGATE',NULL,'[CALDoc] General category \"Cs\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1566,'TYPE_DASH_PUNCTUATION','Cal.Core.Char.TYPE_DASH_PUNCTUATION','Cal.Core.Char.TYPE_DASH_PUNCTUATION',NULL,'[CALDoc] General category \"Pd\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1567,'TYPE_START_PUNCTUATION','Cal.Core.Char.TYPE_START_PUNCTUATION','Cal.Core.Char.TYPE_START_PUNCTUATION',NULL,'[CALDoc] General category \"Ps\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1568,'TYPE_END_PUNCTUATION','Cal.Core.Char.TYPE_END_PUNCTUATION','Cal.Core.Char.TYPE_END_PUNCTUATION',NULL,'[CALDoc] General category \"Pe\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1569,'TYPE_CONNECTOR_PUNCTUATION','Cal.Core.Char.TYPE_CONNECTOR_PUNCTUATION','Cal.Core.Char.TYPE_CONNECTOR_PUNCTUATION',NULL,'[CALDoc] General category \"Pc\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1570,'TYPE_OTHER_PUNCTUATION','Cal.Core.Char.TYPE_OTHER_PUNCTUATION','Cal.Core.Char.TYPE_OTHER_PUNCTUATION',NULL,'[CALDoc] General category \"Po\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1571,'TYPE_MATH_SYMBOL','Cal.Core.Char.TYPE_MATH_SYMBOL','Cal.Core.Char.TYPE_MATH_SYMBOL',NULL,'[CALDoc] General category \"Sm\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1572,'TYPE_CURRENCY_SYMBOL','Cal.Core.Char.TYPE_CURRENCY_SYMBOL','Cal.Core.Char.TYPE_CURRENCY_SYMBOL',NULL,'[CALDoc] General category \"Sc\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1573,'TYPE_MODIFIER_SYMBOL','Cal.Core.Char.TYPE_MODIFIER_SYMBOL','Cal.Core.Char.TYPE_MODIFIER_SYMBOL',NULL,'[CALDoc] General category \"Sk\" in the Unicode specification.','2008-04-20 18:16:48','2008-04-20 18:16:48'),(1574,'TYPE_OTHER_SYMBOL','Cal.Core.Char.TYPE_OTHER_SYMBOL','Cal.Core.Char.TYPE_OTHER_SYMBOL',NULL,'[CALDoc] General category \"So\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1575,'TYPE_INITIAL_QUOTE_PUNCTUATION','Cal.Core.Char.TYPE_INITIAL_QUOTE_PUNCTUATION','Cal.Core.Char.TYPE_INITIAL_QUOTE_PUNCTUATION',NULL,'[CALDoc] General category \"Pi\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1576,'TYPE_FINAL_QUOTE_PUNCTUATION','Cal.Core.Char.TYPE_FINAL_QUOTE_PUNCTUATION','Cal.Core.Char.TYPE_FINAL_QUOTE_PUNCTUATION',NULL,'[CALDoc] General category \"Pf\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1577,'DIRECTIONALITY_UNDEFINED','Cal.Core.Char.DIRECTIONALITY_UNDEFINED','Cal.Core.Char.DIRECTIONALITY_UNDEFINED',NULL,'[CALDoc] Undefined bidirectional character type.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1578,'DIRECTIONALITY_LEFT_TO_RIGHT','Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT','Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT',NULL,'[CALDoc] Strong bidirectional character type \"L\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1579,'DIRECTIONALITY_RIGHT_TO_LEFT','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT',NULL,'[CALDoc] Strong bidirectional character type \"R\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1580,'DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC',NULL,'[CALDoc] Strong bidirectional character type \"AL\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1581,'DIRECTIONALITY_EUROPEAN_NUMBER','Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER','Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER',NULL,'[CALDoc] Weak bidirectional character type \"EN\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1582,'DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR',NULL,'[CALDoc] Weak bidirectional character type \"ES\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1583,'DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR','Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR','Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR',NULL,'[CALDoc] Weak bidirectional character type \"ET\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1584,'DIRECTIONALITY_ARABIC_NUMBER','Cal.Core.Char.DIRECTIONALITY_ARABIC_NUMBER','Cal.Core.Char.DIRECTIONALITY_ARABIC_NUMBER',NULL,'[CALDoc] Weak bidirectional character type \"AN\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1585,'DIRECTIONALITY_COMMON_NUMBER_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR',NULL,'[CALDoc] Weak bidirectional character type \"CS\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1586,'DIRECTIONALITY_NONSPACING_MARK','Cal.Core.Char.DIRECTIONALITY_NONSPACING_MARK','Cal.Core.Char.DIRECTIONALITY_NONSPACING_MARK',NULL,'[CALDoc] Weak bidirectional character type \"NSM\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1587,'DIRECTIONALITY_BOUNDARY_NEUTRAL','Cal.Core.Char.DIRECTIONALITY_BOUNDARY_NEUTRAL','Cal.Core.Char.DIRECTIONALITY_BOUNDARY_NEUTRAL',NULL,'[CALDoc] Weak bidirectional character type \"BN\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1588,'DIRECTIONALITY_PARAGRAPH_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_PARAGRAPH_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_PARAGRAPH_SEPARATOR',NULL,'[CALDoc] Neutral bidirectional character type \"B\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1589,'DIRECTIONALITY_SEGMENT_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_SEGMENT_SEPARATOR','Cal.Core.Char.DIRECTIONALITY_SEGMENT_SEPARATOR',NULL,'[CALDoc] Neutral bidirectional character type \"S\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1590,'DIRECTIONALITY_WHITESPACE','Cal.Core.Char.DIRECTIONALITY_WHITESPACE','Cal.Core.Char.DIRECTIONALITY_WHITESPACE',NULL,'[CALDoc] Neutral bidirectional character type \"WS\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1591,'DIRECTIONALITY_OTHER_NEUTRALS','Cal.Core.Char.DIRECTIONALITY_OTHER_NEUTRALS','Cal.Core.Char.DIRECTIONALITY_OTHER_NEUTRALS',NULL,'[CALDoc] Neutral bidirectional character type \"ON\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1592,'DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING','Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING','Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING',NULL,'[CALDoc] Strong bidirectional character type \"LRE\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1593,'DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE','Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE','Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE',NULL,'[CALDoc] Strong bidirectional character type \"LRO\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1594,'DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING',NULL,'[CALDoc] Strong bidirectional character type \"RLE\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1595,'DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE','Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE',NULL,'[CALDoc] Strong bidirectional character type \"RLO\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1596,'DIRECTIONALITY_POP_DIRECTIONAL_FORMAT','Cal.Core.Char.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT','Cal.Core.Char.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT',NULL,'[CALDoc] Weak bidirectional character type \"PDF\" in the Unicode specification.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1597,'showInteger','Cal.Core.Debug.showInteger','Cal.Core.Debug.showInteger',NULL,'[CALDoc] handles the case where the Integer object is null','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1598,'outputMachineTypeToJObject','Cal.Core.Debug.outputMachineTypeToJObject','Cal.Core.Debug.outputMachineTypeToJObject',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1599,'traceTransformationDifferences','Cal.Core.Debug.traceTransformationDifferences','Cal.Core.Debug.traceTransformationDifferences',NULL,'[CALDoc] Modifies the specified transformation function to trace the input value and the result value when evaluated.\n','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1600,'showMaybe','Cal.Core.Debug.showMaybe','Cal.Core.Debug.showMaybe',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1601,'internalValueStats','Cal.Core.Debug.internalValueStats','Cal.Core.Debug.internalValueStats',NULL,'[CALDoc] Calculates various statistics concerning the internal machine representation of the argument value. ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1602,'showList','Cal.Core.Debug.showList','Cal.Core.Debug.showList',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1603,'showBoolean','Cal.Core.Debug.showBoolean','Cal.Core.Debug.showBoolean',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1604,'getTraceEnabledFunctions','Cal.Core.Debug.getTraceEnabledFunctions','Cal.Core.Debug.getTraceEnabledFunctions',NULL,'[CALDoc] Returns a list of the function names for which tracing is enabled. \n','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1605,'showJMap','Cal.Core.Debug.showJMap','Cal.Core.Debug.showJMap',NULL,'[CALDoc] handles the case where the JMap object is null','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1606,'showDefault','Cal.Core.Debug.showDefault','Cal.Core.Debug.showDefault',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1607,'machineType','Cal.Core.Debug.machineType','Cal.Core.Debug.machineType',NULL,'[CALDoc] The currently executing machine type. ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1608,'showOrdering','Cal.Core.Debug.showOrdering','Cal.Core.Debug.showOrdering',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1609,'setTraceShowsFunctionArgs','Cal.Core.Debug.setTraceShowsFunctionArgs','Cal.Core.Debug.setTraceShowsFunctionArgs',NULL,'[CALDoc] Enables function tracing to also display the values of the function arguments as part of the trace.\n','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1610,'setTraceShowsThreadName','Cal.Core.Debug.setTraceShowsThreadName','Cal.Core.Debug.setTraceShowsThreadName',NULL,'[CALDoc] Enables function tracing to also display the name of the thread that is executing the particular function call \nas part of the trace.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1611,'showInternal','Cal.Core.Debug.showInternal','Cal.Core.Debug.showInternal',NULL,'[CALDoc] Displays the internal representation of a value. ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1612,'inputMachineTypeFromJObject','Cal.Core.Debug.inputMachineTypeFromJObject','Cal.Core.Debug.inputMachineTypeFromJObject',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1613,'inputMachineType','Cal.Core.Debug.inputMachineType','Cal.Core.Debug.inputMachineType',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1614,'traceOnStdOut','Cal.Core.Debug.traceOnStdOut','Cal.Core.Debug.traceOnStdOut',NULL,'[CALDoc] Prints its first argument to the standard output stream, and then returns its second argument.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1615,'traceShowable','Cal.Core.Debug.traceShowable','Cal.Core.Debug.traceShowable',NULL,'[CALDoc] Traces the specified showable value and returns its original value.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1616,'traceShowsThreadName','Cal.Core.Debug.traceShowsThreadName','Cal.Core.Debug.traceShowsThreadName',NULL,'[CALDoc] Returns true if function tracing will also display the name of the thread that is executing the particular function\ncall as part of the trace.','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1617,'sameEvalTimes','Cal.Core.Debug.sameEvalTimes','Cal.Core.Debug.sameEvalTimes',NULL,'[CALDoc] Returns <code>True</code> if the evaluate times of the two expressions (<code>f1</code> and <code>f2</code>) are withing the \ngiven percent margin.  ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1618,'traceShowsFunctionArgs','Cal.Core.Debug.traceShowsFunctionArgs','Cal.Core.Debug.traceShowsFunctionArgs',NULL,'[CALDoc] Returns true if function tracing will also display the values of the function arguments as part of the trace.\n','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1619,'showDecimal','Cal.Core.Debug.showDecimal','Cal.Core.Debug.showDecimal',NULL,'[CALDoc] handles the case where the Decimal object is null','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1620,'showJCollection','Cal.Core.Debug.showJCollection','Cal.Core.Debug.showJCollection',NULL,'[CALDoc] handles the case where the JCollection object is null','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1621,'showEither','Cal.Core.Debug.showEither','Cal.Core.Debug.showEither',NULL,'[CALDoc] ','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1622,'showJList','Cal.Core.Debug.showJList','Cal.Core.Debug.showJList',NULL,'[CALDoc] handles the case where the JList object is null','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1623,'sleep','Cal.Core.Debug.sleep','Cal.Core.Debug.sleep',NULL,'[CALDoc] <code>sleep</code> for a specified number of milliseconds and then return.\n','2008-04-20 18:16:49','2008-04-20 18:16:49'),(1624,'isTracingEnabled','Cal.Core.Debug.isTracingEnabled','Cal.Core.Debug.isTracingEnabled',NULL,'[CALDoc] Returns true if tracing is currently enabled.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1625,'showInternalGraph','Cal.Core.Debug.showInternalGraph','Cal.Core.Debug.showInternalGraph',NULL,'[CALDoc] Displays the internal representation of a value, including information about shared nodes and indirection nodes.\n','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1626,'setTracingEnabled','Cal.Core.Debug.setTracingEnabled','Cal.Core.Debug.setTracingEnabled',NULL,'[CALDoc] Enables tracing to occur for subsequent function calls.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1627,'traceListMemberAccess','Cal.Core.Debug.traceListMemberAccess','Cal.Core.Debug.traceListMemberAccess',NULL,'[CALDoc] Augments a list of values such that a trace message will be displayed when members at a specified interval are accessed.\n','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1628,'showUnit','Cal.Core.Debug.showUnit','Cal.Core.Debug.showUnit',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1629,'sameEvalTimesTrace','Cal.Core.Debug.sameEvalTimesTrace','Cal.Core.Debug.sameEvalTimesTrace',NULL,'[CALDoc] Performs the same as <code>sameEvalTimes</code> but traces the result of <code>compareEvalTimes</code>.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1630,'compareEvalTimes','Cal.Core.Debug.compareEvalTimes','Cal.Core.Debug.compareEvalTimes',NULL,'[CALDoc] Evaluates the given expressions (<code>f1</code> and <code>f2</code>) to WHNF and returns a record containing\nthe time to evalute each expression and the difference expressed as an absolute and a percentage of the\nfirst time.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1631,'percentDif','Cal.Core.Debug.percentDif','Cal.Core.Debug.percentDif',NULL,'[CALDoc] Calculates the difference between two values as a percentage of the first value\nand rounds the result to two decimal places.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1632,'evalTime','Cal.Core.Debug.evalTime','Cal.Core.Debug.evalTime',NULL,'[CALDoc] Evaluates the given expression <code>f</code> to WHNF and returns the time taken to evaluate it.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1633,'traceTransformation','Cal.Core.Debug.traceTransformation','Cal.Core.Debug.traceTransformation',NULL,'[CALDoc] Modifies the specified transformation function to trace the input value and the result value when evaluated.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1634,'trace','Cal.Core.Debug.trace','Cal.Core.Debug.trace',NULL,'[CALDoc] Prints its first argument to the standard error stream, and then returns its second argument.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1635,'setTracingEnabledFor','Cal.Core.Debug.setTracingEnabledFor','Cal.Core.Debug.setTracingEnabledFor',NULL,'[CALDoc] Enables/disables tracing to occur for subsequent calls to the named function.\n','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1636,'executionContext_removeTracedFunction','Cal.Core.Debug.executionContext_removeTracedFunction','Cal.Core.Debug.executionContext_removeTracedFunction',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1637,'executionContext_addTracedFunction','Cal.Core.Debug.executionContext_addTracedFunction','Cal.Core.Debug.executionContext_addTracedFunction',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1638,'executionContext_getTracedFunctions','Cal.Core.Debug.executionContext_getTracedFunctions','Cal.Core.Debug.executionContext_getTracedFunctions',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1639,'executionContext_setTraceShowsFunctionArgs','Cal.Core.Debug.executionContext_setTraceShowsFunctionArgs','Cal.Core.Debug.executionContext_setTraceShowsFunctionArgs',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1640,'executionContext_traceShowsFunctionArgs','Cal.Core.Debug.executionContext_traceShowsFunctionArgs','Cal.Core.Debug.executionContext_traceShowsFunctionArgs',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1641,'executionContext_setTraceShowsThreadName','Cal.Core.Debug.executionContext_setTraceShowsThreadName','Cal.Core.Debug.executionContext_setTraceShowsThreadName',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1642,'executionContext_traceShowsThreadName','Cal.Core.Debug.executionContext_traceShowsThreadName','Cal.Core.Debug.executionContext_traceShowsThreadName',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1643,'executionContext_setTracingEnabled','Cal.Core.Debug.executionContext_setTracingEnabled','Cal.Core.Debug.executionContext_setTracingEnabled',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1644,'executionContext_isTracingEnabled','Cal.Core.Debug.executionContext_isTracingEnabled','Cal.Core.Debug.executionContext_isTracingEnabled',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1645,'debug_getMachineType','Cal.Core.Debug.debug_getMachineType','Cal.Core.Debug.debug_getMachineType',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1646,'jMachineType_G','Cal.Core.Debug.jMachineType_G','Cal.Core.Debug.jMachineType_G',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1647,'jMachineType_Lecc','Cal.Core.Debug.jMachineType_Lecc','Cal.Core.Debug.jMachineType_Lecc',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1648,'thread_sleep','Cal.Core.Debug.thread_sleep','Cal.Core.Debug.thread_sleep',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1649,'getSystemTime','Cal.Core.Debug.getSystemTime','Cal.Core.Debug.getSystemTime',NULL,'[CALDoc] Returns: retrieve the current system time in milliseconds.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1650,'sharedNodeCount','Cal.Core.Debug.sharedNodeCount','Cal.Core.Debug.sharedNodeCount',NULL,'[CALDoc] Returns the number of shared nodes in the internal graph representing the value that created <code>InternalValueStats</code>.\n','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1651,'distinctIndirectionNodeCount','Cal.Core.Debug.distinctIndirectionNodeCount','Cal.Core.Debug.distinctIndirectionNodeCount',NULL,'[CALDoc] Returns the number of distinct indirection nodes in the internal graph representing the value that created <code>InternalValueStats</code>.\n','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1652,'distinctNodeCount','Cal.Core.Debug.distinctNodeCount','Cal.Core.Debug.distinctNodeCount',NULL,'[CALDoc] Returns the number of distinct nodes in the internal graph representing the value that created <code>InternalValueStats</code>. \n','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1653,'internalValueStatsHelper','Cal.Core.Debug.internalValueStatsHelper','Cal.Core.Debug.internalValueStatsHelper',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1654,'showInternalValueGraph','Cal.Core.Debug.showInternalValueGraph','Cal.Core.Debug.showInternalValueGraph',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1655,'showInternalValue','Cal.Core.Debug.showInternalValue','Cal.Core.Debug.showInternalValue',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1656,'showJObject','Cal.Core.Debug.showJObject','Cal.Core.Debug.showJObject',NULL,'[CALDoc] Used for derived Show instances for foreign types with an object implementation type.\nnote: we want to handle the null object values here without terminating in an error\nand thus don\'t implement as java.lang.Object.toString().','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1657,'showString','Cal.Core.Debug.showString','Cal.Core.Debug.showString',NULL,'[CALDoc] Returns: the String value, surrounded by double quotes if not null, and \"null\" otherwise','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1658,'showDouble','Cal.Core.Debug.showDouble','Cal.Core.Debug.showDouble',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type double.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1659,'showFloat','Cal.Core.Debug.showFloat','Cal.Core.Debug.showFloat',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type float.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1660,'showLong','Cal.Core.Debug.showLong','Cal.Core.Debug.showLong',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type long.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1661,'showInt','Cal.Core.Debug.showInt','Cal.Core.Debug.showInt',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type int.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1662,'showShort','Cal.Core.Debug.showShort','Cal.Core.Debug.showShort',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type short.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1663,'showByte','Cal.Core.Debug.showByte','Cal.Core.Debug.showByte',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type byte.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1664,'showForeignChar','Cal.Core.Debug.showForeignChar','Cal.Core.Debug.showForeignChar',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type char.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1665,'showChar','Cal.Core.Debug.showChar','Cal.Core.Debug.showChar',NULL,'[CALDoc] Returns: the Char value, surrounded by single quotes.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1666,'showForeignBoolean','Cal.Core.Debug.showForeignBoolean','Cal.Core.Debug.showForeignBoolean',NULL,'[CALDoc] Used for derived Show instances for foreign types with implementation type boolean.','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1667,'jPrintToStandardError','Cal.Core.Debug.jPrintToStandardError','Cal.Core.Debug.jPrintToStandardError',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1668,'jPrintToStandardOut','Cal.Core.Debug.jPrintToStandardOut','Cal.Core.Debug.jPrintToStandardOut',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1669,'showRecord','Cal.Core.Debug.showRecord','Cal.Core.Debug.showRecord',NULL,'[CALDoc] ','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1670,'MachineType_Lecc','Cal.Core.Debug.MachineType_Lecc','Cal.Core.Debug.MachineType_Lecc',NULL,'[CALDoc] The Lazily Evaluating CAL Compiler (formerly Luke\'s Experimental CAL Compiler) machine type.\n','2008-04-20 18:16:50','2008-04-20 18:16:50'),(1671,'MachineType_G','Cal.Core.Debug.MachineType_G','Cal.Core.Debug.MachineType_G',NULL,'[CALDoc] The g machine type. ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1672,'show','Cal.Core.Debug.show','Cal.Core.Debug.show',NULL,'[CALDoc] Constructs a string representation of the argument, which is a value of the instance type.\n','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1673,'inputRoundingMode','Cal.Utilities.Decimal.inputRoundingMode','Cal.Utilities.Decimal.inputRoundingMode',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1674,'outputRoundingMode','Cal.Utilities.Decimal.outputRoundingMode','Cal.Utilities.Decimal.outputRoundingMode',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1675,'testModule','Cal.Utilities.Decimal.testModule','Cal.Utilities.Decimal.testModule',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1676,'setScaleWithRoundingExamples','Cal.Utilities.Decimal.setScaleWithRoundingExamples','Cal.Utilities.Decimal.setScaleWithRoundingExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1677,'setScaleWithRounding','Cal.Utilities.Decimal.setScaleWithRounding','Cal.Utilities.Decimal.setScaleWithRounding',NULL,'[CALDoc] Returns a new <code>Decimal</code> value with the specified scale.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1678,'scaleExamples','Cal.Utilities.Decimal.scaleExamples','Cal.Utilities.Decimal.scaleExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1679,'divideWithScaleAndRoundingExamples','Cal.Utilities.Decimal.divideWithScaleAndRoundingExamples','Cal.Utilities.Decimal.divideWithScaleAndRoundingExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1680,'divideWithScaleAndRounding','Cal.Utilities.Decimal.divideWithScaleAndRounding','Cal.Utilities.Decimal.divideWithScaleAndRounding',NULL,'[CALDoc] A version of divide that allows the user to specify the scale of the result\nand the rounding mode to use if rounding is necessary.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1681,'divideWithRoundingExamples','Cal.Utilities.Decimal.divideWithRoundingExamples','Cal.Utilities.Decimal.divideWithRoundingExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1682,'roundingModeExamples','Cal.Utilities.Decimal.roundingModeExamples','Cal.Utilities.Decimal.roundingModeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1683,'divideWithRounding','Cal.Utilities.Decimal.divideWithRounding','Cal.Utilities.Decimal.divideWithRounding',NULL,'[CALDoc] A version of divide that allows the user to specify the rounding mode to\nuse if rounding is required.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1684,'jDivideWithRounding','Cal.Utilities.Decimal.jDivideWithRounding','Cal.Utilities.Decimal.jDivideWithRounding',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1685,'jDivideWithScaleAndRounding','Cal.Utilities.Decimal.jDivideWithScaleAndRounding','Cal.Utilities.Decimal.jDivideWithScaleAndRounding',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1686,'scale','Cal.Utilities.Decimal.scale','Cal.Utilities.Decimal.scale',NULL,'[CALDoc] Returns: the scale (ie, number of digits after the decimal point) of the\nspecified decimal value.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1687,'fromDouble','Cal.Utilities.Decimal.fromDouble','Cal.Utilities.Decimal.fromDouble',NULL,'[CALDoc] Converts a <code>Double</code> value to the equivalent <code>Decimal</code> value.\n','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1688,'toString','Cal.Utilities.Decimal.toString','Cal.Utilities.Decimal.toString',NULL,'[CALDoc] Converts a <code>Decimal</code> value to a string representation.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1689,'fromString','Cal.Utilities.Decimal.fromString','Cal.Utilities.Decimal.fromString',NULL,'[CALDoc] Parses a string (eg. <code>\"34.33\"</code>, <code>\"1.0e50000\"</code>) into a <code>Decimal</code>.\n','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1690,'jSetScaleWithRounding','Cal.Utilities.Decimal.jSetScaleWithRounding','Cal.Utilities.Decimal.jSetScaleWithRounding',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1691,'ROUND_UP','Cal.Utilities.Decimal.ROUND_UP','Cal.Utilities.Decimal.ROUND_UP',NULL,'[CALDoc] Always round up (away from zero)','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1692,'ROUND_DOWN','Cal.Utilities.Decimal.ROUND_DOWN','Cal.Utilities.Decimal.ROUND_DOWN',NULL,'[CALDoc] Always round down (toward zero)','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1693,'ROUND_CEILING','Cal.Utilities.Decimal.ROUND_CEILING','Cal.Utilities.Decimal.ROUND_CEILING',NULL,'[CALDoc] Round towards positive infinity','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1694,'ROUND_FLOOR','Cal.Utilities.Decimal.ROUND_FLOOR','Cal.Utilities.Decimal.ROUND_FLOOR',NULL,'[CALDoc] Round toward negative infinity','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1695,'ROUND_HALF_UP','Cal.Utilities.Decimal.ROUND_HALF_UP','Cal.Utilities.Decimal.ROUND_HALF_UP',NULL,'[CALDoc] Round towards \"nearest neighbor\" unless both neighbors are equidistant, \nin which case round up.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1696,'ROUND_HALF_DOWN','Cal.Utilities.Decimal.ROUND_HALF_DOWN','Cal.Utilities.Decimal.ROUND_HALF_DOWN',NULL,'[CALDoc] Round towards \"nearest neighbor\" unless both neighbors are equidistant, \nin which case round down.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1697,'ROUND_HALF_EVEN','Cal.Utilities.Decimal.ROUND_HALF_EVEN','Cal.Utilities.Decimal.ROUND_HALF_EVEN',NULL,'[CALDoc] Round towards the \"nearest neighbor\" unless both neighbors are equidistant, \nin which case, round towards the even neighbor.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1698,'ROUND_UNNECESSARY','Cal.Utilities.Decimal.ROUND_UNNECESSARY','Cal.Utilities.Decimal.ROUND_UNNECESSARY',NULL,'[CALDoc] Indicate that rounding is unnecessary.  ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1699,'dynamicRecordHasField','Cal.Core.Dynamic.dynamicRecordHasField','Cal.Core.Dynamic.dynamicRecordHasField',NULL,'[CALDoc] Returns: <code>True</code> if <code>dynamicValue</code> is a dynamic record with the given field name and false otherwise.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1700,'showDynamic','Cal.Core.Dynamic.showDynamic','Cal.Core.Dynamic.showDynamic',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1701,'dynamicUnderlyingType','Cal.Core.Dynamic.dynamicUnderlyingType','Cal.Core.Dynamic.dynamicUnderlyingType',NULL,'[CALDoc] Returns the <code>TypeRep</code> value representing the type of the underlying value of a\n<code>Dynamic</code> value.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1702,'isEmptyDynamicRecord','Cal.Core.Dynamic.isEmptyDynamicRecord','Cal.Core.Dynamic.isEmptyDynamicRecord',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1703,'testModule','Cal.Core.Dynamic.testModule','Cal.Core.Dynamic.testModule',NULL,'[CALDoc] Returns: <code>True</code> if the testing predicates in this module all run successfully.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1704,'isOrdinalFieldNameExamples','Cal.Core.Dynamic.isOrdinalFieldNameExamples','Cal.Core.Dynamic.isOrdinalFieldNameExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1705,'insertDynamicRecordDynamicFieldExamples','Cal.Core.Dynamic.insertDynamicRecordDynamicFieldExamples','Cal.Core.Dynamic.insertDynamicRecordDynamicFieldExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1706,'insertDynamicRecordDynamicField','Cal.Core.Dynamic.insertDynamicRecordDynamicField','Cal.Core.Dynamic.insertDynamicRecordDynamicField',NULL,'[CALDoc] Takes a <code>Dynamic</code> value containing a record, a field name, and a dynamic value, and returns a\n<code>Dynamic</code> value containing a new record that extends the old record with a field of the\nspecified name having the specified value.  ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1707,'fieldOrdinalExamples','Cal.Core.Dynamic.fieldOrdinalExamples','Cal.Core.Dynamic.fieldOrdinalExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1708,'dynamicRecordFieldValueExamples','Cal.Core.Dynamic.dynamicRecordFieldValueExamples','Cal.Core.Dynamic.dynamicRecordFieldValueExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1709,'dynamicApplyExamples','Cal.Core.Dynamic.dynamicApplyExamples','Cal.Core.Dynamic.dynamicApplyExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1710,'dynamicApply','Cal.Core.Dynamic.dynamicApply','Cal.Core.Dynamic.dynamicApply',NULL,'[CALDoc] Takes a function wrapped in a <code>Dynamic</code> value and attempts to apply it to an argument\nwrapped in a <code>Dynamic</code> value.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1711,'appendDynamicRecordExamples','Cal.Core.Dynamic.appendDynamicRecordExamples','Cal.Core.Dynamic.appendDynamicRecordExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1712,'appendRecordExamples','Cal.Core.Dynamic.appendRecordExamples','Cal.Core.Dynamic.appendRecordExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1713,'appendRecord','Cal.Core.Dynamic.appendRecord','Cal.Core.Dynamic.appendRecord',NULL,'[CALDoc] Combine two records into a single record containing the fields of both.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1714,'dynamicAppExamples','Cal.Core.Dynamic.dynamicAppExamples','Cal.Core.Dynamic.dynamicAppExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1715,'fromDynamicListExamples','Cal.Core.Dynamic.fromDynamicListExamples','Cal.Core.Dynamic.fromDynamicListExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1716,'fromDynamicWithDefault','Cal.Core.Dynamic.fromDynamicWithDefault','Cal.Core.Dynamic.fromDynamicWithDefault',NULL,'[CALDoc] One of the ways to extract a value from a <code>Dynamic</code> value.\n','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1717,'fromDynamicList','Cal.Core.Dynamic.fromDynamicList','Cal.Core.Dynamic.fromDynamicList',NULL,'[CALDoc] If <code>dynamicValue</code> is actually a list, then it return <code>Just</code> (the list, with elements wrapped in a Dynamic value)\notherwise, the function returns <code>Nothing</code>.','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1718,'dynamicApp','Cal.Core.Dynamic.dynamicApp','Cal.Core.Dynamic.dynamicApp',NULL,'[CALDoc] Takes a function wrapped in a <code>Dynamic</code> value and applies it to an argument\nwrapped in a <code>Dynamic</code> value.  ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1719,'concatDynamicRecord','Cal.Core.Dynamic.concatDynamicRecord','Cal.Core.Dynamic.concatDynamicRecord',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1720,'emptyDynamicRecord','Cal.Core.Dynamic.emptyDynamicRecord','Cal.Core.Dynamic.emptyDynamicRecord',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1721,'appendDynamicRecord','Cal.Core.Dynamic.appendDynamicRecord','Cal.Core.Dynamic.appendDynamicRecord',NULL,'[CALDoc] Combine two records contained by <code>Dynamic</code>s into a single record containing the fields of both.\n','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1722,'dynamicRecordFieldValuesExamples','Cal.Core.Dynamic.dynamicRecordFieldValuesExamples','Cal.Core.Dynamic.dynamicRecordFieldValuesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:51','2008-04-20 18:16:51'),(1723,'dynamicRecordFieldValues','Cal.Core.Dynamic.dynamicRecordFieldValues','Cal.Core.Dynamic.dynamicRecordFieldValues',NULL,'[CALDoc] If <code>dynamicValue</code> is actually a record, then return <code>Just</code> the list of field values of the record, wrapped in\n<code>Dynamic</code> values. ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1724,'fieldValues','Cal.Core.Dynamic.fieldValues','Cal.Core.Dynamic.fieldValues',NULL,'[CALDoc] <code>fieldValues</code> returns the list of field values of a record, ordered by field-name order.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1725,'insertDynamicRecordFieldExamples','Cal.Core.Dynamic.insertDynamicRecordFieldExamples','Cal.Core.Dynamic.insertDynamicRecordFieldExamples',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1726,'dynamicRecordFieldValue','Cal.Core.Dynamic.dynamicRecordFieldValue','Cal.Core.Dynamic.dynamicRecordFieldValue',NULL,'[CALDoc] Accepts a <code>Dynamic</code> value that contains a record and the name of a field,\nand returns a <code>Dynamic</code> value that represents the value of the specified\nfield of the record.  ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1727,'showExamples','Cal.Core.Dynamic.showExamples','Cal.Core.Dynamic.showExamples',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1728,'insertDynamicRecordField','Cal.Core.Dynamic.insertDynamicRecordField','Cal.Core.Dynamic.insertDynamicRecordField',NULL,'[CALDoc] Takes a <code>Dynamic</code> value containing a record, a field name, and a value, and returns a\n<code>Dynamic</code> value containing a new record that extends the old record with a field of the\nspecified name having the specified value.  ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1729,'insertRecordFieldExamples','Cal.Core.Dynamic.insertRecordFieldExamples','Cal.Core.Dynamic.insertRecordFieldExamples',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1730,'insertRecordField','Cal.Core.Dynamic.insertRecordField','Cal.Core.Dynamic.insertRecordField',NULL,'[CALDoc] Takes a record, a field name, and a value, and returns a <code>Dynamic</code> value containing\na new record that extends the old record with a field of the specified name having\nthe specified value.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1731,'insertRecordFieldHelper','Cal.Core.Dynamic.insertRecordFieldHelper','Cal.Core.Dynamic.insertRecordFieldHelper',NULL,'[CALDoc] Helper for <code>insertRecordField</code> and <code>insertDynamicRecordField</code>.  ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1732,'fieldOrdinal','Cal.Core.Dynamic.fieldOrdinal','Cal.Core.Dynamic.fieldOrdinal',NULL,'[CALDoc] Converts an ordinal field name to a corresponding <code>Int</code> value.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1733,'appendRecordTypeRep','Cal.Core.Dynamic.appendRecordTypeRep','Cal.Core.Dynamic.appendRecordTypeRep',NULL,'[CALDoc] Helper for <code>appendRecord</code> and <code>appendDynamicRecord</code>.  ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1734,'dynamicRecordFieldNamesExamples','Cal.Core.Dynamic.dynamicRecordFieldNamesExamples','Cal.Core.Dynamic.dynamicRecordFieldNamesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1735,'toDynamic','Cal.Core.Dynamic.toDynamic','Cal.Core.Dynamic.toDynamic',NULL,'[CALDoc] Creates a <code>Dynamic</code> value.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1736,'dynamicRecordFieldNames','Cal.Core.Dynamic.dynamicRecordFieldNames','Cal.Core.Dynamic.dynamicRecordFieldNames',NULL,'[CALDoc] If <code>dynamicValue</code> is actually a record, then return <code>Just</code> the list of field names of the record.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1737,'recordFieldValueExamples','Cal.Core.Dynamic.recordFieldValueExamples','Cal.Core.Dynamic.recordFieldValueExamples',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1738,'recordFieldValue','Cal.Core.Dynamic.recordFieldValue','Cal.Core.Dynamic.recordFieldValue',NULL,'[CALDoc] Given a record value and a field name, returns a <code>Dynamic</code> value representing the\nspecified field in the record.  ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1739,'fromDynamic','Cal.Core.Dynamic.fromDynamic','Cal.Core.Dynamic.fromDynamic',NULL,'[CALDoc] One of the ways to extract a value from a <code>Dynamic</code> value.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1740,'isOrdinalFieldName','Cal.Core.Dynamic.isOrdinalFieldName','Cal.Core.Dynamic.isOrdinalFieldName',NULL,'[CALDoc] Returns: <code>True</code> if the provided string represents an ordinal field name, or <code>False</code> otherwise.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1741,'recordType_insertRecordTypeField','Cal.Core.Dynamic.recordType_insertRecordTypeField','Cal.Core.Dynamic.recordType_insertRecordTypeField',NULL,'[CALDoc] Returns: A new <code>RecordType</code> containing all the fields of the <code>RecordType</code> argument, plus a new\nfield whose name and value are specified by the <code>String</code> and <code>JObject</code> arguments\nrespectively.\nIf the <code>RecordType</code> argument already contains the field specified by the string argument, the new\n<code>RecordType</code> will contain the value specified by the <code>JObject</code> argument rather than the value from\nthe <code>RecordType</code> argument.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1742,'recordType_appendRecordType','Cal.Core.Dynamic.recordType_appendRecordType','Cal.Core.Dynamic.recordType_appendRecordType',NULL,'[CALDoc] Returns: A new <code>RecordType</code> containing the union of the fields of the two argument <code>RecordType</code>s.\nIf both <code>RecordType</code> arguments contain the same field, the first <code>RecordType</code> argument\nis given precedence.  (This is the same rule as for <code>appendRecord</code>)','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1743,'recordFieldTypePrimitive','Cal.Core.Dynamic.recordFieldTypePrimitive','Cal.Core.Dynamic.recordFieldTypePrimitive',NULL,'[CALDoc] WARNING- this function must not be public.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1744,'recordFieldValuePrimitive','Cal.Core.Dynamic.recordFieldValuePrimitive','Cal.Core.Dynamic.recordFieldValuePrimitive',NULL,'[CALDoc] WARNING- this function must not be public.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1745,'recordFieldIndex','Cal.Core.Dynamic.recordFieldIndex','Cal.Core.Dynamic.recordFieldIndex',NULL,'[CALDoc] WARNING- this function must not be public.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1746,'fieldValuesPrimitive','Cal.Core.Dynamic.fieldValuesPrimitive','Cal.Core.Dynamic.fieldValuesPrimitive',NULL,'[CALDoc] <code>fieldNamesPrimitive</code> takes a record, and returns a <code>JList</code> that is actually a \n<code>java.util.List</code> of <code>Prelude.CalValue</code> objects representing the field values of the record\nin field-name order.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1747,'appendRecordPrimitive','Cal.Core.Dynamic.appendRecordPrimitive','Cal.Core.Dynamic.appendRecordPrimitive',NULL,'[CALDoc] Primitive function for appending two records together, yielding a single\nrecord whose fields are a union of the field names of the two records.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1748,'insertOrdinalRecordFieldPrimitive','Cal.Core.Dynamic.insertOrdinalRecordFieldPrimitive','Cal.Core.Dynamic.insertOrdinalRecordFieldPrimitive',NULL,'[CALDoc] Primitive function for adding an ordinally-named field to a record.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1749,'insertTextualRecordFieldPrimitive','Cal.Core.Dynamic.insertTextualRecordFieldPrimitive','Cal.Core.Dynamic.insertTextualRecordFieldPrimitive',NULL,'[CALDoc] Primitive function for adding a textually-named field to a record.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1750,'Dynamic','Cal.Core.Dynamic.Dynamic','Cal.Core.Dynamic.Dynamic',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1751,'try','Cal.Core.Exception.try','Cal.Core.Exception.try',NULL,'[CALDoc] Returns: <code>Right expr</code> if no exception was raised while evaluating <code>expr</code>, otherwise, <code>Left (the exception raised)</code>','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1752,'catch','Cal.Core.Exception.catch','Cal.Core.Exception.catch',NULL,'[CALDoc] Core function for catching and handling exceptions.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1753,'bracket','Cal.Core.Exception.bracket','Cal.Core.Exception.bracket',NULL,'[CALDoc] <code>bracket</code> is used to acquire a resource, do some work with it, and then release the resource even\nif an exception is raised while doing the work with the resource.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1754,'finally','Cal.Core.Exception.finally','Cal.Core.Exception.finally',NULL,'[CALDoc] <code>finally</code> evaluates the argument <code>expr</code> to weak-head normal form.\n','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1755,'throw','Cal.Core.Exception.throw','Cal.Core.Exception.throw',NULL,'[CALDoc] Raise a CAL user-defined exception i.e. one that has a specific CAL type that is a member of the <code>Exception</code>\ntype class. ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1756,'toJThrowable','Cal.Core.Exception.toJThrowable','Cal.Core.Exception.toJThrowable',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1757,'fromJThrowable','Cal.Core.Exception.fromJThrowable','Cal.Core.Exception.fromJThrowable',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1758,'calException_getCALValue','Cal.Core.Exception.calException_getCALValue','Cal.Core.Exception.calException_getCALValue',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1759,'calException_make','Cal.Core.Exception.calException_make','Cal.Core.Exception.calException_make',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1760,'isCalException','Cal.Core.Exception.isCalException','Cal.Core.Exception.isCalException',NULL,'[CALDoc] ','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1761,'isJavaArithmeticException','Cal.Core.Exception.isJavaArithmeticException','Cal.Core.Exception.isJavaArithmeticException',NULL,'[CALDoc] Returns: true if exception is actually of the java.lang.ArithmeticException subtype.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1762,'isJavaIllegalArgumentException','Cal.Core.Exception.isJavaIllegalArgumentException','Cal.Core.Exception.isJavaIllegalArgumentException',NULL,'[CALDoc] Returns: true if exception is actually of the java.lang.IllegalArgumentException subtype.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1763,'isJavaIllegalStateException','Cal.Core.Exception.isJavaIllegalStateException','Cal.Core.Exception.isJavaIllegalStateException',NULL,'[CALDoc] Returns: true if exception is actually of the java.lang.IllegalStateException subtype.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1764,'isJavaNullPointerException','Cal.Core.Exception.isJavaNullPointerException','Cal.Core.Exception.isJavaNullPointerException',NULL,'[CALDoc] Returns: true if exception is actually of the java.lang.NullPointerException subtype.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1765,'isJavaRuntimeException','Cal.Core.Exception.isJavaRuntimeException','Cal.Core.Exception.isJavaRuntimeException',NULL,'[CALDoc] Returns: true if exception is actually of the java.lang.RuntimeException subtype.','2008-04-20 18:16:52','2008-04-20 18:16:52'),(1766,'isJavaException','Cal.Core.Exception.isJavaException','Cal.Core.Exception.isJavaException',NULL,'[CALDoc] Returns: true if exception is actually of the java.lang.Exception subtype.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1767,'isJavaError','Cal.Core.Exception.isJavaError','Cal.Core.Exception.isJavaError',NULL,'[CALDoc] Returns: true if exception is actually of the java.lang.Error subtype.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1768,'isPatternMatchingFailure','Cal.Core.Exception.isPatternMatchingFailure','Cal.Core.Exception.isPatternMatchingFailure',NULL,'[CALDoc] Pattern matching failures arise via an unhandled case alternative e.g.\n<code>(case Just \'a\' of Nothing -&gt; True;)</code> or a data constructor field selection failure e.g.\n<code>(Left \'a\' :: Either Char Char).Right.value)</code>.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1769,'isError','Cal.Core.Exception.isError','Cal.Core.Exception.isError',NULL,'[CALDoc] Returns: <code>True</code> if throwable was raised through a call to the <code>Prelude.error</code> function.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1770,'class_isAssignableFrom','Cal.Core.Exception.class_isAssignableFrom','Cal.Core.Exception.class_isAssignableFrom',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1771,'throwable_getClass','Cal.Core.Exception.throwable_getClass','Cal.Core.Exception.throwable_getClass',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1772,'primCatch','Cal.Core.Exception.primCatch','Cal.Core.Exception.primCatch',NULL,'[CALDoc] Primitive function for catching and handling exceptions.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1773,'primThrow','Cal.Core.Exception.primThrow','Cal.Core.Exception.primThrow',NULL,'[CALDoc] Primitive for raising an exception. ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1774,'isProperSubmap','Cal.Collections.IntMap.isProperSubmap','Cal.Collections.IntMap.isProperSubmap',NULL,'[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1775,'isEmpty','Cal.Collections.IntMap.isEmpty','Cal.Collections.IntMap.isEmpty',NULL,'[CALDoc] Returns whether the map is empty.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1776,'updateLookupWithKey','Cal.Collections.IntMap.updateLookupWithKey','Cal.Collections.IntMap.updateLookupWithKey',NULL,'[CALDoc] Simultaneously looks up and updates the map at a specific key.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1777,'arbitraryIntMap','Cal.Collections.IntMap.arbitraryIntMap','Cal.Collections.IntMap.arbitraryIntMap',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1778,'fold','Cal.Collections.IntMap.fold','Cal.Collections.IntMap.fold',NULL,'[CALDoc] Folds over the values in the map in an unspecified order.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1779,'find','Cal.Collections.IntMap.find','Cal.Collections.IntMap.find',NULL,'[CALDoc] Finds the value of a key. ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1780,'elems','Cal.Collections.IntMap.elems','Cal.Collections.IntMap.elems',NULL,'[CALDoc] Returns all elements of the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1781,'mapKeys','Cal.Collections.IntMap.mapKeys','Cal.Collections.IntMap.mapKeys',NULL,'[CALDoc] <code>mapKeys f s</code> is the map obtained by applying <code>f</code> to each key of <code>s</code>.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1782,'splitLookup','Cal.Collections.IntMap.splitLookup','Cal.Collections.IntMap.splitLookup',NULL,'[CALDoc] <code>splitLookup key map</code> splits a map just like <code>split</code> but also returns <code>lookup key map</code>.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1783,'insertLookupWithKey','Cal.Collections.IntMap.insertLookupWithKey','Cal.Collections.IntMap.insertLookupWithKey',NULL,'[CALDoc] <code>insertLookupWithKey f k x map</code> is a pair where the first element is equal to\n<code>lookup k map</code> and the second element equal to <code>insertWithKey f k x map</code>.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1784,'unionsWithKey','Cal.Collections.IntMap.unionsWithKey','Cal.Collections.IntMap.unionsWithKey',NULL,'[CALDoc] Returns the union of a list of maps, with a combining operation.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1785,'unions','Cal.Collections.IntMap.unions','Cal.Collections.IntMap.unions',NULL,'[CALDoc] Returns the union of a list of maps.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1786,'showIntMap','Cal.Collections.IntMap.showIntMap','Cal.Collections.IntMap.showIntMap',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1787,'intersection','Cal.Collections.IntMap.intersection','Cal.Collections.IntMap.intersection',NULL,'[CALDoc] Returns the (left-biased) intersection of two maps (based on keys). ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1788,'isSubmap','Cal.Collections.IntMap.isSubmap','Cal.Collections.IntMap.isSubmap',NULL,'[CALDoc] Returns whether the first map is a submap of the second map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1789,'isSubmapBy','Cal.Collections.IntMap.isSubmapBy','Cal.Collections.IntMap.isSubmapBy',NULL,'[CALDoc] Returns whether the first map is a submap of the second map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1790,'keySet','Cal.Collections.IntMap.keySet','Cal.Collections.IntMap.keySet',NULL,'[CALDoc] Returns a set of all keys of the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1791,'keys','Cal.Collections.IntMap.keys','Cal.Collections.IntMap.keys',NULL,'[CALDoc] Returns all keys of the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1792,'fromDistinctAscList','Cal.Collections.IntMap.fromDistinctAscList','Cal.Collections.IntMap.fromDistinctAscList',NULL,'[CALDoc] Builds a map from an ascending list of distinct elements in linear time.\n','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1793,'match','Cal.Collections.IntMap.match','Cal.Collections.IntMap.match',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1794,'fromAscList','Cal.Collections.IntMap.fromAscList','Cal.Collections.IntMap.fromAscList',NULL,'[CALDoc] Builds a map from an ascending list in linear time. ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1795,'partition','Cal.Collections.IntMap.partition','Cal.Collections.IntMap.partition',NULL,'[CALDoc] Partitions the map according to a predicate. ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1796,'partitionWithKey','Cal.Collections.IntMap.partitionWithKey','Cal.Collections.IntMap.partitionWithKey',NULL,'[CALDoc] Partitions the map according to a predicate. ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1797,'mapKeysWith','Cal.Collections.IntMap.mapKeysWith','Cal.Collections.IntMap.mapKeysWith',NULL,'[CALDoc] <code>mapKeysWith c f s</code> is the map obtained by applying <code>f</code> to each key of <code>s</code>.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1798,'coarbitraryIntMap','Cal.Collections.IntMap.coarbitraryIntMap','Cal.Collections.IntMap.coarbitraryIntMap',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1799,'size','Cal.Collections.IntMap.size','Cal.Collections.IntMap.size',NULL,'[CALDoc] Returns the number of elements in the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1800,'mapAccumR','Cal.Collections.IntMap.mapAccumR','Cal.Collections.IntMap.mapAccumR',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1801,'single','Cal.Collections.IntMap.single','Cal.Collections.IntMap.single',NULL,'[CALDoc] Creates a map with a single element.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1802,'inputIntMap','Cal.Collections.IntMap.inputIntMap','Cal.Collections.IntMap.inputIntMap',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1803,'unionsWith','Cal.Collections.IntMap.unionsWith','Cal.Collections.IntMap.unionsWith',NULL,'[CALDoc] Returns the union of a list of maps, with a combining operation.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1804,'unionWith','Cal.Collections.IntMap.unionWith','Cal.Collections.IntMap.unionWith',NULL,'[CALDoc] Returns the left-biased union of two maps, with a combining function.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1805,'update','Cal.Collections.IntMap.update','Cal.Collections.IntMap.update',NULL,'[CALDoc] <code>update f k map</code> updates the value <code>x</code> at <code>k</code> (if it is in the map). ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1806,'toAscList','Cal.Collections.IntMap.toAscList','Cal.Collections.IntMap.toAscList',NULL,'[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1807,'lookupWithDefault','Cal.Collections.IntMap.lookupWithDefault','Cal.Collections.IntMap.lookupWithDefault',NULL,'[CALDoc] <code>lookupWithDefault key map defaultValue</code> returns the value at the given key or <code>defaultValue</code>\nwhen the key is not in the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1808,'isProperSubmapBy','Cal.Collections.IntMap.isProperSubmapBy','Cal.Collections.IntMap.isProperSubmapBy',NULL,'[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1809,'assocs','Cal.Collections.IntMap.assocs','Cal.Collections.IntMap.assocs',NULL,'[CALDoc] Returns an association list of all key-value pairs in the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1810,'submapCmp','Cal.Collections.IntMap.submapCmp','Cal.Collections.IntMap.submapCmp',NULL,'[CALDoc] ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1811,'map','Cal.Collections.IntMap.map','Cal.Collections.IntMap.map',NULL,'[CALDoc] Maps a function over all values in the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1812,'mapWithKey','Cal.Collections.IntMap.mapWithKey','Cal.Collections.IntMap.mapWithKey',NULL,'[CALDoc] Maps a function over all values in the map.','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1813,'split','Cal.Collections.IntMap.split','Cal.Collections.IntMap.split',NULL,'[CALDoc] <code>split k map</code> returns a pair <code>(map1,map2)</code> where the keys in <code>map1</code> are smaller\nthan <code>k</code> and the keys in <code>map2</code> larger than <code>k</code>. ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1814,'union','Cal.Collections.IntMap.union','Cal.Collections.IntMap.union',NULL,'[CALDoc] <code>union t1 t2</code> takes the left-biased union of <code>t1</code> and <code>t2</code>. ','2008-04-20 18:16:53','2008-04-20 18:16:53'),(1815,'insertWith','Cal.Collections.IntMap.insertWith','Cal.Collections.IntMap.insertWith',NULL,'[CALDoc] Inserts a new key and value in the map with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1816,'unionWithKey','Cal.Collections.IntMap.unionWithKey','Cal.Collections.IntMap.unionWithKey',NULL,'[CALDoc] Returns the left-biased union of two maps, with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1817,'difference','Cal.Collections.IntMap.difference','Cal.Collections.IntMap.difference',NULL,'[CALDoc] Returns the difference of two maps (based on keys).','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1818,'member','Cal.Collections.IntMap.member','Cal.Collections.IntMap.member',NULL,'[CALDoc] Returns whether the key is a member of the map.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1819,'fromAscListWithKey','Cal.Collections.IntMap.fromAscListWithKey','Cal.Collections.IntMap.fromAscListWithKey',NULL,'[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1820,'intersectionWith','Cal.Collections.IntMap.intersectionWith','Cal.Collections.IntMap.intersectionWith',NULL,'[CALDoc] Returns the intersection of two maps, with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1821,'intersectionWithKey','Cal.Collections.IntMap.intersectionWithKey','Cal.Collections.IntMap.intersectionWithKey',NULL,'[CALDoc] Returns the intersection of two maps, with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1822,'outputIntMap','Cal.Collections.IntMap.outputIntMap','Cal.Collections.IntMap.outputIntMap',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1823,'toList','Cal.Collections.IntMap.toList','Cal.Collections.IntMap.toList',NULL,'[CALDoc] Converts to a list of key-value pairs with the keys.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1824,'foldWithKey','Cal.Collections.IntMap.foldWithKey','Cal.Collections.IntMap.foldWithKey',NULL,'[CALDoc] Folds over the keys and values in the map in an unspecified order.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1825,'foldR','Cal.Collections.IntMap.foldR','Cal.Collections.IntMap.foldR',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1826,'fromList','Cal.Collections.IntMap.fromList','Cal.Collections.IntMap.fromList',NULL,'[CALDoc] Builds a map from a list of key-value pairs.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1827,'insert','Cal.Collections.IntMap.insert','Cal.Collections.IntMap.insert',NULL,'[CALDoc] Inserts a new key/value pair in the map. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1828,'fromAscListWith','Cal.Collections.IntMap.fromAscListWith','Cal.Collections.IntMap.fromAscListWith',NULL,'[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1829,'fromListWith','Cal.Collections.IntMap.fromListWith','Cal.Collections.IntMap.fromListWith',NULL,'[CALDoc] Builds a map from a list of key-value pairs with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1830,'fromListWithKey','Cal.Collections.IntMap.fromListWithKey','Cal.Collections.IntMap.fromListWithKey',NULL,'[CALDoc] Builds a map from a list of key-value pairs with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1831,'insertWithKey','Cal.Collections.IntMap.insertWithKey','Cal.Collections.IntMap.insertWithKey',NULL,'[CALDoc] Inserts a new key and value in the map with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1832,'join','Cal.Collections.IntMap.join','Cal.Collections.IntMap.join',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1833,'branchMask','Cal.Collections.IntMap.branchMask','Cal.Collections.IntMap.branchMask',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1834,'mapAccum','Cal.Collections.IntMap.mapAccum','Cal.Collections.IntMap.mapAccum',NULL,'[CALDoc] Threads an accumulating argument through the map in an unspecified order.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1835,'mapAccumWithKey','Cal.Collections.IntMap.mapAccumWithKey','Cal.Collections.IntMap.mapAccumWithKey',NULL,'[CALDoc] Threads an accumulating argument through the map in an unspecified order.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1836,'mapAccumL','Cal.Collections.IntMap.mapAccumL','Cal.Collections.IntMap.mapAccumL',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1837,'delete','Cal.Collections.IntMap.delete','Cal.Collections.IntMap.delete',NULL,'[CALDoc] Deletes a key and its value from the map. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1838,'differenceWith','Cal.Collections.IntMap.differenceWith','Cal.Collections.IntMap.differenceWith',NULL,'[CALDoc] Returns the difference of two maps, with a combining function.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1839,'differenceWithKey','Cal.Collections.IntMap.differenceWithKey','Cal.Collections.IntMap.differenceWithKey',NULL,'[CALDoc] Returns the difference of two maps, with a combining function. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1840,'shorter','Cal.Collections.IntMap.shorter','Cal.Collections.IntMap.shorter',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1841,'lookup','Cal.Collections.IntMap.lookup','Cal.Collections.IntMap.lookup',NULL,'[CALDoc] Looks up the value at a key in the map.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1842,'adjust','Cal.Collections.IntMap.adjust','Cal.Collections.IntMap.adjust',NULL,'[CALDoc] Adjusts a value at a specific key. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1843,'filter','Cal.Collections.IntMap.filter','Cal.Collections.IntMap.filter',NULL,'[CALDoc] Filters all values that satisfy the predicate.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1844,'filterWithKey','Cal.Collections.IntMap.filterWithKey','Cal.Collections.IntMap.filterWithKey',NULL,'[CALDoc] Filters all keys/values that satisfy the predicate.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1845,'adjustWithKey','Cal.Collections.IntMap.adjustWithKey','Cal.Collections.IntMap.adjustWithKey',NULL,'[CALDoc] Adjusts a value at a specific key. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1846,'updateWithKey','Cal.Collections.IntMap.updateWithKey','Cal.Collections.IntMap.updateWithKey',NULL,'[CALDoc] <code>updateWithKey f k map</code> updates the value <code>x</code> at <code>k</code> (if it is in the map). ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1847,'Bin','Cal.Collections.IntMap.Bin','Cal.Collections.IntMap.Bin',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1848,'zero','Cal.Collections.IntMap.zero','Cal.Collections.IntMap.zero',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1849,'nomatch','Cal.Collections.IntMap.nomatch','Cal.Collections.IntMap.nomatch',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1850,'mask','Cal.Collections.IntMap.mask','Cal.Collections.IntMap.mask',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1851,'empty','Cal.Collections.IntMap.empty','Cal.Collections.IntMap.empty',NULL,'[CALDoc] The empty map.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1852,'Nil','Cal.Collections.IntMap.Nil','Cal.Collections.IntMap.Nil',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1853,'Tip','Cal.Collections.IntMap.Tip','Cal.Collections.IntMap.Tip',NULL,'[CALDoc] ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1854,'unzip6','Cal.Collections.List.unzip6','Cal.Collections.List.unzip6',NULL,'[CALDoc] Transforms a list of 6-tuples into a 6-tuple of lists.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1855,'list4','Cal.Collections.List.list4','Cal.Collections.List.list4',NULL,'[CALDoc] Constructs a list of four items.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1856,'splitAt','Cal.Collections.List.splitAt','Cal.Collections.List.splitAt',NULL,'[CALDoc] <code>split nElemsToSplit list</code> returns a pair of lists. ','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1857,'zip5','Cal.Collections.List.zip5','Cal.Collections.List.zip5',NULL,'[CALDoc] Converts five lists into a list of corresponding 5-tuples.\n','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1858,'elemIndex','Cal.Collections.List.elemIndex','Cal.Collections.List.elemIndex',NULL,'[CALDoc] Returns the index of the first element in the given list which is equal to\nthe specified value, or <code>Nothing</code> if there is no such element.','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1859,'alternate','Cal.Collections.List.alternate','Cal.Collections.List.alternate',NULL,'[CALDoc] Alternate items from the 2 lists.\n','2008-04-20 18:16:54','2008-04-20 18:16:54'),(1860,'fromJIterator','Cal.Collections.List.fromJIterator','Cal.Collections.List.fromJIterator',NULL,'[CALDoc] Converts a Java iterator to a CAL list.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1861,'seqList','Cal.Collections.List.seqList','Cal.Collections.List.seqList',NULL,'[CALDoc] <code>seqList</code> simply returns its input list. However, if this returned list is subsequently traversed by other clients,\neach element of the list is evaluated to weak-head normal form prior to visiting the next element.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1862,'concatMap','Cal.Collections.List.concatMap','Cal.Collections.List.concatMap',NULL,'[CALDoc] <code>concatMap mapFunction list</code> applies <code>mapFunction</code> to each element of list and then concatenates the\nresulting list. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1863,'zipWith7','Cal.Collections.List.zipWith7','Cal.Collections.List.zipWith7',NULL,'[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of seven lists.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1864,'zip3','Cal.Collections.List.zip3','Cal.Collections.List.zip3',NULL,'[CALDoc] Converts three lists into a list of corresponding triples.\n','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1865,'list2','Cal.Collections.List.list2','Cal.Collections.List.list2',NULL,'[CALDoc] Constructs a list of two items.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1866,'unzip4','Cal.Collections.List.unzip4','Cal.Collections.List.unzip4',NULL,'[CALDoc] Transforms a list of 4-tuples into a 4-tuple of lists.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1867,'deleteFirstsBy','Cal.Collections.List.deleteFirstsBy','Cal.Collections.List.deleteFirstsBy',NULL,'[CALDoc] This function takes a predicate and two lists and returns the first list with\nthe first occurrence of each element of the second list removed.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1868,'list6','Cal.Collections.List.list6','Cal.Collections.List.list6',NULL,'[CALDoc] Constructs a list of six items.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1869,'list0','Cal.Collections.List.list0','Cal.Collections.List.list0',NULL,'[CALDoc] Constructs an empty list.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1870,'breakAfter','Cal.Collections.List.breakAfter','Cal.Collections.List.breakAfter',NULL,'[CALDoc] <code>breakAfter predicate list</code> breaks up list into a pair of lists. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1871,'zipWith5','Cal.Collections.List.zipWith5','Cal.Collections.List.zipWith5',NULL,'[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of five lists.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1872,'unfoldRight','Cal.Collections.List.unfoldRight','Cal.Collections.List.unfoldRight',NULL,'[CALDoc] The <code>unfoldRight</code> function is a \"dual\" to <code>foldRight</code>: while <code>foldRight</code> reduces a\nlist to a summary value, <code>unfoldRight</code> builds a list from a seed value. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1873,'minimumBy','Cal.Collections.List.minimumBy','Cal.Collections.List.minimumBy',NULL,'[CALDoc] This function takes a comparison function and a list and returns the least\nelement of the list by the comparison function. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1874,'join','Cal.Collections.List.join','Cal.Collections.List.join',NULL,'[CALDoc] This function intersperses a separator between each pair of elements in a list\nand then concatenates the list elements together.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1875,'maximumBy','Cal.Collections.List.maximumBy','Cal.Collections.List.maximumBy',NULL,'[CALDoc] This function takes a comparison function and a list and returns the greatest\nelement of the list by the comparison function. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1876,'sum','Cal.Collections.List.sum','Cal.Collections.List.sum',NULL,'[CALDoc] <code>sum list</code> returns the sum of all the elements of <code>list</code>, adding from left to right. sum applied to an\nempty list is 0.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1877,'spanInclusive','Cal.Collections.List.spanInclusive','Cal.Collections.List.spanInclusive',NULL,'[CALDoc] <code>spanInclusive predicate list</code> breaks up list into a pair of lists. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1878,'foldRight1','Cal.Collections.List.foldRight1','Cal.Collections.List.foldRight1',NULL,'[CALDoc] Similar to <code>foldLeft1</code>, except that the folding process on the list is started with its rightmost element.\n','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1879,'partition','Cal.Collections.List.partition','Cal.Collections.List.partition',NULL,'[CALDoc] This function takes a predicate and a list and returns the pair of lists of\nelements which respectively do and do not satisfy the predicate.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1880,'cycle','Cal.Collections.List.cycle','Cal.Collections.List.cycle',NULL,'[CALDoc] <code>cycle list</code> is the infinite repetition of the list. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1881,'minimum','Cal.Collections.List.minimum','Cal.Collections.List.minimum',NULL,'[CALDoc] Returns the minimum value in the specified list.\n','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1882,'fromJIteratorWith','Cal.Collections.List.fromJIteratorWith','Cal.Collections.List.fromJIteratorWith',NULL,'[CALDoc] Converts a Java iterator to a CAL list using the element mapping function <code>f</code> of \ntype <code>JObject -&gt; a</code> to convert iteration elements.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1883,'zip6','Cal.Collections.List.zip6','Cal.Collections.List.zip6',NULL,'[CALDoc] Converts six lists into a list of corresponding 6-tuples.\n','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1884,'isElem','Cal.Collections.List.isElem','Cal.Collections.List.isElem',NULL,'[CALDoc] <code>isElem elementValue list</code> returns <code>True</code> if <code>elementValue</code> is an element of the list.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1885,'product','Cal.Collections.List.product','Cal.Collections.List.product',NULL,'[CALDoc] <code>product list</code> return the product of all the elements of <code>list</code>, multiplying from left to right. product\napplied to an empty list is 1.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1886,'unzip3','Cal.Collections.List.unzip3','Cal.Collections.List.unzip3',NULL,'[CALDoc] Transforms a list of triples into a triple of lists.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1887,'list7','Cal.Collections.List.list7','Cal.Collections.List.list7',NULL,'[CALDoc] Constructs a list of seven items.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1888,'subscript','Cal.Collections.List.subscript','Cal.Collections.List.subscript',NULL,'[CALDoc] <code>subscript list index</code> returns the nth element of the list where n = <code>index</code>. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1889,'deleteFirsts','Cal.Collections.List.deleteFirsts','Cal.Collections.List.deleteFirsts',NULL,'[CALDoc] This function takes two lists and returns the first list with\nthe first occurrence of each element of the second list removed.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1890,'intersect','Cal.Collections.List.intersect','Cal.Collections.List.intersect',NULL,'[CALDoc] Takes the intersection of two lists.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1891,'list3','Cal.Collections.List.list3','Cal.Collections.List.list3',NULL,'[CALDoc] Constructs a list of three items.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1892,'toJIterator','Cal.Collections.List.toJIterator','Cal.Collections.List.toJIterator',NULL,'[CALDoc] Provides a view of a CAL list as a Java iterator. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1893,'toJIteratorWith','Cal.Collections.List.toJIteratorWith','Cal.Collections.List.toJIteratorWith',NULL,'[CALDoc] Provides a view of a CAL list as a Java iterator. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1894,'deleteAt','Cal.Collections.List.deleteAt','Cal.Collections.List.deleteAt',NULL,'[CALDoc] Removes the list item at the specified index.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1895,'strictList','Cal.Collections.List.strictList','Cal.Collections.List.strictList',NULL,'[CALDoc] Evaluates each element of the list (to weak-head normal form) prior to returning the list itself.\n<code>strictList list</code> is equivalent to <code>List.foldRight Prelude.seq list list</code>, however, it\nwill be faster.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1896,'mapAccumulateRight','Cal.Collections.List.mapAccumulateRight','Cal.Collections.List.mapAccumulateRight',NULL,'[CALDoc] This function behaves like a combination of <code>map</code> and <code>foldRight</code>. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1897,'unzip7','Cal.Collections.List.unzip7','Cal.Collections.List.unzip7',NULL,'[CALDoc] Transforms a list of 7-tuples into a 7-tuple of lists.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1898,'zip4','Cal.Collections.List.zip4','Cal.Collections.List.zip4',NULL,'[CALDoc] Converts four lists into a list of corresponding 4-tuples.\n','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1899,'unzip5','Cal.Collections.List.unzip5','Cal.Collections.List.unzip5',NULL,'[CALDoc] Transforms a list of 5-tuples into a 5-tuple of lists.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1900,'testModule','Cal.Collections.List.testModule','Cal.Collections.List.testModule',NULL,'[CALDoc] ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1901,'compareByExamples','Cal.Collections.List.compareByExamples','Cal.Collections.List.compareByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1902,'compareBy','Cal.Collections.List.compareBy','Cal.Collections.List.compareBy',NULL,'[CALDoc] Compares two lists lexicographically using a comparator function. \n','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1903,'breakAllExamples','Cal.Collections.List.breakAllExamples','Cal.Collections.List.breakAllExamples',NULL,'[CALDoc] ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1904,'breakAll','Cal.Collections.List.breakAll','Cal.Collections.List.breakAll',NULL,'[CALDoc] <code>breakAll predicate list</code> returns a list of lists, formed by splitting the original list before\neach element for which the predicate returns True.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1905,'break','Cal.Collections.List.break','Cal.Collections.List.break',NULL,'[CALDoc] <code>break predicate list</code> breaks up list into a pair of lists. ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1906,'combinationsExamples','Cal.Collections.List.combinationsExamples','Cal.Collections.List.combinationsExamples',NULL,'[CALDoc] ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1907,'combinations','Cal.Collections.List.combinations','Cal.Collections.List.combinations',NULL,'[CALDoc] Returns a list of all the combinations of the items in the specified lists.\n','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1908,'unionExamples','Cal.Collections.List.unionExamples','Cal.Collections.List.unionExamples',NULL,'[CALDoc] ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1909,'union','Cal.Collections.List.union','Cal.Collections.List.union',NULL,'[CALDoc] <code>union list1 list2</code> returns <code>list1</code> concatenated with the nonduplicate elements of <code>list2</code>\nthat do not occur in <code>list1</code>.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1910,'transposeExamples','Cal.Collections.List.transposeExamples','Cal.Collections.List.transposeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1911,'subListExamples','Cal.Collections.List.subListExamples','Cal.Collections.List.subListExamples',NULL,'[CALDoc] ','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1912,'subList','Cal.Collections.List.subList','Cal.Collections.List.subList',NULL,'[CALDoc] Returns a portion of the argument list as a new list.','2008-04-20 18:16:55','2008-04-20 18:16:55'),(1913,'startsWithExamples','Cal.Collections.List.startsWithExamples','Cal.Collections.List.startsWithExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1914,'sortExternalExamples','Cal.Collections.List.sortExternalExamples','Cal.Collections.List.sortExternalExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1915,'sortExternal','Cal.Collections.List.sortExternal','Cal.Collections.List.sortExternal',NULL,'[CALDoc] <code>sortExternal</code> is an alternative to <code>sort</code>. It is a stable sort (does not reorder equivalent elements).','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1916,'sortExamples','Cal.Collections.List.sortExamples','Cal.Collections.List.sortExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1917,'sort','Cal.Collections.List.sort','Cal.Collections.List.sort',NULL,'[CALDoc] Sorts the specified list. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1918,'sortByExternalExamples','Cal.Collections.List.sortByExternalExamples','Cal.Collections.List.sortByExternalExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1919,'sortByExternal','Cal.Collections.List.sortByExternal','Cal.Collections.List.sortByExternal',NULL,'[CALDoc] <code>sortByExternal</code> is an alternative to <code>sortBy</code>.\nIt is a stable sort (does not reorder equivalent elements).','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1920,'outputList','Cal.Collections.List.outputList','Cal.Collections.List.outputList',NULL,'[CALDoc] Converts a CAL list to a Java list.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1921,'accumulateRightExamples','Cal.Collections.List.accumulateRightExamples','Cal.Collections.List.accumulateRightExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1922,'accumulateRight','Cal.Collections.List.accumulateRight','Cal.Collections.List.accumulateRight',NULL,'[CALDoc] <code>accumulateRight</code> is similar to <code>accumulateLeft</code>, except that the accumulation process\nproceeds from right to left. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1923,'accumulateLeft1Examples','Cal.Collections.List.accumulateLeft1Examples','Cal.Collections.List.accumulateLeft1Examples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1924,'accumulateLeft1','Cal.Collections.List.accumulateLeft1','Cal.Collections.List.accumulateLeft1',NULL,'[CALDoc] <code>accumulateLeft1</code> is similar to <code>accumulateLeft</code>, except that it \nuses the first element of the list as the initial value of the accumulation.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1925,'accumulateLeftExamples','Cal.Collections.List.accumulateLeftExamples','Cal.Collections.List.accumulateLeftExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1926,'accumulateLeft','Cal.Collections.List.accumulateLeft','Cal.Collections.List.accumulateLeft',NULL,'[CALDoc] <code>accumulateLeft</code> is similar to <code>foldLeft</code>, except that it returns the list of partial folds, instead of the completely\nfolded result. <code>mapAccumulateLeft</code> is a generalization. <code>accumulateLeft</code> is similar to the Crystal Reports concept of \na running total.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1927,'replaceAtExamples','Cal.Collections.List.replaceAtExamples','Cal.Collections.List.replaceAtExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1928,'replaceAt','Cal.Collections.List.replaceAt','Cal.Collections.List.replaceAt',NULL,'[CALDoc] Returns the list with the value at a specified offset replaced by a specified value.\n','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1929,'replaceAllExamples','Cal.Collections.List.replaceAllExamples','Cal.Collections.List.replaceAllExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1930,'replaceAll','Cal.Collections.List.replaceAll','Cal.Collections.List.replaceAll',NULL,'[CALDoc] Applies the predicate to each element and returns the list \nwhere every element for which the predicate evaluated to <code>True</code> is replaced by <code>replaceWithValue</code>.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1931,'periodizeExamples','Cal.Collections.List.periodizeExamples','Cal.Collections.List.periodizeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1932,'orListExamples','Cal.Collections.List.orListExamples','Cal.Collections.List.orListExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1933,'maximumExamples','Cal.Collections.List.maximumExamples','Cal.Collections.List.maximumExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1934,'maximum','Cal.Collections.List.maximum','Cal.Collections.List.maximum',NULL,'[CALDoc] Returns the maximum value in the specified list.\n','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1935,'foldLeft1Strict','Cal.Collections.List.foldLeft1Strict','Cal.Collections.List.foldLeft1Strict',NULL,'[CALDoc] <code>foldLeft1Strict</code> is similar to <code>foldLeftStrict</code>, except that it uses the first element of the list as\nthe initial value in the folding process. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1936,'mapJustExamples','Cal.Collections.List.mapJustExamples','Cal.Collections.List.mapJustExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1937,'mapJust','Cal.Collections.List.mapJust','Cal.Collections.List.mapJust',NULL,'[CALDoc] <code>mapJust mapFunction list</code> applies <code>mapFunction</code> to each element of list, discarding the <code>Nothing</code>\nvalues, and keeping the <em>Just</em> values after removing the <code>Just</code> constructor.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1938,'mapIndexedExamples','Cal.Collections.List.mapIndexedExamples','Cal.Collections.List.mapIndexedExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1939,'mapIndexed','Cal.Collections.List.mapIndexed','Cal.Collections.List.mapIndexed',NULL,'[CALDoc] <code>mapIndexed mapFunction list</code> applies the function <code>mapFunction</code> to each element of the list, where\n<code>mapFunction</code> is passed both the element value, and its zero-based index in the list.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1940,'lookupWithDefaultExamples','Cal.Collections.List.lookupWithDefaultExamples','Cal.Collections.List.lookupWithDefaultExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1941,'lookupWithDefault','Cal.Collections.List.lookupWithDefault','Cal.Collections.List.lookupWithDefault',NULL,'[CALDoc] Similar to <code>List.lookup</code> except it has a default specified which will be returned when the key can not be found in the\nmap.  ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1942,'groupExamples','Cal.Collections.List.groupExamples','Cal.Collections.List.groupExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1943,'group','Cal.Collections.List.group','Cal.Collections.List.group',NULL,'[CALDoc] Splits the specified list into a list of lists of equal, adjacent elements.\n','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1944,'findIndexExamples','Cal.Collections.List.findIndexExamples','Cal.Collections.List.findIndexExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1945,'filterJustExamples','Cal.Collections.List.filterJustExamples','Cal.Collections.List.filterJustExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1946,'filterJust','Cal.Collections.List.filterJust','Cal.Collections.List.filterJust',NULL,'[CALDoc] <code>filterJust listOfMaybes</code> filters <code>listOfMaybes</code>, removing the <code>Nothing</code> values, and taking the <code>Just</code>\noff the <em>Just</em> values. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1947,'endsWithExamples','Cal.Collections.List.endsWithExamples','Cal.Collections.List.endsWithExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1948,'endsWith','Cal.Collections.List.endsWith','Cal.Collections.List.endsWith',NULL,'[CALDoc] Returns whether <code>listToTest</code> ends with the specified suffix.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1949,'composeAllExamples','Cal.Collections.List.composeAllExamples','Cal.Collections.List.composeAllExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1950,'composeAll','Cal.Collections.List.composeAll','Cal.Collections.List.composeAll',NULL,'[CALDoc] <code>composeAll [f1, f2, ... , fn] value</code> is the same as <code>f1 (f2 ( ... (fn value)))...)</code> which is the\nsame as <code>f1 # f2 # ... # fn $ value</code>','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1951,'foldRight','Cal.Collections.List.foldRight','Cal.Collections.List.foldRight',NULL,'[CALDoc] Similar to <code>foldLeft</code>, except that the folding process on the list is started with its rightmost element.\n','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1952,'anyExamples','Cal.Collections.List.anyExamples','Cal.Collections.List.anyExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1953,'andListExamples','Cal.Collections.List.andListExamples','Cal.Collections.List.andListExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1954,'repeat','Cal.Collections.List.repeat','Cal.Collections.List.repeat',NULL,'[CALDoc] <code>repeat valueToRepeat</code> returns the infinite list <code>[valueToRepeat, valueToRepeat, valueToRepeat, ...]</code>.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1955,'andList','Cal.Collections.List.andList','Cal.Collections.List.andList',NULL,'[CALDoc] <code>andList list</code> returns <code>True</code> if every element of the list is <code>True</code> (and the list is finite).','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1956,'allExamples','Cal.Collections.List.allExamples','Cal.Collections.List.allExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1957,'removeDuplicatesByExamples','Cal.Collections.List.removeDuplicatesByExamples','Cal.Collections.List.removeDuplicatesByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1958,'accumulateRight1Examples','Cal.Collections.List.accumulateRight1Examples','Cal.Collections.List.accumulateRight1Examples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1959,'accumulateRight1','Cal.Collections.List.accumulateRight1','Cal.Collections.List.accumulateRight1',NULL,'[CALDoc] <code>accumulateRight1</code> is similar to <code>accumulateRight</code>, except that it \nuses the first element of the list as the initial value of the accumulation.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1960,'mapAccumulateLeftStrict','Cal.Collections.List.mapAccumulateLeftStrict','Cal.Collections.List.mapAccumulateLeftStrict',NULL,'[CALDoc] This is the strict version of <code>mapAccumulateLeft</code>. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1961,'mapAccumulateLeft','Cal.Collections.List.mapAccumulateLeft','Cal.Collections.List.mapAccumulateLeft',NULL,'[CALDoc] This function behaves like a combination of <code>map</code> and <code>foldLeft</code>. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1962,'mapField1Examples','Cal.Collections.List.mapField1Examples','Cal.Collections.List.mapField1Examples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1963,'mapField1','Cal.Collections.List.mapField1','Cal.Collections.List.mapField1',NULL,'[CALDoc] Applies the function <code>mapFunction</code> to each <code>#1</code> field in the list or records and returns\nthe resulting list.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1964,'inits','Cal.Collections.List.inits','Cal.Collections.List.inits',NULL,'[CALDoc] Returns the list of all initial segments of the specified list, shortest first.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1965,'splitEitherExamples','Cal.Collections.List.splitEitherExamples','Cal.Collections.List.splitEitherExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1966,'splitEither','Cal.Collections.List.splitEither','Cal.Collections.List.splitEither',NULL,'[CALDoc] Splits a <code>Prelude.List</code> of <code>Either</code>s into a pair of <code>Prelude.List</code>s with the \nfirst item being the <code>Left</code> values and the second the <code>Right</code> values.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1967,'lengthAtLeastExamples','Cal.Collections.List.lengthAtLeastExamples','Cal.Collections.List.lengthAtLeastExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1968,'inputListWith','Cal.Collections.List.inputListWith','Cal.Collections.List.inputListWith',NULL,'[CALDoc] Converts a Java list to a CAL list using the element mapping function <code>f</code> of type <code>JObject -&gt; a</code> \nto convert elements of the Java list.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1969,'fromJCollectionWith','Cal.Collections.List.fromJCollectionWith','Cal.Collections.List.fromJCollectionWith',NULL,'[CALDoc] Converts a Java collection to a CAL list using the element mapping function <code>f</code> of type <code>JObject -&gt; a</code> \nto convert elements of the Java collection (in iterator order).','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1970,'insertExamples','Cal.Collections.List.insertExamples','Cal.Collections.List.insertExamples',NULL,'[CALDoc] ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1971,'insert','Cal.Collections.List.insert','Cal.Collections.List.insert',NULL,'[CALDoc] This function takes an element and a list and inserts the element into the\nlist at the last position where it is still less than or equal to the next\nelement. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1972,'insertBy','Cal.Collections.List.insertBy','Cal.Collections.List.insertBy',NULL,'[CALDoc] This function takes an element and a list and inserts the element into the\nlist at the last position where it is still less than or equal to the next\nelement. ','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1973,'zipWith4','Cal.Collections.List.zipWith4','Cal.Collections.List.zipWith4',NULL,'[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of four lists.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1974,'inputList','Cal.Collections.List.inputList','Cal.Collections.List.inputList',NULL,'[CALDoc] Converts a Java list to a CAL list.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1975,'fromJCollection','Cal.Collections.List.fromJCollection','Cal.Collections.List.fromJCollection',NULL,'[CALDoc] Converts a Java collection to a CAL list.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1976,'tails','Cal.Collections.List.tails','Cal.Collections.List.tails',NULL,'[CALDoc] Returns the list of all final segments of the specified list, longest first.','2008-04-20 18:16:56','2008-04-20 18:16:56'),(1977,'list5','Cal.Collections.List.list5','Cal.Collections.List.list5',NULL,'[CALDoc] Constructs a list of five items.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1978,'sampleExamples','Cal.Collections.List.sampleExamples','Cal.Collections.List.sampleExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1979,'sample','Cal.Collections.List.sample','Cal.Collections.List.sample',NULL,'[CALDoc] Samples a list at the specified frequency. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1980,'periodize','Cal.Collections.List.periodize','Cal.Collections.List.periodize',NULL,'[CALDoc] Periodizes a list at the specified frequency, returning a list of lists, one for each modulo of the frequency.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1981,'transpose','Cal.Collections.List.transpose','Cal.Collections.List.transpose',NULL,'[CALDoc] Transposes the rows and columns of the specified list of lists.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1982,'zip','Cal.Collections.List.zip','Cal.Collections.List.zip',NULL,'[CALDoc] Converts two lists into a list of corresponding pairs.\n','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1983,'mergeExamples','Cal.Collections.List.mergeExamples','Cal.Collections.List.mergeExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1984,'merge','Cal.Collections.List.merge','Cal.Collections.List.merge',NULL,'[CALDoc] Assuming that <code>list1</code> and <code>list2</code> are sorted, <code>merge list1 list2</code> will merge all\nthe elements of the two lists into a single sorted list. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1985,'iterate','Cal.Collections.List.iterate','Cal.Collections.List.iterate',NULL,'[CALDoc] <code>iterate f x</code> returns the infinite list <code>[x, f x, f(f x), f(f(f x)), ...]</code>.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1986,'zipWith6','Cal.Collections.List.zipWith6','Cal.Collections.List.zipWith6',NULL,'[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of six lists.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1987,'accumulateLeft1Strict','Cal.Collections.List.accumulateLeft1Strict','Cal.Collections.List.accumulateLeft1Strict',NULL,'[CALDoc] <code>accumulateLeft1Strict</code> is similar to <code>accumulateLeftStrict</code>, except that it uses the first element of the list as\nthe initial value in the accumulating process.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1988,'accumulateLeftStrict','Cal.Collections.List.accumulateLeftStrict','Cal.Collections.List.accumulateLeftStrict',NULL,'[CALDoc] This is the strict version of <code>accumulateLeft</code>. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1989,'unzip','Cal.Collections.List.unzip','Cal.Collections.List.unzip',NULL,'[CALDoc] Transforms a list of pairs into a pair of lists.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1990,'findExamples','Cal.Collections.List.findExamples','Cal.Collections.List.findExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1991,'find','Cal.Collections.List.find','Cal.Collections.List.find',NULL,'[CALDoc] <code>find predicate list</code> returns the first value of list for which the predicate function is <code>True</code>,\nif there is one, or <code>Nothing</code> otherwise.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1992,'reverse','Cal.Collections.List.reverse','Cal.Collections.List.reverse',NULL,'[CALDoc] Reverses the elements of a list. reverse is O(n) time where n is the length of the list.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1993,'filterIndexedExamples','Cal.Collections.List.filterIndexedExamples','Cal.Collections.List.filterIndexedExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1994,'insertAt','Cal.Collections.List.insertAt','Cal.Collections.List.insertAt',NULL,'[CALDoc] Inserts a value into a list at the specified index.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1995,'foldLeft1','Cal.Collections.List.foldLeft1','Cal.Collections.List.foldLeft1',NULL,'[CALDoc] <code>foldLeft1</code> is similar to <code>foldLeft</code>, except that it uses the first element of the list as the initial value\nin the folding process. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1996,'sortByExamples','Cal.Collections.List.sortByExamples','Cal.Collections.List.sortByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1997,'sortBy','Cal.Collections.List.sortBy','Cal.Collections.List.sortBy',NULL,'[CALDoc] Sorts the specified list according to the specified comparison function. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1998,'list1','Cal.Collections.List.list1','Cal.Collections.List.list1',NULL,'[CALDoc] Constructs a list of one item.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(1999,'map','Cal.Collections.List.map','Cal.Collections.List.map',NULL,'[CALDoc] <code>map mapFunction list</code> applies the function <code>mapFunction</code> to each element of the list and returns the\nresulting list.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2000,'zipWith','Cal.Collections.List.zipWith','Cal.Collections.List.zipWith',NULL,'[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of two lists.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2001,'intersectBy','Cal.Collections.List.intersectBy','Cal.Collections.List.intersectBy',NULL,'[CALDoc] Takes the intersection of two lists.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2002,'lookup','Cal.Collections.List.lookup','Cal.Collections.List.lookup',NULL,'[CALDoc] <code>lookup key map</code> returns the value corresponding to key in the map (association list).','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2003,'unionBy','Cal.Collections.List.unionBy','Cal.Collections.List.unionBy',NULL,'[CALDoc] <code>unionBy eq list1 list2</code> returns <code>list1</code> concatenated with the nonduplicate elements of <code>list2</code>\n(under <code>eq</code>) that do not occur in <code>list1</code>.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2004,'foldLeft','Cal.Collections.List.foldLeft','Cal.Collections.List.foldLeft',NULL,'[CALDoc] <code>foldLeft foldFunction initialValue list</code> collapses or \'folds\' the list down to a single result, starting\nfrom the left of the list. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2005,'mapField2','Cal.Collections.List.mapField2','Cal.Collections.List.mapField2',NULL,'[CALDoc] Applies the function <code>mapFunction</code> to each <code>#2</code> field in the list or records and returns\nthe resulting list.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2006,'dropWhile','Cal.Collections.List.dropWhile','Cal.Collections.List.dropWhile',NULL,'[CALDoc] <code>dropWhile dropWhileTrueFunction list</code> drops the longest prefix of the list for which <code>dropWhileTrueFunction</code>\nis <code>True</code> for each element.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2007,'last','Cal.Collections.List.last','Cal.Collections.List.last',NULL,'[CALDoc] Returns the last element of the specified list. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2008,'chopExamples','Cal.Collections.List.chopExamples','Cal.Collections.List.chopExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2009,'chop','Cal.Collections.List.chop','Cal.Collections.List.chop',NULL,'[CALDoc] Chops up a list into equals sublists of length <code>chopLength</code>.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2010,'take','Cal.Collections.List.take','Cal.Collections.List.take',NULL,'[CALDoc] <code>take nElements list</code> returns a list consisting of the first <code>nElements</code> elements of <code>list</code>.\n','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2011,'replicateList','Cal.Collections.List.replicateList','Cal.Collections.List.replicateList',NULL,'[CALDoc] Replicates a list for a specified number of times.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2012,'replicate','Cal.Collections.List.replicate','Cal.Collections.List.replicate',NULL,'[CALDoc] <code>replicate nCopies valueToReplicate</code> is a list of length <code>nCopies</code>, with every element equal to\n<code>valueToReplicate</code>.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2013,'zipWith3','Cal.Collections.List.zipWith3','Cal.Collections.List.zipWith3',NULL,'[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of three lists.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2014,'startsWith','Cal.Collections.List.startsWith','Cal.Collections.List.startsWith',NULL,'[CALDoc] Returns whether <code>listToTest</code> starts with the specified prefix.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2015,'findIndex','Cal.Collections.List.findIndex','Cal.Collections.List.findIndex',NULL,'[CALDoc] <code>findIndex predicate list</code> returns the first index of list for which the predicate function is <code>True</code>,\nif there is one, or <code>Nothing</code> otherwise. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2016,'lengthAtLeast','Cal.Collections.List.lengthAtLeast','Cal.Collections.List.lengthAtLeast',NULL,'[CALDoc] <code>lengthAtLeast minLength list</code> returns <code>True</code> if the length of the list is greater than or equal\nto <code>minLength</code>.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2017,'removeDuplicatesExamples','Cal.Collections.List.removeDuplicatesExamples','Cal.Collections.List.removeDuplicatesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2018,'removeDuplicates','Cal.Collections.List.removeDuplicates','Cal.Collections.List.removeDuplicates',NULL,'[CALDoc] <code>removeDuplicates list</code> returns the sublist of list with duplicates removed. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2019,'removeDuplicatesBy','Cal.Collections.List.removeDuplicatesBy','Cal.Collections.List.removeDuplicatesBy',NULL,'[CALDoc] <code>removeDuplicatesBy eq list</code> returns the sublist of list with duplicates (as determined by <code>eq</code>) removed.\n','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2020,'isElemBy','Cal.Collections.List.isElemBy','Cal.Collections.List.isElemBy',NULL,'[CALDoc] Returns whether a value is an element of a list, according to the specified equality comparison function.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2021,'any','Cal.Collections.List.any','Cal.Collections.List.any',NULL,'[CALDoc] <code>any predicate list</code> returns <code>True</code> if the predicate function evaluates to <code>True</code> on at least\none element of the list.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2022,'groupBy','Cal.Collections.List.groupBy','Cal.Collections.List.groupBy',NULL,'[CALDoc] Splits the specified list into a list of lists of equal, adjacent elements.\n','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2023,'span','Cal.Collections.List.span','Cal.Collections.List.span',NULL,'[CALDoc] <code>span predicate list</code> breaks up <code>list</code> into a pair of lists. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2024,'mergeByExamples','Cal.Collections.List.mergeByExamples','Cal.Collections.List.mergeByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2025,'mergeBy','Cal.Collections.List.mergeBy','Cal.Collections.List.mergeBy',NULL,'[CALDoc] Assuming that <code>list1</code> and <code>list2</code> are sorted according to <code>comparator</code>,\n<code>mergeBy comparator list1 list2</code> will merge all the elements of the two lists into\na single list sorted according to <code>comparator</code>. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2026,'orList','Cal.Collections.List.orList','Cal.Collections.List.orList',NULL,'[CALDoc] <code>orList list</code> returns <code>True</code> if at least one element of the list is <code>True</code>.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2027,'takeWhile','Cal.Collections.List.takeWhile','Cal.Collections.List.takeWhile',NULL,'[CALDoc] <code>takeWhile takeWhileTrueFunction list</code> returns the longest prefix of the list for which <code>takeWhileTrueFunction</code>\nis <code>True</code> for each element.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2028,'elemIndices','Cal.Collections.List.elemIndices','Cal.Collections.List.elemIndices',NULL,'[CALDoc] Returns the indices of all elements of the specified list equal to the\nspecified value, in ascending order.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2029,'isSingletonList','Cal.Collections.List.isSingletonList','Cal.Collections.List.isSingletonList',NULL,'[CALDoc] Returns whether a list has exactly 1 element.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2030,'filterIndexed','Cal.Collections.List.filterIndexed','Cal.Collections.List.filterIndexed',NULL,'[CALDoc] <code>filterIndexed keepIfTrueFunction list</code> applies the predicate function <code>keepIfTrueFunction</code> to each element\nof the list, and returns the list of elements for which the predicate evaluates to <code>True</code>. <code>keepIfTrueFunction</code>\nis a function that is passed both the element value, and its zero-based index in the list.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2031,'inListByExamples','Cal.Collections.List.inListByExamples','Cal.Collections.List.inListByExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2032,'inListBy','Cal.Collections.List.inListBy','Cal.Collections.List.inListBy',NULL,'[CALDoc] Returns the position of the first occurrence of one list within another. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2033,'drop','Cal.Collections.List.drop','Cal.Collections.List.drop',NULL,'[CALDoc] <code>drop nElements list</code> drops the first <code>nElements</code> elements of the list and returns the remaining elements','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2034,'startsWithBy','Cal.Collections.List.startsWithBy','Cal.Collections.List.startsWithBy',NULL,'[CALDoc] Returns whether <code>listToTest</code> starts with the specified prefix using <code>eq</code> as the notion of equality between \nelements of the prefix and elements of the listToTest.','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2035,'tail','Cal.Collections.List.tail','Cal.Collections.List.tail',NULL,'[CALDoc] Returns a list of the elements after the first element of the list. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2036,'head','Cal.Collections.List.head','Cal.Collections.List.head',NULL,'[CALDoc] Returns the first element of the specified list. ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2037,'rightValuesExamples','Cal.Collections.List.rightValuesExamples','Cal.Collections.List.rightValuesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:57','2008-04-20 18:16:57'),(2038,'rightValues','Cal.Collections.List.rightValues','Cal.Collections.List.rightValues',NULL,'[CALDoc] Returns a <code>Prelude.List</code> with only the <code>Right</code> values of the <code>Prelude.List</code> of \n<code>Either</code>s passed in.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2039,'delete','Cal.Collections.List.delete','Cal.Collections.List.delete',NULL,'[CALDoc] <code>delete x list</code> returns the list with the first element equivalent to <code>x</code> removed.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2040,'deleteBy','Cal.Collections.List.deleteBy','Cal.Collections.List.deleteBy',NULL,'[CALDoc] <code>deleteBy eq x list</code> returns the list with the first element equivalent to <code>x</code> (under <code>eq</code>) removed.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2041,'findIndicesExamples','Cal.Collections.List.findIndicesExamples','Cal.Collections.List.findIndicesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2042,'length','Cal.Collections.List.length','Cal.Collections.List.length',NULL,'[CALDoc] Returns the length of the specified list. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2043,'findIndices','Cal.Collections.List.findIndices','Cal.Collections.List.findIndices',NULL,'[CALDoc] Returns the indices of all elements satisfying the specified predicate, in ascending order. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2044,'insertListAt','Cal.Collections.List.insertListAt','Cal.Collections.List.insertListAt',NULL,'[CALDoc] Inserts values into a list at the specified index.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2045,'isNotElem','Cal.Collections.List.isNotElem','Cal.Collections.List.isNotElem',NULL,'[CALDoc] <code>isNotElem elementValue list</code> returns <code>True</code> if <code>elementValue</code> is not an element of the list.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2046,'all','Cal.Collections.List.all','Cal.Collections.List.all',NULL,'[CALDoc] <code>all predicate list</code> returns <code>True</code> if the predicate function evaluates to <code>True</code> on all the\nelements of the list (and the list is finite).','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2047,'filter','Cal.Collections.List.filter','Cal.Collections.List.filter',NULL,'[CALDoc] <code>filter keepIfTrueFunction list</code> applies the predicate function to each element of the list, and returns\nthe list of elements for which the predicate evaluates to <code>True</code>.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2048,'zip7','Cal.Collections.List.zip7','Cal.Collections.List.zip7',NULL,'[CALDoc] Converts seven lists into a list of corresponding 7-tuples.\n','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2049,'init','Cal.Collections.List.init','Cal.Collections.List.init',NULL,'[CALDoc] Returns a list of all the elements of the list except the last one. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2050,'foldLeftStrict','Cal.Collections.List.foldLeftStrict','Cal.Collections.List.foldLeftStrict',NULL,'[CALDoc] This is the strict version of <code>foldLeft</code>. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2051,'intersperse','Cal.Collections.List.intersperse','Cal.Collections.List.intersperse',NULL,'[CALDoc] This function takes an element and a list and \"intersperses\" that element\nbetween the elements of the list.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2052,'outputListWith','Cal.Collections.List.outputListWith','Cal.Collections.List.outputListWith',NULL,'[CALDoc] Converts a CAL list to a Java list using the element mapping function <code>f</code> of type <code>a -&gt; JObject</code> \nto convert elements of the CAL list.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2053,'leftValuesExamples','Cal.Collections.List.leftValuesExamples','Cal.Collections.List.leftValuesExamples',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2054,'leftValues','Cal.Collections.List.leftValues','Cal.Collections.List.leftValues',NULL,'[CALDoc] Returns a <code>Prelude.List</code> with only the <code>Left</code> values of the <code>Prelude.List</code> of \n<code>Either</code>s passed in.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2055,'jIteratorToJEnumeration','Cal.Collections.List.jIteratorToJEnumeration','Cal.Collections.List.jIteratorToJEnumeration',NULL,'[CALDoc] Converts a Java iterator to a Java enumeration in a lazy fashion.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2056,'jEnumerationToJIterator','Cal.Collections.List.jEnumerationToJIterator','Cal.Collections.List.jEnumerationToJIterator',NULL,'[CALDoc] Converts a Java enumeration to a Java iterator in a lazy fashion.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2057,'jListToJCollection','Cal.Collections.List.jListToJCollection','Cal.Collections.List.jListToJCollection',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2058,'jSortBy','Cal.Collections.List.jSortBy','Cal.Collections.List.jSortBy',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2059,'toLowerCaseString','Cal.Collections.List.toLowerCaseString','Cal.Collections.List.toLowerCaseString',NULL,'[CALDoc] DO NOT MAKE PUBLIC.\n','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2060,'toLowerCase','Cal.Collections.List.toLowerCase','Cal.Collections.List.toLowerCase',NULL,'[CALDoc] Must remain private. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2061,'toUpperCase','Cal.Collections.List.toUpperCase','Cal.Collections.List.toUpperCase',NULL,'[CALDoc] Must remain private. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2062,'makeIterator','Cal.Collections.List.makeIterator','Cal.Collections.List.makeIterator',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2063,'isProperSubmap','Cal.Collections.LongMap.isProperSubmap','Cal.Collections.LongMap.isProperSubmap',NULL,'[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2064,'outputLongMap','Cal.Collections.LongMap.outputLongMap','Cal.Collections.LongMap.outputLongMap',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2065,'isEmpty','Cal.Collections.LongMap.isEmpty','Cal.Collections.LongMap.isEmpty',NULL,'[CALDoc] Returns whether the map is empty.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2066,'updateLookupWithKey','Cal.Collections.LongMap.updateLookupWithKey','Cal.Collections.LongMap.updateLookupWithKey',NULL,'[CALDoc] Simultaneously looks up and updates the map at a specific key.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2067,'fold','Cal.Collections.LongMap.fold','Cal.Collections.LongMap.fold',NULL,'[CALDoc] Folds over the values in the map in an unspecified order.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2068,'inputLongMap','Cal.Collections.LongMap.inputLongMap','Cal.Collections.LongMap.inputLongMap',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2069,'find','Cal.Collections.LongMap.find','Cal.Collections.LongMap.find',NULL,'[CALDoc] Finds the value of a key. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2070,'elems','Cal.Collections.LongMap.elems','Cal.Collections.LongMap.elems',NULL,'[CALDoc] Returns all elements of the map.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2071,'mapKeys','Cal.Collections.LongMap.mapKeys','Cal.Collections.LongMap.mapKeys',NULL,'[CALDoc] <code>mapKeys f s</code> is the map obtained by applying <code>f</code> to each key of <code>s</code>.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2072,'splitLookup','Cal.Collections.LongMap.splitLookup','Cal.Collections.LongMap.splitLookup',NULL,'[CALDoc] <code>splitLookup key map</code> splits a map just like <code>split</code> but also returns <code>lookup key map</code>.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2073,'insertLookupWithKey','Cal.Collections.LongMap.insertLookupWithKey','Cal.Collections.LongMap.insertLookupWithKey',NULL,'[CALDoc] <code>insertLookupWithKey f k x map</code> is a pair where the first element is equal to\n<code>lookup k map</code> and the second element equal to <code>insertWithKey f k x map</code>.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2074,'unionsWithKey','Cal.Collections.LongMap.unionsWithKey','Cal.Collections.LongMap.unionsWithKey',NULL,'[CALDoc] Returns the union of a list of maps, with a combining operation.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2075,'showLongMap','Cal.Collections.LongMap.showLongMap','Cal.Collections.LongMap.showLongMap',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2076,'unions','Cal.Collections.LongMap.unions','Cal.Collections.LongMap.unions',NULL,'[CALDoc] Returns the union of a list of maps.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2077,'intersection','Cal.Collections.LongMap.intersection','Cal.Collections.LongMap.intersection',NULL,'[CALDoc] Returns the (left-biased) intersection of two maps (based on keys). ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2078,'isSubmap','Cal.Collections.LongMap.isSubmap','Cal.Collections.LongMap.isSubmap',NULL,'[CALDoc] Returns whether the first map is a submap of the second map.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2079,'isSubmapBy','Cal.Collections.LongMap.isSubmapBy','Cal.Collections.LongMap.isSubmapBy',NULL,'[CALDoc] Returns whether the first map is a submap of the second map.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2080,'keySet','Cal.Collections.LongMap.keySet','Cal.Collections.LongMap.keySet',NULL,'[CALDoc] Returns a set of all keys of the map.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2081,'keys','Cal.Collections.LongMap.keys','Cal.Collections.LongMap.keys',NULL,'[CALDoc] Returns all keys of the map.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2082,'fromDistinctAscList','Cal.Collections.LongMap.fromDistinctAscList','Cal.Collections.LongMap.fromDistinctAscList',NULL,'[CALDoc] Builds a map from an ascending list of distinct elements in linear time.\n','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2083,'match','Cal.Collections.LongMap.match','Cal.Collections.LongMap.match',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2084,'fromAscList','Cal.Collections.LongMap.fromAscList','Cal.Collections.LongMap.fromAscList',NULL,'[CALDoc] Builds a map from an ascending list in linear time. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2085,'partition','Cal.Collections.LongMap.partition','Cal.Collections.LongMap.partition',NULL,'[CALDoc] Partitions the map according to a predicate. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2086,'partitionWithKey','Cal.Collections.LongMap.partitionWithKey','Cal.Collections.LongMap.partitionWithKey',NULL,'[CALDoc] Partitions the map according to a predicate. ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2087,'mapKeysWith','Cal.Collections.LongMap.mapKeysWith','Cal.Collections.LongMap.mapKeysWith',NULL,'[CALDoc] <code>mapKeysWith c f s</code> is the map obtained by applying <code>f</code> to each key of <code>s</code>.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2088,'size','Cal.Collections.LongMap.size','Cal.Collections.LongMap.size',NULL,'[CALDoc] Returns the number of elements in the map.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2089,'mapAccumR','Cal.Collections.LongMap.mapAccumR','Cal.Collections.LongMap.mapAccumR',NULL,'[CALDoc] ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2090,'single','Cal.Collections.LongMap.single','Cal.Collections.LongMap.single',NULL,'[CALDoc] Creates a map with a single element.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2091,'unionsWith','Cal.Collections.LongMap.unionsWith','Cal.Collections.LongMap.unionsWith',NULL,'[CALDoc] Returns the union of a list of maps, with a combining operation.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2092,'unionWith','Cal.Collections.LongMap.unionWith','Cal.Collections.LongMap.unionWith',NULL,'[CALDoc] Returns the left-biased union of two maps, with a combining function.','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2093,'update','Cal.Collections.LongMap.update','Cal.Collections.LongMap.update',NULL,'[CALDoc] <code>update f k map</code> updates the value <code>x</code> at <code>k</code> (if it is in the map). ','2008-04-20 18:16:58','2008-04-20 18:16:58'),(2094,'toAscList','Cal.Collections.LongMap.toAscList','Cal.Collections.LongMap.toAscList',NULL,'[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2095,'lookupWithDefault','Cal.Collections.LongMap.lookupWithDefault','Cal.Collections.LongMap.lookupWithDefault',NULL,'[CALDoc] <code>lookupWithDefault key map defaultValue</code> returns the value at the given key or <code>defaultValue</code>\nwhen the key is not in the map.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2096,'isProperSubmapBy','Cal.Collections.LongMap.isProperSubmapBy','Cal.Collections.LongMap.isProperSubmapBy',NULL,'[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2097,'assocs','Cal.Collections.LongMap.assocs','Cal.Collections.LongMap.assocs',NULL,'[CALDoc] Returns an association list of all key-value pairs in the map.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2098,'submapCmp','Cal.Collections.LongMap.submapCmp','Cal.Collections.LongMap.submapCmp',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2099,'map','Cal.Collections.LongMap.map','Cal.Collections.LongMap.map',NULL,'[CALDoc] Maps a function over all values in the map.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2100,'mapWithKey','Cal.Collections.LongMap.mapWithKey','Cal.Collections.LongMap.mapWithKey',NULL,'[CALDoc] Maps a function over all values in the map.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2101,'split','Cal.Collections.LongMap.split','Cal.Collections.LongMap.split',NULL,'[CALDoc] <code>split k map</code> returns a pair <code>(map1,map2)</code> where the keys in <code>map1</code> are smaller\nthan <code>k</code> and the keys in <code>map2</code> larger than <code>k</code>. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2102,'union','Cal.Collections.LongMap.union','Cal.Collections.LongMap.union',NULL,'[CALDoc] <code>union t1 t2</code> takes the left-biased union of <code>t1</code> and <code>t2</code>. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2103,'insertWith','Cal.Collections.LongMap.insertWith','Cal.Collections.LongMap.insertWith',NULL,'[CALDoc] Inserts a new key and value in the map with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2104,'unionWithKey','Cal.Collections.LongMap.unionWithKey','Cal.Collections.LongMap.unionWithKey',NULL,'[CALDoc] Returns the left-biased union of two maps, with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2105,'difference','Cal.Collections.LongMap.difference','Cal.Collections.LongMap.difference',NULL,'[CALDoc] Returns the difference of two maps (based on keys).','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2106,'member','Cal.Collections.LongMap.member','Cal.Collections.LongMap.member',NULL,'[CALDoc] Returns whether the key is a member of the map.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2107,'arbitraryLongMap','Cal.Collections.LongMap.arbitraryLongMap','Cal.Collections.LongMap.arbitraryLongMap',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2108,'fromAscListWithKey','Cal.Collections.LongMap.fromAscListWithKey','Cal.Collections.LongMap.fromAscListWithKey',NULL,'[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2109,'intersectionWith','Cal.Collections.LongMap.intersectionWith','Cal.Collections.LongMap.intersectionWith',NULL,'[CALDoc] Returns the intersection of two maps, with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2110,'intersectionWithKey','Cal.Collections.LongMap.intersectionWithKey','Cal.Collections.LongMap.intersectionWithKey',NULL,'[CALDoc] Returns the intersection of two maps, with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2111,'coarbitraryLongMap','Cal.Collections.LongMap.coarbitraryLongMap','Cal.Collections.LongMap.coarbitraryLongMap',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2112,'toList','Cal.Collections.LongMap.toList','Cal.Collections.LongMap.toList',NULL,'[CALDoc] Converts to a list of key-value pairs with the keys.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2113,'foldWithKey','Cal.Collections.LongMap.foldWithKey','Cal.Collections.LongMap.foldWithKey',NULL,'[CALDoc] Folds over the keys and values in the map in an unspecified order.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2114,'foldR','Cal.Collections.LongMap.foldR','Cal.Collections.LongMap.foldR',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2115,'fromList','Cal.Collections.LongMap.fromList','Cal.Collections.LongMap.fromList',NULL,'[CALDoc] Builds a map from a list of key-value pairs.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2116,'insert','Cal.Collections.LongMap.insert','Cal.Collections.LongMap.insert',NULL,'[CALDoc] Inserts a new key/value pair in the map. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2117,'fromAscListWith','Cal.Collections.LongMap.fromAscListWith','Cal.Collections.LongMap.fromAscListWith',NULL,'[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2118,'fromListWith','Cal.Collections.LongMap.fromListWith','Cal.Collections.LongMap.fromListWith',NULL,'[CALDoc] Builds a map from a list of key-value pairs with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2119,'fromListWithKey','Cal.Collections.LongMap.fromListWithKey','Cal.Collections.LongMap.fromListWithKey',NULL,'[CALDoc] Builds a map from a list of key-value pairs with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2120,'insertWithKey','Cal.Collections.LongMap.insertWithKey','Cal.Collections.LongMap.insertWithKey',NULL,'[CALDoc] Inserts a new key and value in the map with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2121,'join','Cal.Collections.LongMap.join','Cal.Collections.LongMap.join',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2122,'branchMask','Cal.Collections.LongMap.branchMask','Cal.Collections.LongMap.branchMask',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2123,'mapAccum','Cal.Collections.LongMap.mapAccum','Cal.Collections.LongMap.mapAccum',NULL,'[CALDoc] Threads an accumulating argument through the map in an unspecified order.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2124,'mapAccumWithKey','Cal.Collections.LongMap.mapAccumWithKey','Cal.Collections.LongMap.mapAccumWithKey',NULL,'[CALDoc] Threads an accumulating argument through the map in an unspecified order.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2125,'mapAccumL','Cal.Collections.LongMap.mapAccumL','Cal.Collections.LongMap.mapAccumL',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2126,'delete','Cal.Collections.LongMap.delete','Cal.Collections.LongMap.delete',NULL,'[CALDoc] Deletes a key and its value from the map. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2127,'differenceWith','Cal.Collections.LongMap.differenceWith','Cal.Collections.LongMap.differenceWith',NULL,'[CALDoc] Returns the difference of two maps, with a combining function.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2128,'differenceWithKey','Cal.Collections.LongMap.differenceWithKey','Cal.Collections.LongMap.differenceWithKey',NULL,'[CALDoc] Returns the difference of two maps, with a combining function. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2129,'shorter','Cal.Collections.LongMap.shorter','Cal.Collections.LongMap.shorter',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2130,'lookup','Cal.Collections.LongMap.lookup','Cal.Collections.LongMap.lookup',NULL,'[CALDoc] Looks up the value at a key in the map.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2131,'adjust','Cal.Collections.LongMap.adjust','Cal.Collections.LongMap.adjust',NULL,'[CALDoc] Adjusts a value at a specific key. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2132,'filter','Cal.Collections.LongMap.filter','Cal.Collections.LongMap.filter',NULL,'[CALDoc] Filters all values that satisfy the predicate.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2133,'filterWithKey','Cal.Collections.LongMap.filterWithKey','Cal.Collections.LongMap.filterWithKey',NULL,'[CALDoc] Filters all keys/values that satisfy the predicate.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2134,'adjustWithKey','Cal.Collections.LongMap.adjustWithKey','Cal.Collections.LongMap.adjustWithKey',NULL,'[CALDoc] Adjusts a value at a specific key. ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2135,'updateWithKey','Cal.Collections.LongMap.updateWithKey','Cal.Collections.LongMap.updateWithKey',NULL,'[CALDoc] <code>updateWithKey f k map</code> updates the value <code>x</code> at <code>k</code> (if it is in the map). ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2136,'Bin','Cal.Collections.LongMap.Bin','Cal.Collections.LongMap.Bin',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2137,'zero','Cal.Collections.LongMap.zero','Cal.Collections.LongMap.zero',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2138,'nomatch','Cal.Collections.LongMap.nomatch','Cal.Collections.LongMap.nomatch',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2139,'mask','Cal.Collections.LongMap.mask','Cal.Collections.LongMap.mask',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2140,'empty','Cal.Collections.LongMap.empty','Cal.Collections.LongMap.empty',NULL,'[CALDoc] The empty map.','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2141,'Nil','Cal.Collections.LongMap.Nil','Cal.Collections.LongMap.Nil',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2142,'Tip','Cal.Collections.LongMap.Tip','Cal.Collections.LongMap.Tip',NULL,'[CALDoc] ','2008-04-20 18:16:59','2008-04-20 18:16:59'),(2143,'asinh','Cal.Utilities.Math.asinh','Cal.Utilities.Math.asinh',NULL,'[CALDoc] Returns the inverse hyperbolic sine of the specified <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2144,'roundToNPlaces','Cal.Utilities.Math.roundToNPlaces','Cal.Utilities.Math.roundToNPlaces',NULL,'[CALDoc] Rounds a number to N decimal places.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2145,'acosh','Cal.Utilities.Math.acosh','Cal.Utilities.Math.acosh',NULL,'[CALDoc] Returns the inverse hyperbolic cosine of the specified <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2146,'logBase','Cal.Utilities.Math.logBase','Cal.Utilities.Math.logBase',NULL,'[CALDoc] Returns the logarithm of the first argument in the base of the second argument.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2147,'atanh','Cal.Utilities.Math.atanh','Cal.Utilities.Math.atanh',NULL,'[CALDoc] Returns the inverse hyperbolic tangent of the specified <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2148,'fractionalPart','Cal.Utilities.Math.fractionalPart','Cal.Utilities.Math.fractionalPart',NULL,'[CALDoc] Computes the fractional part of a <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2149,'truncate','Cal.Utilities.Math.truncate','Cal.Utilities.Math.truncate',NULL,'[CALDoc] Truncates the <code>Double</code> value towards zero, dropping the fractional part.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2150,'ieeeRemainder','Cal.Utilities.Math.ieeeRemainder','Cal.Utilities.Math.ieeeRemainder',NULL,'[CALDoc] Computes the remainder from a rounding division as prescribed by the IEEE 754 standard.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2151,'roundFloatToInt','Cal.Utilities.Math.roundFloatToInt','Cal.Utilities.Math.roundFloatToInt',NULL,'[CALDoc] Returns the <code>Int</code> value that is closest in value to the argument, calculated as <em>floor(x + 0.5)</em>.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2152,'roundDoubleToLong','Cal.Utilities.Math.roundDoubleToLong','Cal.Utilities.Math.roundDoubleToLong',NULL,'[CALDoc] Returns the <code>Long</code> value that is closest in value to the argument, calculated as <em>floor(x + 0.5)</em>.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2153,'round','Cal.Utilities.Math.round','Cal.Utilities.Math.round',NULL,'[CALDoc] Returns the integral value that is closest in value to the argument. ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2154,'ceiling','Cal.Utilities.Math.ceiling','Cal.Utilities.Math.ceiling',NULL,'[CALDoc] Returns the smallest integral value that is greater than or equal to the argument.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2155,'floor','Cal.Utilities.Math.floor','Cal.Utilities.Math.floor',NULL,'[CALDoc] Returns the largest integral value that is less than or equal to the argument.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2156,'tanh','Cal.Utilities.Math.tanh','Cal.Utilities.Math.tanh',NULL,'[CALDoc] Returns the hyperbolic tangent of the specified <code>Double</code> value. ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2157,'cosh','Cal.Utilities.Math.cosh','Cal.Utilities.Math.cosh',NULL,'[CALDoc] Returns the hyperbolic cosine of the specified <code>Double</code> value. ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2158,'sinh','Cal.Utilities.Math.sinh','Cal.Utilities.Math.sinh',NULL,'[CALDoc] Returns the hyperbolic sine of the specified <code>Double</code> value. ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2159,'atan2','Cal.Utilities.Math.atan2','Cal.Utilities.Math.atan2',NULL,'[CALDoc] Converts rectangular coordinates (x, y) to polar (r, theta). ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2160,'atan','Cal.Utilities.Math.atan','Cal.Utilities.Math.atan',NULL,'[CALDoc] Returns the arc tangent of an angle, in the range of <em>-pi/2</em> through <em>pi/2</em>.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2161,'acos','Cal.Utilities.Math.acos','Cal.Utilities.Math.acos',NULL,'[CALDoc] Returns the arc cosine of an angle, in the range of 0.0 through <em>pi</em>.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2162,'asin','Cal.Utilities.Math.asin','Cal.Utilities.Math.asin',NULL,'[CALDoc] Returns the arc sine of an angle, in the range of <em>-pi/2</em> through <em>pi/2</em>.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2163,'tan','Cal.Utilities.Math.tan','Cal.Utilities.Math.tan',NULL,'[CALDoc] Returns the trigonometric tangent of an angle.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2164,'cos','Cal.Utilities.Math.cos','Cal.Utilities.Math.cos',NULL,'[CALDoc] Returns the trigonometric cosine of an angle.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2165,'sin','Cal.Utilities.Math.sin','Cal.Utilities.Math.sin',NULL,'[CALDoc] Returns the trigonometric sine of an angle.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2166,'degreesToRadians','Cal.Utilities.Math.degreesToRadians','Cal.Utilities.Math.degreesToRadians',NULL,'[CALDoc] Converts an angle measure in degrees to an angle measure in radians.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2167,'radiansToDegrees','Cal.Utilities.Math.radiansToDegrees','Cal.Utilities.Math.radiansToDegrees',NULL,'[CALDoc] Converts an angle measure in radians to an angle measure in degrees.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2168,'power','Cal.Utilities.Math.power','Cal.Utilities.Math.power',NULL,'[CALDoc] Returns the result of raising the first argument to the power specified by the second argument.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2169,'sqrt','Cal.Utilities.Math.sqrt','Cal.Utilities.Math.sqrt',NULL,'[CALDoc] Returns the positive square root of the specified <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2170,'log10','Cal.Utilities.Math.log10','Cal.Utilities.Math.log10',NULL,'[CALDoc] Returns the base 10 logarithm of the specified <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2171,'log','Cal.Utilities.Math.log','Cal.Utilities.Math.log',NULL,'[CALDoc] Returns the natural logarithm (base <em>e</em>) of the specified <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2172,'exp','Cal.Utilities.Math.exp','Cal.Utilities.Math.exp',NULL,'[CALDoc] Returns Euler\'s number <em>e</em> raised to the power of the specified <code>Double</code> value.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2173,'e','Cal.Utilities.Math.e','Cal.Utilities.Math.e',NULL,'[CALDoc] The <code>Double</code> value that is closer than any other to <em>e</em>, the base of the natural\nlogarithm.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2174,'pi','Cal.Utilities.Math.pi','Cal.Utilities.Math.pi',NULL,'[CALDoc] The <code>Double</code> value that is closer than any other to <em>pi</em>, the mathematical constant\nrepresenting the ratio of a circle\'s circumference to its diameter.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2175,'toDescList','Cal.Collections.Map.toDescList','Cal.Collections.Map.toDescList',NULL,'[CALDoc] Converts to a list of key-value pairs with the keys in descending order.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2176,'findMin','Cal.Collections.Map.findMin','Cal.Collections.Map.findMin',NULL,'[CALDoc] Finds the minimal key of the map.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2177,'isProperSubmap','Cal.Collections.Map.isProperSubmap','Cal.Collections.Map.isProperSubmap',NULL,'[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2178,'updateLookupWithKey','Cal.Collections.Map.updateLookupWithKey','Cal.Collections.Map.updateLookupWithKey',NULL,'[CALDoc] Simultaneously looks up and updates the map at a specific key.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2179,'deleteMin','Cal.Collections.Map.deleteMin','Cal.Collections.Map.deleteMin',NULL,'[CALDoc] Deletes the minimal key of the map.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2180,'fold','Cal.Collections.Map.fold','Cal.Collections.Map.fold',NULL,'[CALDoc] Folds over the values in the map in an unspecified order. (= descending post-order)','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2181,'member','Cal.Collections.Map.member','Cal.Collections.Map.member',NULL,'[CALDoc] Returns whether the key is a member of the map.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2182,'find','Cal.Collections.Map.find','Cal.Collections.Map.find',NULL,'[CALDoc] Finds the value of a key. ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2183,'elems','Cal.Collections.Map.elems','Cal.Collections.Map.elems',NULL,'[CALDoc] Returns all elements of the map.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2184,'foldL','Cal.Collections.Map.foldL','Cal.Collections.Map.foldL',NULL,'[CALDoc] ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2185,'inputMap','Cal.Collections.Map.inputMap','Cal.Collections.Map.inputMap',NULL,'[CALDoc] ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2186,'elemAt','Cal.Collections.Map.elemAt','Cal.Collections.Map.elemAt',NULL,'[CALDoc] Retrieves an element by index. ','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2187,'mapKeys','Cal.Collections.Map.mapKeys','Cal.Collections.Map.mapKeys',NULL,'[CALDoc] <code>mapKeys f map</code> is the map obtained by applying <code>f</code> to each key of <code>map</code>.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2188,'insertLookupWithKey','Cal.Collections.Map.insertLookupWithKey','Cal.Collections.Map.insertLookupWithKey',NULL,'[CALDoc] <code>insertLookupWithKey f key value map</code> is a pair where the first element is equal to\n<code>lookup key map</code> and the second element equal to <code>insertWithKey f key value map</code>.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2189,'unionsWithKey','Cal.Collections.Map.unionsWithKey','Cal.Collections.Map.unionsWithKey',NULL,'[CALDoc] Returns the union of a list of maps, with a combining operation.','2008-04-20 18:17:00','2008-04-20 18:17:00'),(2190,'unions','Cal.Collections.Map.unions','Cal.Collections.Map.unions',NULL,'[CALDoc] Returns the union of a list of maps.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2191,'intersection','Cal.Collections.Map.intersection','Cal.Collections.Map.intersection',NULL,'[CALDoc] Returns the intersection of two maps. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2192,'isSubmap','Cal.Collections.Map.isSubmap','Cal.Collections.Map.isSubmap',NULL,'[CALDoc] Returns whether the first map is a submap of the second map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2193,'isSubmapBy','Cal.Collections.Map.isSubmapBy','Cal.Collections.Map.isSubmapBy',NULL,'[CALDoc] Returns whether the first map is a submap of the second map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2194,'keySet','Cal.Collections.Map.keySet','Cal.Collections.Map.keySet',NULL,'[CALDoc] Returns a set of all keys of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2195,'keys','Cal.Collections.Map.keys','Cal.Collections.Map.keys',NULL,'[CALDoc] Returns all keys of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2196,'fromAscList','Cal.Collections.Map.fromAscList','Cal.Collections.Map.fromAscList',NULL,'[CALDoc] Builds a map from an ascending list in linear time. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2197,'partition','Cal.Collections.Map.partition','Cal.Collections.Map.partition',NULL,'[CALDoc] Partitions the map according to a predicate. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2198,'partitionWithKey','Cal.Collections.Map.partitionWithKey','Cal.Collections.Map.partitionWithKey',NULL,'[CALDoc] Partitions the map according to a predicate. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2199,'mapKeysWith','Cal.Collections.Map.mapKeysWith','Cal.Collections.Map.mapKeysWith',NULL,'[CALDoc] <code>mapKeysWith c f s</code> is the map obtained by applying <code>f</code> to each key of <code>s</code>.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2200,'fromListWith','Cal.Collections.Map.fromListWith','Cal.Collections.Map.fromListWith',NULL,'[CALDoc] Builds a map from a list of key-value pairs with a combining function.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2201,'updateMin','Cal.Collections.Map.updateMin','Cal.Collections.Map.updateMin',NULL,'[CALDoc] Updates the minimal key of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2202,'insertWith','Cal.Collections.Map.insertWith','Cal.Collections.Map.insertWith',NULL,'[CALDoc] Inserts a new key and value in the map with a combining function.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2203,'unionsWith','Cal.Collections.Map.unionsWith','Cal.Collections.Map.unionsWith',NULL,'[CALDoc] Returns the union of a list of maps, with a combining operation.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2204,'unionWith','Cal.Collections.Map.unionWith','Cal.Collections.Map.unionWith',NULL,'[CALDoc] Returns the left-biased union of two maps, with a combining function. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2205,'update','Cal.Collections.Map.update','Cal.Collections.Map.update',NULL,'[CALDoc] <code>update f key map</code> updates the value <code>x</code> at <code>key</code> (if it is in the map). ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2206,'isEmptySpecialized','Cal.Collections.Map.isEmptySpecialized','Cal.Collections.Map.isEmptySpecialized',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2207,'findMax','Cal.Collections.Map.findMax','Cal.Collections.Map.findMax',NULL,'[CALDoc] Finds the maximal key of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2208,'deepEquals','Cal.Collections.Map.deepEquals','Cal.Collections.Map.deepEquals',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2209,'lookupWithDefault','Cal.Collections.Map.lookupWithDefault','Cal.Collections.Map.lookupWithDefault',NULL,'[CALDoc] <code>lookupWithDefault key map defaultValue</code> returns the value at the given key or <code>defaultValue</code>\nwhen the key is not in the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2210,'isProperSubmapBy','Cal.Collections.Map.isProperSubmapBy','Cal.Collections.Map.isProperSubmapBy',NULL,'[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2211,'union','Cal.Collections.Map.union','Cal.Collections.Map.union',NULL,'[CALDoc] <code>union map1 map2</code> takes the left-biased union of <code>map1</code> and <code>map2</code>. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2212,'hedgeUnionR','Cal.Collections.Map.hedgeUnionR','Cal.Collections.Map.hedgeUnionR',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2213,'assocs','Cal.Collections.Map.assocs','Cal.Collections.Map.assocs',NULL,'[CALDoc] Returns an association list of all key-value pairs in the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2214,'updateMinWithKey','Cal.Collections.Map.updateMinWithKey','Cal.Collections.Map.updateMinWithKey',NULL,'[CALDoc] Updates the minimal key of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2215,'deleteAt','Cal.Collections.Map.deleteAt','Cal.Collections.Map.deleteAt',NULL,'[CALDoc] Deletes the element at index.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2216,'map','Cal.Collections.Map.map','Cal.Collections.Map.map',NULL,'[CALDoc] Maps a function over all values in the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2217,'mapWithKey','Cal.Collections.Map.mapWithKey','Cal.Collections.Map.mapWithKey',NULL,'[CALDoc] Maps a function over all values in the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2218,'updateMax','Cal.Collections.Map.updateMax','Cal.Collections.Map.updateMax',NULL,'[CALDoc] Updates the maximal key of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2219,'updateMaxWithKey','Cal.Collections.Map.updateMaxWithKey','Cal.Collections.Map.updateMaxWithKey',NULL,'[CALDoc] Updates the maximal key of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2220,'split','Cal.Collections.Map.split','Cal.Collections.Map.split',NULL,'[CALDoc] <code>split k map</code> returns a pair <code>(map1,map2)</code> where the keys in <code>map1</code> are smaller\nthan <code>k</code> and the keys in <code>map2</code> larger than <code>k</code>. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2221,'valid','Cal.Collections.Map.valid','Cal.Collections.Map.valid',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2222,'validsize','Cal.Collections.Map.validsize','Cal.Collections.Map.validsize',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2223,'unionWithKey','Cal.Collections.Map.unionWithKey','Cal.Collections.Map.unionWithKey',NULL,'[CALDoc] Returns the left-biased union of two maps, with a combining function. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2224,'hedgeUnionWithKey','Cal.Collections.Map.hedgeUnionWithKey','Cal.Collections.Map.hedgeUnionWithKey',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2225,'difference','Cal.Collections.Map.difference','Cal.Collections.Map.difference',NULL,'[CALDoc] Returns the difference of two maps.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2226,'hedgeDiff','Cal.Collections.Map.hedgeDiff','Cal.Collections.Map.hedgeDiff',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2227,'foldWithKey','Cal.Collections.Map.foldWithKey','Cal.Collections.Map.foldWithKey',NULL,'[CALDoc] Folds over the keys and values in the map in an unspecified order. (= descending post-order)','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2228,'fromListWithKey','Cal.Collections.Map.fromListWithKey','Cal.Collections.Map.fromListWithKey',NULL,'[CALDoc] Builds a map from a list of key-value pairs with a combining function.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2229,'insertWithKey','Cal.Collections.Map.insertWithKey','Cal.Collections.Map.insertWithKey',NULL,'[CALDoc] Inserts a new key and value in the map with a combining function.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2230,'deleteMax','Cal.Collections.Map.deleteMax','Cal.Collections.Map.deleteMax',NULL,'[CALDoc] Deletes the maximal key of the map.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2231,'showMap','Cal.Collections.Map.showMap','Cal.Collections.Map.showMap',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2232,'emptySpecialized','Cal.Collections.Map.emptySpecialized','Cal.Collections.Map.emptySpecialized',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2233,'ordered','Cal.Collections.Map.ordered','Cal.Collections.Map.ordered',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2234,'updateAt','Cal.Collections.Map.updateAt','Cal.Collections.Map.updateAt',NULL,'[CALDoc] Updates the element at index. ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2235,'notEqualsMap','Cal.Collections.Map.notEqualsMap','Cal.Collections.Map.notEqualsMap',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2236,'equalsMap','Cal.Collections.Map.equalsMap','Cal.Collections.Map.equalsMap',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2237,'foldI','Cal.Collections.Map.foldI','Cal.Collections.Map.foldI',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2238,'intersectionWith','Cal.Collections.Map.intersectionWith','Cal.Collections.Map.intersectionWith',NULL,'[CALDoc] Returns the intersection of two maps, with a combining function.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2239,'intersectionWithKey','Cal.Collections.Map.intersectionWithKey','Cal.Collections.Map.intersectionWithKey',NULL,'[CALDoc] Returns the intersection of two maps, with a combining function.','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2240,'hedgeUnionL','Cal.Collections.Map.hedgeUnionL','Cal.Collections.Map.hedgeUnionL',NULL,'[CALDoc] ','2008-04-20 18:17:01','2008-04-20 18:17:01'),(2241,'fromList','Cal.Collections.Map.fromList','Cal.Collections.Map.fromList',NULL,'[CALDoc] Builds a map from a list of key-value pairs.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2242,'insert','Cal.Collections.Map.insert','Cal.Collections.Map.insert',NULL,'[CALDoc] Inserts a new key and value in the map.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2243,'findIndex','Cal.Collections.Map.findIndex','Cal.Collections.Map.findIndex',NULL,'[CALDoc] Returns the index of a key. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2244,'lookupIndex','Cal.Collections.Map.lookupIndex','Cal.Collections.Map.lookupIndex',NULL,'[CALDoc] Looks up the index of a key. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2245,'balanced','Cal.Collections.Map.balanced','Cal.Collections.Map.balanced',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2246,'isSubmapHelper','Cal.Collections.Map.isSubmapHelper','Cal.Collections.Map.isSubmapHelper',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2247,'fromAscListWith','Cal.Collections.Map.fromAscListWith','Cal.Collections.Map.fromAscListWith',NULL,'[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2248,'fromAscListWithKey','Cal.Collections.Map.fromAscListWithKey','Cal.Collections.Map.fromAscListWithKey',NULL,'[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2249,'fromDistinctAscList','Cal.Collections.Map.fromDistinctAscList','Cal.Collections.Map.fromDistinctAscList',NULL,'[CALDoc] Builds a map from an ascending list of distinct elements in linear time.\n','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2250,'directBuild','Cal.Collections.Map.directBuild','Cal.Collections.Map.directBuild',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2251,'intersectWithKey','Cal.Collections.Map.intersectWithKey','Cal.Collections.Map.intersectWithKey',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2252,'splitLookup','Cal.Collections.Map.splitLookup','Cal.Collections.Map.splitLookup',NULL,'[CALDoc] <code>splitLookup k map</code> splits a map just like <code>split</code> but also returns <code>lookup k map</code>.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2253,'mapAccum','Cal.Collections.Map.mapAccum','Cal.Collections.Map.mapAccum',NULL,'[CALDoc] Threads an accumulating argument through the map in an unspecified order. (= ascending pre-order)','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2254,'mapAccumWithKey','Cal.Collections.Map.mapAccumWithKey','Cal.Collections.Map.mapAccumWithKey',NULL,'[CALDoc] Threads an accumulating argument through the map in an unspecified order. (= ascending pre-order)','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2255,'mapAccumL','Cal.Collections.Map.mapAccumL','Cal.Collections.Map.mapAccumL',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2256,'delete','Cal.Collections.Map.delete','Cal.Collections.Map.delete',NULL,'[CALDoc] Deletes a key and its value from the map. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2257,'differenceWith','Cal.Collections.Map.differenceWith','Cal.Collections.Map.differenceWith',NULL,'[CALDoc] Returns the difference of two maps, with a combining function.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2258,'differenceWithKey','Cal.Collections.Map.differenceWithKey','Cal.Collections.Map.differenceWithKey',NULL,'[CALDoc] Returns the difference of two maps, with a combining function. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2259,'hedgeDiffWithKey','Cal.Collections.Map.hedgeDiffWithKey','Cal.Collections.Map.hedgeDiffWithKey',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2260,'trimLookupLo','Cal.Collections.Map.trimLookupLo','Cal.Collections.Map.trimLookupLo',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2261,'lookup','Cal.Collections.Map.lookup','Cal.Collections.Map.lookup',NULL,'[CALDoc] Looks up the value at a key in the map.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2262,'filterLt','Cal.Collections.Map.filterLt','Cal.Collections.Map.filterLt',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2263,'filterGt','Cal.Collections.Map.filterGt','Cal.Collections.Map.filterGt',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2264,'adjust','Cal.Collections.Map.adjust','Cal.Collections.Map.adjust',NULL,'[CALDoc] Adjusts a value at a specific key. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2265,'filter','Cal.Collections.Map.filter','Cal.Collections.Map.filter',NULL,'[CALDoc] Filters all values that satisfy the predicate.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2266,'filterWithKey','Cal.Collections.Map.filterWithKey','Cal.Collections.Map.filterWithKey',NULL,'[CALDoc] Filters all keys/values that satisfy the predicate.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2267,'merge','Cal.Collections.Map.merge','Cal.Collections.Map.merge',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2268,'join','Cal.Collections.Map.join','Cal.Collections.Map.join',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2269,'insertMax','Cal.Collections.Map.insertMax','Cal.Collections.Map.insertMax',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2270,'insertMin','Cal.Collections.Map.insertMin','Cal.Collections.Map.insertMin',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2271,'single','Cal.Collections.Map.single','Cal.Collections.Map.single',NULL,'[CALDoc] Creates a map with a single element.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2272,'adjustWithKey','Cal.Collections.Map.adjustWithKey','Cal.Collections.Map.adjustWithKey',NULL,'[CALDoc] Adjusts a value at a specific key. ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2273,'updateWithKey','Cal.Collections.Map.updateWithKey','Cal.Collections.Map.updateWithKey',NULL,'[CALDoc] <code>updateWithKey f key map</code> updates the value <code>x</code> at <code>key</code> (if it is in the map). ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2274,'glue','Cal.Collections.Map.glue','Cal.Collections.Map.glue',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2275,'deleteFindMin','Cal.Collections.Map.deleteFindMin','Cal.Collections.Map.deleteFindMin',NULL,'[CALDoc] Deletes and finds the minimal element.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2276,'deleteFindMax','Cal.Collections.Map.deleteFindMax','Cal.Collections.Map.deleteFindMax',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2277,'isEmpty','Cal.Collections.Map.isEmpty','Cal.Collections.Map.isEmpty',NULL,'[CALDoc] Returns whether the map is empty.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2278,'balance','Cal.Collections.Map.balance','Cal.Collections.Map.balance',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2279,'rotateR','Cal.Collections.Map.rotateR','Cal.Collections.Map.rotateR',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2280,'doubleR','Cal.Collections.Map.doubleR','Cal.Collections.Map.doubleR',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2281,'singleR','Cal.Collections.Map.singleR','Cal.Collections.Map.singleR',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2282,'rotateL','Cal.Collections.Map.rotateL','Cal.Collections.Map.rotateL',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2283,'doubleL','Cal.Collections.Map.doubleL','Cal.Collections.Map.doubleL',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2284,'singleL','Cal.Collections.Map.singleL','Cal.Collections.Map.singleL',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2285,'Bin','Cal.Collections.Map.Bin','Cal.Collections.Map.Bin',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2286,'ratio','Cal.Collections.Map.ratio','Cal.Collections.Map.ratio',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2287,'delta','Cal.Collections.Map.delta','Cal.Collections.Map.delta',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2288,'size','Cal.Collections.Map.size','Cal.Collections.Map.size',NULL,'[CALDoc] Returns the number of elements in the map.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2289,'trim','Cal.Collections.Map.trim','Cal.Collections.Map.trim',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2290,'outputMap','Cal.Collections.Map.outputMap','Cal.Collections.Map.outputMap',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2291,'toList','Cal.Collections.Map.toList','Cal.Collections.Map.toList',NULL,'[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2292,'toAscList','Cal.Collections.Map.toAscList','Cal.Collections.Map.toAscList',NULL,'[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2293,'foldR','Cal.Collections.Map.foldR','Cal.Collections.Map.foldR',NULL,'[CALDoc] ','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2294,'empty','Cal.Collections.Map.empty','Cal.Collections.Map.empty',NULL,'[CALDoc] The empty map.','2008-04-20 18:17:02','2008-04-20 18:17:02'),(2295,'Tip','Cal.Collections.Map.Tip','Cal.Collections.Map.Tip',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2296,'memo','Cal.Core.Memoize.memo','Cal.Core.Memoize.memo',NULL,'[CALDoc] Creates a memoizing version of a function.\n','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2297,'access','Cal.Core.Memoize.access','Cal.Core.Memoize.access',NULL,'[CALDoc] Access the cache using the argument value.\n','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2298,'memoCache_setMap','Cal.Core.Memoize.memoCache_setMap','Cal.Core.Memoize.memoCache_setMap',NULL,'[CALDoc] Set the current result map into the <code>MemoCache</code>.','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2299,'memoCache_getMap','Cal.Core.Memoize.memoCache_getMap','Cal.Core.Memoize.memoCache_getMap',NULL,'[CALDoc] Retrieve the current result map from the <code>MemoCache</code>.','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2300,'newMemoCache','Cal.Core.Memoize.newMemoCache','Cal.Core.Memoize.newMemoCache',NULL,'[CALDoc] Constructor for the foreign type <code>MemoCache</code>.  ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2301,'coarbitraryShort','Cal.Utilities.QuickCheck.coarbitraryShort','Cal.Utilities.QuickCheck.coarbitraryShort',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2302,'testResult','Cal.Utilities.QuickCheck.testResult','Cal.Utilities.QuickCheck.testResult',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2303,'coarbitraryFunction','Cal.Utilities.QuickCheck.coarbitraryFunction','Cal.Utilities.QuickCheck.coarbitraryFunction',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2304,'zipWithGen','Cal.Utilities.QuickCheck.zipWithGen','Cal.Utilities.QuickCheck.zipWithGen',NULL,'[CALDoc] Zips two generators with a combining function to create a new generator','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2305,'coarbitraryChar','Cal.Utilities.QuickCheck.coarbitraryChar','Cal.Utilities.QuickCheck.coarbitraryChar',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2306,'makeBoundedIntGen','Cal.Utilities.QuickCheck.makeBoundedIntGen','Cal.Utilities.QuickCheck.makeBoundedIntGen',NULL,'[CALDoc] Creates a generator that returns bounded integers','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2307,'summarize','Cal.Utilities.QuickCheck.summarize','Cal.Utilities.QuickCheck.summarize',NULL,'[CALDoc] Summarizes results. ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2308,'arbitraryDouble','Cal.Utilities.QuickCheck.arbitraryDouble','Cal.Utilities.QuickCheck.arbitraryDouble',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2309,'coarbitraryDouble','Cal.Utilities.QuickCheck.coarbitraryDouble','Cal.Utilities.QuickCheck.coarbitraryDouble',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2310,'coarbitraryUnit','Cal.Utilities.QuickCheck.coarbitraryUnit','Cal.Utilities.QuickCheck.coarbitraryUnit',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2311,'quickCheck','Cal.Utilities.QuickCheck.quickCheck','Cal.Utilities.QuickCheck.quickCheck',NULL,'[CALDoc] Verifies a property using default configuration.','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2312,'coarbitraryFloat','Cal.Utilities.QuickCheck.coarbitraryFloat','Cal.Utilities.QuickCheck.coarbitraryFloat',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2313,'coarbitraryString','Cal.Utilities.QuickCheck.coarbitraryString','Cal.Utilities.QuickCheck.coarbitraryString',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2314,'arbitraryRecord','Cal.Utilities.QuickCheck.arbitraryRecord','Cal.Utilities.QuickCheck.arbitraryRecord',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2315,'showResults','Cal.Utilities.QuickCheck.showResults','Cal.Utilities.QuickCheck.showResults',NULL,'[CALDoc] This tests a property using the default configuration and returns\na string suitable for display that described the parameters\nused for each test and the result.','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2316,'coarbitraryRecord','Cal.Utilities.QuickCheck.coarbitraryRecord','Cal.Utilities.QuickCheck.coarbitraryRecord',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2317,'testFunction','Cal.Utilities.QuickCheck.testFunction','Cal.Utilities.QuickCheck.testFunction',NULL,'[CALDoc] Tests a function using the default domain generator','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2318,'getBoundedDouble','Cal.Utilities.QuickCheck.getBoundedDouble','Cal.Utilities.QuickCheck.getBoundedDouble',NULL,'[CALDoc] Used to extract a pseudo random bounded double from <code>GenParams</code>','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2319,'getLabels','Cal.Utilities.QuickCheck.getLabels','Cal.Utilities.QuickCheck.getLabels',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2320,'testProperty','Cal.Utilities.QuickCheck.testProperty','Cal.Utilities.QuickCheck.testProperty',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2321,'arbitraryLong','Cal.Utilities.QuickCheck.arbitraryLong','Cal.Utilities.QuickCheck.arbitraryLong',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2322,'getNthBoundedInt','Cal.Utilities.QuickCheck.getNthBoundedInt','Cal.Utilities.QuickCheck.getNthBoundedInt',NULL,'[CALDoc] Used to extract the nth pseudo random bounded integer from <code>GenParams</code>','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2323,'makeConfig','Cal.Utilities.QuickCheck.makeConfig','Cal.Utilities.QuickCheck.makeConfig',NULL,'[CALDoc] make a test configuration','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2324,'coarbitraryMaybe','Cal.Utilities.QuickCheck.coarbitraryMaybe','Cal.Utilities.QuickCheck.coarbitraryMaybe',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2325,'generateNInstances','Cal.Utilities.QuickCheck.generateNInstances','Cal.Utilities.QuickCheck.generateNInstances',NULL,'[CALDoc] Creates a string showing n items created using a generator.\n','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2326,'testBoolean','Cal.Utilities.QuickCheck.testBoolean','Cal.Utilities.QuickCheck.testBoolean',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2327,'arbitraryMaybe','Cal.Utilities.QuickCheck.arbitraryMaybe','Cal.Utilities.QuickCheck.arbitraryMaybe',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2328,'generateInstanceDefault','Cal.Utilities.QuickCheck.generateInstanceDefault','Cal.Utilities.QuickCheck.generateInstanceDefault',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2329,'arbitraryInt','Cal.Utilities.QuickCheck.arbitraryInt','Cal.Utilities.QuickCheck.arbitraryInt',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2330,'arbitraryBoolean','Cal.Utilities.QuickCheck.arbitraryBoolean','Cal.Utilities.QuickCheck.arbitraryBoolean',NULL,'[CALDoc] ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2331,'makeChooseOneOfGen','Cal.Utilities.QuickCheck.makeChooseOneOfGen','Cal.Utilities.QuickCheck.makeChooseOneOfGen',NULL,'[CALDoc] Creates a generator that will return an item from the input list.','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2332,'forAll','Cal.Utilities.QuickCheck.forAll','Cal.Utilities.QuickCheck.forAll',NULL,'[CALDoc] Allows a function to be tested using a specific generator. ','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2333,'testFunctionGen','Cal.Utilities.QuickCheck.testFunctionGen','Cal.Utilities.QuickCheck.testFunctionGen',NULL,'[CALDoc] Tests a function using a supplied domain generator','2008-04-20 18:17:03','2008-04-20 18:17:03'),(2334,'addArg','Cal.Utilities.QuickCheck.addArg','Cal.Utilities.QuickCheck.addArg',NULL,'[CALDoc] Adds an argument into a result','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2335,'arbitraryFunction','Cal.Utilities.QuickCheck.arbitraryFunction','Cal.Utilities.QuickCheck.arbitraryFunction',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2336,'promote','Cal.Utilities.QuickCheck.promote','Cal.Utilities.QuickCheck.promote',NULL,'[CALDoc] Given a function f that creates a generator of b, returns\na new generator that generates functions a-&gt;b','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2337,'verboseCheck','Cal.Utilities.QuickCheck.verboseCheck','Cal.Utilities.QuickCheck.verboseCheck',NULL,'[CALDoc] Tests a property and returns the list of results, or the first failing test.','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2338,'defaultConfig','Cal.Utilities.QuickCheck.defaultConfig','Cal.Utilities.QuickCheck.defaultConfig',NULL,'[CALDoc] the default configuration used to run tests','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2339,'defaultNumTests','Cal.Utilities.QuickCheck.defaultNumTests','Cal.Utilities.QuickCheck.defaultNumTests',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2340,'arbitraryList','Cal.Utilities.QuickCheck.arbitraryList','Cal.Utilities.QuickCheck.arbitraryList',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2341,'size','Cal.Utilities.QuickCheck.size','Cal.Utilities.QuickCheck.size',NULL,'[CALDoc] Returns the sizing parameter associated with genParams\nThis should be used to control the size of the generated test data, e.g. it is used to limit the maximum size of \narbitrary lists.','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2342,'coarbitraryLong','Cal.Utilities.QuickCheck.coarbitraryLong','Cal.Utilities.QuickCheck.coarbitraryLong',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2343,'arbitraryExamples','Cal.Utilities.QuickCheck.arbitraryExamples','Cal.Utilities.QuickCheck.arbitraryExamples',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2344,'arbitraryShort','Cal.Utilities.QuickCheck.arbitraryShort','Cal.Utilities.QuickCheck.arbitraryShort',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2345,'coarbitraryEither','Cal.Utilities.QuickCheck.coarbitraryEither','Cal.Utilities.QuickCheck.coarbitraryEither',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2346,'coarbitraryInt','Cal.Utilities.QuickCheck.coarbitraryInt','Cal.Utilities.QuickCheck.coarbitraryInt',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2347,'arbitraryString','Cal.Utilities.QuickCheck.arbitraryString','Cal.Utilities.QuickCheck.arbitraryString',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2348,'coarbitraryList','Cal.Utilities.QuickCheck.coarbitraryList','Cal.Utilities.QuickCheck.coarbitraryList',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2349,'arbitraryFloat','Cal.Utilities.QuickCheck.arbitraryFloat','Cal.Utilities.QuickCheck.arbitraryFloat',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2350,'arbitraryByte','Cal.Utilities.QuickCheck.arbitraryByte','Cal.Utilities.QuickCheck.arbitraryByte',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2351,'coarbitraryByte','Cal.Utilities.QuickCheck.coarbitraryByte','Cal.Utilities.QuickCheck.coarbitraryByte',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2352,'implies','Cal.Utilities.QuickCheck.implies','Cal.Utilities.QuickCheck.implies',NULL,'[CALDoc] creates a Property with a precondition.\n','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2353,'nothing','Cal.Utilities.QuickCheck.nothing','Cal.Utilities.QuickCheck.nothing',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2354,'check','Cal.Utilities.QuickCheck.check','Cal.Utilities.QuickCheck.check',NULL,'[CALDoc] Verifies a property using supplied configuration.','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2355,'testResults','Cal.Utilities.QuickCheck.testResults','Cal.Utilities.QuickCheck.testResults',NULL,'[CALDoc] Runs tests according to config and returns a list of results, or the \nfirst failing result. ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2356,'runTests','Cal.Utilities.QuickCheck.runTests','Cal.Utilities.QuickCheck.runTests',NULL,'[CALDoc] Tests testItem the specified number of times and return a list of results. ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2357,'resize','Cal.Utilities.QuickCheck.resize','Cal.Utilities.QuickCheck.resize',NULL,'[CALDoc] Create a new GenParams with updated sizing parameter','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2358,'allTestsPass','Cal.Utilities.QuickCheck.allTestsPass','Cal.Utilities.QuickCheck.allTestsPass',NULL,'[CALDoc] Checks a list of results and returns true iff test outcomes are true\nand that there is the expected number of test results','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2359,'arbitraryChar','Cal.Utilities.QuickCheck.arbitraryChar','Cal.Utilities.QuickCheck.arbitraryChar',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2360,'coarbitraryBoolean','Cal.Utilities.QuickCheck.coarbitraryBoolean','Cal.Utilities.QuickCheck.coarbitraryBoolean',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2361,'makeListGen','Cal.Utilities.QuickCheck.makeListGen','Cal.Utilities.QuickCheck.makeListGen',NULL,'[CALDoc] creates a list generator','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2362,'appendGenToListGen','Cal.Utilities.QuickCheck.appendGenToListGen','Cal.Utilities.QuickCheck.appendGenToListGen',NULL,'[CALDoc] adds another generator to the head of a list generator\nso that if the input generator returns list of length n\nthe output generator will create list of length n+1','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2363,'arbitraryDecimal','Cal.Utilities.QuickCheck.arbitraryDecimal','Cal.Utilities.QuickCheck.arbitraryDecimal',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2364,'mapGen','Cal.Utilities.QuickCheck.mapGen','Cal.Utilities.QuickCheck.mapGen',NULL,'[CALDoc] Creates a new generator by applying a mapping to the output of an existing generator','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2365,'coarbitraryDecimal','Cal.Utilities.QuickCheck.coarbitraryDecimal','Cal.Utilities.QuickCheck.coarbitraryDecimal',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2366,'variant','Cal.Utilities.QuickCheck.variant','Cal.Utilities.QuickCheck.variant',NULL,'[CALDoc] Creates an alternative generator from an input generator by applying a mapping to the genParams','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2367,'arbitraryEither','Cal.Utilities.QuickCheck.arbitraryEither','Cal.Utilities.QuickCheck.arbitraryEither',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2368,'rightGenParams','Cal.Utilities.QuickCheck.rightGenParams','Cal.Utilities.QuickCheck.rightGenParams',NULL,'[CALDoc] returns a set of gen params which will create randoms independent of leftGenParams','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2369,'leftGenParams','Cal.Utilities.QuickCheck.leftGenParams','Cal.Utilities.QuickCheck.leftGenParams',NULL,'[CALDoc] returns a set of gen params which will create randoms independent of rightGenParams','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2370,'nthGenParams','Cal.Utilities.QuickCheck.nthGenParams','Cal.Utilities.QuickCheck.nthGenParams',NULL,'[CALDoc] Used to split a genParams into different independent streams that can be used\nfor creating independent arbitrary instances.','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2371,'makeGen','Cal.Utilities.QuickCheck.makeGen','Cal.Utilities.QuickCheck.makeGen',NULL,'[CALDoc] Constructs a generator from a generator function','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2372,'chooseOneOf','Cal.Utilities.QuickCheck.chooseOneOf','Cal.Utilities.QuickCheck.chooseOneOf',NULL,'[CALDoc] creates a generator that will return items from the input generators','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2373,'chooseOneOfWithFreq','Cal.Utilities.QuickCheck.chooseOneOfWithFreq','Cal.Utilities.QuickCheck.chooseOneOfWithFreq',NULL,'[CALDoc] creates a generator that will return items from the input generators with the\nspecified frequencies.','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2374,'getBoundedInt','Cal.Utilities.QuickCheck.getBoundedInt','Cal.Utilities.QuickCheck.getBoundedInt',NULL,'[CALDoc] Used to extract a pseudo random bounded integer from <code>GenParams</code>','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2375,'generate','Cal.Utilities.QuickCheck.generate','Cal.Utilities.QuickCheck.generate',NULL,'[CALDoc] Creates an item using a generator','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2376,'genFunc','Cal.Utilities.QuickCheck.genFunc','Cal.Utilities.QuickCheck.genFunc',NULL,'[CALDoc] Extracts the generating function from a generator','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2377,'makeConfigWithMaxTests','Cal.Utilities.QuickCheck.makeConfigWithMaxTests','Cal.Utilities.QuickCheck.makeConfigWithMaxTests',NULL,'[CALDoc] make a configuration which will run the specified number of tests','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2378,'makeDefaultGenParams','Cal.Utilities.QuickCheck.makeDefaultGenParams','Cal.Utilities.QuickCheck.makeDefaultGenParams',NULL,'[CALDoc] A default set of generator parameters','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2379,'defaultResizing','Cal.Utilities.QuickCheck.defaultResizing','Cal.Utilities.QuickCheck.defaultResizing',NULL,'[CALDoc] This is the default sizing function for testing -\nas test are performed the sizing gradually approaches a limit.','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2380,'formatResults','Cal.Utilities.QuickCheck.formatResults','Cal.Utilities.QuickCheck.formatResults',NULL,'[CALDoc] Converts a list of results to a string in which the parameters used\nin each test are shown on a seperate line. ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2381,'arbitraryUnit','Cal.Utilities.QuickCheck.arbitraryUnit','Cal.Utilities.QuickCheck.arbitraryUnit',NULL,'[CALDoc] ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2382,'makeConstGen','Cal.Utilities.QuickCheck.makeConstGen','Cal.Utilities.QuickCheck.makeConstGen',NULL,'[CALDoc] Creates a constant generator that will always return the specified item','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2383,'classify','Cal.Utilities.QuickCheck.classify','Cal.Utilities.QuickCheck.classify',NULL,'[CALDoc] creates a property which classifys the results for a test\nwhenever the condition is met. ','2008-04-20 18:17:04','2008-04-20 18:17:04'),(2384,'labelResult','Cal.Utilities.QuickCheck.labelResult','Cal.Utilities.QuickCheck.labelResult',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2385,'roundFloatToInt','Cal.Utilities.QuickCheck.roundFloatToInt','Cal.Utilities.QuickCheck.roundFloatToInt',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2386,'roundDoubleToLong','Cal.Utilities.QuickCheck.roundDoubleToLong','Cal.Utilities.QuickCheck.roundDoubleToLong',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2387,'charFromInt','Cal.Utilities.QuickCheck.charFromInt','Cal.Utilities.QuickCheck.charFromInt',NULL,'[CALDoc] Converts an <code>Int</code> value to a <code>Char</code> value.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2388,'decimalFromDouble','Cal.Utilities.QuickCheck.decimalFromDouble','Cal.Utilities.QuickCheck.decimalFromDouble',NULL,'[CALDoc] Converts a <code>Double</code> value to the equivalent <code>Decimal</code> value.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2389,'charToInt','Cal.Utilities.QuickCheck.charToInt','Cal.Utilities.QuickCheck.charToInt',NULL,'[CALDoc] Converts a <code>Char</code> value to an <code>Int</code> value.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2390,'coarbitraryRecordPrimitive','Cal.Utilities.QuickCheck.coarbitraryRecordPrimitive','Cal.Utilities.QuickCheck.coarbitraryRecordPrimitive',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2391,'arbitraryRecordPrimitive','Cal.Utilities.QuickCheck.arbitraryRecordPrimitive','Cal.Utilities.QuickCheck.arbitraryRecordPrimitive',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2392,'GenParams','Cal.Utilities.QuickCheck.GenParams','Cal.Utilities.QuickCheck.GenParams',NULL,'[CALDoc] A data constructor for controlling generation of Arbitrary types.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2393,'Gen','Cal.Utilities.QuickCheck.Gen','Cal.Utilities.QuickCheck.Gen',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2394,'Result','Cal.Utilities.QuickCheck.Result','Cal.Utilities.QuickCheck.Result',NULL,'[CALDoc] A data constructor that represents the result of a single test.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2395,'Property','Cal.Utilities.QuickCheck.Property','Cal.Utilities.QuickCheck.Property',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2396,'Config','Cal.Utilities.QuickCheck.Config','Cal.Utilities.QuickCheck.Config',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2397,'arbitrary','Cal.Utilities.QuickCheck.arbitrary','Cal.Utilities.QuickCheck.arbitrary',NULL,'[CALDoc] Returns: a generator for the type','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2398,'coarbitrary','Cal.Utilities.QuickCheck.coarbitrary','Cal.Utilities.QuickCheck.coarbitrary',NULL,'[CALDoc] Modifies a generator based on an instance of this type class.\n','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2399,'generateInstance','Cal.Utilities.QuickCheck.generateInstance','Cal.Utilities.QuickCheck.generateInstance',NULL,'[CALDoc] This creates a random instance of the type class\nthis method is only used internally in the arbitrary primitive functions','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2400,'test','Cal.Utilities.QuickCheck.test','Cal.Utilities.QuickCheck.test',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2401,'randomBoundedInts','Cal.Utilities.Random.randomBoundedInts','Cal.Utilities.Random.randomBoundedInts',NULL,'[CALDoc] Returns: an infinite pseudo-random list of <code>Int</code> values uniformly distributed between 0 (inclusive) and maxExclusive (exclusive).','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2402,'randomDoubles','Cal.Utilities.Random.randomDoubles','Cal.Utilities.Random.randomDoubles',NULL,'[CALDoc] Returns: an infinite pseudo-random list of <code>Double</code> values uniformly distributed between 0.0 and 1.0.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2403,'randomBooleans','Cal.Utilities.Random.randomBooleans','Cal.Utilities.Random.randomBooleans',NULL,'[CALDoc] Returns: an infinite pseudo-random list of <code>Boolean</code> values uniformly distributed between <code>False</code> and <code>True</code>.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2404,'randomGaussians','Cal.Utilities.Random.randomGaussians','Cal.Utilities.Random.randomGaussians',NULL,'[CALDoc] Returns: an infinite pseudo-random list of <code>Double</code> values that are distributed according to the Gaussian (or \"normal\") distribution\nwith mean 0.0 and standard deviation 1.0.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2405,'randomFloats','Cal.Utilities.Random.randomFloats','Cal.Utilities.Random.randomFloats',NULL,'[CALDoc] Returns: an infinite pseudo-random list of <code>Float</code> values uniformly distributed between 0.0 and 1.0.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2406,'randomInts','Cal.Utilities.Random.randomInts','Cal.Utilities.Random.randomInts',NULL,'[CALDoc] Returns: an infinite pseudo-random list of <code>Int</code> values uniformly distributed across all possible Ints.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2407,'randomLongs','Cal.Utilities.Random.randomLongs','Cal.Utilities.Random.randomLongs',NULL,'[CALDoc] Returns: an infinite pseudo-random list of <code>Long</code> values uniformly distributed across all possible Longs.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2408,'initialSeed','Cal.Utilities.Random.initialSeed','Cal.Utilities.Random.initialSeed',NULL,'[CALDoc] A random system generated seed value that can be used as the initial seed for <code>randomInts</code> and \nsimilar functions when repeatable random sequences are not desired. ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2409,'random_nextLong','Cal.Utilities.Random.random_nextLong','Cal.Utilities.Random.random_nextLong',NULL,'[CALDoc] foreign method java.util.Random.nextLong','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2410,'random_nextInt_Int','Cal.Utilities.Random.random_nextInt_Int','Cal.Utilities.Random.random_nextInt_Int',NULL,'[CALDoc] foreign method java.util.Random.nextInt','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2411,'random_nextInt','Cal.Utilities.Random.random_nextInt','Cal.Utilities.Random.random_nextInt',NULL,'[CALDoc] foreign method java.util.Random.nextInt','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2412,'random_nextGaussian','Cal.Utilities.Random.random_nextGaussian','Cal.Utilities.Random.random_nextGaussian',NULL,'[CALDoc] foreign method java.util.Random.nextGaussian','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2413,'random_nextFloat','Cal.Utilities.Random.random_nextFloat','Cal.Utilities.Random.random_nextFloat',NULL,'[CALDoc] foreign method java.util.Random.nextFloat','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2414,'random_nextDouble','Cal.Utilities.Random.random_nextDouble','Cal.Utilities.Random.random_nextDouble',NULL,'[CALDoc] foreign method java.util.Random.nextDouble','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2415,'random_nextBoolean','Cal.Utilities.Random.random_nextBoolean','Cal.Utilities.Random.random_nextBoolean',NULL,'[CALDoc] foreign method java.util.Random.nextBoolean','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2416,'random_new_Long','Cal.Utilities.Random.random_new_Long','Cal.Utilities.Random.random_new_Long',NULL,'[CALDoc] foreign constructor java.util.Random','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2417,'showSet','Cal.Collections.Set.showSet','Cal.Collections.Set.showSet',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2418,'findMin','Cal.Collections.Set.findMin','Cal.Collections.Set.findMin',NULL,'[CALDoc] Finds the minimal element of the set.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2419,'fromArrayWith','Cal.Collections.Set.fromArrayWith','Cal.Collections.Set.fromArrayWith',NULL,'[CALDoc] Creates a set from an array of elements, with\neach element being transformed by the provided \nfunction.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2420,'deleteMin','Cal.Collections.Set.deleteMin','Cal.Collections.Set.deleteMin',NULL,'[CALDoc] Deletes the minimal element of the set.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2421,'fromListWith','Cal.Collections.Set.fromListWith','Cal.Collections.Set.fromListWith',NULL,'[CALDoc] Creates a set from a list of elements with each\nelement in the list being transformed by the provided function.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2422,'outputSet','Cal.Collections.Set.outputSet','Cal.Collections.Set.outputSet',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2423,'intersections','Cal.Collections.Set.intersections','Cal.Collections.Set.intersections',NULL,'[CALDoc] Returns the intersection of a list of sets.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2424,'fold','Cal.Collections.Set.fold','Cal.Collections.Set.fold',NULL,'[CALDoc] Folds over the elements of a set.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2425,'elems','Cal.Collections.Set.elems','Cal.Collections.Set.elems',NULL,'[CALDoc] Returns all elements of a set.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2426,'arbitrarySet','Cal.Collections.Set.arbitrarySet','Cal.Collections.Set.arbitrarySet',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2427,'unions','Cal.Collections.Set.unions','Cal.Collections.Set.unions',NULL,'[CALDoc] Returns the union of a list of sets.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2428,'intersection','Cal.Collections.Set.intersection','Cal.Collections.Set.intersection',NULL,'[CALDoc] Returns the intersection of two sets.','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2429,'coarbitrarySet','Cal.Collections.Set.coarbitrarySet','Cal.Collections.Set.coarbitrarySet',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2430,'fromAscList','Cal.Collections.Set.fromAscList','Cal.Collections.Set.fromAscList',NULL,'[CALDoc] Builds a set from an ascending list in linear time. ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2431,'fromDistinctAscList','Cal.Collections.Set.fromDistinctAscList','Cal.Collections.Set.fromDistinctAscList',NULL,'[CALDoc] Builds a set from an ascending list of distinct elements in linear time.\n','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2432,'directBuild','Cal.Collections.Set.directBuild','Cal.Collections.Set.directBuild',NULL,'[CALDoc] ','2008-04-20 18:17:05','2008-04-20 18:17:05'),(2433,'partition','Cal.Collections.Set.partition','Cal.Collections.Set.partition',NULL,'[CALDoc] Partitions the set into two sets, one with all elements that satisfy the predicate\nand one with all elements that don\'t satisfy the predicate.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2434,'mapJust','Cal.Collections.Set.mapJust','Cal.Collections.Set.mapJust',NULL,'[CALDoc] <code>mapJust mapFunction set</code> applies <code>mapFunction</code> to each element of set, discarding the <code>Nothing</code>\nvalues, and keeping the <em>Just</em> values after removing the <code>Just</code> constructor.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2435,'trimMemberLo','Cal.Collections.Set.trimMemberLo','Cal.Collections.Set.trimMemberLo',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2436,'member','Cal.Collections.Set.member','Cal.Collections.Set.member',NULL,'[CALDoc] Returns whether the element is in the set.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2437,'isEmptySpecialized','Cal.Collections.Set.isEmptySpecialized','Cal.Collections.Set.isEmptySpecialized',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2438,'findMax','Cal.Collections.Set.findMax','Cal.Collections.Set.findMax',NULL,'[CALDoc] Finds the maximal element of the set.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2439,'toArrayWith','Cal.Collections.Set.toArrayWith','Cal.Collections.Set.toArrayWith',NULL,'[CALDoc] Converts a Set to an Array of transformed elements.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2440,'union','Cal.Collections.Set.union','Cal.Collections.Set.union',NULL,'[CALDoc] Returns the union of two sets. ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2441,'hedgeUnion','Cal.Collections.Set.hedgeUnion','Cal.Collections.Set.hedgeUnion',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2442,'intersect','Cal.Collections.Set.intersect','Cal.Collections.Set.intersect',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2443,'map','Cal.Collections.Set.map','Cal.Collections.Set.map',NULL,'[CALDoc] <code>map f s</code> is the set obtained by applying <code>f</code> to each element of <code>s</code>. ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2444,'split','Cal.Collections.Set.split','Cal.Collections.Set.split',NULL,'[CALDoc] <code>split x set</code> returns a pair <code>(set1,set2)</code> where all elements in <code>set1</code> are smaller\nthan <code>x</code> and all elements in <code>set2</code> are larger than <code>x</code>. ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2445,'valid','Cal.Collections.Set.valid','Cal.Collections.Set.valid',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2446,'validsize','Cal.Collections.Set.validsize','Cal.Collections.Set.validsize',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2447,'difference','Cal.Collections.Set.difference','Cal.Collections.Set.difference',NULL,'[CALDoc] Returns the difference of two sets.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2448,'hedgeDiff','Cal.Collections.Set.hedgeDiff','Cal.Collections.Set.hedgeDiff',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2449,'isProperSubsetOf','Cal.Collections.Set.isProperSubsetOf','Cal.Collections.Set.isProperSubsetOf',NULL,'[CALDoc] Returns whether the first set is a proper subset of the second set (ie. a subset but not equal).','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2450,'isSubsetOf','Cal.Collections.Set.isSubsetOf','Cal.Collections.Set.isSubsetOf',NULL,'[CALDoc] Returns whether the first set is a subset of the second set.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2451,'filterGt','Cal.Collections.Set.filterGt','Cal.Collections.Set.filterGt',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2452,'inputSet','Cal.Collections.Set.inputSet','Cal.Collections.Set.inputSet',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2453,'toListWith','Cal.Collections.Set.toListWith','Cal.Collections.Set.toListWith',NULL,'[CALDoc] Converts the set to a list of transformed\nelements.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2454,'deleteMax','Cal.Collections.Set.deleteMax','Cal.Collections.Set.deleteMax',NULL,'[CALDoc] Deletes the maximal element of the set.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2455,'filterLt','Cal.Collections.Set.filterLt','Cal.Collections.Set.filterLt',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2456,'emptySpecialized','Cal.Collections.Set.emptySpecialized','Cal.Collections.Set.emptySpecialized',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2457,'ordered','Cal.Collections.Set.ordered','Cal.Collections.Set.ordered',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2458,'notEqualsSet','Cal.Collections.Set.notEqualsSet','Cal.Collections.Set.notEqualsSet',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2459,'equalsSet','Cal.Collections.Set.equalsSet','Cal.Collections.Set.equalsSet',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2460,'toArray','Cal.Collections.Set.toArray','Cal.Collections.Set.toArray',NULL,'[CALDoc] Converts a Set to an Array of elements.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2461,'toList','Cal.Collections.Set.toList','Cal.Collections.Set.toList',NULL,'[CALDoc] Converts the set to an ascending list of elements.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2462,'toAscList','Cal.Collections.Set.toAscList','Cal.Collections.Set.toAscList',NULL,'[CALDoc] Converts the set to an ascending list of elements.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2463,'foldR','Cal.Collections.Set.foldR','Cal.Collections.Set.foldR',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2464,'fromArray','Cal.Collections.Set.fromArray','Cal.Collections.Set.fromArray',NULL,'[CALDoc] Creates a set from an array of elements.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2465,'fromList','Cal.Collections.Set.fromList','Cal.Collections.Set.fromList',NULL,'[CALDoc] Creates a set from a list of elements.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2466,'insert','Cal.Collections.Set.insert','Cal.Collections.Set.insert',NULL,'[CALDoc] Inserts an element in a set.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2467,'balanced','Cal.Collections.Set.balanced','Cal.Collections.Set.balanced',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2468,'isSubsetOfHelper','Cal.Collections.Set.isSubsetOfHelper','Cal.Collections.Set.isSubsetOfHelper',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2469,'splitMember','Cal.Collections.Set.splitMember','Cal.Collections.Set.splitMember',NULL,'[CALDoc] Performs a split but also returns whether the pivot element was found in the\noriginal set.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2470,'delete','Cal.Collections.Set.delete','Cal.Collections.Set.delete',NULL,'[CALDoc] Deletes an element from a set.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2471,'filter','Cal.Collections.Set.filter','Cal.Collections.Set.filter',NULL,'[CALDoc] Filters all elements that satisfy the predicate.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2472,'merge','Cal.Collections.Set.merge','Cal.Collections.Set.merge',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2473,'glue','Cal.Collections.Set.glue','Cal.Collections.Set.glue',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2474,'deleteFindMin','Cal.Collections.Set.deleteFindMin','Cal.Collections.Set.deleteFindMin',NULL,'[CALDoc] Deletes and finds the minimal element.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2475,'deleteFindMax','Cal.Collections.Set.deleteFindMax','Cal.Collections.Set.deleteFindMax',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2476,'isEmpty','Cal.Collections.Set.isEmpty','Cal.Collections.Set.isEmpty',NULL,'[CALDoc] Returns whether the set is empty.','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2477,'join','Cal.Collections.Set.join','Cal.Collections.Set.join',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2478,'insertMax','Cal.Collections.Set.insertMax','Cal.Collections.Set.insertMax',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2479,'insertMin','Cal.Collections.Set.insertMin','Cal.Collections.Set.insertMin',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2480,'balance','Cal.Collections.Set.balance','Cal.Collections.Set.balance',NULL,'[CALDoc] ','2008-04-20 18:17:06','2008-04-20 18:17:06'),(2481,'rotateR','Cal.Collections.Set.rotateR','Cal.Collections.Set.rotateR',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2482,'doubleR','Cal.Collections.Set.doubleR','Cal.Collections.Set.doubleR',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2483,'singleR','Cal.Collections.Set.singleR','Cal.Collections.Set.singleR',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2484,'rotateL','Cal.Collections.Set.rotateL','Cal.Collections.Set.rotateL',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2485,'doubleL','Cal.Collections.Set.doubleL','Cal.Collections.Set.doubleL',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2486,'singleL','Cal.Collections.Set.singleL','Cal.Collections.Set.singleL',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2487,'Bin','Cal.Collections.Set.Bin','Cal.Collections.Set.Bin',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2488,'ratio','Cal.Collections.Set.ratio','Cal.Collections.Set.ratio',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2489,'delta','Cal.Collections.Set.delta','Cal.Collections.Set.delta',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2490,'size','Cal.Collections.Set.size','Cal.Collections.Set.size',NULL,'[CALDoc] Returns the number of elements in the set.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2491,'single','Cal.Collections.Set.single','Cal.Collections.Set.single',NULL,'[CALDoc] Creates a singleton set.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2492,'trim','Cal.Collections.Set.trim','Cal.Collections.Set.trim',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2493,'empty','Cal.Collections.Set.empty','Cal.Collections.Set.empty',NULL,'[CALDoc] The empty set.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2494,'Tip','Cal.Collections.Set.Tip','Cal.Collections.Set.Tip',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2495,'trimLeft','Cal.Core.String.trimLeft','Cal.Core.String.trimLeft',NULL,'[CALDoc] Removes leading whitespace from a string. ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2496,'toList','Cal.Core.String.toList','Cal.Core.String.toList',NULL,'[CALDoc] Converts the string to a list of characters.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2497,'trimRight','Cal.Core.String.trimRight','Cal.Core.String.trimRight',NULL,'[CALDoc] Removes trailing whitespace from a string. ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2498,'testModule','Cal.Core.String.testModule','Cal.Core.String.testModule',NULL,'[CALDoc] Returns: <code>True</code> if the testing predicates in this module all run successfully.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2499,'wordsExamples','Cal.Core.String.wordsExamples','Cal.Core.String.wordsExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2500,'unwordsExamples','Cal.Core.String.unwordsExamples','Cal.Core.String.unwordsExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2501,'unwords','Cal.Core.String.unwords','Cal.Core.String.unwords',NULL,'[CALDoc] Converts a list of words into a single string, where the original words are separated by spaces (<code>\' \'</code>).','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2502,'unlinesExamples','Cal.Core.String.unlinesExamples','Cal.Core.String.unlinesExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2503,'toUpperCaseExamples','Cal.Core.String.toUpperCaseExamples','Cal.Core.String.toUpperCaseExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2504,'toLowerCaseExamples','Cal.Core.String.toLowerCaseExamples','Cal.Core.String.toLowerCaseExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2505,'takeWhileExamples','Cal.Core.String.takeWhileExamples','Cal.Core.String.takeWhileExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2506,'startsWithExamples','Cal.Core.String.startsWithExamples','Cal.Core.String.startsWithExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2507,'reverseExamples','Cal.Core.String.reverseExamples','Cal.Core.String.reverseExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2508,'linesExamples','Cal.Core.String.linesExamples','Cal.Core.String.linesExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2509,'lines','Cal.Core.String.lines','Cal.Core.String.lines',NULL,'[CALDoc] Breaks up a string into a list of strings, one for each line. ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2510,'foldLeftStrictExamples','Cal.Core.String.foldLeftStrictExamples','Cal.Core.String.foldLeftStrictExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2511,'findIndexExamples','Cal.Core.String.findIndexExamples','Cal.Core.String.findIndexExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2512,'filterExamples','Cal.Core.String.filterExamples','Cal.Core.String.filterExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2513,'endsWithExamples','Cal.Core.String.endsWithExamples','Cal.Core.String.endsWithExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2514,'dropWhileExamples','Cal.Core.String.dropWhileExamples','Cal.Core.String.dropWhileExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2515,'unlines','Cal.Core.String.unlines','Cal.Core.String.unlines',NULL,'[CALDoc] Converts a list of strings into a single string, where the original strings are now separated by newlines (<code>\'\\n\'</code>).','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2516,'findExamples','Cal.Core.String.findExamples','Cal.Core.String.findExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2517,'find','Cal.Core.String.find','Cal.Core.String.find',NULL,'[CALDoc] <code>find predicate string</code> returns the first value of string for which the predicate function is <code>True</code>, if there is\none, or <code>Nothing</code> otherwise.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2518,'reverse','Cal.Core.String.reverse','Cal.Core.String.reverse',NULL,'[CALDoc] Reverses the sequence of characters of a string. \n<code>reverse</code> is O(n) time where n is the length of the string.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2519,'words','Cal.Core.String.words','Cal.Core.String.words',NULL,'[CALDoc] Breaks up a string into a list of strings, one for each word. ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2520,'multiSplitString','Cal.Core.String.multiSplitString','Cal.Core.String.multiSplitString',NULL,'[CALDoc] Breaks up the specified string where any of the separators occur.\n','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2521,'dropWhile','Cal.Core.String.dropWhile','Cal.Core.String.dropWhile',NULL,'[CALDoc] <code>dropWhile dropWhileTrueFunction string</code> drops the longest prefix of the string for which <code>dropWhileTrueFunction</code>\nis <code>True</code> for each element.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2522,'space','Cal.Core.String.space','Cal.Core.String.space',NULL,'[CALDoc] Constructs a string of a specified number of spaces.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2523,'fromList','Cal.Core.String.fromList','Cal.Core.String.fromList',NULL,'[CALDoc] Converts the list of characters to a string.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2524,'splitString','Cal.Core.String.splitString','Cal.Core.String.splitString',NULL,'[CALDoc] Breaks up the specified string where the separator text occurs.\n','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2525,'trimExamples','Cal.Core.String.trimExamples','Cal.Core.String.trimExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2526,'takeWhile','Cal.Core.String.takeWhile','Cal.Core.String.takeWhile',NULL,'[CALDoc] <code>takeWhile takeWhileTrueFunction string</code> returns the longest prefix of the string for which <code>takeWhileTrueFunction</code>\nis <code>True</code> for each element.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2527,'findIndex','Cal.Core.String.findIndex','Cal.Core.String.findIndex',NULL,'[CALDoc] <code>findIndex predicate string</code> returns the first index of string for which the predicate function is <code>True</code>, if\nthere is one, or <code>Nothing</code> otherwise. ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2528,'mapExamples','Cal.Core.String.mapExamples','Cal.Core.String.mapExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2529,'map','Cal.Core.String.map','Cal.Core.String.map',NULL,'[CALDoc] <code>map mapFunction string</code> applies the function <code>mapFunction</code> to each character of <code>string</code> and returns the\nresulting string.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2530,'normalizeWhitespaceExamples','Cal.Core.String.normalizeWhitespaceExamples','Cal.Core.String.normalizeWhitespaceExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2531,'normalizeWhitespace','Cal.Core.String.normalizeWhitespace','Cal.Core.String.normalizeWhitespace',NULL,'[CALDoc] Replaces any sequence of whitespace characters with a single space. ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2532,'filter','Cal.Core.String.filter','Cal.Core.String.filter',NULL,'[CALDoc] <code>filter keepIfTrueFunction string</code> applies the predicate function to each character of the string, and returns\nthe string of characters for which the predicate evaluates to <code>True</code>.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2533,'compareStringsExamples','Cal.Core.String.compareStringsExamples','Cal.Core.String.compareStringsExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2534,'compareIgnoreCase','Cal.Core.String.compareIgnoreCase','Cal.Core.String.compareIgnoreCase',NULL,'[CALDoc] Compares two strings lexographically, ignoring case differences.','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2535,'foldLeftStrict','Cal.Core.String.foldLeftStrict','Cal.Core.String.foldLeftStrict',NULL,'[CALDoc] This is the strict version of <code>foldLeft</code>. ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2536,'replicateExamples','Cal.Core.String.replicateExamples','Cal.Core.String.replicateExamples',NULL,'[CALDoc] ','2008-04-20 18:17:07','2008-04-20 18:17:07'),(2537,'replicate','Cal.Core.String.replicate','Cal.Core.String.replicate',NULL,'[CALDoc] <code>replicate nCopies charToReplicate</code> is a string of length <code>nCopies</code>, with every character equal to\n<code>charToReplicate</code>.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2538,'stringBuilder_reverse','Cal.Core.String.stringBuilder_reverse','Cal.Core.String.stringBuilder_reverse',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2539,'stringBuilder_toString','Cal.Core.String.stringBuilder_toString','Cal.Core.String.stringBuilder_toString',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2540,'stringBuilder_setCharAt','Cal.Core.String.stringBuilder_setCharAt','Cal.Core.String.stringBuilder_setCharAt',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2541,'stringBuilder_charAt','Cal.Core.String.stringBuilder_charAt','Cal.Core.String.stringBuilder_charAt',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2542,'stringBuilder_appendChar','Cal.Core.String.stringBuilder_appendChar','Cal.Core.String.stringBuilder_appendChar',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2543,'stringBuilder_new2','Cal.Core.String.stringBuilder_new2','Cal.Core.String.stringBuilder_new2',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2544,'stringBuilder_new1','Cal.Core.String.stringBuilder_new1','Cal.Core.String.stringBuilder_new1',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2545,'stringBuilder_new0','Cal.Core.String.stringBuilder_new0','Cal.Core.String.stringBuilder_new0',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2546,'length','Cal.Core.String.length','Cal.Core.String.length',NULL,'[CALDoc] Returns the length of the string. ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2547,'subscript','Cal.Core.String.subscript','Cal.Core.String.subscript',NULL,'[CALDoc] Retrieves the character at the specified (0-based) position in the string','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2548,'endsWith','Cal.Core.String.endsWith','Cal.Core.String.endsWith',NULL,'[CALDoc] Returns whether <code>stringToTest</code> ends with the specified suffix.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2549,'startsWithFrom','Cal.Core.String.startsWithFrom','Cal.Core.String.startsWithFrom',NULL,'[CALDoc] Returns whether <code>stringToTest</code> starts with the specified prefix beginning at the specified offset index of\n<code>stringToTest</code>. ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2550,'startsWith','Cal.Core.String.startsWith','Cal.Core.String.startsWith',NULL,'[CALDoc] Returns whether <code>stringToTest</code> starts with the specified prefix.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2551,'trim','Cal.Core.String.trim','Cal.Core.String.trim',NULL,'[CALDoc] Trims leading and trailing whitespace from the string.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2552,'lastIndexOfStringFrom','Cal.Core.String.lastIndexOfStringFrom','Cal.Core.String.lastIndexOfStringFrom',NULL,'[CALDoc] Finds the index of the last occurrence at index less than or equal to <code>fromIndex</code> of <code>stringToFind</code> in\n<code>stringToSearch</code> or -1 if <code>stringToFind</code> does not occur from <code>fromIndex</code> and earlier.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2553,'lastIndexOfString','Cal.Core.String.lastIndexOfString','Cal.Core.String.lastIndexOfString',NULL,'[CALDoc] Finds the index of the last occurrence of <code>stringToFind</code> in <code>stringToSearch</code> or -1 if the <code>stringToFind</code>\ndoes not occur.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2554,'lastIndexOfFrom','Cal.Core.String.lastIndexOfFrom','Cal.Core.String.lastIndexOfFrom',NULL,'[CALDoc] Finds the index of the last occurrence at index less than or equal to <code>fromIndex</code> of <code>charToFind</code> in\n<code>stringToSearch</code> or -1 if the character does not occur from <code>fromIndex</code> and earlier.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2555,'lastIndexOf','Cal.Core.String.lastIndexOf','Cal.Core.String.lastIndexOf',NULL,'[CALDoc] Finds the index of the last occurrence of <code>charToFind</code> in <code>stringToSearch</code> or -1 if the character does not occur.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2556,'indexOfStringFrom','Cal.Core.String.indexOfStringFrom','Cal.Core.String.indexOfStringFrom',NULL,'[CALDoc] Finds the index of the first occurrence at index greater than or equal to <code>fromIndex</code> of <code>stringToFind</code> in\n<code>stringToSearch</code> or -1 if <code>stringToFind</code> does not occur from <code>fromIndex</code> onwards.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2557,'indexOfString','Cal.Core.String.indexOfString','Cal.Core.String.indexOfString',NULL,'[CALDoc] Finds the index of the first occurrence of <code>stringToFind</code> in <code>stringToSearch</code> or -1 if the <code>stringToFind</code>\ndoes not occur.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2558,'indexOfFrom','Cal.Core.String.indexOfFrom','Cal.Core.String.indexOfFrom',NULL,'[CALDoc] Finds the index of the first occurrence at index greater than or equal to <code>fromIndex</code> of <code>charToFind</code> in\n<code>stringToSearch</code> or -1 if the character does not occur from <code>fromIndex</code> onwards.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2559,'indexOf','Cal.Core.String.indexOf','Cal.Core.String.indexOf',NULL,'[CALDoc] Finds the index of the first occurrence of <code>charToFind</code> in <code>stringToSearch</code> or -1 if the character does not occur.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2560,'jCompareStringIgnoreCase','Cal.Core.String.jCompareStringIgnoreCase','Cal.Core.String.jCompareStringIgnoreCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2561,'equalsIgnoreCase','Cal.Core.String.equalsIgnoreCase','Cal.Core.String.equalsIgnoreCase',NULL,'[CALDoc] Returns whether the strings are lexographically equal, ignoring case differences.\n','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2562,'replaceAllString','Cal.Core.String.replaceAllString','Cal.Core.String.replaceAllString',NULL,'[CALDoc] Replaces each substring of the specified string that matches the given regular expression with the given replacement.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2563,'substring','Cal.Core.String.substring','Cal.Core.String.substring',NULL,'[CALDoc] Returns a new string that is a substring of the specified string. \n','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2564,'toLowerCaseInLocale','Cal.Core.String.toLowerCaseInLocale','Cal.Core.String.toLowerCaseInLocale',NULL,'[CALDoc] Converts all of the characters in the specified string to lower case using\nthe rules of the specified locale.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2565,'toLowerCase','Cal.Core.String.toLowerCase','Cal.Core.String.toLowerCase',NULL,'[CALDoc] Converts all of the characters in the specified string to lower case using\nthe rules of the default locale <code>Locale.defaultLocale</code>.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2566,'toUpperCaseInLocale','Cal.Core.String.toUpperCaseInLocale','Cal.Core.String.toUpperCaseInLocale',NULL,'[CALDoc] Converts all of the characters in the specified string to upper case using\nthe rules of the specified locale.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2567,'toUpperCase','Cal.Core.String.toUpperCase','Cal.Core.String.toUpperCase',NULL,'[CALDoc] Converts all of the characters in the specified string to upper case using\nthe rules of the default locale <code>Locale.defaultLocale</code>.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2568,'fromChar','Cal.Core.String.fromChar','Cal.Core.String.fromChar',NULL,'[CALDoc] Converts a single character to a string of length 1 holding that character.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2569,'greaterThanEqualsStringNoCase','Cal.Utilities.StringNoCase.greaterThanEqualsStringNoCase','Cal.Utilities.StringNoCase.greaterThanEqualsStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2570,'lessThanEqualsStringNoCase','Cal.Utilities.StringNoCase.lessThanEqualsStringNoCase','Cal.Utilities.StringNoCase.lessThanEqualsStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2571,'notEqualsStringNoCase','Cal.Utilities.StringNoCase.notEqualsStringNoCase','Cal.Utilities.StringNoCase.notEqualsStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2572,'lessThanStringNoCase','Cal.Utilities.StringNoCase.lessThanStringNoCase','Cal.Utilities.StringNoCase.lessThanStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2573,'minStringNoCase','Cal.Utilities.StringNoCase.minStringNoCase','Cal.Utilities.StringNoCase.minStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2574,'maxStringNoCase','Cal.Utilities.StringNoCase.maxStringNoCase','Cal.Utilities.StringNoCase.maxStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2575,'compareStringNoCase','Cal.Utilities.StringNoCase.compareStringNoCase','Cal.Utilities.StringNoCase.compareStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2576,'isEmptyStringNoCase','Cal.Utilities.StringNoCase.isEmptyStringNoCase','Cal.Utilities.StringNoCase.isEmptyStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2577,'concatStringNoCase','Cal.Utilities.StringNoCase.concatStringNoCase','Cal.Utilities.StringNoCase.concatStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2578,'emptyStringNoCase','Cal.Utilities.StringNoCase.emptyStringNoCase','Cal.Utilities.StringNoCase.emptyStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2579,'appendStringNoCase','Cal.Utilities.StringNoCase.appendStringNoCase','Cal.Utilities.StringNoCase.appendStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2580,'equalsStringNoCase','Cal.Utilities.StringNoCase.equalsStringNoCase','Cal.Utilities.StringNoCase.equalsStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2581,'greaterThanStringNoCase','Cal.Utilities.StringNoCase.greaterThanStringNoCase','Cal.Utilities.StringNoCase.greaterThanStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2582,'showStringNoCase','Cal.Utilities.StringNoCase.showStringNoCase','Cal.Utilities.StringNoCase.showStringNoCase',NULL,'[CALDoc] ','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2583,'jCompareStringNoCase','Cal.Utilities.StringNoCase.jCompareStringNoCase','Cal.Utilities.StringNoCase.jCompareStringNoCase',NULL,'[CALDoc] Returns: -1 for LT, 0 for EQ, 1 for GT','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2584,'toString','Cal.Utilities.StringNoCase.toString','Cal.Utilities.StringNoCase.toString',NULL,'[CALDoc] Converts a <code>StringNoCase</code> value to a <code>String</code> value.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2585,'fromString','Cal.Utilities.StringNoCase.fromString','Cal.Utilities.StringNoCase.fromString',NULL,'[CALDoc] Converts a <code>String</code> value to a <code>StringNoCase</code> value.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2586,'hasProperty','Cal.Core.System.hasProperty','Cal.Core.System.hasProperty',NULL,'[CALDoc] Returns whether the specified system property is defined in the current execution context.','2008-04-20 18:17:08','2008-04-20 18:17:08'),(2587,'getProperty','Cal.Core.System.getProperty','Cal.Core.System.getProperty',NULL,'[CALDoc] Looks up the specified system property of the current execution context.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2588,'propertyKeys','Cal.Core.System.propertyKeys','Cal.Core.System.propertyKeys',NULL,'[CALDoc] Returns the keys of the system properties defined in the current execution context.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2589,'registerCleanable','Cal.Core.System.registerCleanable','Cal.Core.System.registerCleanable',NULL,'[CALDoc] Registers a cleanup hook to be run whenever the current execution context is cleaned up. ','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2590,'showCleanable','Cal.Core.System.showCleanable','Cal.Core.System.showCleanable',NULL,'[CALDoc] ','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2591,'registerCleanableFunction','Cal.Core.System.registerCleanableFunction','Cal.Core.System.registerCleanableFunction',NULL,'[CALDoc] Registers a cleanup hook based on a CAL to be run whenever the current execution context is cleaned up. \n','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2592,'executionContextProperties','Cal.Core.System.executionContextProperties','Cal.Core.System.executionContextProperties',NULL,'[CALDoc] Returns the <code>ExecutionContextProperties</code> instance encapsulating the set of properties associated with\nthe current execution context.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2593,'concurrentRuntime','Cal.Core.System.concurrentRuntime','Cal.Core.System.concurrentRuntime',NULL,'[CALDoc] If true, the CAL run-time supports concurrent reduction of CAL programs on a single \nexecution context. ','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2594,'jRegisterCleanableFunction','Cal.Core.System.jRegisterCleanableFunction','Cal.Core.System.jRegisterCleanableFunction',NULL,'[CALDoc] ','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2595,'jRegisterCleanable','Cal.Core.System.jRegisterCleanable','Cal.Core.System.jRegisterCleanable',NULL,'[CALDoc] Registers a cleanup hook to be run whenever the given execution context is cleaned up. ','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2596,'jGetPropertyKeys','Cal.Core.System.jGetPropertyKeys','Cal.Core.System.jGetPropertyKeys',NULL,'[CALDoc] Returns the keys of the properties in the given <code>ExecutionContextProperties</code> instance.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2597,'jHasProperty','Cal.Core.System.jHasProperty','Cal.Core.System.jHasProperty',NULL,'[CALDoc] Returns whether the specified property is in the given <code>ExecutionContextProperties</code> instance.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2598,'jGetProperty','Cal.Core.System.jGetProperty','Cal.Core.System.jGetProperty',NULL,'[CALDoc] Looks up the specified property in the given <code>ExecutionContextProperties</code> instance.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2599,'jGetProperties','Cal.Core.System.jGetProperties','Cal.Core.System.jGetProperties',NULL,'[CALDoc] Returns the <code>ExecutionContextProperties</code> instance encapsulating the set of properties associated with\nthe given execution context.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2600,'getTextResource','Cal.Core.Resource.getTextResource','Cal.Core.Resource.getTextResource',NULL,'[CALDoc] Returns a text user resource as a string, using the ISO-8859-1 (Latin 1) character set.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2601,'getResourceInputStream','Cal.Core.Resource.getResourceInputStream','Cal.Core.Resource.getResourceInputStream',NULL,'[CALDoc] Returns a binary user resource as an <code>InputStream</code>.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2602,'getBinaryResource','Cal.Core.Resource.getBinaryResource','Cal.Core.Resource.getBinaryResource',NULL,'[CALDoc] Returns a binary user resource as a byte array.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2603,'getTextResourceInCharset','Cal.Core.Resource.getTextResourceInCharset','Cal.Core.Resource.getTextResourceInCharset',NULL,'[CALDoc] Returns a text user resource as a string, using the specified character set.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2604,'getResourceInputStreamFallbackList','Cal.Core.Resource.getResourceInputStreamFallbackList','Cal.Core.Resource.getResourceInputStreamFallbackList',NULL,'[CALDoc] Returns an ordered list of <code>(Locale, InputStream)</code> pairs which represents a user resource and its associated fallbacks.\n','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2605,'isNullString','Cal.Core.Resource.isNullString','Cal.Core.Resource.isNullString',NULL,'[CALDoc] Returns: <code>True</code> iff the argument is null.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2606,'readIntoString','Cal.Core.Resource.readIntoString','Cal.Core.Resource.readIntoString',NULL,'[CALDoc] Reads the specified <code>InputStream</code> into a string using the given character set.\n','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2607,'isNullInputStream','Cal.Core.Resource.isNullInputStream','Cal.Core.Resource.isNullInputStream',NULL,'[CALDoc] Returns: <code>True</code> iff the argument is null.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2608,'isNullByteArray','Cal.Core.Resource.isNullByteArray','Cal.Core.Resource.isNullByteArray',NULL,'[CALDoc] Returns: <code>True</code> iff the argument is null.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2609,'readIntoByteArray','Cal.Core.Resource.readIntoByteArray','Cal.Core.Resource.readIntoByteArray',NULL,'[CALDoc] Reads the specified <code>InputStream</code> into a new byte array, and close the stream afterwards.\n','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2610,'getUserResource','Cal.Core.Resource.getUserResource','Cal.Core.Resource.getUserResource',NULL,'[CALDoc] Returns an <code>InputStream</code> for the named user resource in the specified locale. ','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2611,'getResourceAccess','Cal.Core.Resource.getResourceAccess','Cal.Core.Resource.getResourceAccess',NULL,'[CALDoc] Returns the interface for resource access from an execution context.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2612,'collatorDecompositionMode','Cal.Utilities.Locale.collatorDecompositionMode','Cal.Utilities.Locale.collatorDecompositionMode',NULL,'[CALDoc] Returns the decomposition mode of the given collator.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2613,'currentLocaleCollator','Cal.Utilities.Locale.currentLocaleCollator','Cal.Utilities.Locale.currentLocaleCollator',NULL,'[CALDoc] A collator for the current locale.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2614,'makeCollatorWithStrengthAndDecompositionMode','Cal.Utilities.Locale.makeCollatorWithStrengthAndDecompositionMode','Cal.Utilities.Locale.makeCollatorWithStrengthAndDecompositionMode',NULL,'[CALDoc] Constructs a collator for the given locale and with the given collator strength and decomposition mode.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2615,'fallback','Cal.Utilities.Locale.fallback','Cal.Utilities.Locale.fallback',NULL,'[CALDoc] Returns the <em>fallback</em> locale of the given locale.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2616,'intToCollatorDecompositionMode','Cal.Utilities.Locale.intToCollatorDecompositionMode','Cal.Utilities.Locale.intToCollatorDecompositionMode',NULL,'[CALDoc] Converts Java collator decomposition mode constants to <code>CollatorDecompositionMode</code> values.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2617,'makeCollatorWithDecompositionMode','Cal.Utilities.Locale.makeCollatorWithDecompositionMode','Cal.Utilities.Locale.makeCollatorWithDecompositionMode',NULL,'[CALDoc] Constructs a collator for the given locale and with the given collator decomposition mode.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2618,'collatorDecompositionModeToInt','Cal.Utilities.Locale.collatorDecompositionModeToInt','Cal.Utilities.Locale.collatorDecompositionModeToInt',NULL,'[CALDoc] Converts <code>CollatorDecompositionMode</code> values to Java collator decomposition mode constants.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2619,'showLocale','Cal.Utilities.Locale.showLocale','Cal.Utilities.Locale.showLocale',NULL,'[CALDoc] Returns a string representation of the locale for the purpose of debugging.\n','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2620,'availableDisplayLocales','Cal.Utilities.Locale.availableDisplayLocales','Cal.Utilities.Locale.availableDisplayLocales',NULL,'[CALDoc] Returns a list of all locales that are supported by the various display name functions.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2621,'displayCountryInCurrentLocale','Cal.Utilities.Locale.displayCountryInCurrentLocale','Cal.Utilities.Locale.displayCountryInCurrentLocale',NULL,'[CALDoc] Returns a display name for the locale\'s country/region, localized in the current locale.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2622,'displayNameInCurrentLocale','Cal.Utilities.Locale.displayNameInCurrentLocale','Cal.Utilities.Locale.displayNameInCurrentLocale',NULL,'[CALDoc] Returns a display name for the locale, localized in the current locale.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2623,'displayVariantInCurrentLocale','Cal.Utilities.Locale.displayVariantInCurrentLocale','Cal.Utilities.Locale.displayVariantInCurrentLocale',NULL,'[CALDoc] Returns a display name for the locale\'s variant, localized in the current locale.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2624,'collatorStrength','Cal.Utilities.Locale.collatorStrength','Cal.Utilities.Locale.collatorStrength',NULL,'[CALDoc] Returns the strength of the given collator.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2625,'displayLanguageInCurrentLocale','Cal.Utilities.Locale.displayLanguageInCurrentLocale','Cal.Utilities.Locale.displayLanguageInCurrentLocale',NULL,'[CALDoc] Returns a display name for the locale\'s language, localized in the current locale.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2626,'compareByCollator','Cal.Utilities.Locale.compareByCollator','Cal.Utilities.Locale.compareByCollator',NULL,'[CALDoc] Compares the relative order of two strings based on the given collator\'s collation rules.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2627,'makeCollatorWithStrength','Cal.Utilities.Locale.makeCollatorWithStrength','Cal.Utilities.Locale.makeCollatorWithStrength',NULL,'[CALDoc] Constructs a collator for the given locale and with the given collator strength.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2628,'intToCollatorStrength','Cal.Utilities.Locale.intToCollatorStrength','Cal.Utilities.Locale.intToCollatorStrength',NULL,'[CALDoc] Converts Java collator strength constants to <code>CollatorStrength</code> values.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2629,'currentLocale','Cal.Utilities.Locale.currentLocale','Cal.Utilities.Locale.currentLocale',NULL,'[CALDoc] Returns the locale associated with the current execution context. ','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2630,'collatorStrengthToInt','Cal.Utilities.Locale.collatorStrengthToInt','Cal.Utilities.Locale.collatorStrengthToInt',NULL,'[CALDoc] Converts <code>CollatorStrength</code> values to Java collator strength constants.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2631,'availableCollatorLocales','Cal.Utilities.Locale.availableCollatorLocales','Cal.Utilities.Locale.availableCollatorLocales',NULL,'[CALDoc] Returns a list of all locales that are supported by the various collator functions.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2632,'collationKeySourceString','Cal.Utilities.Locale.collationKeySourceString','Cal.Utilities.Locale.collationKeySourceString',NULL,'[CALDoc] Returns the source string represented by a collation key.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2633,'makeCollationKey','Cal.Utilities.Locale.makeCollationKey','Cal.Utilities.Locale.makeCollationKey',NULL,'[CALDoc] Constructs a collation key based on a given collator and a given string.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2634,'jCompareByCollator','Cal.Utilities.Locale.jCompareByCollator','Cal.Utilities.Locale.jCompareByCollator',NULL,'[CALDoc] Compares the relative order of two strings based on the given collator\'s collation rules.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2635,'equalsByCollator','Cal.Utilities.Locale.equalsByCollator','Cal.Utilities.Locale.equalsByCollator',NULL,'[CALDoc] Compares the equality of two strings based on the given collator\'s collation rules.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2636,'jGetDecomposition','Cal.Utilities.Locale.jGetDecomposition','Cal.Utilities.Locale.jGetDecomposition',NULL,'[CALDoc] Gets the decomposition mode of a collator as a Java constant.','2008-04-20 18:17:09','2008-04-20 18:17:09'),(2637,'jSetDecomposition','Cal.Utilities.Locale.jSetDecomposition','Cal.Utilities.Locale.jSetDecomposition',NULL,'[CALDoc] Sets the decomposition mode of a collator. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2638,'jFullDecomposition','Cal.Utilities.Locale.jFullDecomposition','Cal.Utilities.Locale.jFullDecomposition',NULL,'[CALDoc] Java constant for full decomposition.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2639,'jCanonicalDecomposition','Cal.Utilities.Locale.jCanonicalDecomposition','Cal.Utilities.Locale.jCanonicalDecomposition',NULL,'[CALDoc] Java constant for canonical decomposition.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2640,'jNoDecomposition','Cal.Utilities.Locale.jNoDecomposition','Cal.Utilities.Locale.jNoDecomposition',NULL,'[CALDoc] Java constant for no decomposition.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2641,'jGetStrength','Cal.Utilities.Locale.jGetStrength','Cal.Utilities.Locale.jGetStrength',NULL,'[CALDoc] Gets the strength of a collator as a Java constant.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2642,'jSetStrength','Cal.Utilities.Locale.jSetStrength','Cal.Utilities.Locale.jSetStrength',NULL,'[CALDoc] Sets the strength of a collator. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2643,'jCollatorStrengthIdentical','Cal.Utilities.Locale.jCollatorStrengthIdentical','Cal.Utilities.Locale.jCollatorStrengthIdentical',NULL,'[CALDoc] Java constant for identical collator strength.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2644,'jCollatorStrengthTertiary','Cal.Utilities.Locale.jCollatorStrengthTertiary','Cal.Utilities.Locale.jCollatorStrengthTertiary',NULL,'[CALDoc] Java constant for tertiary collator strength.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2645,'jCollatorStrengthSecondary','Cal.Utilities.Locale.jCollatorStrengthSecondary','Cal.Utilities.Locale.jCollatorStrengthSecondary',NULL,'[CALDoc] Java constant for secondary collator strength.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2646,'jCollatorStrengthPrimary','Cal.Utilities.Locale.jCollatorStrengthPrimary','Cal.Utilities.Locale.jCollatorStrengthPrimary',NULL,'[CALDoc] Java constant for primary collator strength.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2647,'jCollatorGetAvailableLocales','Cal.Utilities.Locale.jCollatorGetAvailableLocales','Cal.Utilities.Locale.jCollatorGetAvailableLocales',NULL,'[CALDoc] Returns an array of all installed locales for the <code>java.text.Collator</code> class.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2648,'makeCollator','Cal.Utilities.Locale.makeCollator','Cal.Utilities.Locale.makeCollator',NULL,'[CALDoc] Constructs a collator for the given locale.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2649,'canadaFrenchLocale','Cal.Utilities.Locale.canadaFrenchLocale','Cal.Utilities.Locale.canadaFrenchLocale',NULL,'[CALDoc] The locale \"fr_CA\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2650,'canadaEnglishLocale','Cal.Utilities.Locale.canadaEnglishLocale','Cal.Utilities.Locale.canadaEnglishLocale',NULL,'[CALDoc] The locale \"en_CA\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2651,'usEnglishLocale','Cal.Utilities.Locale.usEnglishLocale','Cal.Utilities.Locale.usEnglishLocale',NULL,'[CALDoc] The locale \"en_US\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2652,'ukEnglishLocale','Cal.Utilities.Locale.ukEnglishLocale','Cal.Utilities.Locale.ukEnglishLocale',NULL,'[CALDoc] The locale \"en_GB\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2653,'taiwanChineseLocale','Cal.Utilities.Locale.taiwanChineseLocale','Cal.Utilities.Locale.taiwanChineseLocale',NULL,'[CALDoc] The locale \"zh_TW\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2654,'chinaChineseLocale','Cal.Utilities.Locale.chinaChineseLocale','Cal.Utilities.Locale.chinaChineseLocale',NULL,'[CALDoc] The locale \"zh_CN\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2655,'koreaKoreanLocale','Cal.Utilities.Locale.koreaKoreanLocale','Cal.Utilities.Locale.koreaKoreanLocale',NULL,'[CALDoc] The locale \"ko_KR\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2656,'japanJapaneseLocale','Cal.Utilities.Locale.japanJapaneseLocale','Cal.Utilities.Locale.japanJapaneseLocale',NULL,'[CALDoc] The locale \"ja_JP\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2657,'italyItalianLocale','Cal.Utilities.Locale.italyItalianLocale','Cal.Utilities.Locale.italyItalianLocale',NULL,'[CALDoc] The locale \"it_IT\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2658,'germanyGermanLocale','Cal.Utilities.Locale.germanyGermanLocale','Cal.Utilities.Locale.germanyGermanLocale',NULL,'[CALDoc] The locale \"de_DE\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2659,'franceFrenchLocale','Cal.Utilities.Locale.franceFrenchLocale','Cal.Utilities.Locale.franceFrenchLocale',NULL,'[CALDoc] The locale \"fr_FR\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2660,'traditionalChineseLocale','Cal.Utilities.Locale.traditionalChineseLocale','Cal.Utilities.Locale.traditionalChineseLocale',NULL,'[CALDoc] The locale \"zh_TW\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2661,'simplifiedChineseLocale','Cal.Utilities.Locale.simplifiedChineseLocale','Cal.Utilities.Locale.simplifiedChineseLocale',NULL,'[CALDoc] The locale \"zh_CN\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2662,'chineseLocale','Cal.Utilities.Locale.chineseLocale','Cal.Utilities.Locale.chineseLocale',NULL,'[CALDoc] The locale \"zh\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2663,'koreanLocale','Cal.Utilities.Locale.koreanLocale','Cal.Utilities.Locale.koreanLocale',NULL,'[CALDoc] The locale \"ko\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2664,'japaneseLocale','Cal.Utilities.Locale.japaneseLocale','Cal.Utilities.Locale.japaneseLocale',NULL,'[CALDoc] The locale \"ja\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2665,'italianLocale','Cal.Utilities.Locale.italianLocale','Cal.Utilities.Locale.italianLocale',NULL,'[CALDoc] The locale \"it\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2666,'germanLocale','Cal.Utilities.Locale.germanLocale','Cal.Utilities.Locale.germanLocale',NULL,'[CALDoc] The locale \"de\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2667,'frenchLocale','Cal.Utilities.Locale.frenchLocale','Cal.Utilities.Locale.frenchLocale',NULL,'[CALDoc] The locale \"fr\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2668,'englishLocale','Cal.Utilities.Locale.englishLocale','Cal.Utilities.Locale.englishLocale',NULL,'[CALDoc] The locale \"en\".','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2669,'invariantLocale','Cal.Utilities.Locale.invariantLocale','Cal.Utilities.Locale.invariantLocale',NULL,'[CALDoc] The locale constant for the <em>invariant locale</em>, which is treated by the CAL platform\nas the final fallback locale for the lookup of localized resources.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2670,'defaultLocale','Cal.Utilities.Locale.defaultLocale','Cal.Utilities.Locale.defaultLocale',NULL,'[CALDoc] Returns the default locale of the underlying virtual machine. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2671,'jGetLocale','Cal.Utilities.Locale.jGetLocale','Cal.Utilities.Locale.jGetLocale',NULL,'[CALDoc] Returns the locale defined in the given set of properties of an execution context.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2672,'jLocaleGetAvailableLocales','Cal.Utilities.Locale.jLocaleGetAvailableLocales','Cal.Utilities.Locale.jLocaleGetAvailableLocales',NULL,'[CALDoc] Returns an array of all installed locales for the <code>java.util.Locale</code> class.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2673,'jArrayToList','Cal.Utilities.Locale.jArrayToList','Cal.Utilities.Locale.jArrayToList',NULL,'[CALDoc] Converts a <code>JObjectArray</code> to a <code>JList</code>.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2674,'displayVariantInLocale','Cal.Utilities.Locale.displayVariantInLocale','Cal.Utilities.Locale.displayVariantInLocale',NULL,'[CALDoc] Returns a display name for the locale\'s variant, localized in the given display locale.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2675,'displayCountryInLocale','Cal.Utilities.Locale.displayCountryInLocale','Cal.Utilities.Locale.displayCountryInLocale',NULL,'[CALDoc] Returns a display name for the locale\'s country/region, localized in the given display locale.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2676,'displayLanguageInLocale','Cal.Utilities.Locale.displayLanguageInLocale','Cal.Utilities.Locale.displayLanguageInLocale',NULL,'[CALDoc] Returns a display name for the locale\'s language, localized in the given display locale.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2677,'displayNameInLocale','Cal.Utilities.Locale.displayNameInLocale','Cal.Utilities.Locale.displayNameInLocale',NULL,'[CALDoc] Returns a display name for the locale, localized in the given display locale.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2678,'canonicalString','Cal.Utilities.Locale.canonicalString','Cal.Utilities.Locale.canonicalString',NULL,'[CALDoc] Returns the canonical string representation of a given locale: &lt;language&gt;[_&lt;country/region&gt;[_&lt;variant&gt;]]','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2679,'fromCanonicalString','Cal.Utilities.Locale.fromCanonicalString','Cal.Utilities.Locale.fromCanonicalString',NULL,'[CALDoc] Constructs a locale based on its canonical string representation: &lt;language&gt;[_&lt;country/region&gt;[_&lt;variant&gt;]]','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2680,'iso3Country','Cal.Utilities.Locale.iso3Country','Cal.Utilities.Locale.iso3Country',NULL,'[CALDoc] Returns a three-letter abbreviation for the locale\'s country/region. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2681,'iso3Language','Cal.Utilities.Locale.iso3Language','Cal.Utilities.Locale.iso3Language',NULL,'[CALDoc] Returns a three-letter abbreviation for the locale\'s language. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2682,'variant','Cal.Utilities.Locale.variant','Cal.Utilities.Locale.variant',NULL,'[CALDoc] Returns the variant for the locale, which can be an empty string if no variant is specified\nby the locale.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2683,'country','Cal.Utilities.Locale.country','Cal.Utilities.Locale.country',NULL,'[CALDoc] Returns the country/region code for the locale, which can be an empty string if no country/region\nis specified by the locale.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2684,'language','Cal.Utilities.Locale.language','Cal.Utilities.Locale.language',NULL,'[CALDoc] Returns the language code for the locale, which can be an empty string if no language\nis specified by the locale (for example in the case of the <code>invariantLocale</code>).','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2685,'makeLocaleFromLanguageCountryVariant','Cal.Utilities.Locale.makeLocaleFromLanguageCountryVariant','Cal.Utilities.Locale.makeLocaleFromLanguageCountryVariant',NULL,'[CALDoc] Constructs a <code>Locale</code> from a two-letter ISO 639 language code, a two-letter\nISO 3166 country/region code, and a variant.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2686,'makeLocaleFromLanguageCountry','Cal.Utilities.Locale.makeLocaleFromLanguageCountry','Cal.Utilities.Locale.makeLocaleFromLanguageCountry',NULL,'[CALDoc] Constructs a <code>Locale</code> from a two-letter ISO 639 language code and a two-letter\nISO 3166 country/region code.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2687,'makeLocaleFromLanguage','Cal.Utilities.Locale.makeLocaleFromLanguage','Cal.Utilities.Locale.makeLocaleFromLanguage',NULL,'[CALDoc] Constructs a <code>Locale</code> from a two-letter ISO 639 language code.','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2688,'CollatorStrengthPrimary','Cal.Utilities.Locale.CollatorStrengthPrimary','Cal.Utilities.Locale.CollatorStrengthPrimary',NULL,'[CALDoc] The weakest collator strength. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2689,'CollatorStrengthSecondary','Cal.Utilities.Locale.CollatorStrengthSecondary','Cal.Utilities.Locale.CollatorStrengthSecondary',NULL,'[CALDoc] A collator strength that commonly discerns different accented forms, but does not discern case differences.\n','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2690,'CollatorStrengthTertiary','Cal.Utilities.Locale.CollatorStrengthTertiary','Cal.Utilities.Locale.CollatorStrengthTertiary',NULL,'[CALDoc] A collator strength that commonly discerns case differences. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2691,'CollatorStrengthIdentical','Cal.Utilities.Locale.CollatorStrengthIdentical','Cal.Utilities.Locale.CollatorStrengthIdentical',NULL,'[CALDoc] The strongest collator strength. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2692,'NoDecomposition','Cal.Utilities.Locale.NoDecomposition','Cal.Utilities.Locale.NoDecomposition',NULL,'[CALDoc] In this mode, accented characters will not be decomposed for collation. ','2008-04-20 18:17:10','2008-04-20 18:17:10'),(2693,'CanonicalDecomposition','Cal.Utilities.Locale.CanonicalDecomposition','Cal.Utilities.Locale.CanonicalDecomposition',NULL,'[CALDoc] In this mode, characters that are canonical variants according to the Unicode standard will be decomposed for collation.\n','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2694,'FullDecomposition','Cal.Utilities.Locale.FullDecomposition','Cal.Utilities.Locale.FullDecomposition',NULL,'[CALDoc] In this mode, both Unicode canonical variants and Unicode compatibility variants will be decomposed for collation.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2695,'currentTimeZone','Cal.Utilities.TimeZone.currentTimeZone','Cal.Utilities.TimeZone.currentTimeZone',NULL,'[CALDoc] Returns the time zone associated with the current execution context. ','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2696,'fromJavaUtilTimeZone','Cal.Utilities.TimeZone.fromJavaUtilTimeZone','Cal.Utilities.TimeZone.fromJavaUtilTimeZone',NULL,'[CALDoc] Converts a Java time zone to an immutable time zone.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2697,'longDisplayName','Cal.Utilities.TimeZone.longDisplayName','Cal.Utilities.TimeZone.longDisplayName',NULL,'[CALDoc] Returns the long display name of the time zone in the given locale.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2698,'shortDisplayName','Cal.Utilities.TimeZone.shortDisplayName','Cal.Utilities.TimeZone.shortDisplayName',NULL,'[CALDoc] Returns the short display name of the time zone in the given locale.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2699,'timeZoneID','Cal.Utilities.TimeZone.timeZoneID','Cal.Utilities.TimeZone.timeZoneID',NULL,'[CALDoc] Returns the time zone ID of the given time zone.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2700,'jGetTimeZone','Cal.Utilities.TimeZone.jGetTimeZone','Cal.Utilities.TimeZone.jGetTimeZone',NULL,'[CALDoc] Returns the time zone defined in the given set of properties of an execution context.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2701,'utcTimeZone','Cal.Utilities.TimeZone.utcTimeZone','Cal.Utilities.TimeZone.utcTimeZone',NULL,'[CALDoc] The UTC time zone.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2702,'makeTimeZone','Cal.Utilities.TimeZone.makeTimeZone','Cal.Utilities.TimeZone.makeTimeZone',NULL,'[CALDoc] Constructs a time zone from a time zone ID.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2703,'jGetJavaUtilTimeZoneID','Cal.Utilities.TimeZone.jGetJavaUtilTimeZoneID','Cal.Utilities.TimeZone.jGetJavaUtilTimeZoneID',NULL,'[CALDoc] Returns the Java time zone\'s ID.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2704,'makeStringProperties','Cal.Utilities.StringProperties.makeStringProperties','Cal.Utilities.StringProperties.makeStringProperties',NULL,'[CALDoc] Constructs a <code>StringProperties</code> by reading in the persisted format from an input stream.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2705,'bundleStrings','Cal.Utilities.StringProperties.bundleStrings','Cal.Utilities.StringProperties.bundleStrings',NULL,'[CALDoc] Returns the <code>StringProperties</code> associated with the bundle.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2706,'bundleActualLocale','Cal.Utilities.StringProperties.bundleActualLocale','Cal.Utilities.StringProperties.bundleActualLocale',NULL,'[CALDoc] Returns the actual locale for the resource fetched.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2707,'bundleExtension','Cal.Utilities.StringProperties.bundleExtension','Cal.Utilities.StringProperties.bundleExtension',NULL,'[CALDoc] Returns the file extension of the user resource associated with the bundle.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2708,'bundleName','Cal.Utilities.StringProperties.bundleName','Cal.Utilities.StringProperties.bundleName',NULL,'[CALDoc] Returns the name of the user resource associated with the bundle.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2709,'showStringProperties','Cal.Utilities.StringProperties.showStringProperties','Cal.Utilities.StringProperties.showStringProperties',NULL,'[CALDoc] ','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2710,'keys','Cal.Utilities.StringProperties.keys','Cal.Utilities.StringProperties.keys',NULL,'[CALDoc] Returns a list of all the keys defined in the given <code>StringProperties</code> (and\nits chain of defaults instances).','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2711,'lookupWithDefault','Cal.Utilities.StringProperties.lookupWithDefault','Cal.Utilities.StringProperties.lookupWithDefault',NULL,'[CALDoc] Looks up the named property in the given <code>StringProperties</code>, with the provided default.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2712,'lookup','Cal.Utilities.StringProperties.lookup','Cal.Utilities.StringProperties.lookup',NULL,'[CALDoc] Looks up the named property in the given <code>StringProperties</code>.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2713,'bundleRequestedLocale','Cal.Utilities.StringProperties.bundleRequestedLocale','Cal.Utilities.StringProperties.bundleRequestedLocale',NULL,'[CALDoc] Returns the locale for which the resource was to be fetched.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2714,'bundleModuleName','Cal.Utilities.StringProperties.bundleModuleName','Cal.Utilities.StringProperties.bundleModuleName',NULL,'[CALDoc] Returns the name of the module associated with the bundle.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2715,'makeStringResourceBundle','Cal.Utilities.StringProperties.makeStringResourceBundle','Cal.Utilities.StringProperties.makeStringResourceBundle',NULL,'[CALDoc] Constructs a string resource bundle by fetching the user resource with the given module name and resource name,\nin the current locale. ','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2716,'makeStringResourceBundleInLocale','Cal.Utilities.StringProperties.makeStringResourceBundleInLocale','Cal.Utilities.StringProperties.makeStringResourceBundleInLocale',NULL,'[CALDoc] Constructs a string resource bundle by fetching the user resource with the given module name and resource name, and in the\nspecific locale. ','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2717,'makeStringResourceBundleWithExtensionInLocale','Cal.Utilities.StringProperties.makeStringResourceBundleWithExtensionInLocale','Cal.Utilities.StringProperties.makeStringResourceBundleWithExtensionInLocale',NULL,'[CALDoc] Constructs a string resource bundle by fetching the user resource with the given module name and resource name and extension,\nand in the specific locale.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2718,'getPropertyNames','Cal.Utilities.StringProperties.getPropertyNames','Cal.Utilities.StringProperties.getPropertyNames',NULL,'[CALDoc] Returns a list of the keys defined in the given <code>StringProperties</code> instance (and\nits chain of defaults instances).','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2719,'getPropertyWithDefault','Cal.Utilities.StringProperties.getPropertyWithDefault','Cal.Utilities.StringProperties.getPropertyWithDefault',NULL,'[CALDoc] Searches for the property with the specified key in the <code>StringProperties</code> instance.\n','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2720,'isNullString','Cal.Utilities.StringProperties.isNullString','Cal.Utilities.StringProperties.isNullString',NULL,'[CALDoc] Returns: <code>True</code> iff the argument is null.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2721,'getProperty','Cal.Utilities.StringProperties.getProperty','Cal.Utilities.StringProperties.getProperty',NULL,'[CALDoc] Searches for the property with the specified key in the <code>StringProperties</code> instance.\n','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2722,'makeStringPropertiesWithDefaults','Cal.Utilities.StringProperties.makeStringPropertiesWithDefaults','Cal.Utilities.StringProperties.makeStringPropertiesWithDefaults',NULL,'[CALDoc] Constructs a <code>StringProperties</code> by reading in the persisted format from an input stream, and\nwith the given defaults.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2723,'emptyStringProperties','Cal.Utilities.StringProperties.emptyStringProperties','Cal.Utilities.StringProperties.emptyStringProperties',NULL,'[CALDoc] An empty <code>StringProperties</code>.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2724,'isNullProperties','Cal.Utilities.StringProperties.isNullProperties','Cal.Utilities.StringProperties.isNullProperties',NULL,'[CALDoc] Returns: <code>True</code> iff the argument is null.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2725,'nullProperties','Cal.Utilities.StringProperties.nullProperties','Cal.Utilities.StringProperties.nullProperties',NULL,'[CALDoc] The null value, which can be used validly as the <em>defaults</em> of a <code>StringProperties</code>.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2726,'StringResourceBundle','Cal.Utilities.StringProperties.StringResourceBundle','Cal.Utilities.StringProperties.StringResourceBundle',NULL,'[CALDoc] Represents a <code>StringProperties</code> fetched as a user resource,\nwith identification information for the resource: module name, name, file extension,\nand the requested and actual locales of the resource.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2727,'format7','Cal.Utilities.MessageFormat.format7','Cal.Utilities.MessageFormat.format7',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2728,'format5','Cal.Utilities.MessageFormat.format5','Cal.Utilities.MessageFormat.format5',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2729,'formatForArgList','Cal.Utilities.MessageFormat.formatForArgList','Cal.Utilities.MessageFormat.formatForArgList',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2730,'formatWithPattern5','Cal.Utilities.MessageFormat.formatWithPattern5','Cal.Utilities.MessageFormat.formatWithPattern5',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2731,'format1','Cal.Utilities.MessageFormat.format1','Cal.Utilities.MessageFormat.format1',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2732,'format3','Cal.Utilities.MessageFormat.format3','Cal.Utilities.MessageFormat.format3',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2733,'format4','Cal.Utilities.MessageFormat.format4','Cal.Utilities.MessageFormat.format4',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:11','2008-04-20 18:17:11'),(2734,'format6','Cal.Utilities.MessageFormat.format6','Cal.Utilities.MessageFormat.format6',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2735,'formatNumberWithPattern','Cal.Utilities.MessageFormat.formatNumberWithPattern','Cal.Utilities.MessageFormat.formatNumberWithPattern',NULL,'[CALDoc] Returns the given number formatted by the specified pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2736,'formatCurrency','Cal.Utilities.MessageFormat.formatCurrency','Cal.Utilities.MessageFormat.formatCurrency',NULL,'[CALDoc] Returns the given number formatted as a currency value.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2737,'formatWithPattern6','Cal.Utilities.MessageFormat.formatWithPattern6','Cal.Utilities.MessageFormat.formatWithPattern6',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2738,'formatNumber','Cal.Utilities.MessageFormat.formatNumber','Cal.Utilities.MessageFormat.formatNumber',NULL,'[CALDoc] Returns a formatted string for the given number.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2739,'formatWithPattern7','Cal.Utilities.MessageFormat.formatWithPattern7','Cal.Utilities.MessageFormat.formatWithPattern7',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2740,'format2','Cal.Utilities.MessageFormat.format2','Cal.Utilities.MessageFormat.format2',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2741,'formatWithPattern2','Cal.Utilities.MessageFormat.formatWithPattern2','Cal.Utilities.MessageFormat.formatWithPattern2',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2742,'formatWithPattern4','Cal.Utilities.MessageFormat.formatWithPattern4','Cal.Utilities.MessageFormat.formatWithPattern4',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2743,'formatWithPattern3','Cal.Utilities.MessageFormat.formatWithPattern3','Cal.Utilities.MessageFormat.formatWithPattern3',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2744,'format','Cal.Utilities.MessageFormat.format','Cal.Utilities.MessageFormat.format',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.\n','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2745,'format0','Cal.Utilities.MessageFormat.format0','Cal.Utilities.MessageFormat.format0',NULL,'[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2746,'missingFormat','Cal.Utilities.MessageFormat.missingFormat','Cal.Utilities.MessageFormat.missingFormat',NULL,'[CALDoc] Returns the placeholder string for a key that cannot be found.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2747,'formatWithPattern','Cal.Utilities.MessageFormat.formatWithPattern','Cal.Utilities.MessageFormat.formatWithPattern',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.\n','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2748,'formatPercent','Cal.Utilities.MessageFormat.formatPercent','Cal.Utilities.MessageFormat.formatPercent',NULL,'[CALDoc] Returns the given number formatted as a percent value.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2749,'formatWithPattern1','Cal.Utilities.MessageFormat.formatWithPattern1','Cal.Utilities.MessageFormat.formatWithPattern1',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2750,'formatWithPatternForArgList','Cal.Utilities.MessageFormat.formatWithPatternForArgList','Cal.Utilities.MessageFormat.formatWithPatternForArgList',NULL,'[CALDoc] Returns a string formatted according to the specified message pattern.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2751,'jFormat','Cal.Utilities.MessageFormat.jFormat','Cal.Utilities.MessageFormat.jFormat',NULL,'[CALDoc] Formats the specified object according to the specified message format to produce a string.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2752,'jMakeMessageFormat','Cal.Utilities.MessageFormat.jMakeMessageFormat','Cal.Utilities.MessageFormat.jMakeMessageFormat',NULL,'[CALDoc] Constructs an instance of <code>JMessageFormat</code>.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2753,'jListToArray','Cal.Utilities.MessageFormat.jListToArray','Cal.Utilities.MessageFormat.jListToArray',NULL,'[CALDoc] Converts a <code>JList</code> to a <code>JObjectArray</code>.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2754,'accumulate2Strict','Cal.Utilities.Accumulate.accumulate2Strict','Cal.Utilities.Accumulate.accumulate2Strict',NULL,'[CALDoc] <code>accumulate2Strict</code> calculates all accumulated values in a single pass over the data.  \n','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2755,'accumulate4Strict','Cal.Utilities.Accumulate.accumulate4Strict','Cal.Utilities.Accumulate.accumulate4Strict',NULL,'[CALDoc] <code>accumulate4Strict</code> calculates all accumulated values in a single pass over the data.  ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2756,'accumulate3','Cal.Utilities.Accumulate.accumulate3','Cal.Utilities.Accumulate.accumulate3',NULL,'[CALDoc] <code>accumulate3</code> is lazy in each of the accumulated values.  ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2757,'accumulate3Strict','Cal.Utilities.Accumulate.accumulate3Strict','Cal.Utilities.Accumulate.accumulate3Strict',NULL,'[CALDoc] <code>accumulate3Strict</code> calculates all accumulated values in a single pass over the data.  ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2758,'accumulate4','Cal.Utilities.Accumulate.accumulate4','Cal.Utilities.Accumulate.accumulate4',NULL,'[CALDoc] <code>accumulate4</code> is lazy in each of the accumulated values.  ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2759,'accumulate2','Cal.Utilities.Accumulate.accumulate2','Cal.Utilities.Accumulate.accumulate2',NULL,'[CALDoc] <code>accumulate2</code> is lazy in each of the accumulated values.  ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2760,'accumulate1','Cal.Utilities.Accumulate.accumulate1','Cal.Utilities.Accumulate.accumulate1',NULL,'[CALDoc] <code>accumulate1</code> takes a record describing the accumulator and a set of values to operate on.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2761,'accumulate','Cal.Utilities.Accumulate.accumulate','Cal.Utilities.Accumulate.accumulate',NULL,'[CALDoc] Do an accumulation operation across a data set.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2762,'coarbitraryRelativeDate','Cal.Utilities.RelativeTime.coarbitraryRelativeDate','Cal.Utilities.RelativeTime.coarbitraryRelativeDate',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2763,'outputRelativeDateTime','Cal.Utilities.RelativeTime.outputRelativeDateTime','Cal.Utilities.RelativeTime.outputRelativeDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2764,'relativeDateTimeToJDate','Cal.Utilities.RelativeTime.relativeDateTimeToJDate','Cal.Utilities.RelativeTime.relativeDateTimeToJDate',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2765,'outputRelativeDate','Cal.Utilities.RelativeTime.outputRelativeDate','Cal.Utilities.RelativeTime.outputRelativeDate',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2766,'showRelativeDate','Cal.Utilities.RelativeTime.showRelativeDate','Cal.Utilities.RelativeTime.showRelativeDate',NULL,'[CALDoc] shows the date using the format yyyy/MM/dd.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2767,'jDateToRelativeDateTime','Cal.Utilities.RelativeTime.jDateToRelativeDateTime','Cal.Utilities.RelativeTime.jDateToRelativeDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2768,'relativeDateToJDate','Cal.Utilities.RelativeTime.relativeDateToJDate','Cal.Utilities.RelativeTime.relativeDateToJDate',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2769,'arbitraryRelativeDate','Cal.Utilities.RelativeTime.arbitraryRelativeDate','Cal.Utilities.RelativeTime.arbitraryRelativeDate',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2770,'arbitraryRelativeTime','Cal.Utilities.RelativeTime.arbitraryRelativeTime','Cal.Utilities.RelativeTime.arbitraryRelativeTime',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2771,'inputRelativeDateTime','Cal.Utilities.RelativeTime.inputRelativeDateTime','Cal.Utilities.RelativeTime.inputRelativeDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2772,'inputRelativeDate','Cal.Utilities.RelativeTime.inputRelativeDate','Cal.Utilities.RelativeTime.inputRelativeDate',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2773,'arbitraryRelativeDateTime','Cal.Utilities.RelativeTime.arbitraryRelativeDateTime','Cal.Utilities.RelativeTime.arbitraryRelativeDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2774,'coarbitraryRelativeTime','Cal.Utilities.RelativeTime.coarbitraryRelativeTime','Cal.Utilities.RelativeTime.coarbitraryRelativeTime',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2775,'showPaddedYear','Cal.Utilities.RelativeTime.showPaddedYear','Cal.Utilities.RelativeTime.showPaddedYear',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2776,'testModule','Cal.Utilities.RelativeTime.testModule','Cal.Utilities.RelativeTime.testModule',NULL,'[CALDoc] Predicate function for verifying basic functionality of the RelativeTime module.','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2777,'addSecondsToDateTimeExamples','Cal.Utilities.RelativeTime.addSecondsToDateTimeExamples','Cal.Utilities.RelativeTime.addSecondsToDateTimeExamples',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2778,'dateDiffExamples','Cal.Utilities.RelativeTime.dateDiffExamples','Cal.Utilities.RelativeTime.dateDiffExamples',NULL,'[CALDoc] ','2008-04-20 18:17:12','2008-04-20 18:17:12'),(2779,'dateDiff','Cal.Utilities.RelativeTime.dateDiff','Cal.Utilities.RelativeTime.dateDiff',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2780,'datePartExamples','Cal.Utilities.RelativeTime.datePartExamples','Cal.Utilities.RelativeTime.datePartExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2781,'addDaysToDateTimeExamples','Cal.Utilities.RelativeTime.addDaysToDateTimeExamples','Cal.Utilities.RelativeTime.addDaysToDateTimeExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2782,'addDaysToDateTime','Cal.Utilities.RelativeTime.addDaysToDateTime','Cal.Utilities.RelativeTime.addDaysToDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2783,'yearMonthDayExamples','Cal.Utilities.RelativeTime.yearMonthDayExamples','Cal.Utilities.RelativeTime.yearMonthDayExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2784,'addDaysToDateExamples','Cal.Utilities.RelativeTime.addDaysToDateExamples','Cal.Utilities.RelativeTime.addDaysToDateExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2785,'addSecondsToTime','Cal.Utilities.RelativeTime.addSecondsToTime','Cal.Utilities.RelativeTime.addSecondsToTime',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2786,'normalizeTime','Cal.Utilities.RelativeTime.normalizeTime','Cal.Utilities.RelativeTime.normalizeTime',NULL,'[CALDoc] Normalizes a time so that its internal representation in seconds satisfies <code>0 &lt;= s &lt; maxNSecondsInDay</code>.\n<code>RelativeTime (-1)</code> is converted to <code>RelativeTime (maxNSecondsInDay - 1)</code>.','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2787,'jDateToRelativeDate','Cal.Utilities.RelativeTime.jDateToRelativeDate','Cal.Utilities.RelativeTime.jDateToRelativeDate',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2788,'coarbitraryRelativeDateTime','Cal.Utilities.RelativeTime.coarbitraryRelativeDateTime','Cal.Utilities.RelativeTime.coarbitraryRelativeDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2789,'showRelativeTimeExamples','Cal.Utilities.RelativeTime.showRelativeTimeExamples','Cal.Utilities.RelativeTime.showRelativeTimeExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2790,'fractionalDaysToNDaysNSeconds','Cal.Utilities.RelativeTime.fractionalDaysToNDaysNSeconds','Cal.Utilities.RelativeTime.fractionalDaysToNDaysNSeconds',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2791,'showRelativeDateTime','Cal.Utilities.RelativeTime.showRelativeDateTime','Cal.Utilities.RelativeTime.showRelativeDateTime',NULL,'[CALDoc] Shows the <code>RelativeDateTime</code> value using the format yyyy/MM/dd.','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2792,'outputRelativeTime','Cal.Utilities.RelativeTime.outputRelativeTime','Cal.Utilities.RelativeTime.outputRelativeTime',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2793,'showRelativeDateExamples','Cal.Utilities.RelativeTime.showRelativeDateExamples','Cal.Utilities.RelativeTime.showRelativeDateExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2794,'datePart','Cal.Utilities.RelativeTime.datePart','Cal.Utilities.RelativeTime.datePart',NULL,'[CALDoc] Extracts a specified component of a date. ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2795,'second','Cal.Utilities.RelativeTime.second','Cal.Utilities.RelativeTime.second',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2796,'minute','Cal.Utilities.RelativeTime.minute','Cal.Utilities.RelativeTime.minute',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2797,'hour','Cal.Utilities.RelativeTime.hour','Cal.Utilities.RelativeTime.hour',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2798,'day','Cal.Utilities.RelativeTime.day','Cal.Utilities.RelativeTime.day',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2799,'month','Cal.Utilities.RelativeTime.month','Cal.Utilities.RelativeTime.month',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2800,'year','Cal.Utilities.RelativeTime.year','Cal.Utilities.RelativeTime.year',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2801,'dayOfWeek','Cal.Utilities.RelativeTime.dayOfWeek','Cal.Utilities.RelativeTime.dayOfWeek',NULL,'[CALDoc] Returns: the day of week that a date occurs on with Sunday = 1, Monday = 2, ..., Saturday = 7.','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2802,'showRelativeDateTimeExamples','Cal.Utilities.RelativeTime.showRelativeDateTimeExamples','Cal.Utilities.RelativeTime.showRelativeDateTimeExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2803,'inputRelativeTime','Cal.Utilities.RelativeTime.inputRelativeTime','Cal.Utilities.RelativeTime.inputRelativeTime',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2804,'fromEnumDayOfWeek','Cal.Utilities.RelativeTime.fromEnumDayOfWeek','Cal.Utilities.RelativeTime.fromEnumDayOfWeek',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2805,'showRelativeTime','Cal.Utilities.RelativeTime.showRelativeTime','Cal.Utilities.RelativeTime.showRelativeTime',NULL,'[CALDoc] shows the time using the format HH:MM:SS','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2806,'showPadded2','Cal.Utilities.RelativeTime.showPadded2','Cal.Utilities.RelativeTime.showPadded2',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2807,'timeToHourMinuteSecond','Cal.Utilities.RelativeTime.timeToHourMinuteSecond','Cal.Utilities.RelativeTime.timeToHourMinuteSecond',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2808,'dateAddExamples','Cal.Utilities.RelativeTime.dateAddExamples','Cal.Utilities.RelativeTime.dateAddExamples',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2809,'makeRelativeDateTimeValue','Cal.Utilities.RelativeTime.makeRelativeDateTimeValue','Cal.Utilities.RelativeTime.makeRelativeDateTimeValue',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2810,'makeRelativeTimeValue','Cal.Utilities.RelativeTime.makeRelativeTimeValue','Cal.Utilities.RelativeTime.makeRelativeTimeValue',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2811,'makeRelativeDateTimeValue2','Cal.Utilities.RelativeTime.makeRelativeDateTimeValue2','Cal.Utilities.RelativeTime.makeRelativeDateTimeValue2',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2812,'toDateTime','Cal.Utilities.RelativeTime.toDateTime','Cal.Utilities.RelativeTime.toDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2813,'dateAdd','Cal.Utilities.RelativeTime.dateAdd','Cal.Utilities.RelativeTime.dateAdd',NULL,'[CALDoc] <code>dateAdd</code> is used to add intervals of time to a <code>RelativeDateTime</code> value. ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2814,'addSecondsToDateTime','Cal.Utilities.RelativeTime.addSecondsToDateTime','Cal.Utilities.RelativeTime.addSecondsToDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2815,'normalizeDateTime','Cal.Utilities.RelativeTime.normalizeDateTime','Cal.Utilities.RelativeTime.normalizeDateTime',NULL,'[CALDoc] Normalizes a <code>RelativeDateTime</code> value so that the internal representation of the time part in seconds satisfies\n<code>0 &lt;= s &lt; maxNSecondsInDay</code>, with the date part correspondingly adjusted.','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2816,'maxNSecondsInDay','Cal.Utilities.RelativeTime.maxNSecondsInDay','Cal.Utilities.RelativeTime.maxNSecondsInDay',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2817,'divRem','Cal.Utilities.RelativeTime.divRem','Cal.Utilities.RelativeTime.divRem',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2818,'addDaysToDate','Cal.Utilities.RelativeTime.addDaysToDate','Cal.Utilities.RelativeTime.addDaysToDate',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2819,'div','Cal.Utilities.RelativeTime.div','Cal.Utilities.RelativeTime.div',NULL,'[CALDoc] Integer division that rounds to the smallest value. e.g. <code>div (-24) 5 = -5</code>','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2820,'rem','Cal.Utilities.RelativeTime.rem','Cal.Utilities.RelativeTime.rem',NULL,'[CALDoc] The remainder that corresponds to <code>div</code>.','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2821,'makeRelativeDateValue','Cal.Utilities.RelativeTime.makeRelativeDateValue','Cal.Utilities.RelativeTime.makeRelativeDateValue',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2822,'daysInMonth2','Cal.Utilities.RelativeTime.daysInMonth2','Cal.Utilities.RelativeTime.daysInMonth2',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2823,'daysInMonth','Cal.Utilities.RelativeTime.daysInMonth','Cal.Utilities.RelativeTime.daysInMonth',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2824,'isLeapYear','Cal.Utilities.RelativeTime.isLeapYear','Cal.Utilities.RelativeTime.isLeapYear',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2825,'dateToYearMonthDay','Cal.Utilities.RelativeTime.dateToYearMonthDay','Cal.Utilities.RelativeTime.dateToYearMonthDay',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2826,'getTimePart','Cal.Utilities.RelativeTime.getTimePart','Cal.Utilities.RelativeTime.getTimePart',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2827,'getDatePart','Cal.Utilities.RelativeTime.getDatePart','Cal.Utilities.RelativeTime.getDatePart',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2828,'getSecond','Cal.Utilities.RelativeTime.getSecond','Cal.Utilities.RelativeTime.getSecond',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2829,'getMinute','Cal.Utilities.RelativeTime.getMinute','Cal.Utilities.RelativeTime.getMinute',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2830,'getHour','Cal.Utilities.RelativeTime.getHour','Cal.Utilities.RelativeTime.getHour',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2831,'getDay','Cal.Utilities.RelativeTime.getDay','Cal.Utilities.RelativeTime.getDay',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2832,'getMonth','Cal.Utilities.RelativeTime.getMonth','Cal.Utilities.RelativeTime.getMonth',NULL,'[CALDoc] ','2008-04-20 18:17:13','2008-04-20 18:17:13'),(2833,'getYear','Cal.Utilities.RelativeTime.getYear','Cal.Utilities.RelativeTime.getYear',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2834,'makeJDate','Cal.Utilities.RelativeTime.makeJDate','Cal.Utilities.RelativeTime.makeJDate',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2835,'getInternalTime','Cal.Utilities.RelativeTime.getInternalTime','Cal.Utilities.RelativeTime.getInternalTime',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2836,'getInternalDate','Cal.Utilities.RelativeTime.getInternalDate','Cal.Utilities.RelativeTime.getInternalDate',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2837,'relativeTime','Cal.Utilities.RelativeTime.relativeTime','Cal.Utilities.RelativeTime.relativeTime',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2838,'relativeDate','Cal.Utilities.RelativeTime.relativeDate','Cal.Utilities.RelativeTime.relativeDate',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2839,'RelativeDateTime','Cal.Utilities.RelativeTime.RelativeDateTime','Cal.Utilities.RelativeTime.RelativeDateTime',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2840,'Sunday','Cal.Utilities.RelativeTime.Sunday','Cal.Utilities.RelativeTime.Sunday',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2841,'Monday','Cal.Utilities.RelativeTime.Monday','Cal.Utilities.RelativeTime.Monday',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2842,'Tuesday','Cal.Utilities.RelativeTime.Tuesday','Cal.Utilities.RelativeTime.Tuesday',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2843,'Wednesday','Cal.Utilities.RelativeTime.Wednesday','Cal.Utilities.RelativeTime.Wednesday',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2844,'Thursday','Cal.Utilities.RelativeTime.Thursday','Cal.Utilities.RelativeTime.Thursday',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2845,'Friday','Cal.Utilities.RelativeTime.Friday','Cal.Utilities.RelativeTime.Friday',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2846,'Saturday','Cal.Utilities.RelativeTime.Saturday','Cal.Utilities.RelativeTime.Saturday',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2847,'WeekInWhichJan1Occurs','Cal.Utilities.RelativeTime.WeekInWhichJan1Occurs','Cal.Utilities.RelativeTime.WeekInWhichJan1Occurs',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2848,'FirstWeekWithAtLeast4DaysInNewYear','Cal.Utilities.RelativeTime.FirstWeekWithAtLeast4DaysInNewYear','Cal.Utilities.RelativeTime.FirstWeekWithAtLeast4DaysInNewYear',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2849,'FirstWeekFullyInNewYear','Cal.Utilities.RelativeTime.FirstWeekFullyInNewYear','Cal.Utilities.RelativeTime.FirstWeekFullyInNewYear',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2850,'YearAdd','Cal.Utilities.RelativeTime.YearAdd','Cal.Utilities.RelativeTime.YearAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2851,'QuarterAdd','Cal.Utilities.RelativeTime.QuarterAdd','Cal.Utilities.RelativeTime.QuarterAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2852,'MonthAdd','Cal.Utilities.RelativeTime.MonthAdd','Cal.Utilities.RelativeTime.MonthAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2853,'DayAdd','Cal.Utilities.RelativeTime.DayAdd','Cal.Utilities.RelativeTime.DayAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2854,'WeekAdd','Cal.Utilities.RelativeTime.WeekAdd','Cal.Utilities.RelativeTime.WeekAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2855,'HourAdd','Cal.Utilities.RelativeTime.HourAdd','Cal.Utilities.RelativeTime.HourAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2856,'MinuteAdd','Cal.Utilities.RelativeTime.MinuteAdd','Cal.Utilities.RelativeTime.MinuteAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2857,'SecondAdd','Cal.Utilities.RelativeTime.SecondAdd','Cal.Utilities.RelativeTime.SecondAdd',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2858,'YearDiff','Cal.Utilities.RelativeTime.YearDiff','Cal.Utilities.RelativeTime.YearDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2859,'QuarterDiff','Cal.Utilities.RelativeTime.QuarterDiff','Cal.Utilities.RelativeTime.QuarterDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2860,'MonthDiff','Cal.Utilities.RelativeTime.MonthDiff','Cal.Utilities.RelativeTime.MonthDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2861,'DayDiff','Cal.Utilities.RelativeTime.DayDiff','Cal.Utilities.RelativeTime.DayDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2862,'WeekDiff','Cal.Utilities.RelativeTime.WeekDiff','Cal.Utilities.RelativeTime.WeekDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2863,'FirstDayOfWeekDiff','Cal.Utilities.RelativeTime.FirstDayOfWeekDiff','Cal.Utilities.RelativeTime.FirstDayOfWeekDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2864,'HourDiff','Cal.Utilities.RelativeTime.HourDiff','Cal.Utilities.RelativeTime.HourDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2865,'MinuteDiff','Cal.Utilities.RelativeTime.MinuteDiff','Cal.Utilities.RelativeTime.MinuteDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2866,'SecondDiff','Cal.Utilities.RelativeTime.SecondDiff','Cal.Utilities.RelativeTime.SecondDiff',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2867,'YearPart','Cal.Utilities.RelativeTime.YearPart','Cal.Utilities.RelativeTime.YearPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2868,'QuarterPart','Cal.Utilities.RelativeTime.QuarterPart','Cal.Utilities.RelativeTime.QuarterPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2869,'MonthPart','Cal.Utilities.RelativeTime.MonthPart','Cal.Utilities.RelativeTime.MonthPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2870,'DayOfYearPart','Cal.Utilities.RelativeTime.DayOfYearPart','Cal.Utilities.RelativeTime.DayOfYearPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2871,'DayPart','Cal.Utilities.RelativeTime.DayPart','Cal.Utilities.RelativeTime.DayPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2872,'DayOfWeekPart','Cal.Utilities.RelativeTime.DayOfWeekPart','Cal.Utilities.RelativeTime.DayOfWeekPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2873,'WeekOfYearPart','Cal.Utilities.RelativeTime.WeekOfYearPart','Cal.Utilities.RelativeTime.WeekOfYearPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2874,'HourPart','Cal.Utilities.RelativeTime.HourPart','Cal.Utilities.RelativeTime.HourPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2875,'MinutePart','Cal.Utilities.RelativeTime.MinutePart','Cal.Utilities.RelativeTime.MinutePart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2876,'SecondPart','Cal.Utilities.RelativeTime.SecondPart','Cal.Utilities.RelativeTime.SecondPart',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2877,'rgbToColor','Cal.Graphics.Color.rgbToColor','Cal.Graphics.Color.rgbToColor',NULL,'[CALDoc] Constructs a <code>Color</code> value from its constituent RGB values, as represented as a triple.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2878,'silver','Cal.Graphics.Color.silver','Cal.Graphics.Color.silver',NULL,'[CALDoc] The <code>Color</code> value for the color silver.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2879,'green','Cal.Graphics.Color.green','Cal.Graphics.Color.green',NULL,'[CALDoc] The <code>Color</code> value for the color green.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2880,'colorToRGB','Cal.Graphics.Color.colorToRGB','Cal.Graphics.Color.colorToRGB',NULL,'[CALDoc] Returns a triple of the constituent RGB values that make up the specified <code>Color</code> value.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2881,'yellow','Cal.Graphics.Color.yellow','Cal.Graphics.Color.yellow',NULL,'[CALDoc] The <code>Color</code> value for the color yellow.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2882,'gray','Cal.Graphics.Color.gray','Cal.Graphics.Color.gray',NULL,'[CALDoc] The <code>Color</code> value for the color gray.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2883,'showColor','Cal.Graphics.Color.showColor','Cal.Graphics.Color.showColor',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2884,'colorToRGBA','Cal.Graphics.Color.colorToRGBA','Cal.Graphics.Color.colorToRGBA',NULL,'[CALDoc] Returns a 4-tuple of the constituent RGB and alpha values that make up the specified <code>Color</code> value.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2885,'olive','Cal.Graphics.Color.olive','Cal.Graphics.Color.olive',NULL,'[CALDoc] The <code>Color</code> value for the color olive.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2886,'white','Cal.Graphics.Color.white','Cal.Graphics.Color.white',NULL,'[CALDoc] The <code>Color</code> value for the color white.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2887,'blue','Cal.Graphics.Color.blue','Cal.Graphics.Color.blue',NULL,'[CALDoc] The <code>Color</code> value for the color blue.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2888,'rgbaToColor','Cal.Graphics.Color.rgbaToColor','Cal.Graphics.Color.rgbaToColor',NULL,'[CALDoc] Constructs a <code>Color</code> value representing a translucent color from its constituent RGB and alpha values, as represented as a 4-tuple.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2889,'lime','Cal.Graphics.Color.lime','Cal.Graphics.Color.lime',NULL,'[CALDoc] The <code>Color</code> value for the color lime.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2890,'outputColourToJObject','Cal.Graphics.Color.outputColourToJObject','Cal.Graphics.Color.outputColourToJObject',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2891,'outputColor','Cal.Graphics.Color.outputColor','Cal.Graphics.Color.outputColor',NULL,'[CALDoc] Converts a <code>Color</code> value to a <code>JColor</code> value.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2892,'teal','Cal.Graphics.Color.teal','Cal.Graphics.Color.teal',NULL,'[CALDoc] The <code>Color</code> value for the color teal.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2893,'black','Cal.Graphics.Color.black','Cal.Graphics.Color.black',NULL,'[CALDoc] The <code>Color</code> value for the color black.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2894,'fuchsia','Cal.Graphics.Color.fuchsia','Cal.Graphics.Color.fuchsia',NULL,'[CALDoc] The <code>Color</code> value for the color fuchsia.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2895,'maroon','Cal.Graphics.Color.maroon','Cal.Graphics.Color.maroon',NULL,'[CALDoc] The <code>Color</code> value for the color maroon.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2896,'navy','Cal.Graphics.Color.navy','Cal.Graphics.Color.navy',NULL,'[CALDoc] The <code>Color</code> value for the color navy.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2897,'purple','Cal.Graphics.Color.purple','Cal.Graphics.Color.purple',NULL,'[CALDoc] The <code>Color</code> value for the color purple.','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2898,'inputColourFromJObject','Cal.Graphics.Color.inputColourFromJObject','Cal.Graphics.Color.inputColourFromJObject',NULL,'[CALDoc] ','2008-04-20 18:17:14','2008-04-20 18:17:14'),(2899,'inputColor','Cal.Graphics.Color.inputColor','Cal.Graphics.Color.inputColor',NULL,'[CALDoc] Converts a <code>JColor</code> value to a <code>Color</code> value.','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2900,'jColor_copy','Cal.Graphics.Color.jColor_copy','Cal.Graphics.Color.jColor_copy',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2901,'aqua','Cal.Graphics.Color.aqua','Cal.Graphics.Color.aqua',NULL,'[CALDoc] The <code>Color</code> value for the color aqua.','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2902,'red','Cal.Graphics.Color.red','Cal.Graphics.Color.red',NULL,'[CALDoc] The <code>Color</code> value for the color red.','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2903,'makeColor','Cal.Graphics.Color.makeColor','Cal.Graphics.Color.makeColor',NULL,'[CALDoc] Constructs a <code>Color</code> value from its constituent RGB values in the range (0 - 255).','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2904,'makeTranslucentColor','Cal.Graphics.Color.makeTranslucentColor','Cal.Graphics.Color.makeTranslucentColor',NULL,'[CALDoc] Constructs a <code>Color</code> value representing a translucent color from its constituent RGB and alpha values in the range (0 - 255).','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2905,'getAlphaFromColour','Cal.Graphics.Color.getAlphaFromColour','Cal.Graphics.Color.getAlphaFromColour',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2906,'getBlueFromColour','Cal.Graphics.Color.getBlueFromColour','Cal.Graphics.Color.getBlueFromColour',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2907,'getGreenFromColour','Cal.Graphics.Color.getGreenFromColour','Cal.Graphics.Color.getGreenFromColour',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2908,'getRedFromColour','Cal.Graphics.Color.getRedFromColour','Cal.Graphics.Color.getRedFromColour',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2909,'jColor_getAlpha','Cal.Graphics.Color.jColor_getAlpha','Cal.Graphics.Color.jColor_getAlpha',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2910,'jColor_getBlue','Cal.Graphics.Color.jColor_getBlue','Cal.Graphics.Color.jColor_getBlue',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2911,'jColor_getGreen','Cal.Graphics.Color.jColor_getGreen','Cal.Graphics.Color.jColor_getGreen',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2912,'jColor_getRed','Cal.Graphics.Color.jColor_getRed','Cal.Graphics.Color.jColor_getRed',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2913,'colourToJColor','Cal.Graphics.Color.colourToJColor','Cal.Graphics.Color.colourToJColor',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2914,'jColorToColour','Cal.Graphics.Color.jColorToColour','Cal.Graphics.Color.jColorToColour',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2915,'jColor_equals','Cal.Graphics.Color.jColor_equals','Cal.Graphics.Color.jColor_equals',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2916,'jColor_new','Cal.Graphics.Color.jColor_new','Cal.Graphics.Color.jColor_new',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2917,'getTableName','Cal.Data.DatabaseMetadata.getTableName','Cal.Data.DatabaseMetadata.getTableName',NULL,'[CALDoc] A convenience function for getting the table name of the given table','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2918,'getDatabaseNameFromReference','Cal.Data.DatabaseMetadata.getDatabaseNameFromReference','Cal.Data.DatabaseMetadata.getDatabaseNameFromReference',NULL,'[CALDoc] Returns the database name portion from the reference','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2919,'buildTableReferenceFromXmlAttribute','Cal.Data.DatabaseMetadata.buildTableReferenceFromXmlAttribute','Cal.Data.DatabaseMetadata.buildTableReferenceFromXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2920,'inputConnectionSettings','Cal.Data.DatabaseMetadata.inputConnectionSettings','Cal.Data.DatabaseMetadata.inputConnectionSettings',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2921,'getTableKeyFields','Cal.Data.DatabaseMetadata.getTableKeyFields','Cal.Data.DatabaseMetadata.getTableKeyFields',NULL,'[CALDoc] A convenience function for returning the key fields in the given table','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2922,'outputTableReference','Cal.Data.DatabaseMetadata.outputTableReference','Cal.Data.DatabaseMetadata.outputTableReference',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2923,'outputTableReferenceXml','Cal.Data.DatabaseMetadata.outputTableReferenceXml','Cal.Data.DatabaseMetadata.outputTableReferenceXml',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2924,'buildTableReferenceFromXml','Cal.Data.DatabaseMetadata.buildTableReferenceFromXml','Cal.Data.DatabaseMetadata.buildTableReferenceFromXml',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2925,'showTableReference','Cal.Data.DatabaseMetadata.showTableReference','Cal.Data.DatabaseMetadata.showTableReference',NULL,'[CALDoc] Outputs a <code>TableReference</code> as a string','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2926,'businessOrgTableRef','Cal.Data.DatabaseMetadata.businessOrgTableRef','Cal.Data.DatabaseMetadata.businessOrgTableRef',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2927,'getFieldComment','Cal.Data.DatabaseMetadata.getFieldComment','Cal.Data.DatabaseMetadata.getFieldComment',NULL,'[CALDoc] Returns the comment for a field description.','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2928,'noXmlAttrForFieldDescriptionWithName','Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescriptionWithName','Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescriptionWithName',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2929,'isForeignKeyConstraint','Cal.Data.DatabaseMetadata.isForeignKeyConstraint','Cal.Data.DatabaseMetadata.isForeignKeyConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2930,'factsTable','Cal.Data.DatabaseMetadata.factsTable','Cal.Data.DatabaseMetadata.factsTable',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2931,'getPrimaryKeyFieldNames','Cal.Data.DatabaseMetadata.getPrimaryKeyFieldNames','Cal.Data.DatabaseMetadata.getPrimaryKeyFieldNames',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2932,'buildXmlForTableReferenceWithName','Cal.Data.DatabaseMetadata.buildXmlForTableReferenceWithName','Cal.Data.DatabaseMetadata.buildXmlForTableReferenceWithName',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2933,'buildXmlAttrForConnectionSettingsWithName','Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettingsWithName','Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettingsWithName',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2934,'showTableDescription','Cal.Data.DatabaseMetadata.showTableDescription','Cal.Data.DatabaseMetadata.showTableDescription',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2935,'inputTableReferenceXml','Cal.Data.DatabaseMetadata.inputTableReferenceXml','Cal.Data.DatabaseMetadata.inputTableReferenceXml',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2936,'buildXmlForConnectionSettingsWithName','Cal.Data.DatabaseMetadata.buildXmlForConnectionSettingsWithName','Cal.Data.DatabaseMetadata.buildXmlForConnectionSettingsWithName',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2937,'buildFieldDescriptionFromXml','Cal.Data.DatabaseMetadata.buildFieldDescriptionFromXml','Cal.Data.DatabaseMetadata.buildFieldDescriptionFromXml',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2938,'getTableConstraints','Cal.Data.DatabaseMetadata.getTableConstraints','Cal.Data.DatabaseMetadata.getTableConstraints',NULL,'[CALDoc] Returns the table constraints applied to the given table','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2939,'isFieldNullable','Cal.Data.DatabaseMetadata.isFieldNullable','Cal.Data.DatabaseMetadata.isFieldNullable',NULL,'[CALDoc] Returns true if the given field is nullable','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2940,'noXmlAttrForFieldDescription','Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescription','Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescription',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2941,'outputConnectionSettingsXml','Cal.Data.DatabaseMetadata.outputConnectionSettingsXml','Cal.Data.DatabaseMetadata.outputConnectionSettingsXml',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2942,'getTableFields','Cal.Data.DatabaseMetadata.getTableFields','Cal.Data.DatabaseMetadata.getTableFields',NULL,'[CALDoc] Returns the field contained in the given table','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2943,'outputTableConstraint','Cal.Data.DatabaseMetadata.outputTableConstraint','Cal.Data.DatabaseMetadata.outputTableConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2944,'buildXmlAttrForTableReferenceWithName','Cal.Data.DatabaseMetadata.buildXmlAttrForTableReferenceWithName','Cal.Data.DatabaseMetadata.buildXmlAttrForTableReferenceWithName',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2945,'outputFieldDescription','Cal.Data.DatabaseMetadata.outputFieldDescription','Cal.Data.DatabaseMetadata.outputFieldDescription',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2946,'buildXmlAttrForTableReference','Cal.Data.DatabaseMetadata.buildXmlAttrForTableReference','Cal.Data.DatabaseMetadata.buildXmlAttrForTableReference',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2947,'getFieldName','Cal.Data.DatabaseMetadata.getFieldName','Cal.Data.DatabaseMetadata.getFieldName',NULL,'[CALDoc] Returns the name of the given field','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2948,'getTableReference','Cal.Data.DatabaseMetadata.getTableReference','Cal.Data.DatabaseMetadata.getTableReference',NULL,'[CALDoc] Returns the <code>TableReference</code> that can be used to reference this table','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2949,'showTableConstraint','Cal.Data.DatabaseMetadata.showTableConstraint','Cal.Data.DatabaseMetadata.showTableConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2950,'makeDatabaseReference','Cal.Data.DatabaseMetadata.makeDatabaseReference','Cal.Data.DatabaseMetadata.makeDatabaseReference',NULL,'[CALDoc] Makes a new database reference','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2951,'buildXmlAttrForConnectionSettings','Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettings','Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettings',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2952,'getFieldDataType','Cal.Data.DatabaseMetadata.getFieldDataType','Cal.Data.DatabaseMetadata.getFieldDataType',NULL,'[CALDoc] Returns the SQL data type of the given field.','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2953,'noFieldDescriptionFromXmlAttribute','Cal.Data.DatabaseMetadata.noFieldDescriptionFromXmlAttribute','Cal.Data.DatabaseMetadata.noFieldDescriptionFromXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2954,'jConnectionSettingsToConnectionSettings','Cal.Data.DatabaseMetadata.jConnectionSettingsToConnectionSettings','Cal.Data.DatabaseMetadata.jConnectionSettingsToConnectionSettings',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2955,'factsTableRef','Cal.Data.DatabaseMetadata.factsTableRef','Cal.Data.DatabaseMetadata.factsTableRef',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2956,'buildXmlForFieldDescriptionWithName','Cal.Data.DatabaseMetadata.buildXmlForFieldDescriptionWithName','Cal.Data.DatabaseMetadata.buildXmlForFieldDescriptionWithName',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2957,'inputConnectionSettingsXml','Cal.Data.DatabaseMetadata.inputConnectionSettingsXml','Cal.Data.DatabaseMetadata.inputConnectionSettingsXml',NULL,'[CALDoc] ','2008-04-20 18:17:15','2008-04-20 18:17:15'),(2958,'buildConnectionSettingsFromXmlAttribute','Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXmlAttribute','Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2959,'makeConnectionSettings','Cal.Data.DatabaseMetadata.makeConnectionSettings','Cal.Data.DatabaseMetadata.makeConnectionSettings',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2960,'inputFieldDescriptionXml','Cal.Data.DatabaseMetadata.inputFieldDescriptionXml','Cal.Data.DatabaseMetadata.inputFieldDescriptionXml',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2961,'outputFieldDescriptionXml','Cal.Data.DatabaseMetadata.outputFieldDescriptionXml','Cal.Data.DatabaseMetadata.outputFieldDescriptionXml',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2962,'factsTableFields','Cal.Data.DatabaseMetadata.factsTableFields','Cal.Data.DatabaseMetadata.factsTableFields',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2963,'buildConnectionSettingsFromXml','Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXml','Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXml',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2964,'isUniqueConstraint','Cal.Data.DatabaseMetadata.isUniqueConstraint','Cal.Data.DatabaseMetadata.isUniqueConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2965,'elementGrandChildText','Cal.Data.DatabaseMetadata.elementGrandChildText','Cal.Data.DatabaseMetadata.elementGrandChildText',NULL,'[CALDoc] This function attempts to locate a child element under the given XML element\nwhich has the same name as the specified element name.  ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2966,'outputTableDescription','Cal.Data.DatabaseMetadata.outputTableDescription','Cal.Data.DatabaseMetadata.outputTableDescription',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2967,'inputTableReference','Cal.Data.DatabaseMetadata.inputTableReference','Cal.Data.DatabaseMetadata.inputTableReference',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2968,'isPrimaryKeyConstraint','Cal.Data.DatabaseMetadata.isPrimaryKeyConstraint','Cal.Data.DatabaseMetadata.isPrimaryKeyConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2969,'regionTable','Cal.Data.DatabaseMetadata.regionTable','Cal.Data.DatabaseMetadata.regionTable',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2970,'regionTableConstraints','Cal.Data.DatabaseMetadata.regionTableConstraints','Cal.Data.DatabaseMetadata.regionTableConstraints',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2971,'regionTableFields','Cal.Data.DatabaseMetadata.regionTableFields','Cal.Data.DatabaseMetadata.regionTableFields',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2972,'makeFieldDescription','Cal.Data.DatabaseMetadata.makeFieldDescription','Cal.Data.DatabaseMetadata.makeFieldDescription',NULL,'[CALDoc] Constructor function','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2973,'makeFieldDescriptionWithComment','Cal.Data.DatabaseMetadata.makeFieldDescriptionWithComment','Cal.Data.DatabaseMetadata.makeFieldDescriptionWithComment',NULL,'[CALDoc] Constructor function','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2974,'regionTableRef','Cal.Data.DatabaseMetadata.regionTableRef','Cal.Data.DatabaseMetadata.regionTableRef',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2975,'makeTableReference','Cal.Data.DatabaseMetadata.makeTableReference','Cal.Data.DatabaseMetadata.makeTableReference',NULL,'[CALDoc] Makes a new table reference','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2976,'makeTableDescription','Cal.Data.DatabaseMetadata.makeTableDescription','Cal.Data.DatabaseMetadata.makeTableDescription',NULL,'[CALDoc] Constructor function','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2977,'outputConnectionSettings','Cal.Data.DatabaseMetadata.outputConnectionSettings','Cal.Data.DatabaseMetadata.outputConnectionSettings',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2978,'getTableNameFromReference','Cal.Data.DatabaseMetadata.getTableNameFromReference','Cal.Data.DatabaseMetadata.getTableNameFromReference',NULL,'[CALDoc] Returns the table name portion from the reference','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2979,'jConnectionSettings_password','Cal.Data.DatabaseMetadata.jConnectionSettings_password','Cal.Data.DatabaseMetadata.jConnectionSettings_password',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2980,'jConnectionSettings_username','Cal.Data.DatabaseMetadata.jConnectionSettings_username','Cal.Data.DatabaseMetadata.jConnectionSettings_username',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2981,'jConnectionSettings_database','Cal.Data.DatabaseMetadata.jConnectionSettings_database','Cal.Data.DatabaseMetadata.jConnectionSettings_database',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2982,'jConnectionSettings_port','Cal.Data.DatabaseMetadata.jConnectionSettings_port','Cal.Data.DatabaseMetadata.jConnectionSettings_port',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2983,'jConnectionSettings_server','Cal.Data.DatabaseMetadata.jConnectionSettings_server','Cal.Data.DatabaseMetadata.jConnectionSettings_server',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2984,'jConnectionSettings_new','Cal.Data.DatabaseMetadata.jConnectionSettings_new','Cal.Data.DatabaseMetadata.jConnectionSettings_new',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2985,'makeJForeignKeyConstraint','Cal.Data.DatabaseMetadata.makeJForeignKeyConstraint','Cal.Data.DatabaseMetadata.makeJForeignKeyConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2986,'makeJUniquenessConstraint','Cal.Data.DatabaseMetadata.makeJUniquenessConstraint','Cal.Data.DatabaseMetadata.makeJUniquenessConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2987,'makeJPrimaryKeyConstraint','Cal.Data.DatabaseMetadata.makeJPrimaryKeyConstraint','Cal.Data.DatabaseMetadata.makeJPrimaryKeyConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2988,'makeJFieldDescription','Cal.Data.DatabaseMetadata.makeJFieldDescription','Cal.Data.DatabaseMetadata.makeJFieldDescription',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2989,'makeJTableDescription','Cal.Data.DatabaseMetadata.makeJTableDescription','Cal.Data.DatabaseMetadata.makeJTableDescription',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2990,'jGetTableName','Cal.Data.DatabaseMetadata.jGetTableName','Cal.Data.DatabaseMetadata.jGetTableName',NULL,'[CALDoc] Allow a TableReference to be input from Java.','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2991,'makeJTableReference','Cal.Data.DatabaseMetadata.makeJTableReference','Cal.Data.DatabaseMetadata.makeJTableReference',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2992,'DatabaseReference','Cal.Data.DatabaseMetadata.DatabaseReference','Cal.Data.DatabaseMetadata.DatabaseReference',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2993,'TableReference','Cal.Data.DatabaseMetadata.TableReference','Cal.Data.DatabaseMetadata.TableReference',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2994,'TableDescription','Cal.Data.DatabaseMetadata.TableDescription','Cal.Data.DatabaseMetadata.TableDescription',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2995,'FieldDescription','Cal.Data.DatabaseMetadata.FieldDescription','Cal.Data.DatabaseMetadata.FieldDescription',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2996,'PrimaryKeyConstraint','Cal.Data.DatabaseMetadata.PrimaryKeyConstraint','Cal.Data.DatabaseMetadata.PrimaryKeyConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2997,'UniqueConstraint','Cal.Data.DatabaseMetadata.UniqueConstraint','Cal.Data.DatabaseMetadata.UniqueConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2998,'ForeignKeyConstraint','Cal.Data.DatabaseMetadata.ForeignKeyConstraint','Cal.Data.DatabaseMetadata.ForeignKeyConstraint',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(2999,'ConnectionSettings','Cal.Data.DatabaseMetadata.ConnectionSettings','Cal.Data.DatabaseMetadata.ConnectionSettings',NULL,'[CALDoc] ','2008-04-20 18:17:16','2008-04-20 18:17:16'),(3000,'resultSetText','Cal.Data.DataGems.resultSetText','Cal.Data.DataGems.resultSetText',NULL,'[CALDoc] Returns a textual table containing the <code>ResultSet</code> values.\n','2008-04-20 18:17:16','2008-04-20 18:17:16'),(3001,'extractLongByName','Cal.Data.DataGems.extractLongByName','Cal.Data.DataGems.extractLongByName',NULL,'[CALDoc] Extracts an <code>Long</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:16','2008-04-20 18:17:16'),(3002,'extractDecimal','Cal.Data.DataGems.extractDecimal','Cal.Data.DataGems.extractDecimal',NULL,'[CALDoc] Extracts a <code>Decimal</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:16','2008-04-20 18:17:16'),(3003,'extractObject','Cal.Data.DataGems.extractObject','Cal.Data.DataGems.extractObject',NULL,'[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:16','2008-04-20 18:17:16'),(3004,'extractTuple3','Cal.Data.DataGems.extractTuple3','Cal.Data.DataGems.extractTuple3',NULL,'[CALDoc] Retrieves 3 values from each row in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3005,'extractMaybeDecimal','Cal.Data.DataGems.extractMaybeDecimal','Cal.Data.DataGems.extractMaybeDecimal',NULL,'[CALDoc] Extracts a <code>Maybe</code> <code>Decimal</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3006,'extractTuple7','Cal.Data.DataGems.extractTuple7','Cal.Data.DataGems.extractTuple7',NULL,'[CALDoc] Retrieves 7 values from each row in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3007,'extractTime','Cal.Data.DataGems.extractTime','Cal.Data.DataGems.extractTime',NULL,'[CALDoc] Extracts a <code>Time</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3008,'extractMaybeBytes','Cal.Data.DataGems.extractMaybeBytes','Cal.Data.DataGems.extractMaybeBytes',NULL,'[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3009,'extractMaybeString','Cal.Data.DataGems.extractMaybeString','Cal.Data.DataGems.extractMaybeString',NULL,'[CALDoc] Extracts a <code>Maybe</code> <code>String</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3010,'extractBooleanWithDefault','Cal.Data.DataGems.extractBooleanWithDefault','Cal.Data.DataGems.extractBooleanWithDefault',NULL,'[CALDoc] Extracts a <code>Boolean</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3011,'bindIntToPreparedStatement','Cal.Data.DataGems.bindIntToPreparedStatement','Cal.Data.DataGems.bindIntToPreparedStatement',NULL,'[CALDoc] Binds an <code>Int</code> value to the given prepared statement','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3012,'extractStringByName','Cal.Data.DataGems.extractStringByName','Cal.Data.DataGems.extractStringByName',NULL,'[CALDoc] Extracts a <code>String</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3013,'extractTuple5','Cal.Data.DataGems.extractTuple5','Cal.Data.DataGems.extractTuple5',NULL,'[CALDoc] Retrieves 5 values from each row in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3014,'tableDescription','Cal.Data.DataGems.tableDescription','Cal.Data.DataGems.tableDescription',NULL,'[CALDoc] Returns the description for the specified table.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3015,'extractDecimalWithDefault','Cal.Data.DataGems.extractDecimalWithDefault','Cal.Data.DataGems.extractDecimalWithDefault',NULL,'[CALDoc] Extracts a <code>Decimal</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3016,'jdbcGetConnectionTableNames','Cal.Data.DataGems.jdbcGetConnectionTableNames','Cal.Data.DataGems.jdbcGetConnectionTableNames',NULL,'[CALDoc] Retrieves a list of table names from the connection.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3017,'bindStringToPreparedStatement','Cal.Data.DataGems.bindStringToPreparedStatement','Cal.Data.DataGems.bindStringToPreparedStatement',NULL,'[CALDoc] Binds a <code>String</code> value to the given prepared statement','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3018,'extractMaybeLong','Cal.Data.DataGems.extractMaybeLong','Cal.Data.DataGems.extractMaybeLong',NULL,'[CALDoc] Extracts an <code>Maybe</code> <code>Long</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3019,'dynamicDataFromResultSet','Cal.Data.DataGems.dynamicDataFromResultSet','Cal.Data.DataGems.dynamicDataFromResultSet',NULL,'[CALDoc] Fetches all the data from a <code>ResultSet</code> as <code>Dynamic</code> values.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3020,'extractObjectWithDefault','Cal.Data.DataGems.extractObjectWithDefault','Cal.Data.DataGems.extractObjectWithDefault',NULL,'[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3021,'extractMaybeObject','Cal.Data.DataGems.extractMaybeObject','Cal.Data.DataGems.extractMaybeObject',NULL,'[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3022,'extractBooleanByName','Cal.Data.DataGems.extractBooleanByName','Cal.Data.DataGems.extractBooleanByName',NULL,'[CALDoc] Extracts a <code>Boolean</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3023,'extractArray','Cal.Data.DataGems.extractArray','Cal.Data.DataGems.extractArray',NULL,'[CALDoc] Retrieves an array of values (using the same extractor) from each row in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3024,'intArrayToJIntArray','Cal.Data.DataGems.intArrayToJIntArray','Cal.Data.DataGems.intArrayToJIntArray',NULL,'[CALDoc] ','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3025,'extractBytes','Cal.Data.DataGems.extractBytes','Cal.Data.DataGems.extractBytes',NULL,'[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3026,'extractMaybeInt','Cal.Data.DataGems.extractMaybeInt','Cal.Data.DataGems.extractMaybeInt',NULL,'[CALDoc] Extracts an <code>Maybe</code> <code>Int</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3027,'resultSetInfo','Cal.Data.DataGems.resultSetInfo','Cal.Data.DataGems.resultSetInfo',NULL,'[CALDoc] Returns the names and value types of the columns in a <code>ResultSet</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3028,'extractString','Cal.Data.DataGems.extractString','Cal.Data.DataGems.extractString',NULL,'[CALDoc] Extracts a <code>String</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3029,'bindBooleanToPreparedStatement','Cal.Data.DataGems.bindBooleanToPreparedStatement','Cal.Data.DataGems.bindBooleanToPreparedStatement',NULL,'[CALDoc] Binds a <code>Boolean</code> value to the given prepared statement','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3030,'extractIntByName','Cal.Data.DataGems.extractIntByName','Cal.Data.DataGems.extractIntByName',NULL,'[CALDoc] Extracts an <code>Int</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3031,'extractBytesWithDefault','Cal.Data.DataGems.extractBytesWithDefault','Cal.Data.DataGems.extractBytesWithDefault',NULL,'[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3032,'extractPartialArray','Cal.Data.DataGems.extractPartialArray','Cal.Data.DataGems.extractPartialArray',NULL,'[CALDoc] Retrieves an array of some values (using the same extractor) from each row in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3033,'preparedStatementExecuteBatch','Cal.Data.DataGems.preparedStatementExecuteBatch','Cal.Data.DataGems.preparedStatementExecuteBatch',NULL,'[CALDoc] Executes the given batched prepared statement.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3034,'extractLong','Cal.Data.DataGems.extractLong','Cal.Data.DataGems.extractLong',NULL,'[CALDoc] Extracts an <code>Long</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3035,'bindNullToPreparedStatement','Cal.Data.DataGems.bindNullToPreparedStatement','Cal.Data.DataGems.bindNullToPreparedStatement',NULL,'[CALDoc] Binds a null value to the given prepared statement','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3036,'extractRelativeDate','Cal.Data.DataGems.extractRelativeDate','Cal.Data.DataGems.extractRelativeDate',NULL,'[CALDoc] Extracts a <code>RelativeTime.RelativeDate</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3037,'extractDate','Cal.Data.DataGems.extractDate','Cal.Data.DataGems.extractDate',NULL,'[CALDoc] Extracts a <code>RelativeTime.JDate</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3038,'bindDoubleToPreparedStatement','Cal.Data.DataGems.bindDoubleToPreparedStatement','Cal.Data.DataGems.bindDoubleToPreparedStatement',NULL,'[CALDoc] Binds a <code>Double</code> value to the given prepared statement','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3039,'columnNames','Cal.Data.DataGems.columnNames','Cal.Data.DataGems.columnNames',NULL,'[CALDoc] Returns the names of the <code>ResultSet</code> columns.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3040,'extractDateWithDefault','Cal.Data.DataGems.extractDateWithDefault','Cal.Data.DataGems.extractDateWithDefault',NULL,'[CALDoc] Extracts a <code>RelativeTime.JDate</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3041,'extractDoubleByName','Cal.Data.DataGems.extractDoubleByName','Cal.Data.DataGems.extractDoubleByName',NULL,'[CALDoc] Extracts a <code>Double</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3042,'extractList','Cal.Data.DataGems.extractList','Cal.Data.DataGems.extractList',NULL,'[CALDoc] Retrieves a list of values (using the same extractor) from each row in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3043,'extractDecimalByName','Cal.Data.DataGems.extractDecimalByName','Cal.Data.DataGems.extractDecimalByName',NULL,'[CALDoc] Extracts a <code>Decimal</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3044,'executeBatch','Cal.Data.DataGems.executeBatch','Cal.Data.DataGems.executeBatch',NULL,'[CALDoc] Executes a batch of operations on the database connection.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3045,'jdbcGetConnectionTableNamesWithFilters','Cal.Data.DataGems.jdbcGetConnectionTableNamesWithFilters','Cal.Data.DataGems.jdbcGetConnectionTableNamesWithFilters',NULL,'[CALDoc] Retrieves a list of table names from the connection.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3046,'extractTuple2','Cal.Data.DataGems.extractTuple2','Cal.Data.DataGems.extractTuple2',NULL,'[CALDoc] Retrieves 2 values from each row in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3047,'extractObjectByName','Cal.Data.DataGems.extractObjectByName','Cal.Data.DataGems.extractObjectByName',NULL,'[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3048,'getColumnIndex','Cal.Data.DataGems.getColumnIndex','Cal.Data.DataGems.getColumnIndex',NULL,'[CALDoc] Returns the (1-based) ordinal of the specified column.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3049,'extractMaybeTime','Cal.Data.DataGems.extractMaybeTime','Cal.Data.DataGems.extractMaybeTime',NULL,'[CALDoc] Extracts a <code>Maybe</code> <code>Time</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3050,'extractTimeByName','Cal.Data.DataGems.extractTimeByName','Cal.Data.DataGems.extractTimeByName',NULL,'[CALDoc] Extracts a <code>Time</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3051,'extractTimeWithDefault','Cal.Data.DataGems.extractTimeWithDefault','Cal.Data.DataGems.extractTimeWithDefault',NULL,'[CALDoc] Extracts a <code>Time</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:17','2008-04-20 18:17:17'),(3052,'extractRelativeDateByName','Cal.Data.DataGems.extractRelativeDateByName','Cal.Data.DataGems.extractRelativeDateByName',NULL,'[CALDoc] Extracts a <code>RelativeTime.RelativeDate</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3053,'extractDateByName','Cal.Data.DataGems.extractDateByName','Cal.Data.DataGems.extractDateByName',NULL,'[CALDoc] Extracts a <code>RelativeTime.JDate</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3054,'extractTuple4','Cal.Data.DataGems.extractTuple4','Cal.Data.DataGems.extractTuple4',NULL,'[CALDoc] Retrieves 4 values from each row in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3055,'byteArrayToJByteArray','Cal.Data.DataGems.byteArrayToJByteArray','Cal.Data.DataGems.byteArrayToJByteArray',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3056,'extractTuple6','Cal.Data.DataGems.extractTuple6','Cal.Data.DataGems.extractTuple6',NULL,'[CALDoc] Retrieves 6 values from each row in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3057,'rowCount','Cal.Data.DataGems.rowCount','Cal.Data.DataGems.rowCount',NULL,'[CALDoc] Returns the number of rows in the <code>ResultSet</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3058,'extractMaybeDouble','Cal.Data.DataGems.extractMaybeDouble','Cal.Data.DataGems.extractMaybeDouble',NULL,'[CALDoc] Extracts a <code>Maybe</code> <code>Double</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3059,'extractMaybeRelativeDate','Cal.Data.DataGems.extractMaybeRelativeDate','Cal.Data.DataGems.extractMaybeRelativeDate',NULL,'[CALDoc] Extracts a <code>Maybe</code> <code>RelativeTime.RelativeDate</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3060,'extractMaybeDate','Cal.Data.DataGems.extractMaybeDate','Cal.Data.DataGems.extractMaybeDate',NULL,'[CALDoc] Extracts a <code>Maybe</code> <code>RelativeTime.JDate</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3061,'extractInt','Cal.Data.DataGems.extractInt','Cal.Data.DataGems.extractInt',NULL,'[CALDoc] Extracts an <code>Int</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3062,'extractBytesByName','Cal.Data.DataGems.extractBytesByName','Cal.Data.DataGems.extractBytesByName',NULL,'[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3063,'jByteArrayToByteArray','Cal.Data.DataGems.jByteArrayToByteArray','Cal.Data.DataGems.jByteArrayToByteArray',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3064,'jdbcGetTableFieldNames','Cal.Data.DataGems.jdbcGetTableFieldNames','Cal.Data.DataGems.jdbcGetTableFieldNames',NULL,'[CALDoc] Retrieves a list of field names for the specified table in the connection.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3065,'dataMapFromResultSet','Cal.Data.DataGems.dataMapFromResultSet','Cal.Data.DataGems.dataMapFromResultSet',NULL,'[CALDoc] Fetches the data from a <code>ResultSet</code> as a <code>Map.Map</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3066,'extractDynamics','Cal.Data.DataGems.extractDynamics','Cal.Data.DataGems.extractDynamics',NULL,'[CALDoc] Retrieves a list of <code>Dynamic</code> values from a row in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3067,'extractDynamicsByType','Cal.Data.DataGems.extractDynamicsByType','Cal.Data.DataGems.extractDynamicsByType',NULL,'[CALDoc] Retrieves a list of <code>Dynamic</code> values (of the specified types) from a row in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3068,'extractDynamic','Cal.Data.DataGems.extractDynamic','Cal.Data.DataGems.extractDynamic',NULL,'[CALDoc] Extracts a column value as a <code>Dynamic</code> value.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3069,'columnType','Cal.Data.DataGems.columnType','Cal.Data.DataGems.columnType',NULL,'[CALDoc] Returns the closest value type for the specified column in the <code>ResultSet</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3070,'extractDoubleWithDefault','Cal.Data.DataGems.extractDoubleWithDefault','Cal.Data.DataGems.extractDoubleWithDefault',NULL,'[CALDoc] Extracts a <code>Double</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3071,'extractPartialList','Cal.Data.DataGems.extractPartialList','Cal.Data.DataGems.extractPartialList',NULL,'[CALDoc] Retrieves a list of some values (using the same extractor) from each row in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3072,'bindTimeToPreparedStatement','Cal.Data.DataGems.bindTimeToPreparedStatement','Cal.Data.DataGems.bindTimeToPreparedStatement',NULL,'[CALDoc] Binds a <code>Time</code> value to the given prepared statement','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3073,'jdbcConnectionWithDriverCheck','Cal.Data.DataGems.jdbcConnectionWithDriverCheck','Cal.Data.DataGems.jdbcConnectionWithDriverCheck',NULL,'[CALDoc] Use this if you don\'t know the driver is already loaded.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3074,'columnSqlType','Cal.Data.DataGems.columnSqlType','Cal.Data.DataGems.columnSqlType',NULL,'[CALDoc] Returns the SQL data type for the specified column in the <code>ResultSet</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3075,'jIntArrayToIntArray','Cal.Data.DataGems.jIntArrayToIntArray','Cal.Data.DataGems.jIntArrayToIntArray',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3076,'extractLongWithDefault','Cal.Data.DataGems.extractLongWithDefault','Cal.Data.DataGems.extractLongWithDefault',NULL,'[CALDoc] Extracts an <code>Long</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3077,'extractDouble','Cal.Data.DataGems.extractDouble','Cal.Data.DataGems.extractDouble',NULL,'[CALDoc] Extracts a <code>Double</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3078,'extractMaybeBoolean','Cal.Data.DataGems.extractMaybeBoolean','Cal.Data.DataGems.extractMaybeBoolean',NULL,'[CALDoc] Extracts a <code>Maybe</code> <code>Boolean</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3079,'foldStrictOverResultSet','Cal.Data.DataGems.foldStrictOverResultSet','Cal.Data.DataGems.foldStrictOverResultSet',NULL,'[CALDoc] Folds a function over the rows of the <code>ResultSet</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3080,'jdbcGetTableFieldInfo','Cal.Data.DataGems.jdbcGetTableFieldInfo','Cal.Data.DataGems.jdbcGetTableFieldInfo',NULL,'[CALDoc] Retrieves information about the fields in a database table, including:  the field names, \ntheir value types, and whether the type is a \'long\' one.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3081,'dataFromResultSet','Cal.Data.DataGems.dataFromResultSet','Cal.Data.DataGems.dataFromResultSet',NULL,'[CALDoc] Fetches the data from a <code>ResultSet</code> using the specified extractor function for each row.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3082,'dataFromResultSet2','Cal.Data.DataGems.dataFromResultSet2','Cal.Data.DataGems.dataFromResultSet2',NULL,'[CALDoc] Fetches the data from a <code>ResultSet</code> using the specified extractor function for each row.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3083,'extractIntWithDefault','Cal.Data.DataGems.extractIntWithDefault','Cal.Data.DataGems.extractIntWithDefault',NULL,'[CALDoc] Extracts an <code>Int</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3084,'extractStringWithDefault','Cal.Data.DataGems.extractStringWithDefault','Cal.Data.DataGems.extractStringWithDefault',NULL,'[CALDoc] Extracts a <code>String</code> value from the specified column in the <code>ResultRow</code>.\n','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3085,'extractBoolean','Cal.Data.DataGems.extractBoolean','Cal.Data.DataGems.extractBoolean',NULL,'[CALDoc] Extracts a <code>Boolean</code> value from the specified column in the <code>ResultRow</code>.','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3086,'jGetCurrentRowObjectByName','Cal.Data.DataGems.jGetCurrentRowObjectByName','Cal.Data.DataGems.jGetCurrentRowObjectByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3087,'jGetCurrentRowBytesByName','Cal.Data.DataGems.jGetCurrentRowBytesByName','Cal.Data.DataGems.jGetCurrentRowBytesByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3088,'jGetCurrentRowBooleanByName','Cal.Data.DataGems.jGetCurrentRowBooleanByName','Cal.Data.DataGems.jGetCurrentRowBooleanByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3089,'jGetCurrentRowTimeByName','Cal.Data.DataGems.jGetCurrentRowTimeByName','Cal.Data.DataGems.jGetCurrentRowTimeByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3090,'jGetCurrentRowDateByName','Cal.Data.DataGems.jGetCurrentRowDateByName','Cal.Data.DataGems.jGetCurrentRowDateByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3091,'jGetCurrentRowDecimalByName','Cal.Data.DataGems.jGetCurrentRowDecimalByName','Cal.Data.DataGems.jGetCurrentRowDecimalByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3092,'jGetCurrentRowDoubleByName','Cal.Data.DataGems.jGetCurrentRowDoubleByName','Cal.Data.DataGems.jGetCurrentRowDoubleByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3093,'jGetCurrentRowLongByName','Cal.Data.DataGems.jGetCurrentRowLongByName','Cal.Data.DataGems.jGetCurrentRowLongByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3094,'jGetCurrentRowIntByName','Cal.Data.DataGems.jGetCurrentRowIntByName','Cal.Data.DataGems.jGetCurrentRowIntByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3095,'jGetCurrentRowStringByName','Cal.Data.DataGems.jGetCurrentRowStringByName','Cal.Data.DataGems.jGetCurrentRowStringByName',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3096,'jGetCurrentRowObject','Cal.Data.DataGems.jGetCurrentRowObject','Cal.Data.DataGems.jGetCurrentRowObject',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3097,'jGetCurrentRowBytes','Cal.Data.DataGems.jGetCurrentRowBytes','Cal.Data.DataGems.jGetCurrentRowBytes',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3098,'jGetCurrentRowBoolean','Cal.Data.DataGems.jGetCurrentRowBoolean','Cal.Data.DataGems.jGetCurrentRowBoolean',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3099,'jGetCurrentRowTime','Cal.Data.DataGems.jGetCurrentRowTime','Cal.Data.DataGems.jGetCurrentRowTime',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3100,'jGetCurrentRowDate','Cal.Data.DataGems.jGetCurrentRowDate','Cal.Data.DataGems.jGetCurrentRowDate',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3101,'jGetCurrentRowDecimal','Cal.Data.DataGems.jGetCurrentRowDecimal','Cal.Data.DataGems.jGetCurrentRowDecimal',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3102,'jGetCurrentRowDouble','Cal.Data.DataGems.jGetCurrentRowDouble','Cal.Data.DataGems.jGetCurrentRowDouble',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3103,'jGetCurrentRowLong','Cal.Data.DataGems.jGetCurrentRowLong','Cal.Data.DataGems.jGetCurrentRowLong',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3104,'jGetCurrentRowInt','Cal.Data.DataGems.jGetCurrentRowInt','Cal.Data.DataGems.jGetCurrentRowInt',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3105,'jGetCurrentRowString','Cal.Data.DataGems.jGetCurrentRowString','Cal.Data.DataGems.jGetCurrentRowString',NULL,'[CALDoc] ','2008-04-20 18:17:18','2008-04-20 18:17:18'),(3106,'wasLastFetchNull','Cal.Data.DataGems.wasLastFetchNull','Cal.Data.DataGems.wasLastFetchNull',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3107,'jdbcCloseResultSet','Cal.Data.DataGems.jdbcCloseResultSet','Cal.Data.DataGems.jdbcCloseResultSet',NULL,'[CALDoc] Close a <code>ResultSet</code>.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3108,'jMoveNext','Cal.Data.DataGems.jMoveNext','Cal.Data.DataGems.jMoveNext',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3109,'jMoveFirst','Cal.Data.DataGems.jMoveFirst','Cal.Data.DataGems.jMoveFirst',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3110,'jGetColumnIndex','Cal.Data.DataGems.jGetColumnIndex','Cal.Data.DataGems.jGetColumnIndex',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3111,'jGetColumnType','Cal.Data.DataGems.jGetColumnType','Cal.Data.DataGems.jGetColumnType',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3112,'columnName','Cal.Data.DataGems.columnName','Cal.Data.DataGems.columnName',NULL,'[CALDoc] Returns the name for the <code>ResultSet</code> column at the specified ordinal.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3113,'columnLabel','Cal.Data.DataGems.columnLabel','Cal.Data.DataGems.columnLabel',NULL,'[CALDoc] Returns the label for the <code>ResultSet</code> column at the specified ordinal.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3114,'columnCount','Cal.Data.DataGems.columnCount','Cal.Data.DataGems.columnCount',NULL,'[CALDoc] Returns the number of columns in a <code>ResultSet</code>.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3115,'jdbcQueryToResultSet','Cal.Data.DataGems.jdbcQueryToResultSet','Cal.Data.DataGems.jdbcQueryToResultSet',NULL,'[CALDoc] Execute a SQL SELECT statement against the specified connection to produce a <code>ResultSet</code>.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3116,'preparedStatement_setNull','Cal.Data.DataGems.preparedStatement_setNull','Cal.Data.DataGems.preparedStatement_setNull',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3117,'preparedStatement_setTime','Cal.Data.DataGems.preparedStatement_setTime','Cal.Data.DataGems.preparedStatement_setTime',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3118,'preparedStatement_setString','Cal.Data.DataGems.preparedStatement_setString','Cal.Data.DataGems.preparedStatement_setString',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3119,'preparedStatement_setDouble','Cal.Data.DataGems.preparedStatement_setDouble','Cal.Data.DataGems.preparedStatement_setDouble',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3120,'preparedStatement_setInt','Cal.Data.DataGems.preparedStatement_setInt','Cal.Data.DataGems.preparedStatement_setInt',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3121,'preparedStatement_setBoolean','Cal.Data.DataGems.preparedStatement_setBoolean','Cal.Data.DataGems.preparedStatement_setBoolean',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3122,'preparedStatement_executeBatch','Cal.Data.DataGems.preparedStatement_executeBatch','Cal.Data.DataGems.preparedStatement_executeBatch',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3123,'preparedStatementGetTotalExecTime','Cal.Data.DataGems.preparedStatementGetTotalExecTime','Cal.Data.DataGems.preparedStatementGetTotalExecTime',NULL,'[CALDoc] Retrieves the time taken to execute a prepared statement.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3124,'preparedStatementGetSqlStatement','Cal.Data.DataGems.preparedStatementGetSqlStatement','Cal.Data.DataGems.preparedStatementGetSqlStatement',NULL,'[CALDoc] Retrieves the SQL from a prepared statement.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3125,'preparedStatementExecuteUpdate','Cal.Data.DataGems.preparedStatementExecuteUpdate','Cal.Data.DataGems.preparedStatementExecuteUpdate',NULL,'[CALDoc] Executes a prepared statement which performs an update operation.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3126,'preparedStatementAddBatch','Cal.Data.DataGems.preparedStatementAddBatch','Cal.Data.DataGems.preparedStatementAddBatch',NULL,'[CALDoc] Adds a batch with a set of parameters to the prepared statement.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3127,'closePreparedStatement','Cal.Data.DataGems.closePreparedStatement','Cal.Data.DataGems.closePreparedStatement',NULL,'[CALDoc] Closes a prepared statement.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3128,'createPreparedStatement','Cal.Data.DataGems.createPreparedStatement','Cal.Data.DataGems.createPreparedStatement',NULL,'[CALDoc] Creates a prepared statement from a SQL string.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3129,'rollback','Cal.Data.DataGems.rollback','Cal.Data.DataGems.rollback',NULL,'[CALDoc] Rollback the changes made through the database connection.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3130,'commit','Cal.Data.DataGems.commit','Cal.Data.DataGems.commit',NULL,'[CALDoc] Commit the changes made through the database connection.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3131,'jExecuteBatch','Cal.Data.DataGems.jExecuteBatch','Cal.Data.DataGems.jExecuteBatch',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3132,'addBatch','Cal.Data.DataGems.addBatch','Cal.Data.DataGems.addBatch',NULL,'[CALDoc] Adds a batch of operations to the database connection.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3133,'executeUpdate','Cal.Data.DataGems.executeUpdate','Cal.Data.DataGems.executeUpdate',NULL,'[CALDoc] Executes a SQL statement which performs an update operation.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3134,'jdbcGetTableForeignKeyInfo','Cal.Data.DataGems.jdbcGetTableForeignKeyInfo','Cal.Data.DataGems.jdbcGetTableForeignKeyInfo',NULL,'[CALDoc] Retrieves a <code>ResultSet</code> of foreign key info for a table.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3135,'jdbcGetTableIndexInfo','Cal.Data.DataGems.jdbcGetTableIndexInfo','Cal.Data.DataGems.jdbcGetTableIndexInfo',NULL,'[CALDoc] Retrieves a <code>ResultSet</code> of index info for a table.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3136,'jdbcGetTablePrimaryKeyInfo','Cal.Data.DataGems.jdbcGetTablePrimaryKeyInfo','Cal.Data.DataGems.jdbcGetTablePrimaryKeyInfo',NULL,'[CALDoc] Retrieves a <code>ResultSet</code> of primary key columns for a table.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3137,'jdbcGetColumnsInfo','Cal.Data.DataGems.jdbcGetColumnsInfo','Cal.Data.DataGems.jdbcGetColumnsInfo',NULL,'[CALDoc] Retrieves a <code>ResultSet</code> of table column information from a connection.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3138,'jdbcGetTablesInfoWithFilters','Cal.Data.DataGems.jdbcGetTablesInfoWithFilters','Cal.Data.DataGems.jdbcGetTablesInfoWithFilters',NULL,'[CALDoc] Retrieves a <code>ResultSet</code> of table information from a connection.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3139,'jdbcGetTablesInfo','Cal.Data.DataGems.jdbcGetTablesInfo','Cal.Data.DataGems.jdbcGetTablesInfo',NULL,'[CALDoc] Retrieves a <code>ResultSet</code> of table information from a connection.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3140,'connectionDatabaseProductName','Cal.Data.DataGems.connectionDatabaseProductName','Cal.Data.DataGems.connectionDatabaseProductName',NULL,'[CALDoc] Retrieves the name of the database product to which this connection is connected.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3141,'jdbcCloseConnection','Cal.Data.DataGems.jdbcCloseConnection','Cal.Data.DataGems.jdbcCloseConnection',NULL,'[CALDoc] Closes a JDBC connection.\n','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3142,'jdbcGetAutoCommit','Cal.Data.DataGems.jdbcGetAutoCommit','Cal.Data.DataGems.jdbcGetAutoCommit',NULL,'[CALDoc] Gets the auto-commit flag for a JDBC connection.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3143,'jdbcSetAutoCommit','Cal.Data.DataGems.jdbcSetAutoCommit','Cal.Data.DataGems.jdbcSetAutoCommit',NULL,'[CALDoc] Set auto-commit flag for a JDBC connection.\n','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3144,'jdbcConnection','Cal.Data.DataGems.jdbcConnection','Cal.Data.DataGems.jdbcConnection',NULL,'[CALDoc] Connect to a JDBC database.\n','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3145,'jdbcDriverLoad','Cal.Data.DataGems.jdbcDriverLoad','Cal.Data.DataGems.jdbcDriverLoad',NULL,'[CALDoc] Load a JDBC driver.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3146,'resultSetFromJDBC','Cal.Data.DataGems.resultSetFromJDBC','Cal.Data.DataGems.resultSetFromJDBC',NULL,'[CALDoc] Exposes a JDBC resultset as a <code>ResultSet</code>.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3147,'resultSetForRow','Cal.Data.DataGems.resultSetForRow','Cal.Data.DataGems.resultSetForRow',NULL,'[CALDoc] Get the ResultSet to which a row belongs.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3148,'currentResultSetRow','Cal.Data.DataGems.currentResultSetRow','Cal.Data.DataGems.currentResultSetRow',NULL,'[CALDoc] Get a ResultRow representing the current row of the resultset.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3149,'spread','Cal.Utilities.PrettyPrinter.spread','Cal.Utilities.PrettyPrinter.spread',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3150,'stack','Cal.Utilities.PrettyPrinter.stack','Cal.Utilities.PrettyPrinter.stack',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3151,'fillwords','Cal.Utilities.PrettyPrinter.fillwords','Cal.Utilities.PrettyPrinter.fillwords',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3152,'spaceOrLineSep','Cal.Utilities.PrettyPrinter.spaceOrLineSep','Cal.Utilities.PrettyPrinter.spaceOrLineSep',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3153,'pretty','Cal.Utilities.PrettyPrinter.pretty','Cal.Utilities.PrettyPrinter.pretty',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3154,'layout','Cal.Utilities.PrettyPrinter.layout','Cal.Utilities.PrettyPrinter.layout',NULL,'[CALDoc] Converts a text document to a string.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3155,'appendDocs','Cal.Utilities.PrettyPrinter.appendDocs','Cal.Utilities.PrettyPrinter.appendDocs',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3156,'concatDocs','Cal.Utilities.PrettyPrinter.concatDocs','Cal.Utilities.PrettyPrinter.concatDocs',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3157,'multilineText','Cal.Utilities.PrettyPrinter.multilineText','Cal.Utilities.PrettyPrinter.multilineText',NULL,'[CALDoc] Breaks the text into multiple lines (based on the <code>\'\\n\'</code> char) and creates a document item for each line.','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3158,'fillSeparatedList','Cal.Utilities.PrettyPrinter.fillSeparatedList','Cal.Utilities.PrettyPrinter.fillSeparatedList',NULL,'[CALDoc] Similar to fill, except that the specified separator text will be inserted between the items.\n','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3159,'fill','Cal.Utilities.PrettyPrinter.fill','Cal.Utilities.PrettyPrinter.fill',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3160,'lineSep','Cal.Utilities.PrettyPrinter.lineSep','Cal.Utilities.PrettyPrinter.lineSep',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3161,'spaceSep','Cal.Utilities.PrettyPrinter.spaceSep','Cal.Utilities.PrettyPrinter.spaceSep',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3162,'singleSpace','Cal.Utilities.PrettyPrinter.singleSpace','Cal.Utilities.PrettyPrinter.singleSpace',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3163,'folddoc','Cal.Utilities.PrettyPrinter.folddoc','Cal.Utilities.PrettyPrinter.folddoc',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3164,'bracket','Cal.Utilities.PrettyPrinter.bracket','Cal.Utilities.PrettyPrinter.bracket',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3165,'Line','Cal.Utilities.PrettyPrinter.Line','Cal.Utilities.PrettyPrinter.Line',NULL,'[CALDoc] ','2008-04-20 18:17:19','2008-04-20 18:17:19'),(3166,'NEST','Cal.Utilities.PrettyPrinter.NEST','Cal.Utilities.PrettyPrinter.NEST',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3167,'Text','Cal.Utilities.PrettyPrinter.Text','Cal.Utilities.PrettyPrinter.Text',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3168,'group','Cal.Utilities.PrettyPrinter.group','Cal.Utilities.PrettyPrinter.group',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3169,'flatten','Cal.Utilities.PrettyPrinter.flatten','Cal.Utilities.PrettyPrinter.flatten',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3170,'isEmptyDoc','Cal.Utilities.PrettyPrinter.isEmptyDoc','Cal.Utilities.PrettyPrinter.isEmptyDoc',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3171,'best','Cal.Utilities.PrettyPrinter.best','Cal.Utilities.PrettyPrinter.best',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3172,'be','Cal.Utilities.PrettyPrinter.be','Cal.Utilities.PrettyPrinter.be',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3173,'better','Cal.Utilities.PrettyPrinter.better','Cal.Utilities.PrettyPrinter.better',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3174,'fits','Cal.Utilities.PrettyPrinter.fits','Cal.Utilities.PrettyPrinter.fits',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3175,'emptyDoc','Cal.Utilities.PrettyPrinter.emptyDoc','Cal.Utilities.PrettyPrinter.emptyDoc',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3176,'Nil','Cal.Utilities.PrettyPrinter.Nil','Cal.Utilities.PrettyPrinter.Nil',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3177,'APPEND','Cal.Utilities.PrettyPrinter.APPEND','Cal.Utilities.PrettyPrinter.APPEND',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3178,'UNION','Cal.Utilities.PrettyPrinter.UNION','Cal.Utilities.PrettyPrinter.UNION',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3179,'showRange','Cal.Utilities.Range.showRange','Cal.Utilities.Range.showRange',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3180,'outputRangeToJObject','Cal.Utilities.Range.outputRangeToJObject','Cal.Utilities.Range.outputRangeToJObject',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3181,'inputRangeFromJObject','Cal.Utilities.Range.inputRangeFromJObject','Cal.Utilities.Range.inputRangeFromJObject',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3182,'inputRange','Cal.Utilities.Range.inputRange','Cal.Utilities.Range.inputRange',NULL,'[CALDoc] Converts a <code>JRange</code> value into a <code>Range</code> value.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3183,'displayDoubleRangeList','Cal.Utilities.Range.displayDoubleRangeList','Cal.Utilities.Range.displayDoubleRangeList',NULL,'[CALDoc] Displays string version of double lists.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3184,'makeRangeFromEndpoints','Cal.Utilities.Range.makeRangeFromEndpoints','Cal.Utilities.Range.makeRangeFromEndpoints',NULL,'[CALDoc] Constructs a <code>Range</code> by describing its endpoints as <code>Maybe</code> pairs.\n','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3185,'intersectRanges','Cal.Utilities.Range.intersectRanges','Cal.Utilities.Range.intersectRanges',NULL,'[CALDoc] Intersects the ranges in the specified list.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3186,'stripRedundantRanges','Cal.Utilities.Range.stripRedundantRanges','Cal.Utilities.Range.stripRedundantRanges',NULL,'[CALDoc] Strips all redundant ranges from the specified list.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3187,'inputRangeWith','Cal.Utilities.Range.inputRangeWith','Cal.Utilities.Range.inputRangeWith',NULL,'[CALDoc] Converts a <code>JRange</code> value into a <code>Range</code> value, with an endpoint transformation function.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3188,'mapRanges','Cal.Utilities.Range.mapRanges','Cal.Utilities.Range.mapRanges',NULL,'[CALDoc] Applies the specified function to the endpoints of each ranges in the list.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3189,'mapRange','Cal.Utilities.Range.mapRange','Cal.Utilities.Range.mapRange',NULL,'[CALDoc] Applies the specified function to the endpoints of the range.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3190,'outputRange','Cal.Utilities.Range.outputRange','Cal.Utilities.Range.outputRange',NULL,'[CALDoc] Converts a <code>Range</code> value into a <code>JRange</code> value.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3191,'outputRangeWith','Cal.Utilities.Range.outputRangeWith','Cal.Utilities.Range.outputRangeWith',NULL,'[CALDoc] Converts a <code>Range</code> value into a <code>JRange</code> value, with an endpoint transformation function.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3192,'testRangeModule','Cal.Utilities.Range.testRangeModule','Cal.Utilities.Range.testRangeModule',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3193,'showRangeExamples','Cal.Utilities.Range.showRangeExamples','Cal.Utilities.Range.showRangeExamples',NULL,'[CALDoc] ','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3194,'makeEntireRange','Cal.Utilities.Range.makeEntireRange','Cal.Utilities.Range.makeEntireRange',NULL,'[CALDoc] Constructs a range including the entire space.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3195,'complementRanges','Cal.Utilities.Range.complementRanges','Cal.Utilities.Range.complementRanges',NULL,'[CALDoc] Complements the specified list of ranges.\n','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3196,'displayMaybeDoubleRange','Cal.Utilities.Range.displayMaybeDoubleRange','Cal.Utilities.Range.displayMaybeDoubleRange',NULL,'[CALDoc] Displays text version of a range of <code>Maybe</code>.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3197,'displayDoubleRange','Cal.Utilities.Range.displayDoubleRange','Cal.Utilities.Range.displayDoubleRange',NULL,'[CALDoc] Displays text version of a range of <code>Double</code>.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3198,'symmetricDifferenceRanges','Cal.Utilities.Range.symmetricDifferenceRanges','Cal.Utilities.Range.symmetricDifferenceRanges',NULL,'[CALDoc] Computes the symmetric difference between the two range lists.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3199,'differenceRanges','Cal.Utilities.Range.differenceRanges','Cal.Utilities.Range.differenceRanges',NULL,'[CALDoc] Returns the difference ranges resulting from of subtracting the second range list from the first.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3200,'differenceRightRange','Cal.Utilities.Range.differenceRightRange','Cal.Utilities.Range.differenceRightRange',NULL,'[CALDoc] Calculates the range on the left side of the difference between range 1 and the intersection\nof range 1 and range 2','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3201,'makeIsGreaterThanEqualsRange','Cal.Utilities.Range.makeIsGreaterThanEqualsRange','Cal.Utilities.Range.makeIsGreaterThanEqualsRange',NULL,'[CALDoc] Constructs a range strictly greater than <code>x</code>.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3202,'makeIsGreaterThanRange','Cal.Utilities.Range.makeIsGreaterThanRange','Cal.Utilities.Range.makeIsGreaterThanRange',NULL,'[CALDoc] Constructs a range strictly less than <code>x</code>','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3203,'differenceLeftRange','Cal.Utilities.Range.differenceLeftRange','Cal.Utilities.Range.differenceLeftRange',NULL,'[CALDoc] Calculates range on the left side of the difference between range1 and the intersection\nof range 1 and range 2','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3204,'makeIsLessThanEqualsRange','Cal.Utilities.Range.makeIsLessThanEqualsRange','Cal.Utilities.Range.makeIsLessThanEqualsRange',NULL,'[CALDoc] Constructs a range less than or equals to <code>x</code>.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3205,'makeIsLessThanRange','Cal.Utilities.Range.makeIsLessThanRange','Cal.Utilities.Range.makeIsLessThanRange',NULL,'[CALDoc] Constructs a range strictly less than <code>x</code>.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3206,'makeBetweenIncludingRightEndpointRange','Cal.Utilities.Range.makeBetweenIncludingRightEndpointRange','Cal.Utilities.Range.makeBetweenIncludingRightEndpointRange',NULL,'[CALDoc] Constructs a range between two endpoings, including the right.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3207,'makeBetweenExcludingEndpointsRange','Cal.Utilities.Range.makeBetweenExcludingEndpointsRange','Cal.Utilities.Range.makeBetweenExcludingEndpointsRange',NULL,'[CALDoc] Constructs a range between two endpoings, not including either.','2008-04-20 18:17:20','2008-04-20 18:17:20'),(3208,'makeBetweenIncludingEndpointsRange','Cal.Utilities.Range.makeBetweenIncludingEndpointsRange','Cal.Utilities.Range.makeBetweenIncludingEndpointsRange',NULL,'[CALDoc] Constructs a range between two endpoints, including both.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3209,'makeBetweenIncludingLeftEndpointRange','Cal.Utilities.Range.makeBetweenIncludingLeftEndpointRange','Cal.Utilities.Range.makeBetweenIncludingLeftEndpointRange',NULL,'[CALDoc] Constructs a range between two endpoints, including the left.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3210,'intersectTwoRanges','Cal.Utilities.Range.intersectTwoRanges','Cal.Utilities.Range.intersectTwoRanges',NULL,'[CALDoc] Intersects two ranges.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3211,'afterRange','Cal.Utilities.Range.afterRange','Cal.Utilities.Range.afterRange',NULL,'[CALDoc] Indicates whether the first range succeeds the second.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3212,'beforeRange','Cal.Utilities.Range.beforeRange','Cal.Utilities.Range.beforeRange',NULL,'[CALDoc] Indicates whether the first range preceeds the second.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3213,'includesLeftEndpoint','Cal.Utilities.Range.includesLeftEndpoint','Cal.Utilities.Range.includesLeftEndpoint',NULL,'[CALDoc] Returns whether the range includes its left endpoint.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3214,'includesRightEndpoint','Cal.Utilities.Range.includesRightEndpoint','Cal.Utilities.Range.includesRightEndpoint',NULL,'[CALDoc] Returns whether the range includes a right endpoint.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3215,'isRedundantRange','Cal.Utilities.Range.isRedundantRange','Cal.Utilities.Range.isRedundantRange',NULL,'[CALDoc] Returns whether the range is algebraically of the sort that it can never\ncontain a data value e.g. <code>BetweenExcludingEndpoints 2 2</code>.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3216,'leftEndpoint','Cal.Utilities.Range.leftEndpoint','Cal.Utilities.Range.leftEndpoint',NULL,'[CALDoc] Returns the left endpoint of the range.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3217,'rightEndpoint','Cal.Utilities.Range.rightEndpoint','Cal.Utilities.Range.rightEndpoint',NULL,'[CALDoc] Returns the right endpoint of the range.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3218,'hasLeftEndpoint','Cal.Utilities.Range.hasLeftEndpoint','Cal.Utilities.Range.hasLeftEndpoint',NULL,'[CALDoc] Returns whether the range has a left endpoint.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3219,'hasRightEndpoint','Cal.Utilities.Range.hasRightEndpoint','Cal.Utilities.Range.hasRightEndpoint',NULL,'[CALDoc] Returns whether the range has a right endpoint.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3220,'unionRanges','Cal.Utilities.Range.unionRanges','Cal.Utilities.Range.unionRanges',NULL,'[CALDoc] Unifies the two lists of ranges into a single list\nThe returned ranges will be ordered by increasing start time','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3221,'consolidateRanges','Cal.Utilities.Range.consolidateRanges','Cal.Utilities.Range.consolidateRanges',NULL,'[CALDoc] Consolidate the specified ranges\nThe returned ranges will be ordered by increasing start time','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3222,'unionSingleRange','Cal.Utilities.Range.unionSingleRange','Cal.Utilities.Range.unionSingleRange',NULL,'[CALDoc] Unifies the specified range with all ranges from the range list','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3223,'unionTwoRanges','Cal.Utilities.Range.unionTwoRanges','Cal.Utilities.Range.unionTwoRanges',NULL,'[CALDoc] Unifies two ranges.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3224,'inRangeList','Cal.Utilities.Range.inRangeList','Cal.Utilities.Range.inRangeList',NULL,'[CALDoc] Returns whether the specified value is contained in the list of ranges.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3225,'inRange','Cal.Utilities.Range.inRange','Cal.Utilities.Range.inRange',NULL,'[CALDoc] Returns whether the specified value falls within the range.','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3226,'jRange_getLeftBound','Cal.Utilities.Range.jRange_getLeftBound','Cal.Utilities.Range.jRange_getLeftBound',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3227,'jRange_getRightBound','Cal.Utilities.Range.jRange_getRightBound','Cal.Utilities.Range.jRange_getRightBound',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3228,'jRange_includesLeftBound','Cal.Utilities.Range.jRange_includesLeftBound','Cal.Utilities.Range.jRange_includesLeftBound',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3229,'jRange_includesRightBound','Cal.Utilities.Range.jRange_includesRightBound','Cal.Utilities.Range.jRange_includesRightBound',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3230,'jRange_hasRightBound','Cal.Utilities.Range.jRange_hasRightBound','Cal.Utilities.Range.jRange_hasRightBound',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3231,'jRange_hasLeftBound','Cal.Utilities.Range.jRange_hasLeftBound','Cal.Utilities.Range.jRange_hasLeftBound',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3232,'jRange_new_BetweenExcludingEndpoints','Cal.Utilities.Range.jRange_new_BetweenExcludingEndpoints','Cal.Utilities.Range.jRange_new_BetweenExcludingEndpoints',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3233,'jRange_new_BetweenIncludingRightEndpoint','Cal.Utilities.Range.jRange_new_BetweenIncludingRightEndpoint','Cal.Utilities.Range.jRange_new_BetweenIncludingRightEndpoint',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3234,'jRange_new_BetweenIncludingLeftEndpoint','Cal.Utilities.Range.jRange_new_BetweenIncludingLeftEndpoint','Cal.Utilities.Range.jRange_new_BetweenIncludingLeftEndpoint',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3235,'jRange_new_BetweenIncludingEndpoints','Cal.Utilities.Range.jRange_new_BetweenIncludingEndpoints','Cal.Utilities.Range.jRange_new_BetweenIncludingEndpoints',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3236,'jRange_new_IsGreaterThanEquals','Cal.Utilities.Range.jRange_new_IsGreaterThanEquals','Cal.Utilities.Range.jRange_new_IsGreaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3237,'jRange_new_IsGreaterThan','Cal.Utilities.Range.jRange_new_IsGreaterThan','Cal.Utilities.Range.jRange_new_IsGreaterThan',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3238,'jRange_new_IsLessThanEquals','Cal.Utilities.Range.jRange_new_IsLessThanEquals','Cal.Utilities.Range.jRange_new_IsLessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3239,'jRange_new_IsLessThan','Cal.Utilities.Range.jRange_new_IsLessThan','Cal.Utilities.Range.jRange_new_IsLessThan',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3240,'jRange_new_EntireRange','Cal.Utilities.Range.jRange_new_EntireRange','Cal.Utilities.Range.jRange_new_EntireRange',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3241,'IsLessThan','Cal.Utilities.Range.IsLessThan','Cal.Utilities.Range.IsLessThan',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3242,'IsLessThanEquals','Cal.Utilities.Range.IsLessThanEquals','Cal.Utilities.Range.IsLessThanEquals',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3243,'IsGreaterThanEquals','Cal.Utilities.Range.IsGreaterThanEquals','Cal.Utilities.Range.IsGreaterThanEquals',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3244,'IsGreaterThan','Cal.Utilities.Range.IsGreaterThan','Cal.Utilities.Range.IsGreaterThan',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3245,'BetweenIncludingEndpoints','Cal.Utilities.Range.BetweenIncludingEndpoints','Cal.Utilities.Range.BetweenIncludingEndpoints',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3246,'BetweenIncludingLeftEndpoint','Cal.Utilities.Range.BetweenIncludingLeftEndpoint','Cal.Utilities.Range.BetweenIncludingLeftEndpoint',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3247,'BetweenIncludingRightEndpoint','Cal.Utilities.Range.BetweenIncludingRightEndpoint','Cal.Utilities.Range.BetweenIncludingRightEndpoint',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3248,'BetweenExcludingEndpoints','Cal.Utilities.Range.BetweenExcludingEndpoints','Cal.Utilities.Range.BetweenExcludingEndpoints',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3249,'EntireRange','Cal.Utilities.Range.EntireRange','Cal.Utilities.Range.EntireRange',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3250,'testSummaryModule','Cal.Utilities.Summary.testSummaryModule','Cal.Utilities.Summary.testSummaryModule',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3251,'sumIgnoreNaNExamples','Cal.Utilities.Summary.sumIgnoreNaNExamples','Cal.Utilities.Summary.sumIgnoreNaNExamples',NULL,'[CALDoc] ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3252,'sumIgnoreNaN','Cal.Utilities.Summary.sumIgnoreNaN','Cal.Utilities.Summary.sumIgnoreNaN',NULL,'[CALDoc] A custom version of <code>sum</code> that ignores NaN values.  ','2008-04-20 18:17:21','2008-04-20 18:17:21'),(3253,'weightedAverageIgnoreNaNExamples','Cal.Utilities.Summary.weightedAverageIgnoreNaNExamples','Cal.Utilities.Summary.weightedAverageIgnoreNaNExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3254,'weightedAverageIgnoreNaN','Cal.Utilities.Summary.weightedAverageIgnoreNaN','Cal.Utilities.Summary.weightedAverageIgnoreNaN',NULL,'[CALDoc] A custom version of <code>weightedAverage</code> that ignores NaN values.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3255,'averageIgnoreNaNExamples','Cal.Utilities.Summary.averageIgnoreNaNExamples','Cal.Utilities.Summary.averageIgnoreNaNExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3256,'averageIgnoreNaN','Cal.Utilities.Summary.averageIgnoreNaN','Cal.Utilities.Summary.averageIgnoreNaN',NULL,'[CALDoc] A custom version of <code>average</code> that ignores NaN values.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3257,'countIgnoreNaNExamples','Cal.Utilities.Summary.countIgnoreNaNExamples','Cal.Utilities.Summary.countIgnoreNaNExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3258,'countIgnoreNaN','Cal.Utilities.Summary.countIgnoreNaN','Cal.Utilities.Summary.countIgnoreNaN',NULL,'[CALDoc] Counts the number of non-NaN values in a list.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3259,'maximumIgnoreNaNExamples','Cal.Utilities.Summary.maximumIgnoreNaNExamples','Cal.Utilities.Summary.maximumIgnoreNaNExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3260,'minimumIgnoreNaNExamples','Cal.Utilities.Summary.minimumIgnoreNaNExamples','Cal.Utilities.Summary.minimumIgnoreNaNExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3261,'minimumIgnoreNaN','Cal.Utilities.Summary.minimumIgnoreNaN','Cal.Utilities.Summary.minimumIgnoreNaN',NULL,'[CALDoc] A custom version of <code>minimum</code> that ignores NaN values.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3262,'covarianceExamples','Cal.Utilities.Summary.covarianceExamples','Cal.Utilities.Summary.covarianceExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3263,'covariance','Cal.Utilities.Summary.covariance','Cal.Utilities.Summary.covariance',NULL,'[CALDoc] Returns the covariance between lists <code>list1</code> and <code>list2</code>.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3264,'distinctCountExamples','Cal.Utilities.Summary.distinctCountExamples','Cal.Utilities.Summary.distinctCountExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3265,'distinctCount','Cal.Utilities.Summary.distinctCount','Cal.Utilities.Summary.distinctCount',NULL,'[CALDoc] Returns the number of distinct values that occur in values.','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3266,'nthMomentExamples','Cal.Utilities.Summary.nthMomentExamples','Cal.Utilities.Summary.nthMomentExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3267,'nthMoment','Cal.Utilities.Summary.nthMoment','Cal.Utilities.Summary.nthMoment',NULL,'[CALDoc] Calculates the <code>n</code>th moment about the mean of values','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3268,'correlationExamples','Cal.Utilities.Summary.correlationExamples','Cal.Utilities.Summary.correlationExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3269,'testData2','Cal.Utilities.Summary.testData2','Cal.Utilities.Summary.testData2',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3270,'testData1','Cal.Utilities.Summary.testData1','Cal.Utilities.Summary.testData1',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3271,'correlation','Cal.Utilities.Summary.correlation','Cal.Utilities.Summary.correlation',NULL,'[CALDoc] Returns the correlation coefficient between lists <code>list1</code> and <code>list2</code>.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3272,'quartileExamples','Cal.Utilities.Summary.quartileExamples','Cal.Utilities.Summary.quartileExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3273,'medianExamples','Cal.Utilities.Summary.medianExamples','Cal.Utilities.Summary.medianExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3274,'median','Cal.Utilities.Summary.median','Cal.Utilities.Summary.median',NULL,'[CALDoc] Returns the median of values, using interpolation when the number of values\nis even.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3275,'percentileExamples','Cal.Utilities.Summary.percentileExamples','Cal.Utilities.Summary.percentileExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3276,'selectNthRankedElementExamples','Cal.Utilities.Summary.selectNthRankedElementExamples','Cal.Utilities.Summary.selectNthRankedElementExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3277,'modeExamples','Cal.Utilities.Summary.modeExamples','Cal.Utilities.Summary.modeExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3278,'mode','Cal.Utilities.Summary.mode','Cal.Utilities.Summary.mode',NULL,'[CALDoc] Mode returns <code>Just</code> (the most-frequently-occurring element) for a list of values,\nor Nothing for the empty list.  <code>mode xs</code> and <code>nthMostFrequent xs 1</code> are semantically\nequivalent, but mode is more efficient.','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3279,'nthMostFrequentExamples','Cal.Utilities.Summary.nthMostFrequentExamples','Cal.Utilities.Summary.nthMostFrequentExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3280,'nthMostFrequent','Cal.Utilities.Summary.nthMostFrequent','Cal.Utilities.Summary.nthMostFrequent',NULL,'[CALDoc] Returns <code>Just x</code>, where <code>x</code> is the value that occurs <code>number</code>-th most frequently\nin values.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3281,'sampleStandardDeviationExamples','Cal.Utilities.Summary.sampleStandardDeviationExamples','Cal.Utilities.Summary.sampleStandardDeviationExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3282,'sampleStandardDeviation','Cal.Utilities.Summary.sampleStandardDeviation','Cal.Utilities.Summary.sampleStandardDeviation',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3283,'populationStandardDeviationExamples','Cal.Utilities.Summary.populationStandardDeviationExamples','Cal.Utilities.Summary.populationStandardDeviationExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3284,'populationStandardDeviation','Cal.Utilities.Summary.populationStandardDeviation','Cal.Utilities.Summary.populationStandardDeviation',NULL,'[CALDoc] Finds the population standard deviation of a list of numbers by first\nconverting each element to a <code>Double</code> and then finding the standard deviation\nof the result.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3285,'sampleVarianceExamples','Cal.Utilities.Summary.sampleVarianceExamples','Cal.Utilities.Summary.sampleVarianceExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3286,'sampleVariance','Cal.Utilities.Summary.sampleVariance','Cal.Utilities.Summary.sampleVariance',NULL,'[CALDoc] Calculates the sample variance of a list of numbers by first converting all of the\nelements to <code>Double</code>s and then finding the sample variance of the resulting set of values.\n','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3287,'weightedAverageExamples','Cal.Utilities.Summary.weightedAverageExamples','Cal.Utilities.Summary.weightedAverageExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3288,'weightedAverage','Cal.Utilities.Summary.weightedAverage','Cal.Utilities.Summary.weightedAverage',NULL,'[CALDoc] Returns the weighted average of values weighted by weights.\n','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3289,'averageExamples','Cal.Utilities.Summary.averageExamples','Cal.Utilities.Summary.averageExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3290,'average','Cal.Utilities.Summary.average','Cal.Utilities.Summary.average',NULL,'[CALDoc] Computes the average value of a list by first converting all elements of the list to <code>Double</code>\nvalues and then averaging them. ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3291,'quartile','Cal.Utilities.Summary.quartile','Cal.Utilities.Summary.quartile',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3292,'quartileEnumToPercentileRank','Cal.Utilities.Summary.quartileEnumToPercentileRank','Cal.Utilities.Summary.quartileEnumToPercentileRank',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3293,'percentile','Cal.Utilities.Summary.percentile','Cal.Utilities.Summary.percentile',NULL,'[CALDoc] Returns the percentile for values using interpolation.\n','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3294,'selectNthRankedElement','Cal.Utilities.Summary.selectNthRankedElement','Cal.Utilities.Summary.selectNthRankedElement',NULL,'[CALDoc] Returns the element that would be ranked <code>n</code> if values were sorted.\n<code>n</code> must be between 1 and <code>length values</code>, inclusive.','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3295,'simpleSelect','Cal.Utilities.Summary.simpleSelect','Cal.Utilities.Summary.simpleSelect',NULL,'[CALDoc] A simpler but less-efficient version of <code>selectNthRankedElement</code>.\n','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3296,'maximumIgnoreNaN','Cal.Utilities.Summary.maximumIgnoreNaN','Cal.Utilities.Summary.maximumIgnoreNaN',NULL,'[CALDoc] A custom version of <code>maximum</code> that ignores NaN values.  ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3297,'populationVarianceExamples','Cal.Utilities.Summary.populationVarianceExamples','Cal.Utilities.Summary.populationVarianceExamples',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3298,'populationVariance','Cal.Utilities.Summary.populationVariance','Cal.Utilities.Summary.populationVariance',NULL,'[CALDoc] Calculates the population variance of a list of numbers by first converting all of the\nelements to <code>Double</code>s and then finding the sample variance of the resulting set of values.\n','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3299,'random','Cal.Utilities.Summary.random','Cal.Utilities.Summary.random',NULL,'[CALDoc] <code>selectNthRankedElement</code> uses a randomized algorithm to attain average O(n) performance','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3300,'Minimum_0thPercentile','Cal.Utilities.Summary.Minimum_0thPercentile','Cal.Utilities.Summary.Minimum_0thPercentile',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3301,'FirstQuartile_25thPercentile','Cal.Utilities.Summary.FirstQuartile_25thPercentile','Cal.Utilities.Summary.FirstQuartile_25thPercentile',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3302,'Median_50thPercentile','Cal.Utilities.Summary.Median_50thPercentile','Cal.Utilities.Summary.Median_50thPercentile',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3303,'ThirdQuartile_75thPercentile','Cal.Utilities.Summary.ThirdQuartile_75thPercentile','Cal.Utilities.Summary.ThirdQuartile_75thPercentile',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3304,'Maximum_100thPercentile','Cal.Utilities.Summary.Maximum_100thPercentile','Cal.Utilities.Summary.Maximum_100thPercentile',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3305,'weekExpr','Cal.Data.Sql.weekExpr','Cal.Data.Sql.weekExpr',NULL,'[CALDoc] ','2008-04-20 18:17:22','2008-04-20 18:17:22'),(3306,'minExpr','Cal.Data.Sql.minExpr','Cal.Data.Sql.minExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3307,'intersectionQuery2','Cal.Data.Sql.intersectionQuery2','Cal.Data.Sql.intersectionQuery2',NULL,'[CALDoc] Produces a query which returns the intersection of the two specified queries.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3308,'makeSafeSqlNames','Cal.Data.Sql.makeSafeSqlNames','Cal.Data.Sql.makeSafeSqlNames',NULL,'[CALDoc] Returns \'safe\' versions of the specified names.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3309,'notEqualsQueryTable','Cal.Data.Sql.notEqualsQueryTable','Cal.Data.Sql.notEqualsQueryTable',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3310,'absExpr','Cal.Data.Sql.absExpr','Cal.Data.Sql.absExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3311,'makeSqlBuilder','Cal.Data.Sql.makeSqlBuilder','Cal.Data.Sql.makeSqlBuilder',NULL,'[CALDoc] Constructs a new SQL builder with the specified functions.','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3312,'isNullExpr','Cal.Data.Sql.isNullExpr','Cal.Data.Sql.isNullExpr',NULL,'[CALDoc] Constructs a database expression to test whether an argument expression is null.','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3313,'lengthExpr','Cal.Data.Sql.lengthExpr','Cal.Data.Sql.lengthExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3314,'stringConstant','Cal.Data.Sql.stringConstant','Cal.Data.Sql.stringConstant',NULL,'[CALDoc] Construct a database expression for a string literal.','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3315,'isNullValue','Cal.Data.Sql.isNullValue','Cal.Data.Sql.isNullValue',NULL,'[CALDoc] Tests whether an untyped expression has the constant value of null.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3316,'exprOperatorPrecedence','Cal.Data.Sql.exprOperatorPrecedence','Cal.Data.Sql.exprOperatorPrecedence',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3317,'nullIfExpr','Cal.Data.Sql.nullIfExpr','Cal.Data.Sql.nullIfExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3318,'exprUsesBinaryFunction','Cal.Data.Sql.exprUsesBinaryFunction','Cal.Data.Sql.exprUsesBinaryFunction',NULL,'[CALDoc] Use it to check if the expression\'s part uses binary function.','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3319,'expressionText','Cal.Data.Sql.expressionText','Cal.Data.Sql.expressionText',NULL,'[CALDoc] Builds the query text for a single expression.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3320,'distinctAvgExpr','Cal.Data.Sql.distinctAvgExpr','Cal.Data.Sql.distinctAvgExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3321,'dayNameExpr','Cal.Data.Sql.dayNameExpr','Cal.Data.Sql.dayNameExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3322,'ltrimExpr','Cal.Data.Sql.ltrimExpr','Cal.Data.Sql.ltrimExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3323,'stringParameter','Cal.Data.Sql.stringParameter','Cal.Data.Sql.stringParameter',NULL,'[CALDoc] Constructs an string expression for a database parameter.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3324,'stdDevPExpr','Cal.Data.Sql.stdDevPExpr','Cal.Data.Sql.stdDevPExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3325,'makeOpaqueSubQueryTable','Cal.Data.Sql.makeOpaqueSubQueryTable','Cal.Data.Sql.makeOpaqueSubQueryTable',NULL,'[CALDoc] Constructs a subquery table using the specified query text and alias.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3326,'makeCreateViewStatement','Cal.Data.Sql.makeCreateViewStatement','Cal.Data.Sql.makeCreateViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3327,'integerParameter','Cal.Data.Sql.integerParameter','Cal.Data.Sql.integerParameter',NULL,'[CALDoc] Constructs an integer expression for a database parameter.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3328,'powerExpr','Cal.Data.Sql.powerExpr','Cal.Data.Sql.powerExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3329,'makeInsertValuesStatement','Cal.Data.Sql.makeInsertValuesStatement','Cal.Data.Sql.makeInsertValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3330,'outputJoinNodeAsJObject','Cal.Data.Sql.outputJoinNodeAsJObject','Cal.Data.Sql.outputJoinNodeAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3331,'lcaseExpr','Cal.Data.Sql.lcaseExpr','Cal.Data.Sql.lcaseExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3332,'varianceExpr','Cal.Data.Sql.varianceExpr','Cal.Data.Sql.varianceExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3333,'truncateExpr','Cal.Data.Sql.truncateExpr','Cal.Data.Sql.truncateExpr',NULL,'[CALDoc] TODO: is this the correct signature?','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3334,'rightExpr','Cal.Data.Sql.rightExpr','Cal.Data.Sql.rightExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3335,'fieldDescriptionText','Cal.Data.Sql.fieldDescriptionText','Cal.Data.Sql.fieldDescriptionText',NULL,'[CALDoc] Generates the text for a table field description.','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3336,'degreesExpr','Cal.Data.Sql.degreesExpr','Cal.Data.Sql.degreesExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3337,'makeUniqueNames','Cal.Data.Sql.makeUniqueNames','Cal.Data.Sql.makeUniqueNames',NULL,'[CALDoc] Returns an updated version of the name list where each name is unique.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3338,'restrictionExpressions','Cal.Data.Sql.restrictionExpressions','Cal.Data.Sql.restrictionExpressions',NULL,'[CALDoc] Returns the restriction expressions (including group restrictions) for the\nquery.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3339,'sumExpr','Cal.Data.Sql.sumExpr','Cal.Data.Sql.sumExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3340,'queryText','Cal.Data.Sql.queryText','Cal.Data.Sql.queryText',NULL,'[CALDoc] Generates the SQL text for the specified database query.','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3341,'ceilingExpr','Cal.Data.Sql.ceilingExpr','Cal.Data.Sql.ceilingExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3342,'dayOfYearExpr','Cal.Data.Sql.dayOfYearExpr','Cal.Data.Sql.dayOfYearExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3343,'floorExpr','Cal.Data.Sql.floorExpr','Cal.Data.Sql.floorExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3344,'isNumberConstExpr','Cal.Data.Sql.isNumberConstExpr','Cal.Data.Sql.isNumberConstExpr',NULL,'[CALDoc] Returns <code>True</code> if the expression represents a constant containing a number value.','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3345,'hourExpr','Cal.Data.Sql.hourExpr','Cal.Data.Sql.hourExpr',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3346,'outputQueryOptionAsJObject','Cal.Data.Sql.outputQueryOptionAsJObject','Cal.Data.Sql.outputQueryOptionAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3347,'searchedCaseExpr','Cal.Data.Sql.searchedCaseExpr','Cal.Data.Sql.searchedCaseExpr',NULL,'[CALDoc] Construct a database expression for a searched case statement.\n','2008-04-20 18:17:23','2008-04-20 18:17:23'),(3348,'spaceExpr','Cal.Data.Sql.spaceExpr','Cal.Data.Sql.spaceExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3349,'showTypedExpr','Cal.Data.Sql.showTypedExpr','Cal.Data.Sql.showTypedExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3350,'makeInsertQueryValuesStatement','Cal.Data.Sql.makeInsertQueryValuesStatement','Cal.Data.Sql.makeInsertQueryValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3351,'getBooleanValueFromConstExpr','Cal.Data.Sql.getBooleanValueFromConstExpr','Cal.Data.Sql.getBooleanValueFromConstExpr',NULL,'[CALDoc] Returns the boolean value from a constant expression.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3352,'leftExpr','Cal.Data.Sql.leftExpr','Cal.Data.Sql.leftExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3353,'timeField','Cal.Data.Sql.timeField','Cal.Data.Sql.timeField',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3354,'booleanConstant','Cal.Data.Sql.booleanConstant','Cal.Data.Sql.booleanConstant',NULL,'[CALDoc] Construct a database expression for a Boolean value.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3355,'buildTableAndAliasText','Cal.Data.Sql.buildTableAndAliasText','Cal.Data.Sql.buildTableAndAliasText',NULL,'[CALDoc] Builds a table name and optional table alias.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3356,'order','Cal.Data.Sql.order','Cal.Data.Sql.order',NULL,'[CALDoc] Adds sorting on the specified expression.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3357,'showJoinNode','Cal.Data.Sql.showJoinNode','Cal.Data.Sql.showJoinNode',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3358,'getParameterName','Cal.Data.Sql.getParameterName','Cal.Data.Sql.getParameterName',NULL,'[CALDoc] Returns the name of a named parameter.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3359,'getStringValueFromConstExpr','Cal.Data.Sql.getStringValueFromConstExpr','Cal.Data.Sql.getStringValueFromConstExpr',NULL,'[CALDoc] Returns the string value from a constant expression.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3360,'monthNameExpr','Cal.Data.Sql.monthNameExpr','Cal.Data.Sql.monthNameExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3361,'fieldTypeText','Cal.Data.Sql.fieldTypeText','Cal.Data.Sql.fieldTypeText',NULL,'[CALDoc] Generates the text for a field data type.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3362,'cotExpr','Cal.Data.Sql.cotExpr','Cal.Data.Sql.cotExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3363,'projectGroupAndOrder','Cal.Data.Sql.projectGroupAndOrder','Cal.Data.Sql.projectGroupAndOrder',NULL,'[CALDoc] Projects the specified expressions from the query, and group and order (ASC) on the expressions.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3364,'rtrimExpr','Cal.Data.Sql.rtrimExpr','Cal.Data.Sql.rtrimExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3365,'unionQuery','Cal.Data.Sql.unionQuery','Cal.Data.Sql.unionQuery',NULL,'[CALDoc] Combines the 2 queries into a Union query.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3366,'makeDropViewStatement','Cal.Data.Sql.makeDropViewStatement','Cal.Data.Sql.makeDropViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3367,'isBooleanConstExpr','Cal.Data.Sql.isBooleanConstExpr','Cal.Data.Sql.isBooleanConstExpr',NULL,'[CALDoc] Returns <code>True</code> if the expression represents a constant containing a boolean value.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3368,'isOperatorExpr','Cal.Data.Sql.isOperatorExpr','Cal.Data.Sql.isOperatorExpr',NULL,'[CALDoc] Returns whether the expression represents an operator applied to one or more\narguments.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3369,'isOperator','Cal.Data.Sql.isOperator','Cal.Data.Sql.isOperator',NULL,'[CALDoc] Returns whether the function is really an operator (in-fix).','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3370,'makeDropTableStatement','Cal.Data.Sql.makeDropTableStatement','Cal.Data.Sql.makeDropTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3371,'monthExpr','Cal.Data.Sql.monthExpr','Cal.Data.Sql.monthExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3372,'countAllExpr','Cal.Data.Sql.countAllExpr','Cal.Data.Sql.countAllExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3373,'addJoins','Cal.Data.Sql.addJoins','Cal.Data.Sql.addJoins',NULL,'[CALDoc] Adds the specified join nodes to the query.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3374,'timeParameter','Cal.Data.Sql.timeParameter','Cal.Data.Sql.timeParameter',NULL,'[CALDoc] Constructs an time expression for a database parameter.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3375,'expExpr','Cal.Data.Sql.expExpr','Cal.Data.Sql.expExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3376,'queryTextDocument','Cal.Data.Sql.queryTextDocument','Cal.Data.Sql.queryTextDocument',NULL,'[CALDoc] Generates the SQL text document for the specified database query.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3377,'likeExpr','Cal.Data.Sql.likeExpr','Cal.Data.Sql.likeExpr',NULL,'[CALDoc] Constructs a database expression to test whether the first string operand expression matches \nthe pattern of the second operand expression.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3378,'modulusExpr','Cal.Data.Sql.modulusExpr','Cal.Data.Sql.modulusExpr',NULL,'[CALDoc] Constructs a database expression to return the modulus of two numeric operand expressions.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3379,'makeInsertValuesByColumnStatement','Cal.Data.Sql.makeInsertValuesByColumnStatement','Cal.Data.Sql.makeInsertValuesByColumnStatement',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3380,'insertExpr','Cal.Data.Sql.insertExpr','Cal.Data.Sql.insertExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3381,'projectColumnWithAlias','Cal.Data.Sql.projectColumnWithAlias','Cal.Data.Sql.projectColumnWithAlias',NULL,'[CALDoc] Adds the specified expression as a result column in the query.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3382,'sqrtExpr','Cal.Data.Sql.sqrtExpr','Cal.Data.Sql.sqrtExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3383,'queryOptions','Cal.Data.Sql.queryOptions','Cal.Data.Sql.queryOptions',NULL,'[CALDoc] Returns the query options.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3384,'sinExpr','Cal.Data.Sql.sinExpr','Cal.Data.Sql.sinExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3385,'getListFromListExpr','Cal.Data.Sql.getListFromListExpr','Cal.Data.Sql.getListFromListExpr',NULL,'[CALDoc] Returns the value expressions from a list expression.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3386,'makeInsertQueryValuesByColumnStatement','Cal.Data.Sql.makeInsertQueryValuesByColumnStatement','Cal.Data.Sql.makeInsertQueryValuesByColumnStatement',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3387,'getFieldNameFromQueryFieldExpr','Cal.Data.Sql.getFieldNameFromQueryFieldExpr','Cal.Data.Sql.getFieldNameFromQueryFieldExpr',NULL,'[CALDoc] Returns the query table from a query field expression.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3388,'negateExpr','Cal.Data.Sql.negateExpr','Cal.Data.Sql.negateExpr',NULL,'[CALDoc] Constructs a database expression for the negation of the numeric argument expression.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3389,'untypedUnaryExpr','Cal.Data.Sql.untypedUnaryExpr','Cal.Data.Sql.untypedUnaryExpr',NULL,'[CALDoc] Constructs an untyped database expression for the application of a unary operator.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3390,'setJoins','Cal.Data.Sql.setJoins','Cal.Data.Sql.setJoins',NULL,'[CALDoc] Sets the join information for the query as a list of join node trees.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3391,'locateExpr','Cal.Data.Sql.locateExpr','Cal.Data.Sql.locateExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3392,'fixQueryForGroupBy','Cal.Data.Sql.fixQueryForGroupBy','Cal.Data.Sql.fixQueryForGroupBy',NULL,'[CALDoc] Adds the necessary grouping to the query to make it valid if there is any\ngrouping or aggregation.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3393,'signExpr','Cal.Data.Sql.signExpr','Cal.Data.Sql.signExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3394,'booleanField','Cal.Data.Sql.booleanField','Cal.Data.Sql.booleanField',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3395,'doubleParameter','Cal.Data.Sql.doubleParameter','Cal.Data.Sql.doubleParameter',NULL,'[CALDoc] Constructs an double expression for a database parameter.\n','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3396,'dateTimeAddExpr','Cal.Data.Sql.dateTimeAddExpr','Cal.Data.Sql.dateTimeAddExpr',NULL,'[CALDoc] ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3397,'getColumnsForTable','Cal.Data.Sql.getColumnsForTable','Cal.Data.Sql.getColumnsForTable',NULL,'[CALDoc] Returns a list of columns that belong to the given table and that are\nreferenced from within the given query. ','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3398,'statementText','Cal.Data.Sql.statementText','Cal.Data.Sql.statementText',NULL,'[CALDoc] Generates the SQL text for a statement.','2008-04-20 18:17:24','2008-04-20 18:17:24'),(3399,'assignMissingColumnAliases','Cal.Data.Sql.assignMissingColumnAliases','Cal.Data.Sql.assignMissingColumnAliases',NULL,'[CALDoc] The <code>assignMissingColumnAliases</code> is a transformation function to assign the missing aliases for all columns \nof the passed in query','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3400,'makeCreateTableStatement','Cal.Data.Sql.makeCreateTableStatement','Cal.Data.Sql.makeCreateTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3401,'makeSafeSqlName','Cal.Data.Sql.makeSafeSqlName','Cal.Data.Sql.makeSafeSqlName',NULL,'[CALDoc] Returns a \'safe\' version of the specified name.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3402,'isNotNullExpr','Cal.Data.Sql.isNotNullExpr','Cal.Data.Sql.isNotNullExpr',NULL,'[CALDoc] Constructs a database expression to test whether an argument expression is non-null.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3403,'maxExpr','Cal.Data.Sql.maxExpr','Cal.Data.Sql.maxExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3404,'joinSetUniqueIdentifier','Cal.Data.Sql.joinSetUniqueIdentifier','Cal.Data.Sql.joinSetUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3405,'divideExpr','Cal.Data.Sql.divideExpr','Cal.Data.Sql.divideExpr',NULL,'[CALDoc] Constructs a database expression to divide two numeric operand expressions.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3406,'booleanParameter','Cal.Data.Sql.booleanParameter','Cal.Data.Sql.booleanParameter',NULL,'[CALDoc] Constructs an Boolean expression for a database parameter.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3407,'makePrimitiveValueBuilder','Cal.Data.Sql.makePrimitiveValueBuilder','Cal.Data.Sql.makePrimitiveValueBuilder',NULL,'[CALDoc] Constructs a new SQL primitive value builder with the specified functions.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3408,'transformQueryRestrictionExpr','Cal.Data.Sql.transformQueryRestrictionExpr','Cal.Data.Sql.transformQueryRestrictionExpr',NULL,'[CALDoc] The <code>transformQueryRestrictionExpr</code> takes a conversion function and executes it against \nthe restriction expression of a query.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3409,'makeCreateDatabaseStatement','Cal.Data.Sql.makeCreateDatabaseStatement','Cal.Data.Sql.makeCreateDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3410,'timeConstant','Cal.Data.Sql.timeConstant','Cal.Data.Sql.timeConstant',NULL,'[CALDoc] Construct a database expression for a time literal.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3411,'databaseExpr','Cal.Data.Sql.databaseExpr','Cal.Data.Sql.databaseExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3412,'outputDbFunctionAsJObject','Cal.Data.Sql.outputDbFunctionAsJObject','Cal.Data.Sql.outputDbFunctionAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3413,'log10Expr','Cal.Data.Sql.log10Expr','Cal.Data.Sql.log10Expr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3414,'userExpr','Cal.Data.Sql.userExpr','Cal.Data.Sql.userExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3415,'prepareToBuildQueryText','Cal.Data.Sql.prepareToBuildQueryText','Cal.Data.Sql.prepareToBuildQueryText',NULL,'[CALDoc] This function gives the SQL builder a chance to alter the structure of the\nquery in order to simplify building of the query text.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3416,'binaryField','Cal.Data.Sql.binaryField','Cal.Data.Sql.binaryField',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3417,'getNumberValueFromConstExpr','Cal.Data.Sql.getNumberValueFromConstExpr','Cal.Data.Sql.getNumberValueFromConstExpr',NULL,'[CALDoc] Returns the number value from a constant expression.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3418,'convertQueryColumnsToCartesianJoins','Cal.Data.Sql.convertQueryColumnsToCartesianJoins','Cal.Data.Sql.convertQueryColumnsToCartesianJoins',NULL,'[CALDoc] The <code>convertQueryColumnsToCartesianJoins</code> is a transformation function pushing the sub-queries \nnested as select items down to the from clause to perform cartesian join between datasources.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3419,'isSubQueryExpr','Cal.Data.Sql.isSubQueryExpr','Cal.Data.Sql.isSubQueryExpr',NULL,'[CALDoc] The <code>isSubQueryExpr</code> tests expression if it is of SubQueryExpr type.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3420,'makeDropDatabaseStatement','Cal.Data.Sql.makeDropDatabaseStatement','Cal.Data.Sql.makeDropDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3421,'intToDoubleExpr','Cal.Data.Sql.intToDoubleExpr','Cal.Data.Sql.intToDoubleExpr',NULL,'[CALDoc] Converts an integer value to a double value.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3422,'alternateIntersectionQuery','Cal.Data.Sql.alternateIntersectionQuery','Cal.Data.Sql.alternateIntersectionQuery',NULL,'[CALDoc] This is an alternate version of <code>intersectionQuery</code>.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3423,'removeProjectedColumn','Cal.Data.Sql.removeProjectedColumn','Cal.Data.Sql.removeProjectedColumn',NULL,'[CALDoc] Removes the specified expression from the projected columns list.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3424,'modifyQueries','Cal.Data.Sql.modifyQueries','Cal.Data.Sql.modifyQueries',NULL,'[CALDoc] Applies the specified query modification function to the query and any\nsubqueries that it contains.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3425,'intToSql','Cal.Data.Sql.intToSql','Cal.Data.Sql.intToSql',NULL,'[CALDoc] Builds the SQL text for an int constant.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3426,'yearExpr','Cal.Data.Sql.yearExpr','Cal.Data.Sql.yearExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3427,'linearizeStatement','Cal.Data.Sql.linearizeStatement','Cal.Data.Sql.linearizeStatement',NULL,'[CALDoc] Linearizes the structure of the given statement by extracting all\nstatements nested in any compound statement.  ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3428,'dateTimeDiffExpr','Cal.Data.Sql.dateTimeDiffExpr','Cal.Data.Sql.dateTimeDiffExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3429,'avgExpr','Cal.Data.Sql.avgExpr','Cal.Data.Sql.avgExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3430,'makeJoinSet','Cal.Data.Sql.makeJoinSet','Cal.Data.Sql.makeJoinSet',NULL,'[CALDoc] Construct a join set from a list of JoinInfo values.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3431,'buildJoinTree','Cal.Data.Sql.buildJoinTree','Cal.Data.Sql.buildJoinTree',NULL,'[CALDoc] Constructs a single join tree based on the list of join info items.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3432,'makeJoinSet2','Cal.Data.Sql.makeJoinSet2','Cal.Data.Sql.makeJoinSet2',NULL,'[CALDoc] Construct a join set from a JoinNode tree','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3433,'soundexExpr','Cal.Data.Sql.soundexExpr','Cal.Data.Sql.soundexExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3434,'locate2Expr','Cal.Data.Sql.locate2Expr','Cal.Data.Sql.locate2Expr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3435,'projectColumn','Cal.Data.Sql.projectColumn','Cal.Data.Sql.projectColumn',NULL,'[CALDoc] Adds the specified expression as a result column in the query.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3436,'logExpr','Cal.Data.Sql.logExpr','Cal.Data.Sql.logExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3437,'bitwiseOrExpr','Cal.Data.Sql.bitwiseOrExpr','Cal.Data.Sql.bitwiseOrExpr',NULL,'[CALDoc] Constructs a database expression to perform a bitwise \'or\' of two numeric operand expressions.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3438,'bitwiseAndExpr','Cal.Data.Sql.bitwiseAndExpr','Cal.Data.Sql.bitwiseAndExpr',NULL,'[CALDoc] Constructs a database expression to perform a bitwise \'and\' of two numeric operand expressions.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3439,'makeUniqueTableAliasForQuery','Cal.Data.Sql.makeUniqueTableAliasForQuery','Cal.Data.Sql.makeUniqueTableAliasForQuery',NULL,'[CALDoc] Constructs a table alias from the base name which is distinct within the query.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3440,'modifyTablesInTypedExpr','Cal.Data.Sql.modifyTablesInTypedExpr','Cal.Data.Sql.modifyTablesInTypedExpr',NULL,'[CALDoc] Applies the specified table modification function to all tables in the typed expression.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3441,'dayOfWeekExpr','Cal.Data.Sql.dayOfWeekExpr','Cal.Data.Sql.dayOfWeekExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3442,'untypedParameter','Cal.Data.Sql.untypedParameter','Cal.Data.Sql.untypedParameter',NULL,'[CALDoc] Constructs an untyped expression for a database parameter.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3443,'randExpr','Cal.Data.Sql.randExpr','Cal.Data.Sql.randExpr',NULL,'[CALDoc] ','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3444,'modifyTablesInJoinSet','Cal.Data.Sql.modifyTablesInJoinSet','Cal.Data.Sql.modifyTablesInJoinSet',NULL,'[CALDoc] Applies the specified table modification function to all tables in the join set.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3445,'betweenExpr','Cal.Data.Sql.betweenExpr','Cal.Data.Sql.betweenExpr',NULL,'[CALDoc] Constructs a database expression which test whether the value of one operand expression is between \nthe value of two other operand expressions.','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3446,'intersectionQuery','Cal.Data.Sql.intersectionQuery','Cal.Data.Sql.intersectionQuery',NULL,'[CALDoc] Produces a query which returns the intersection of the two specified queries.\n','2008-04-20 18:17:25','2008-04-20 18:17:25'),(3447,'join2','Cal.Data.Sql.join2','Cal.Data.Sql.join2',NULL,'[CALDoc] Adds the specified joins to the query.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3448,'join','Cal.Data.Sql.join','Cal.Data.Sql.join',NULL,'[CALDoc] Adds a join between 2 tables.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3449,'cleanupJoinNodes','Cal.Data.Sql.cleanupJoinNodes','Cal.Data.Sql.cleanupJoinNodes',NULL,'[CALDoc] Connects up any separate join trees with common tables.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3450,'applyJoinInfo','Cal.Data.Sql.applyJoinInfo','Cal.Data.Sql.applyJoinInfo',NULL,'[CALDoc] Apply a single join info item to the list of join nodes.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3451,'joinNodeToJoinInfo','Cal.Data.Sql.joinNodeToJoinInfo','Cal.Data.Sql.joinNodeToJoinInfo',NULL,'[CALDoc] Attempts to break a <code>JoinNode</code> into one or more <code>JoinInfo</code>s.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3452,'makeJoinInfo2','Cal.Data.Sql.makeJoinInfo2','Cal.Data.Sql.makeJoinInfo2',NULL,'[CALDoc] Creates a join info between 2 tables using the specified linking expression.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3453,'stringField','Cal.Data.Sql.stringField','Cal.Data.Sql.stringField',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3454,'notEqualsTypedExpr','Cal.Data.Sql.notEqualsTypedExpr','Cal.Data.Sql.notEqualsTypedExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3455,'equalsTypedExpr','Cal.Data.Sql.equalsTypedExpr','Cal.Data.Sql.equalsTypedExpr',NULL,'[CALDoc] Checks whether 2 typed expressions are equal.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3456,'bitwiseXorExpr','Cal.Data.Sql.bitwiseXorExpr','Cal.Data.Sql.bitwiseXorExpr',NULL,'[CALDoc] Constructs a database expression to perform a bitwise \'xor\' of two numeric operand expressions.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3457,'intBinaryExpr','Cal.Data.Sql.intBinaryExpr','Cal.Data.Sql.intBinaryExpr',NULL,'[CALDoc] A helper function for constructing an integer binary operator.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3458,'differenceExpr','Cal.Data.Sql.differenceExpr','Cal.Data.Sql.differenceExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3459,'getArgumentsFromFunctionExpr','Cal.Data.Sql.getArgumentsFromFunctionExpr','Cal.Data.Sql.getArgumentsFromFunctionExpr',NULL,'[CALDoc] Returns the arguments from a function expression.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3460,'outputParameterAsJObject','Cal.Data.Sql.outputParameterAsJObject','Cal.Data.Sql.outputParameterAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3461,'makeJoinInfo','Cal.Data.Sql.makeJoinInfo','Cal.Data.Sql.makeJoinInfo',NULL,'[CALDoc] Creates a join info using the query field info specified.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3462,'eqExpr','Cal.Data.Sql.eqExpr','Cal.Data.Sql.eqExpr',NULL,'[CALDoc] Constructs a database expression which test two operand expressions for equality.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3463,'getQueryTableFromQueryFieldExpr','Cal.Data.Sql.getQueryTableFromQueryFieldExpr','Cal.Data.Sql.getQueryTableFromQueryFieldExpr',NULL,'[CALDoc] Returns the field name from a query field expression.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3464,'group','Cal.Data.Sql.group','Cal.Data.Sql.group',NULL,'[CALDoc] Adds grouping to the query.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3465,'groupUntyped','Cal.Data.Sql.groupUntyped','Cal.Data.Sql.groupUntyped',NULL,'[CALDoc] Adds grouping to the query.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3466,'removeUnusedTables','Cal.Data.Sql.removeUnusedTables','Cal.Data.Sql.removeUnusedTables',NULL,'[CALDoc] Removed any joins which are including any tables which are otherwise unused\nin the query.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3467,'removeUnusedTables2','Cal.Data.Sql.removeUnusedTables2','Cal.Data.Sql.removeUnusedTables2',NULL,'[CALDoc] Removed any joins which are including any tables which are otherwise unused\nin the query.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3468,'ifNullExpr','Cal.Data.Sql.ifNullExpr','Cal.Data.Sql.ifNullExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3469,'isUnnamedParameter','Cal.Data.Sql.isUnnamedParameter','Cal.Data.Sql.isUnnamedParameter',NULL,'[CALDoc] Returns whether the parameter is a named one.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3470,'radiansExpr','Cal.Data.Sql.radiansExpr','Cal.Data.Sql.radiansExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3471,'untypedAggregationExpr','Cal.Data.Sql.untypedAggregationExpr','Cal.Data.Sql.untypedAggregationExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3472,'addUnjoinedTable','Cal.Data.Sql.addUnjoinedTable','Cal.Data.Sql.addUnjoinedTable',NULL,'[CALDoc] Forces the specified table to be included in the query, even if no fields\nfrom it are used in the rest of the query.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3473,'intField','Cal.Data.Sql.intField','Cal.Data.Sql.intField',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3474,'isListExpr','Cal.Data.Sql.isListExpr','Cal.Data.Sql.isListExpr',NULL,'[CALDoc] Returns <code>True</code> if the expression represents a list.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3475,'replaceExpr','Cal.Data.Sql.replaceExpr','Cal.Data.Sql.replaceExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3476,'dayOfMonthExpr','Cal.Data.Sql.dayOfMonthExpr','Cal.Data.Sql.dayOfMonthExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3477,'inExpr2','Cal.Data.Sql.inExpr2','Cal.Data.Sql.inExpr2',NULL,'[CALDoc] Constructs a database expression to test whether the value of the first operand is one of the values \nreturned by the list operand expression.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3478,'rangeToRestrictionExpr','Cal.Data.Sql.rangeToRestrictionExpr','Cal.Data.Sql.rangeToRestrictionExpr',NULL,'[CALDoc] Convert a range of values for a field or expression into the equivalent restriction expression.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3479,'ltEqExpr','Cal.Data.Sql.ltEqExpr','Cal.Data.Sql.ltEqExpr',NULL,'[CALDoc] Constructs a database expression to test whether the first operand is less than or equal to the second.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3480,'gtExpr','Cal.Data.Sql.gtExpr','Cal.Data.Sql.gtExpr',NULL,'[CALDoc] Constructs a database expression to test whether the first operand is greater than the second.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3481,'outputJoinNode','Cal.Data.Sql.outputJoinNode','Cal.Data.Sql.outputJoinNode',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3482,'tanExpr','Cal.Data.Sql.tanExpr','Cal.Data.Sql.tanExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3483,'orExpr','Cal.Data.Sql.orExpr','Cal.Data.Sql.orExpr',NULL,'[CALDoc] Constructs a database expression to test whether either of the operand expressions are True.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3484,'NullValue','Cal.Data.Sql.NullValue','Cal.Data.Sql.NullValue',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3485,'functionExpr4','Cal.Data.Sql.functionExpr4','Cal.Data.Sql.functionExpr4',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3486,'operatorPrecedence','Cal.Data.Sql.operatorPrecedence','Cal.Data.Sql.operatorPrecedence',NULL,'[CALDoc] Returns the precedence of the specified operator.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3487,'equalsQueryTable','Cal.Data.Sql.equalsQueryTable','Cal.Data.Sql.equalsQueryTable',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3488,'asinExpr','Cal.Data.Sql.asinExpr','Cal.Data.Sql.asinExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3489,'ltExpr','Cal.Data.Sql.ltExpr','Cal.Data.Sql.ltExpr',NULL,'[CALDoc] Constructs a database expression to test whether the first operand is less than the second.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3490,'group2','Cal.Data.Sql.group2','Cal.Data.Sql.group2',NULL,'[CALDoc] Adds grouping on the specified fields.','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3491,'distinctSumExpr','Cal.Data.Sql.distinctSumExpr','Cal.Data.Sql.distinctSumExpr',NULL,'[CALDoc] ','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3492,'getTimeValueFromConstExpr','Cal.Data.Sql.getTimeValueFromConstExpr','Cal.Data.Sql.getTimeValueFromConstExpr',NULL,'[CALDoc] Returns the time value from a constant expression.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3493,'joins','Cal.Data.Sql.joins','Cal.Data.Sql.joins',NULL,'[CALDoc] Returns the join information from the query.\n','2008-04-20 18:17:26','2008-04-20 18:17:26'),(3494,'makeCommitStatement','Cal.Data.Sql.makeCommitStatement','Cal.Data.Sql.makeCommitStatement',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3495,'charExpr','Cal.Data.Sql.charExpr','Cal.Data.Sql.charExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3496,'splitCompoundStatement','Cal.Data.Sql.splitCompoundStatement','Cal.Data.Sql.splitCompoundStatement',NULL,'[CALDoc] Breaks a compound statement into multiple compound statements with a smaller\nstatement count.  ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3497,'makeCompoundStatement','Cal.Data.Sql.makeCompoundStatement','Cal.Data.Sql.makeCompoundStatement',NULL,'[CALDoc] Creates a compound statement from a list of statements.  ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3498,'addOption','Cal.Data.Sql.addOption','Cal.Data.Sql.addOption',NULL,'[CALDoc] Adds an option to the query.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3499,'piExpr','Cal.Data.Sql.piExpr','Cal.Data.Sql.piExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3500,'stdDevExpr','Cal.Data.Sql.stdDevExpr','Cal.Data.Sql.stdDevExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3501,'modifyTablesInExpr','Cal.Data.Sql.modifyTablesInExpr','Cal.Data.Sql.modifyTablesInExpr',NULL,'[CALDoc] Applies the specified table modification function to all tables in the expression.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3502,'modifyTablesInJoinNode','Cal.Data.Sql.modifyTablesInJoinNode','Cal.Data.Sql.modifyTablesInJoinNode',NULL,'[CALDoc] Applies the specified table modification function to all tables in the join node.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3503,'modifyTablesInQuery','Cal.Data.Sql.modifyTablesInQuery','Cal.Data.Sql.modifyTablesInQuery',NULL,'[CALDoc] Applies the specified table modification function to all tables in the query.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3504,'atan2Expr','Cal.Data.Sql.atan2Expr','Cal.Data.Sql.atan2Expr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3505,'makeUpdateValuesStatement','Cal.Data.Sql.makeUpdateValuesStatement','Cal.Data.Sql.makeUpdateValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3506,'removeConstantGroupingAndOrdering','Cal.Data.Sql.removeConstantGroupingAndOrdering','Cal.Data.Sql.removeConstantGroupingAndOrdering',NULL,'[CALDoc] Removes any constant expressions from the grouping and ordering lists.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3507,'getBestJoinSetForQueryFields','Cal.Data.Sql.getBestJoinSetForQueryFields','Cal.Data.Sql.getBestJoinSetForQueryFields',NULL,'[CALDoc] Returns the best set of joins for the fields in the specified query.\n','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3508,'removeUnusedTablesInJoinSets','Cal.Data.Sql.removeUnusedTablesInJoinSets','Cal.Data.Sql.removeUnusedTablesInJoinSets',NULL,'[CALDoc] Returns a modified list of join nodes containing only the joins required for the specified tables.\n','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3509,'joinSetJoinTree','Cal.Data.Sql.joinSetJoinTree','Cal.Data.Sql.joinSetJoinTree',NULL,'[CALDoc] Returns the join info from the join set.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3510,'isSubqueryTable','Cal.Data.Sql.isSubqueryTable','Cal.Data.Sql.isSubqueryTable',NULL,'[CALDoc] Returns whether the specified table is a subquery table.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3511,'removeOption','Cal.Data.Sql.removeOption','Cal.Data.Sql.removeOption',NULL,'[CALDoc] Removes the option of the same type as the specified one (even if the exact\nvalues don\'t match).','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3512,'convertToStringExpr','Cal.Data.Sql.convertToStringExpr','Cal.Data.Sql.convertToStringExpr',NULL,'[CALDoc] Converts a value to a string value.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3513,'variancePExpr','Cal.Data.Sql.variancePExpr','Cal.Data.Sql.variancePExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3514,'simpleCaseExpr','Cal.Data.Sql.simpleCaseExpr','Cal.Data.Sql.simpleCaseExpr',NULL,'[CALDoc] Constructs a database expression for a simple case statement.\n','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3515,'newSqlBuilderState','Cal.Data.Sql.newSqlBuilderState','Cal.Data.Sql.newSqlBuilderState',NULL,'[CALDoc] Creates an empty SQL builder state object.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3516,'makeQueryTable','Cal.Data.Sql.makeQueryTable','Cal.Data.Sql.makeQueryTable',NULL,'[CALDoc] Constructs a query table using the specified table name.\n','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3517,'makeQueryTableWithAlias','Cal.Data.Sql.makeQueryTableWithAlias','Cal.Data.Sql.makeQueryTableWithAlias',NULL,'[CALDoc] Constructs a query table using the specified table name and base alias name.\n','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3518,'joinSetName','Cal.Data.Sql.joinSetName','Cal.Data.Sql.joinSetName',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3519,'convertToIntExpr','Cal.Data.Sql.convertToIntExpr','Cal.Data.Sql.convertToIntExpr',NULL,'[CALDoc] Converts a value to a int value.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3520,'getSubQueryFromExpr','Cal.Data.Sql.getSubQueryFromExpr','Cal.Data.Sql.getSubQueryFromExpr',NULL,'[CALDoc] The <code>isSubQueryExpr</code> retrieves the <code>Query</code> type from untyped expression.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3521,'untypedListExpr','Cal.Data.Sql.untypedListExpr','Cal.Data.Sql.untypedListExpr',NULL,'[CALDoc] Constructs an untyped database expression for a list of values.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3522,'tableNameText','Cal.Data.Sql.tableNameText','Cal.Data.Sql.tableNameText',NULL,'[CALDoc] Builds the query text for a table name (including quotes where needed).','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3523,'ucaseExpr','Cal.Data.Sql.ucaseExpr','Cal.Data.Sql.ucaseExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3524,'acosExpr','Cal.Data.Sql.acosExpr','Cal.Data.Sql.acosExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3525,'countExpr','Cal.Data.Sql.countExpr','Cal.Data.Sql.countExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3526,'isExprConstant','Cal.Data.Sql.isExprConstant','Cal.Data.Sql.isExprConstant',NULL,'[CALDoc] Returns whether the expression is a constant value or an expression composed of only constant values.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3527,'gtEqExpr','Cal.Data.Sql.gtEqExpr','Cal.Data.Sql.gtEqExpr',NULL,'[CALDoc] Constructs a database expression to test whether the first operand is greater than or equal to the second.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3528,'inExpr','Cal.Data.Sql.inExpr','Cal.Data.Sql.inExpr',NULL,'[CALDoc] Constructs a database expression to test whether the value of the first operand is equal to the value\nreturned by one of the list operand expressions.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3529,'ListExpr','Cal.Data.Sql.ListExpr','Cal.Data.Sql.ListExpr',NULL,'[CALDoc] A list of database expressions.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3530,'numericConstant','Cal.Data.Sql.numericConstant','Cal.Data.Sql.numericConstant',NULL,'[CALDoc] Construct a database expression for a numeric literal.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3531,'substringExpr','Cal.Data.Sql.substringExpr','Cal.Data.Sql.substringExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3532,'functionExpr3','Cal.Data.Sql.functionExpr3','Cal.Data.Sql.functionExpr3',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3533,'asciiExpr','Cal.Data.Sql.asciiExpr','Cal.Data.Sql.asciiExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3534,'isStringConstExpr','Cal.Data.Sql.isStringConstExpr','Cal.Data.Sql.isStringConstExpr',NULL,'[CALDoc] Returns <code>True</code> if the expression represents a constant containing a string value.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3535,'outputQueryOption','Cal.Data.Sql.outputQueryOption','Cal.Data.Sql.outputQueryOption',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3536,'isSingletonResultQuery','Cal.Data.Sql.isSingletonResultQuery','Cal.Data.Sql.isSingletonResultQuery',NULL,'[CALDoc] The <code>isSubQueryExpr</code> tests passed in query if it going to retrieve single column and value in the result set.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3537,'getGroups','Cal.Data.Sql.getGroups','Cal.Data.Sql.getGroups',NULL,'[CALDoc] Returns: The list of groups for the given query, or if the query is a union\nthen the groups for the first query in the union.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3538,'isFunctionExpr','Cal.Data.Sql.isFunctionExpr','Cal.Data.Sql.isFunctionExpr',NULL,'[CALDoc] Returns <code>True</code> if the expression represents a function (or operator)\napplication.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3539,'getFunctionFromFunctionExpr','Cal.Data.Sql.getFunctionFromFunctionExpr','Cal.Data.Sql.getFunctionFromFunctionExpr',NULL,'[CALDoc] Returns the function type from a function expression.\n','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3540,'bitwiseNotExpr','Cal.Data.Sql.bitwiseNotExpr','Cal.Data.Sql.bitwiseNotExpr',NULL,'[CALDoc] Constructs a database expression for the application of the bitwise \'not\' operator to an integer argument.','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3541,'nowExpr','Cal.Data.Sql.nowExpr','Cal.Data.Sql.nowExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3542,'functionExpr0','Cal.Data.Sql.functionExpr0','Cal.Data.Sql.functionExpr0',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3543,'atanExpr','Cal.Data.Sql.atanExpr','Cal.Data.Sql.atanExpr',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3544,'outputExprAsJObject','Cal.Data.Sql.outputExprAsJObject','Cal.Data.Sql.outputExprAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3545,'outputJoinTypeAsJObject','Cal.Data.Sql.outputJoinTypeAsJObject','Cal.Data.Sql.outputJoinTypeAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:27','2008-04-20 18:17:27'),(3546,'outputJoinType','Cal.Data.Sql.outputJoinType','Cal.Data.Sql.outputJoinType',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3547,'doubleField','Cal.Data.Sql.doubleField','Cal.Data.Sql.doubleField',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3548,'isSameOptionType','Cal.Data.Sql.isSameOptionType','Cal.Data.Sql.isSameOptionType',NULL,'[CALDoc] Returns whether the specified options are of the same type (not necessarily\nthe same value).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3549,'getQueryTableName','Cal.Data.Sql.getQueryTableName','Cal.Data.Sql.getQueryTableName',NULL,'[CALDoc] Returns the name of the table (without quotes).\n','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3550,'addExpr','Cal.Data.Sql.addExpr','Cal.Data.Sql.addExpr',NULL,'[CALDoc] Constructs a database expression to add two numeric operand expressions.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3551,'outputQueryTableAsJObject','Cal.Data.Sql.outputQueryTableAsJObject','Cal.Data.Sql.outputQueryTableAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3552,'convertDateQueryFieldsToTimeExprs','Cal.Data.Sql.convertDateQueryFieldsToTimeExprs','Cal.Data.Sql.convertDateQueryFieldsToTimeExprs',NULL,'[CALDoc] The function recurses the Expr Boolean and makes sure that every item involved in operation against time constant \nis casted to datetime format explictly.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3553,'isQueryFieldExpr','Cal.Data.Sql.isQueryFieldExpr','Cal.Data.Sql.isQueryFieldExpr',NULL,'[CALDoc] Returns <code>True</code> if the expression represents a field in a query table.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3554,'isBinaryFunction','Cal.Data.Sql.isBinaryFunction','Cal.Data.Sql.isBinaryFunction',NULL,'[CALDoc] Returns: True when a given function is a function of two parameters','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3555,'convertToTimeExpr','Cal.Data.Sql.convertToTimeExpr','Cal.Data.Sql.convertToTimeExpr',NULL,'[CALDoc] It applies ConvertToTime function to the passed in expression. ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3556,'isTimeConstExpr','Cal.Data.Sql.isTimeConstExpr','Cal.Data.Sql.isTimeConstExpr',NULL,'[CALDoc] Returns <code>True</code> if the expression represents a constant containing a time value.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3557,'typeOfExpr','Cal.Data.Sql.typeOfExpr','Cal.Data.Sql.typeOfExpr',NULL,'[CALDoc] Returns the type of the values represented by this typed expression.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3558,'timeIntervalToSql','Cal.Data.Sql.timeIntervalToSql','Cal.Data.Sql.timeIntervalToSql',NULL,'[CALDoc] Builds the SQL text for a time interval constant.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3559,'modExpr','Cal.Data.Sql.modExpr','Cal.Data.Sql.modExpr',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3560,'repeatExpr','Cal.Data.Sql.repeatExpr','Cal.Data.Sql.repeatExpr',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3561,'expressionText2','Cal.Data.Sql.expressionText2','Cal.Data.Sql.expressionText2',NULL,'[CALDoc] Builds the query text for a single expression.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3562,'queryText2','Cal.Data.Sql.queryText2','Cal.Data.Sql.queryText2',NULL,'[CALDoc] Generates the SQL text for the specified database query.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3563,'constructQuery','Cal.Data.Sql.constructQuery','Cal.Data.Sql.constructQuery',NULL,'[CALDoc] Constructs a complete SQL query from the component parts.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3564,'buildOrderByClause','Cal.Data.Sql.buildOrderByClause','Cal.Data.Sql.buildOrderByClause',NULL,'[CALDoc] Constructs the text of the ORDER BY clause for the query, not including the\n\'ORDER BY\' keyword (or equivalent).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3565,'buildHavingClause','Cal.Data.Sql.buildHavingClause','Cal.Data.Sql.buildHavingClause',NULL,'[CALDoc] Constructs the text of the HAVING clause for the query, not including the\n\'HAVING\' keywork (or equivalent).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3566,'buildGroupByClause','Cal.Data.Sql.buildGroupByClause','Cal.Data.Sql.buildGroupByClause',NULL,'[CALDoc] Constructs the text of the GROUP BY clause for the query, not including the\n\'GROUP BY\' keyword (or equivalent).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3567,'buildWhereClause','Cal.Data.Sql.buildWhereClause','Cal.Data.Sql.buildWhereClause',NULL,'[CALDoc] Constructs the text of the WHERE clause for the query, not including the\n\'WHERE\' keyword (or equivalent).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3568,'buildFromClause','Cal.Data.Sql.buildFromClause','Cal.Data.Sql.buildFromClause',NULL,'[CALDoc] Constructs the text of the FROM clause for the query, not including the \'FROM\'\nkeyword (or equivalent).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3569,'buildSelectClause','Cal.Data.Sql.buildSelectClause','Cal.Data.Sql.buildSelectClause',NULL,'[CALDoc] Constructs the text of the SELECT clause for the query, not including the\n\'SELECT\' keyword (or equivalent).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3570,'addQueryTablesToState','Cal.Data.Sql.addQueryTablesToState','Cal.Data.Sql.addQueryTablesToState',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3571,'getStateOuterQueryTables','Cal.Data.Sql.getStateOuterQueryTables','Cal.Data.Sql.getStateOuterQueryTables',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3572,'checkValidQuery','Cal.Data.Sql.checkValidQuery','Cal.Data.Sql.checkValidQuery',NULL,'[CALDoc] Throws an error if the query is not valid.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3573,'checkValidResultColumns','Cal.Data.Sql.checkValidResultColumns','Cal.Data.Sql.checkValidResultColumns',NULL,'[CALDoc] Checks that there is at least one return column.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3574,'checkValidGroupByQuery','Cal.Data.Sql.checkValidGroupByQuery','Cal.Data.Sql.checkValidGroupByQuery',NULL,'[CALDoc] If there is any grouping fields in the query, then this will\ncheck that all the return column expressions are group on or\nare aggregate expressions.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3575,'functionToSql','Cal.Data.Sql.functionToSql','Cal.Data.Sql.functionToSql',NULL,'[CALDoc] Builds the SQL text for a SQL function application.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3576,'timeToSql','Cal.Data.Sql.timeToSql','Cal.Data.Sql.timeToSql',NULL,'[CALDoc] Builds the SQL text for a time constant.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3577,'booleanToSql','Cal.Data.Sql.booleanToSql','Cal.Data.Sql.booleanToSql',NULL,'[CALDoc] Builds the SQL text for a boolean constant.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3578,'doubleToSql','Cal.Data.Sql.doubleToSql','Cal.Data.Sql.doubleToSql',NULL,'[CALDoc] Builds the SQL text for a double constant.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3579,'stringToSql','Cal.Data.Sql.stringToSql','Cal.Data.Sql.stringToSql',NULL,'[CALDoc] Builds the SQL text for a string constant.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3580,'nullToSql','Cal.Data.Sql.nullToSql','Cal.Data.Sql.nullToSql',NULL,'[CALDoc] Builds the SQL text for a null value constant.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3581,'PrimitiveValueBuilder','Cal.Data.Sql.PrimitiveValueBuilder','Cal.Data.Sql.PrimitiveValueBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3582,'getQueryTableAlias','Cal.Data.Sql.getQueryTableAlias','Cal.Data.Sql.getQueryTableAlias',NULL,'[CALDoc] Returns the table alias for a query table.\n','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3583,'quoteIdentifier','Cal.Data.Sql.quoteIdentifier','Cal.Data.Sql.quoteIdentifier',NULL,'[CALDoc] Adds quotes to a name (such as a table).','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3584,'differenceQuery','Cal.Data.Sql.differenceQuery','Cal.Data.Sql.differenceQuery',NULL,'[CALDoc] Produces a query which returns the difference of the two specified queries.\n','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3585,'differenceQuery2','Cal.Data.Sql.differenceQuery2','Cal.Data.Sql.differenceQuery2',NULL,'[CALDoc] Produces a query which returns the difference of the two specified queries.\n','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3586,'removeProjectedColumns','Cal.Data.Sql.removeProjectedColumns','Cal.Data.Sql.removeProjectedColumns',NULL,'[CALDoc] Removes all projected columns from the query.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3587,'restrict2','Cal.Data.Sql.restrict2','Cal.Data.Sql.restrict2',NULL,'[CALDoc] Adds the specified restrictions on the rows returned by the query.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3588,'restrict','Cal.Data.Sql.restrict','Cal.Data.Sql.restrict',NULL,'[CALDoc] Adds a restriction on the rows returned by the query.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3589,'isGroupRestriction','Cal.Data.Sql.isGroupRestriction','Cal.Data.Sql.isGroupRestriction',NULL,'[CALDoc] Returns whether the restriction expression applies to groups or record\nvalues.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3590,'exprUsesAggregation','Cal.Data.Sql.exprUsesAggregation','Cal.Data.Sql.exprUsesAggregation',NULL,'[CALDoc] Returns whether the expression uses aggregate functions.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3591,'andExpr','Cal.Data.Sql.andExpr','Cal.Data.Sql.andExpr',NULL,'[CALDoc] Constructs a database expression to test whether both of the operand expressions are True.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3592,'falseConstant','Cal.Data.Sql.falseConstant','Cal.Data.Sql.falseConstant',NULL,'[CALDoc] A database expression for the Boolean value False.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3593,'SubQueryExpr','Cal.Data.Sql.SubQueryExpr','Cal.Data.Sql.SubQueryExpr',NULL,'[CALDoc] A subquery expression.\n','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3594,'existsExpr','Cal.Data.Sql.existsExpr','Cal.Data.Sql.existsExpr',NULL,'[CALDoc] Constructs a database expression to test whether the argument subquery expression returns any rows.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3595,'notExpr','Cal.Data.Sql.notExpr','Cal.Data.Sql.notExpr',NULL,'[CALDoc] Constructs a database expression for the application of the \'not\' operator to a Boolean argument.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3596,'untypedBinaryExpr','Cal.Data.Sql.untypedBinaryExpr','Cal.Data.Sql.untypedBinaryExpr',NULL,'[CALDoc] Constructs an untyped database expression for the application of a binary operator.\n','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3597,'toTypedExpr','Cal.Data.Sql.toTypedExpr','Cal.Data.Sql.toTypedExpr',NULL,'[CALDoc] Returns a typed expression from the untyped expression.','2008-04-20 18:17:28','2008-04-20 18:17:28'),(3598,'wrapQuery','Cal.Data.Sql.wrapQuery','Cal.Data.Sql.wrapQuery',NULL,'[CALDoc] Wraps the query in an outer query which projects the same columns as the\noriginal.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3599,'wrapQuery2','Cal.Data.Sql.wrapQuery2','Cal.Data.Sql.wrapQuery2',NULL,'[CALDoc] Wraps the query in an outer query which projects the same columns as the\noriginal.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3600,'newQuery','Cal.Data.Sql.newQuery','Cal.Data.Sql.newQuery',NULL,'[CALDoc] Creates a new, empty query.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3601,'order2','Cal.Data.Sql.order2','Cal.Data.Sql.order2',NULL,'[CALDoc] Adds sorting on the specified fields.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3602,'untypedField','Cal.Data.Sql.untypedField','Cal.Data.Sql.untypedField',NULL,'[CALDoc] Returns a query field for the specified table.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3603,'setColumnAliases','Cal.Data.Sql.setColumnAliases','Cal.Data.Sql.setColumnAliases',NULL,'[CALDoc] Sets the aliases for the first N projected columns.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3604,'makeSubQueryTable','Cal.Data.Sql.makeSubQueryTable','Cal.Data.Sql.makeSubQueryTable',NULL,'[CALDoc] Constructs a subquery table using the specified query and alias.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3605,'fixSubqueryOrdering','Cal.Data.Sql.fixSubqueryOrdering','Cal.Data.Sql.fixSubqueryOrdering',NULL,'[CALDoc] Removes ordering for the subquery unless it is required (as with a <code>TopN</code>\nquery).','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3606,'removeOrdering','Cal.Data.Sql.removeOrdering','Cal.Data.Sql.removeOrdering',NULL,'[CALDoc] Removes all ordering from the query.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3607,'defaultColumnAlias','Cal.Data.Sql.defaultColumnAlias','Cal.Data.Sql.defaultColumnAlias',NULL,'[CALDoc] Returns a default column alias.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3608,'projectedColumnAliases','Cal.Data.Sql.projectedColumnAliases','Cal.Data.Sql.projectedColumnAliases',NULL,'[CALDoc] Returns the aliases for the query\'s projected columns.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3609,'isTopNQuery','Cal.Data.Sql.isTopNQuery','Cal.Data.Sql.isTopNQuery',NULL,'[CALDoc] Returns whether a <code>TopN</code> option is specified for the query.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3610,'projectColumnsIfNecessary','Cal.Data.Sql.projectColumnsIfNecessary','Cal.Data.Sql.projectColumnsIfNecessary',NULL,'[CALDoc] Adds the specified expressions to the projected columns, if they aren\'t\nalready projected.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3611,'projectColumnIfNecessary','Cal.Data.Sql.projectColumnIfNecessary','Cal.Data.Sql.projectColumnIfNecessary',NULL,'[CALDoc] Adds the specified expression to the projected columns, if it isn\'t already\nprojected.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3612,'project','Cal.Data.Sql.project','Cal.Data.Sql.project',NULL,'[CALDoc] Adds the specified expressions as result columns in the query.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3613,'projectWithAliases','Cal.Data.Sql.projectWithAliases','Cal.Data.Sql.projectWithAliases',NULL,'[CALDoc] Adds the specified expressions as result columns with the corresponding\naliases in the query.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3614,'getProjectedColumns','Cal.Data.Sql.getProjectedColumns','Cal.Data.Sql.getProjectedColumns',NULL,'[CALDoc] Returns the projected columns for the query.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3615,'projectedColumnsWithAliases','Cal.Data.Sql.projectedColumnsWithAliases','Cal.Data.Sql.projectedColumnsWithAliases',NULL,'[CALDoc] Returns the projected columns for the query.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3616,'secondExpr','Cal.Data.Sql.secondExpr','Cal.Data.Sql.secondExpr',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3617,'constructUnionQuery','Cal.Data.Sql.constructUnionQuery','Cal.Data.Sql.constructUnionQuery',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3618,'quarterExpr','Cal.Data.Sql.quarterExpr','Cal.Data.Sql.quarterExpr',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3619,'subtractExpr','Cal.Data.Sql.subtractExpr','Cal.Data.Sql.subtractExpr',NULL,'[CALDoc] Constructs a database expression to subtract two numeric operand expressions.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3620,'getExpressionTables','Cal.Data.Sql.getExpressionTables','Cal.Data.Sql.getExpressionTables',NULL,'[CALDoc] Returns all the tables used in the specified expression.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3621,'getQueryTables','Cal.Data.Sql.getQueryTables','Cal.Data.Sql.getQueryTables',NULL,'[CALDoc] Returns a list of the tables used in the query.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3622,'getJoinTreeTables','Cal.Data.Sql.getJoinTreeTables','Cal.Data.Sql.getJoinTreeTables',NULL,'[CALDoc] Returns all the leaf tables from the specified join tree.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3623,'notEqExpr','Cal.Data.Sql.notEqExpr','Cal.Data.Sql.notEqExpr',NULL,'[CALDoc] Constructs a database expression which tests two operand expressions for inequality.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3624,'isAggregationFunction','Cal.Data.Sql.isAggregationFunction','Cal.Data.Sql.isAggregationFunction',NULL,'[CALDoc] Indicates whether a specified function is an aggregation function or not.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3625,'outputQueryAsJObject','Cal.Data.Sql.outputQueryAsJObject','Cal.Data.Sql.outputQueryAsJObject',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3626,'distinctCountExpr','Cal.Data.Sql.distinctCountExpr','Cal.Data.Sql.distinctCountExpr',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3627,'outputOrdering','Cal.Data.Sql.outputOrdering','Cal.Data.Sql.outputOrdering',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3628,'outputQuery','Cal.Data.Sql.outputQuery','Cal.Data.Sql.outputQuery',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3629,'outputQueryTable','Cal.Data.Sql.outputQueryTable','Cal.Data.Sql.outputQueryTable',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3630,'outputExpression','Cal.Data.Sql.outputExpression','Cal.Data.Sql.outputExpression',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3631,'outputProjectedColumn','Cal.Data.Sql.outputProjectedColumn','Cal.Data.Sql.outputProjectedColumn',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3632,'outputDbFunction','Cal.Data.Sql.outputDbFunction','Cal.Data.Sql.outputDbFunction',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3633,'defaultFunctionName','Cal.Data.Sql.defaultFunctionName','Cal.Data.Sql.defaultFunctionName',NULL,'[CALDoc] Returns the default name of a database function.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3634,'outputParameter','Cal.Data.Sql.outputParameter','Cal.Data.Sql.outputParameter',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3635,'trueConstant','Cal.Data.Sql.trueConstant','Cal.Data.Sql.trueConstant',NULL,'[CALDoc] A database expression for the Boolean value True.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3636,'showQueryTable','Cal.Data.Sql.showQueryTable','Cal.Data.Sql.showQueryTable',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3637,'cosExpr','Cal.Data.Sql.cosExpr','Cal.Data.Sql.cosExpr',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3638,'minuteExpr','Cal.Data.Sql.minuteExpr','Cal.Data.Sql.minuteExpr',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3639,'listToSql','Cal.Data.Sql.listToSql','Cal.Data.Sql.listToSql',NULL,'[CALDoc] Builds the SQL text for a list of expressions.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3640,'convertToDoubleExpr','Cal.Data.Sql.convertToDoubleExpr','Cal.Data.Sql.convertToDoubleExpr',NULL,'[CALDoc] Converts a value to a double value.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3641,'functionExpr1','Cal.Data.Sql.functionExpr1','Cal.Data.Sql.functionExpr1',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3642,'parameterToSql','Cal.Data.Sql.parameterToSql','Cal.Data.Sql.parameterToSql',NULL,'[CALDoc] Builds the SQL text for a list of expressions.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3643,'isTopNOption','Cal.Data.Sql.isTopNOption','Cal.Data.Sql.isTopNOption',NULL,'[CALDoc] Returns whether the query option specifies TopN criteria.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3644,'multiplyExpr','Cal.Data.Sql.multiplyExpr','Cal.Data.Sql.multiplyExpr',NULL,'[CALDoc] Constructs a database expression to multiply two numeric operand expressions.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3645,'numBinaryExpr','Cal.Data.Sql.numBinaryExpr','Cal.Data.Sql.numBinaryExpr',NULL,'[CALDoc] A helper function for constructing a numeric binary operator.\n','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3646,'addParens','Cal.Data.Sql.addParens','Cal.Data.Sql.addParens',NULL,'[CALDoc] Adds parentheses around some expression text.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3647,'concatExpr','Cal.Data.Sql.concatExpr','Cal.Data.Sql.concatExpr',NULL,'[CALDoc] Constructs a database expression to concatenate two string operand expressions.','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3648,'makeDeleteRowsStatement','Cal.Data.Sql.makeDeleteRowsStatement','Cal.Data.Sql.makeDeleteRowsStatement',NULL,'[CALDoc] ','2008-04-20 18:17:29','2008-04-20 18:17:29'),(3649,'roundExpr','Cal.Data.Sql.roundExpr','Cal.Data.Sql.roundExpr',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3650,'functionExpr2','Cal.Data.Sql.functionExpr2','Cal.Data.Sql.functionExpr2',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3651,'toUntypedExpr','Cal.Data.Sql.toUntypedExpr','Cal.Data.Sql.toUntypedExpr',NULL,'[CALDoc] Returns the untyped expression from a typed expression.','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3652,'untypedFunctionExpr','Cal.Data.Sql.untypedFunctionExpr','Cal.Data.Sql.untypedFunctionExpr',NULL,'[CALDoc] Constructs an untyped database expression for a call to a database function.\n','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3653,'orderingExpressions','Cal.Data.Sql.orderingExpressions','Cal.Data.Sql.orderingExpressions',NULL,'[CALDoc] Returns the ordering info for the query.','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3654,'jMakeNamedParameter','Cal.Data.Sql.jMakeNamedParameter','Cal.Data.Sql.jMakeNamedParameter',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3655,'jMakeUnnamedParameter','Cal.Data.Sql.jMakeUnnamedParameter','Cal.Data.Sql.jMakeUnnamedParameter',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3656,'jMakeSqlOrdering','Cal.Data.Sql.jMakeSqlOrdering','Cal.Data.Sql.jMakeSqlOrdering',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3657,'jMakeQueryColumn','Cal.Data.Sql.jMakeQueryColumn','Cal.Data.Sql.jMakeQueryColumn',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3658,'jMakeUnionQuery','Cal.Data.Sql.jMakeUnionQuery','Cal.Data.Sql.jMakeUnionQuery',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3659,'jMakeSelectQuery','Cal.Data.Sql.jMakeSelectQuery','Cal.Data.Sql.jMakeSelectQuery',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3660,'jMakeSubQueryExpression','Cal.Data.Sql.jMakeSubQueryExpression','Cal.Data.Sql.jMakeSubQueryExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3661,'jMakeFunctionExpression','Cal.Data.Sql.jMakeFunctionExpression','Cal.Data.Sql.jMakeFunctionExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3662,'jMakeListExpression','Cal.Data.Sql.jMakeListExpression','Cal.Data.Sql.jMakeListExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3663,'jMakeParameterExpression','Cal.Data.Sql.jMakeParameterExpression','Cal.Data.Sql.jMakeParameterExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3664,'jMakeTimeConstantExpression','Cal.Data.Sql.jMakeTimeConstantExpression','Cal.Data.Sql.jMakeTimeConstantExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3665,'jMakeBooleanConstantExpression','Cal.Data.Sql.jMakeBooleanConstantExpression','Cal.Data.Sql.jMakeBooleanConstantExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3666,'jMakeNumericConstantExpression','Cal.Data.Sql.jMakeNumericConstantExpression','Cal.Data.Sql.jMakeNumericConstantExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3667,'jMakeStringConstantExpression','Cal.Data.Sql.jMakeStringConstantExpression','Cal.Data.Sql.jMakeStringConstantExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3668,'jMakeNullConstantExpression','Cal.Data.Sql.jMakeNullConstantExpression','Cal.Data.Sql.jMakeNullConstantExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3669,'jMakeQueryFieldExpression','Cal.Data.Sql.jMakeQueryFieldExpression','Cal.Data.Sql.jMakeQueryFieldExpression',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3670,'jConvertToTime','Cal.Data.Sql.jConvertToTime','Cal.Data.Sql.jConvertToTime',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3671,'jConvertToDouble','Cal.Data.Sql.jConvertToDouble','Cal.Data.Sql.jConvertToDouble',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3672,'jConvertToInt','Cal.Data.Sql.jConvertToInt','Cal.Data.Sql.jConvertToInt',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3673,'jConvertToString','Cal.Data.Sql.jConvertToString','Cal.Data.Sql.jConvertToString',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3674,'jSearchedCaseOperator','Cal.Data.Sql.jSearchedCaseOperator','Cal.Data.Sql.jSearchedCaseOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3675,'jSimpleCaseOperator','Cal.Data.Sql.jSimpleCaseOperator','Cal.Data.Sql.jSimpleCaseOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3676,'jBetweenOperator','Cal.Data.Sql.jBetweenOperator','Cal.Data.Sql.jBetweenOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3677,'jBitwiseXOrOperator','Cal.Data.Sql.jBitwiseXOrOperator','Cal.Data.Sql.jBitwiseXOrOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3678,'jBitwiseOrOperator','Cal.Data.Sql.jBitwiseOrOperator','Cal.Data.Sql.jBitwiseOrOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3679,'jBitwiseAndOperator','Cal.Data.Sql.jBitwiseAndOperator','Cal.Data.Sql.jBitwiseAndOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3680,'jModulusOperator','Cal.Data.Sql.jModulusOperator','Cal.Data.Sql.jModulusOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3681,'jDivideOperator','Cal.Data.Sql.jDivideOperator','Cal.Data.Sql.jDivideOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3682,'jMultiplyOperator','Cal.Data.Sql.jMultiplyOperator','Cal.Data.Sql.jMultiplyOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3683,'jMinusOperator','Cal.Data.Sql.jMinusOperator','Cal.Data.Sql.jMinusOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3684,'jPlusOperator','Cal.Data.Sql.jPlusOperator','Cal.Data.Sql.jPlusOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3685,'jConcatOperator','Cal.Data.Sql.jConcatOperator','Cal.Data.Sql.jConcatOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3686,'jInOperator','Cal.Data.Sql.jInOperator','Cal.Data.Sql.jInOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3687,'jLikeOperator','Cal.Data.Sql.jLikeOperator','Cal.Data.Sql.jLikeOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3688,'jOrOperator','Cal.Data.Sql.jOrOperator','Cal.Data.Sql.jOrOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3689,'jAndOperator','Cal.Data.Sql.jAndOperator','Cal.Data.Sql.jAndOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3690,'jNotEqualOperator','Cal.Data.Sql.jNotEqualOperator','Cal.Data.Sql.jNotEqualOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3691,'jGreaterThanOrEqualOperator','Cal.Data.Sql.jGreaterThanOrEqualOperator','Cal.Data.Sql.jGreaterThanOrEqualOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3692,'jGreaterThanOperator','Cal.Data.Sql.jGreaterThanOperator','Cal.Data.Sql.jGreaterThanOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3693,'jLessThanOrEqualOperator','Cal.Data.Sql.jLessThanOrEqualOperator','Cal.Data.Sql.jLessThanOrEqualOperator',NULL,'[CALDoc] ','2008-04-20 18:17:30','2008-04-20 18:17:30'),(3694,'jLessThanOperator','Cal.Data.Sql.jLessThanOperator','Cal.Data.Sql.jLessThanOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3695,'jEqualOperator','Cal.Data.Sql.jEqualOperator','Cal.Data.Sql.jEqualOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3696,'jExistsOperator','Cal.Data.Sql.jExistsOperator','Cal.Data.Sql.jExistsOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3697,'jIsNotNullOperator','Cal.Data.Sql.jIsNotNullOperator','Cal.Data.Sql.jIsNotNullOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3698,'jIsNullOperator','Cal.Data.Sql.jIsNullOperator','Cal.Data.Sql.jIsNullOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3699,'jNegateOperator','Cal.Data.Sql.jNegateOperator','Cal.Data.Sql.jNegateOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3700,'jBitwiseNotOperator','Cal.Data.Sql.jBitwiseNotOperator','Cal.Data.Sql.jBitwiseNotOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3701,'jNotOperator','Cal.Data.Sql.jNotOperator','Cal.Data.Sql.jNotOperator',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3702,'jMakeDatabaseFunction','Cal.Data.Sql.jMakeDatabaseFunction','Cal.Data.Sql.jMakeDatabaseFunction',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3703,'jMakeJoinSubtreeNode','Cal.Data.Sql.jMakeJoinSubtreeNode','Cal.Data.Sql.jMakeJoinSubtreeNode',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3704,'jMakeJoinTableNode','Cal.Data.Sql.jMakeJoinTableNode','Cal.Data.Sql.jMakeJoinTableNode',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3705,'jFULL_OUTER_JOIN','Cal.Data.Sql.jFULL_OUTER_JOIN','Cal.Data.Sql.jFULL_OUTER_JOIN',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3706,'jRIGHT_OUTER_JOIN','Cal.Data.Sql.jRIGHT_OUTER_JOIN','Cal.Data.Sql.jRIGHT_OUTER_JOIN',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3707,'jLEFT_OUTER_JOIN','Cal.Data.Sql.jLEFT_OUTER_JOIN','Cal.Data.Sql.jLEFT_OUTER_JOIN',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3708,'jINNER_JOIN','Cal.Data.Sql.jINNER_JOIN','Cal.Data.Sql.jINNER_JOIN',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3709,'jMakeTopNOption','Cal.Data.Sql.jMakeTopNOption','Cal.Data.Sql.jMakeTopNOption',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3710,'jMakeDistinctOption','Cal.Data.Sql.jMakeDistinctOption','Cal.Data.Sql.jMakeDistinctOption',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3711,'jMakeSubQueryTable','Cal.Data.Sql.jMakeSubQueryTable','Cal.Data.Sql.jMakeSubQueryTable',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3712,'jMakeBaseTable','Cal.Data.Sql.jMakeBaseTable','Cal.Data.Sql.jMakeBaseTable',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3713,'BaseTable','Cal.Data.Sql.BaseTable','Cal.Data.Sql.BaseTable',NULL,'[CALDoc] A reference to an actual database table with a given alias for the query.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3714,'SubQueryTable','Cal.Data.Sql.SubQueryTable','Cal.Data.Sql.SubQueryTable',NULL,'[CALDoc] A nested SELECT query to be treated as a query table with a given alias.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3715,'OpaqueSubQueryTable','Cal.Data.Sql.OpaqueSubQueryTable','Cal.Data.Sql.OpaqueSubQueryTable',NULL,'[CALDoc] A nested SELECT statement to be treated as a query table with a given alias.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3716,'Distinct','Cal.Data.Sql.Distinct','Cal.Data.Sql.Distinct',NULL,'[CALDoc] This option indicates that only distinct rows should be returned for the query.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3717,'TopN','Cal.Data.Sql.TopN','Cal.Data.Sql.TopN',NULL,'[CALDoc] This option indicates that the first N rows should be returned.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3718,'JoinInfo','Cal.Data.Sql.JoinInfo','Cal.Data.Sql.JoinInfo',NULL,'[CALDoc] Information about a join between 2 tables.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3719,'InnerJoin','Cal.Data.Sql.InnerJoin','Cal.Data.Sql.InnerJoin',NULL,'[CALDoc] The inner join option indicates that rows should be returned where \nthe join condition between the table is satisfied.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3720,'LeftOuterJoin','Cal.Data.Sql.LeftOuterJoin','Cal.Data.Sql.LeftOuterJoin',NULL,'[CALDoc] The left outer join option indicates that all rows from the left table should \nbe included along with values from the right table where the join condition is satisfied.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3721,'RightOuterJoin','Cal.Data.Sql.RightOuterJoin','Cal.Data.Sql.RightOuterJoin',NULL,'[CALDoc] The right outer join option indicates that all rows from the right table should \nbe included along with values from the left table where the join condition is satisfied.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3722,'FullOuterJoin','Cal.Data.Sql.FullOuterJoin','Cal.Data.Sql.FullOuterJoin',NULL,'[CALDoc] The full outer join option indicates that all rows satisfying the join condition should be returned\nas well as any unmatched rows from both the left and right tables.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3723,'JoinTable','Cal.Data.Sql.JoinTable','Cal.Data.Sql.JoinTable',NULL,'[CALDoc] A node representing a single query table.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3724,'JoinSubtree','Cal.Data.Sql.JoinSubtree','Cal.Data.Sql.JoinSubtree',NULL,'[CALDoc] A node specifying a join between tables in two join trees.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3725,'JoinSet','Cal.Data.Sql.JoinSet','Cal.Data.Sql.JoinSet',NULL,'[CALDoc] A named set of joins.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3726,'QueryField','Cal.Data.Sql.QueryField','Cal.Data.Sql.QueryField',NULL,'[CALDoc] A reference to a field in a query table.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3727,'ConstExpr','Cal.Data.Sql.ConstExpr','Cal.Data.Sql.ConstExpr',NULL,'[CALDoc] A literal value expression.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3728,'ParameterExpr','Cal.Data.Sql.ParameterExpr','Cal.Data.Sql.ParameterExpr',NULL,'[CALDoc] A parameter placeholder expression.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3729,'FunctionExpr','Cal.Data.Sql.FunctionExpr','Cal.Data.Sql.FunctionExpr',NULL,'[CALDoc] A function expression.','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3730,'TypedExpr','Cal.Data.Sql.TypedExpr','Cal.Data.Sql.TypedExpr',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3731,'StringValue','Cal.Data.Sql.StringValue','Cal.Data.Sql.StringValue',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3732,'NumberValue','Cal.Data.Sql.NumberValue','Cal.Data.Sql.NumberValue',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3733,'BooleanValue','Cal.Data.Sql.BooleanValue','Cal.Data.Sql.BooleanValue',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3734,'TimeValue','Cal.Data.Sql.TimeValue','Cal.Data.Sql.TimeValue',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3735,'UnnamedParameter','Cal.Data.Sql.UnnamedParameter','Cal.Data.Sql.UnnamedParameter',NULL,'[CALDoc] A parameter without a name.\n','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3736,'NamedParameter','Cal.Data.Sql.NamedParameter','Cal.Data.Sql.NamedParameter',NULL,'[CALDoc] A parameter with an associated name.\n','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3737,'OpNot','Cal.Data.Sql.OpNot','Cal.Data.Sql.OpNot',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3738,'OpBitNot','Cal.Data.Sql.OpBitNot','Cal.Data.Sql.OpBitNot',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3739,'OpNegate','Cal.Data.Sql.OpNegate','Cal.Data.Sql.OpNegate',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3740,'OpIsNull','Cal.Data.Sql.OpIsNull','Cal.Data.Sql.OpIsNull',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3741,'OpIsNotNull','Cal.Data.Sql.OpIsNotNull','Cal.Data.Sql.OpIsNotNull',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3742,'OpExists','Cal.Data.Sql.OpExists','Cal.Data.Sql.OpExists',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3743,'OpEq','Cal.Data.Sql.OpEq','Cal.Data.Sql.OpEq',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3744,'OpLt','Cal.Data.Sql.OpLt','Cal.Data.Sql.OpLt',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3745,'OpLtEq','Cal.Data.Sql.OpLtEq','Cal.Data.Sql.OpLtEq',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3746,'OpGt','Cal.Data.Sql.OpGt','Cal.Data.Sql.OpGt',NULL,'[CALDoc] ','2008-04-20 18:17:31','2008-04-20 18:17:31'),(3747,'OpGtEq','Cal.Data.Sql.OpGtEq','Cal.Data.Sql.OpGtEq',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3748,'OpNotEq','Cal.Data.Sql.OpNotEq','Cal.Data.Sql.OpNotEq',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3749,'OpAnd','Cal.Data.Sql.OpAnd','Cal.Data.Sql.OpAnd',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3750,'OpOr','Cal.Data.Sql.OpOr','Cal.Data.Sql.OpOr',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3751,'OpLike','Cal.Data.Sql.OpLike','Cal.Data.Sql.OpLike',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3752,'OpIn','Cal.Data.Sql.OpIn','Cal.Data.Sql.OpIn',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3753,'OpCat','Cal.Data.Sql.OpCat','Cal.Data.Sql.OpCat',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3754,'OpPlus','Cal.Data.Sql.OpPlus','Cal.Data.Sql.OpPlus',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3755,'OpMinus','Cal.Data.Sql.OpMinus','Cal.Data.Sql.OpMinus',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3756,'OpMul','Cal.Data.Sql.OpMul','Cal.Data.Sql.OpMul',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3757,'OpDiv','Cal.Data.Sql.OpDiv','Cal.Data.Sql.OpDiv',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3758,'OpMod','Cal.Data.Sql.OpMod','Cal.Data.Sql.OpMod',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3759,'OpBitAnd','Cal.Data.Sql.OpBitAnd','Cal.Data.Sql.OpBitAnd',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3760,'OpBitOr','Cal.Data.Sql.OpBitOr','Cal.Data.Sql.OpBitOr',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3761,'OpBitXor','Cal.Data.Sql.OpBitXor','Cal.Data.Sql.OpBitXor',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3762,'OpBetween','Cal.Data.Sql.OpBetween','Cal.Data.Sql.OpBetween',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3763,'OpCase_Simple','Cal.Data.Sql.OpCase_Simple','Cal.Data.Sql.OpCase_Simple',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3764,'OpCase_Searched','Cal.Data.Sql.OpCase_Searched','Cal.Data.Sql.OpCase_Searched',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3765,'ConvertToStringFunction','Cal.Data.Sql.ConvertToStringFunction','Cal.Data.Sql.ConvertToStringFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3766,'ConvertToIntFunction','Cal.Data.Sql.ConvertToIntFunction','Cal.Data.Sql.ConvertToIntFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3767,'ConvertToDoubleFunction','Cal.Data.Sql.ConvertToDoubleFunction','Cal.Data.Sql.ConvertToDoubleFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3768,'ConvertToTimeFunction','Cal.Data.Sql.ConvertToTimeFunction','Cal.Data.Sql.ConvertToTimeFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3769,'AbsFunction','Cal.Data.Sql.AbsFunction','Cal.Data.Sql.AbsFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3770,'AcosFunction','Cal.Data.Sql.AcosFunction','Cal.Data.Sql.AcosFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3771,'AsinFucntion','Cal.Data.Sql.AsinFucntion','Cal.Data.Sql.AsinFucntion',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3772,'AtanFunction','Cal.Data.Sql.AtanFunction','Cal.Data.Sql.AtanFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3773,'Atan2Function','Cal.Data.Sql.Atan2Function','Cal.Data.Sql.Atan2Function',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3774,'CeilingFunction','Cal.Data.Sql.CeilingFunction','Cal.Data.Sql.CeilingFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3775,'CosFunction','Cal.Data.Sql.CosFunction','Cal.Data.Sql.CosFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3776,'CotFunction','Cal.Data.Sql.CotFunction','Cal.Data.Sql.CotFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3777,'DegreesFunction','Cal.Data.Sql.DegreesFunction','Cal.Data.Sql.DegreesFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3778,'ExpFunction','Cal.Data.Sql.ExpFunction','Cal.Data.Sql.ExpFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3779,'FloorFunction','Cal.Data.Sql.FloorFunction','Cal.Data.Sql.FloorFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3780,'LogFunction','Cal.Data.Sql.LogFunction','Cal.Data.Sql.LogFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3781,'Log10Function','Cal.Data.Sql.Log10Function','Cal.Data.Sql.Log10Function',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3782,'ModFunction','Cal.Data.Sql.ModFunction','Cal.Data.Sql.ModFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3783,'PiFunction','Cal.Data.Sql.PiFunction','Cal.Data.Sql.PiFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3784,'PowerFunction','Cal.Data.Sql.PowerFunction','Cal.Data.Sql.PowerFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3785,'RadiansFunction','Cal.Data.Sql.RadiansFunction','Cal.Data.Sql.RadiansFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3786,'RandFunction','Cal.Data.Sql.RandFunction','Cal.Data.Sql.RandFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3787,'RoundFunction','Cal.Data.Sql.RoundFunction','Cal.Data.Sql.RoundFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3788,'SignFunction','Cal.Data.Sql.SignFunction','Cal.Data.Sql.SignFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3789,'SinFunction','Cal.Data.Sql.SinFunction','Cal.Data.Sql.SinFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3790,'SqrtFunction','Cal.Data.Sql.SqrtFunction','Cal.Data.Sql.SqrtFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3791,'TanFunction','Cal.Data.Sql.TanFunction','Cal.Data.Sql.TanFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3792,'TruncateFunction','Cal.Data.Sql.TruncateFunction','Cal.Data.Sql.TruncateFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3793,'AsciiFunction','Cal.Data.Sql.AsciiFunction','Cal.Data.Sql.AsciiFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3794,'CharFunction','Cal.Data.Sql.CharFunction','Cal.Data.Sql.CharFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3795,'DifferenceFunction','Cal.Data.Sql.DifferenceFunction','Cal.Data.Sql.DifferenceFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3796,'InsertFunction','Cal.Data.Sql.InsertFunction','Cal.Data.Sql.InsertFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3797,'LcaseFunction','Cal.Data.Sql.LcaseFunction','Cal.Data.Sql.LcaseFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3798,'LeftFunction','Cal.Data.Sql.LeftFunction','Cal.Data.Sql.LeftFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3799,'LengthFunction','Cal.Data.Sql.LengthFunction','Cal.Data.Sql.LengthFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3800,'LocateFunction','Cal.Data.Sql.LocateFunction','Cal.Data.Sql.LocateFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3801,'LtrimFunction','Cal.Data.Sql.LtrimFunction','Cal.Data.Sql.LtrimFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3802,'RepeatFunction','Cal.Data.Sql.RepeatFunction','Cal.Data.Sql.RepeatFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3803,'ReplaceFunction','Cal.Data.Sql.ReplaceFunction','Cal.Data.Sql.ReplaceFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3804,'RightFunction','Cal.Data.Sql.RightFunction','Cal.Data.Sql.RightFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3805,'RtrimFunction','Cal.Data.Sql.RtrimFunction','Cal.Data.Sql.RtrimFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3806,'SoundexFunction','Cal.Data.Sql.SoundexFunction','Cal.Data.Sql.SoundexFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3807,'SpaceFunction','Cal.Data.Sql.SpaceFunction','Cal.Data.Sql.SpaceFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3808,'SubstringFunction','Cal.Data.Sql.SubstringFunction','Cal.Data.Sql.SubstringFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3809,'UcaseFunction','Cal.Data.Sql.UcaseFunction','Cal.Data.Sql.UcaseFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3810,'DatabaseFunction','Cal.Data.Sql.DatabaseFunction','Cal.Data.Sql.DatabaseFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3811,'UserFunction','Cal.Data.Sql.UserFunction','Cal.Data.Sql.UserFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3812,'IfNullFunction','Cal.Data.Sql.IfNullFunction','Cal.Data.Sql.IfNullFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3813,'NullIfFunction','Cal.Data.Sql.NullIfFunction','Cal.Data.Sql.NullIfFunction',NULL,'[CALDoc] ','2008-04-20 18:17:32','2008-04-20 18:17:32'),(3814,'DayNameFunction','Cal.Data.Sql.DayNameFunction','Cal.Data.Sql.DayNameFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3815,'DayOfWeekFunction','Cal.Data.Sql.DayOfWeekFunction','Cal.Data.Sql.DayOfWeekFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3816,'DayOfMonthFunction','Cal.Data.Sql.DayOfMonthFunction','Cal.Data.Sql.DayOfMonthFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3817,'DayOfYearFunction','Cal.Data.Sql.DayOfYearFunction','Cal.Data.Sql.DayOfYearFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3818,'HourFunction','Cal.Data.Sql.HourFunction','Cal.Data.Sql.HourFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3819,'MinuteFunction','Cal.Data.Sql.MinuteFunction','Cal.Data.Sql.MinuteFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3820,'MonthFunction','Cal.Data.Sql.MonthFunction','Cal.Data.Sql.MonthFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3821,'MonthNameFunction','Cal.Data.Sql.MonthNameFunction','Cal.Data.Sql.MonthNameFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3822,'NowFunction','Cal.Data.Sql.NowFunction','Cal.Data.Sql.NowFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3823,'QuarterFunction','Cal.Data.Sql.QuarterFunction','Cal.Data.Sql.QuarterFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3824,'SecondFunction','Cal.Data.Sql.SecondFunction','Cal.Data.Sql.SecondFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3825,'WeekFunction','Cal.Data.Sql.WeekFunction','Cal.Data.Sql.WeekFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3826,'YearFunction','Cal.Data.Sql.YearFunction','Cal.Data.Sql.YearFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3827,'DateTimeAddFunction','Cal.Data.Sql.DateTimeAddFunction','Cal.Data.Sql.DateTimeAddFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3828,'DateTimeDiffFunction','Cal.Data.Sql.DateTimeDiffFunction','Cal.Data.Sql.DateTimeDiffFunction',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3829,'AggrCount','Cal.Data.Sql.AggrCount','Cal.Data.Sql.AggrCount',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3830,'AggrSum','Cal.Data.Sql.AggrSum','Cal.Data.Sql.AggrSum',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3831,'AggrAvg','Cal.Data.Sql.AggrAvg','Cal.Data.Sql.AggrAvg',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3832,'AggrMin','Cal.Data.Sql.AggrMin','Cal.Data.Sql.AggrMin',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3833,'AggrMax','Cal.Data.Sql.AggrMax','Cal.Data.Sql.AggrMax',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3834,'AggrDistinctCount','Cal.Data.Sql.AggrDistinctCount','Cal.Data.Sql.AggrDistinctCount',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3835,'AggrDistinctSum','Cal.Data.Sql.AggrDistinctSum','Cal.Data.Sql.AggrDistinctSum',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3836,'AggrDistinctAvg','Cal.Data.Sql.AggrDistinctAvg','Cal.Data.Sql.AggrDistinctAvg',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3837,'AggrCountAll','Cal.Data.Sql.AggrCountAll','Cal.Data.Sql.AggrCountAll',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3838,'AggrStdDev','Cal.Data.Sql.AggrStdDev','Cal.Data.Sql.AggrStdDev',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3839,'AggrStdDevP','Cal.Data.Sql.AggrStdDevP','Cal.Data.Sql.AggrStdDevP',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3840,'AggrVar','Cal.Data.Sql.AggrVar','Cal.Data.Sql.AggrVar',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3841,'AggrVarP','Cal.Data.Sql.AggrVarP','Cal.Data.Sql.AggrVarP',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3842,'AggrOther','Cal.Data.Sql.AggrOther','Cal.Data.Sql.AggrOther',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3843,'FunctionOther','Cal.Data.Sql.FunctionOther','Cal.Data.Sql.FunctionOther',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3844,'YearInterval','Cal.Data.Sql.YearInterval','Cal.Data.Sql.YearInterval',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3845,'QuarterInterval','Cal.Data.Sql.QuarterInterval','Cal.Data.Sql.QuarterInterval',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3846,'MonthInterval','Cal.Data.Sql.MonthInterval','Cal.Data.Sql.MonthInterval',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3847,'DayInterval','Cal.Data.Sql.DayInterval','Cal.Data.Sql.DayInterval',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3848,'HourInterval','Cal.Data.Sql.HourInterval','Cal.Data.Sql.HourInterval',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3849,'MinuteInterval','Cal.Data.Sql.MinuteInterval','Cal.Data.Sql.MinuteInterval',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3850,'SecondInterval','Cal.Data.Sql.SecondInterval','Cal.Data.Sql.SecondInterval',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3851,'Query','Cal.Data.Sql.Query','Cal.Data.Sql.Query',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3852,'Union','Cal.Data.Sql.Union','Cal.Data.Sql.Union',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3853,'SqlBuilderState','Cal.Data.Sql.SqlBuilderState','Cal.Data.Sql.SqlBuilderState',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3854,'SqlBuilder','Cal.Data.Sql.SqlBuilder','Cal.Data.Sql.SqlBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3855,'CreateDatabaseStatement','Cal.Data.Sql.CreateDatabaseStatement','Cal.Data.Sql.CreateDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3856,'DropDatabaseStatement','Cal.Data.Sql.DropDatabaseStatement','Cal.Data.Sql.DropDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3857,'CreateTableStatement','Cal.Data.Sql.CreateTableStatement','Cal.Data.Sql.CreateTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3858,'CreateViewStatement','Cal.Data.Sql.CreateViewStatement','Cal.Data.Sql.CreateViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3859,'DropTableStatement','Cal.Data.Sql.DropTableStatement','Cal.Data.Sql.DropTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3860,'DropViewStatement','Cal.Data.Sql.DropViewStatement','Cal.Data.Sql.DropViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3861,'InsertValuesStatement','Cal.Data.Sql.InsertValuesStatement','Cal.Data.Sql.InsertValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:33','2008-04-20 18:17:33'),(3862,'InsertQueryValuesStatement','Cal.Data.Sql.InsertQueryValuesStatement','Cal.Data.Sql.InsertQueryValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3863,'UpdateValuesStatement','Cal.Data.Sql.UpdateValuesStatement','Cal.Data.Sql.UpdateValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3864,'DeleteRowsStatement','Cal.Data.Sql.DeleteRowsStatement','Cal.Data.Sql.DeleteRowsStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3865,'CommitStatement','Cal.Data.Sql.CommitStatement','Cal.Data.Sql.CommitStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3866,'CompoundStatement','Cal.Data.Sql.CompoundStatement','Cal.Data.Sql.CompoundStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3867,'bestSqlBuilderForDatabase','Cal.Data.SqlBuilder.bestSqlBuilderForDatabase','Cal.Data.SqlBuilder.bestSqlBuilderForDatabase',NULL,'[CALDoc] Returns the best <code>SqlBuilder</code> for the type of database type name specified.\n','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3868,'db2SqlBuilder','Cal.Data.SqlBuilder.db2SqlBuilder','Cal.Data.SqlBuilder.db2SqlBuilder',NULL,'[CALDoc] The DB2 SQL builder generates queries which will work with IBM DB2 databases.\n','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3869,'db2_primitiveValueBuilder','Cal.Data.SqlBuilder.db2_primitiveValueBuilder','Cal.Data.SqlBuilder.db2_primitiveValueBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3870,'db2_functionToSql','Cal.Data.SqlBuilder.db2_functionToSql','Cal.Data.SqlBuilder.db2_functionToSql',NULL,'[CALDoc] Customizes the SQL generated for certain DB2 functions.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3871,'ncrTeradataSqlBuilder','Cal.Data.SqlBuilder.ncrTeradataSqlBuilder','Cal.Data.SqlBuilder.ncrTeradataSqlBuilder',NULL,'[CALDoc] The SQL builder generates queries which will work with Teradata databases.\n','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3872,'ncrTeradataPrimitiveValueBuilder','Cal.Data.SqlBuilder.ncrTeradataPrimitiveValueBuilder','Cal.Data.SqlBuilder.ncrTeradataPrimitiveValueBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3873,'ncrTeradata_buildFieldType','Cal.Data.SqlBuilder.ncrTeradata_buildFieldType','Cal.Data.SqlBuilder.ncrTeradata_buildFieldType',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3874,'db2_buildFieldType','Cal.Data.SqlBuilder.db2_buildFieldType','Cal.Data.SqlBuilder.db2_buildFieldType',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3875,'ncrTeradata_prepareQuery','Cal.Data.SqlBuilder.ncrTeradata_prepareQuery','Cal.Data.SqlBuilder.ncrTeradata_prepareQuery',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3876,'ncrTeradata_castDateFieldsToTimeStamps','Cal.Data.SqlBuilder.ncrTeradata_castDateFieldsToTimeStamps','Cal.Data.SqlBuilder.ncrTeradata_castDateFieldsToTimeStamps',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3877,'derbySqlBuilder','Cal.Data.SqlBuilder.derbySqlBuilder','Cal.Data.SqlBuilder.derbySqlBuilder',NULL,'[CALDoc] The SQL builder for Derby differs from the default SQL builder\nin the identifier quoting characters - double quotes instead of square brackets','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3878,'derby_quoteIdentifier','Cal.Data.SqlBuilder.derby_quoteIdentifier','Cal.Data.SqlBuilder.derby_quoteIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3879,'derby_functionToSql','Cal.Data.SqlBuilder.derby_functionToSql','Cal.Data.SqlBuilder.derby_functionToSql',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3880,'db2_timeToSql','Cal.Data.SqlBuilder.db2_timeToSql','Cal.Data.SqlBuilder.db2_timeToSql',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3881,'db2_timestampPattern','Cal.Data.SqlBuilder.db2_timestampPattern','Cal.Data.SqlBuilder.db2_timestampPattern',NULL,'[CALDoc] Generates timestamps in the following form:  \'2005-05-20 13:23:45.0\'','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3882,'db2_tableAndAliasText','Cal.Data.SqlBuilder.db2_tableAndAliasText','Cal.Data.SqlBuilder.db2_tableAndAliasText',NULL,'[CALDoc] For DB2, don\'t include the \'AS\' keyword between a table name and the table alias.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3883,'odbcAccessSqlBuilder','Cal.Data.SqlBuilder.odbcAccessSqlBuilder','Cal.Data.SqlBuilder.odbcAccessSqlBuilder',NULL,'[CALDoc] For ODBC-Access, there are some problems using the square brackets as quotes inside of the \nODBC function escape syntax, so use back-quotes instead.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3884,'odbcSqlBuilder','Cal.Data.SqlBuilder.odbcSqlBuilder','Cal.Data.SqlBuilder.odbcSqlBuilder',NULL,'[CALDoc] The ODBC SQL builder generates queries which will work with typical ODBC datasources.\n','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3885,'odbc_primitiveValueBuilder','Cal.Data.SqlBuilder.odbc_primitiveValueBuilder','Cal.Data.SqlBuilder.odbc_primitiveValueBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3886,'odbc_functionToSql','Cal.Data.SqlBuilder.odbc_functionToSql','Cal.Data.SqlBuilder.odbc_functionToSql',NULL,'[CALDoc] Generates SQL function SQL is the form:  {fn WEEK(Table1.Field1)}','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3887,'odbc_functionNameText','Cal.Data.SqlBuilder.odbc_functionNameText','Cal.Data.SqlBuilder.odbc_functionNameText',NULL,'[CALDoc] Override the default names of some of the functions for ODBC.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3888,'ncrTeradata_quoteIdentifier','Cal.Data.SqlBuilder.ncrTeradata_quoteIdentifier','Cal.Data.SqlBuilder.ncrTeradata_quoteIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3889,'ncrTeradata_functionToSql','Cal.Data.SqlBuilder.ncrTeradata_functionToSql','Cal.Data.SqlBuilder.ncrTeradata_functionToSql',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3890,'oracleSqlBuilder','Cal.Data.SqlBuilder.oracleSqlBuilder','Cal.Data.SqlBuilder.oracleSqlBuilder',NULL,'[CALDoc] The Oracle SQL builder generates queries which will work with Oracle databases.\n','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3891,'oracle_primitiveValueBuilder','Cal.Data.SqlBuilder.oracle_primitiveValueBuilder','Cal.Data.SqlBuilder.oracle_primitiveValueBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3892,'oracle_timeToSql','Cal.Data.SqlBuilder.oracle_timeToSql','Cal.Data.SqlBuilder.oracle_timeToSql',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3893,'oracle_timestampPattern','Cal.Data.SqlBuilder.oracle_timestampPattern','Cal.Data.SqlBuilder.oracle_timestampPattern',NULL,'[CALDoc] Generates timestamps in the following form:  TIMESTAMP \'2005-05-20 13:23:45.0\'','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3894,'default_makeSafeNameWithLengthCheck','Cal.Data.SqlBuilder.default_makeSafeNameWithLengthCheck','Cal.Data.SqlBuilder.default_makeSafeNameWithLengthCheck',NULL,'[CALDoc] Returns a SQL-safe version of the specified name and trim the trailing\ncharacters if the length of the name exceeds the specified maximum length.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3895,'oracle_tableAndAliasText','Cal.Data.SqlBuilder.oracle_tableAndAliasText','Cal.Data.SqlBuilder.oracle_tableAndAliasText',NULL,'[CALDoc] For Oracle, don\'t include the \'AS\' keyword between a table name and the table alias.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3896,'oracle_quoteIdentifier','Cal.Data.SqlBuilder.oracle_quoteIdentifier','Cal.Data.SqlBuilder.oracle_quoteIdentifier',NULL,'[CALDoc] Quoting of identifiers is different than the default.\n','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3897,'oracle_quotesNeeded','Cal.Data.SqlBuilder.oracle_quotesNeeded','Cal.Data.SqlBuilder.oracle_quotesNeeded',NULL,'[CALDoc] Returns whether the specified identifier needs to be quoted.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3898,'quotesNeededHelper','Cal.Data.SqlBuilder.quotesNeededHelper','Cal.Data.SqlBuilder.quotesNeededHelper',NULL,'[CALDoc] Returns whether the specified identifier needs to be quoted.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3899,'oracle_functionToSql','Cal.Data.SqlBuilder.oracle_functionToSql','Cal.Data.SqlBuilder.oracle_functionToSql',NULL,'[CALDoc] Customizes the SQL generated for certain Oracle functions.','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3900,'oracle_buildDropViewStatement','Cal.Data.SqlBuilder.oracle_buildDropViewStatement','Cal.Data.SqlBuilder.oracle_buildDropViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3901,'oracle_buildDropTableStatement','Cal.Data.SqlBuilder.oracle_buildDropTableStatement','Cal.Data.SqlBuilder.oracle_buildDropTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3902,'oracle_buildCreateTableStatement','Cal.Data.SqlBuilder.oracle_buildCreateTableStatement','Cal.Data.SqlBuilder.oracle_buildCreateTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3903,'oracle_prepareQuery','Cal.Data.SqlBuilder.oracle_prepareQuery','Cal.Data.SqlBuilder.oracle_prepareQuery',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3904,'odbcAccess_quoteIdentifier','Cal.Data.SqlBuilder.odbcAccess_quoteIdentifier','Cal.Data.SqlBuilder.odbcAccess_quoteIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3905,'oracle_buildCreateViewStatement','Cal.Data.SqlBuilder.oracle_buildCreateViewStatement','Cal.Data.SqlBuilder.oracle_buildCreateViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3906,'db2_prepareQuery','Cal.Data.SqlBuilder.db2_prepareQuery','Cal.Data.SqlBuilder.db2_prepareQuery',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3907,'msJetSqlBuilder','Cal.Data.SqlBuilder.msJetSqlBuilder','Cal.Data.SqlBuilder.msJetSqlBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:34','2008-04-20 18:17:34'),(3908,'msAccessSqlBuilder','Cal.Data.SqlBuilder.msAccessSqlBuilder','Cal.Data.SqlBuilder.msAccessSqlBuilder',NULL,'[CALDoc] The Microsoft Jet SQL builder generates queries which will work with the MS Jet database engine \n(which supports MS Access, Excel, Text, and others).\n','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3909,'msAccess_primitiveValueBuilder','Cal.Data.SqlBuilder.msAccess_primitiveValueBuilder','Cal.Data.SqlBuilder.msAccess_primitiveValueBuilder',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3910,'msAccess_timeIntervalToSql','Cal.Data.SqlBuilder.msAccess_timeIntervalToSql','Cal.Data.SqlBuilder.msAccess_timeIntervalToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3911,'msAccess_functionToSql','Cal.Data.SqlBuilder.msAccess_functionToSql','Cal.Data.SqlBuilder.msAccess_functionToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3912,'msAccess_buildDropDatabaseStatement','Cal.Data.SqlBuilder.msAccess_buildDropDatabaseStatement','Cal.Data.SqlBuilder.msAccess_buildDropDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3913,'msAccess_buildCreateDatabaseStatement','Cal.Data.SqlBuilder.msAccess_buildCreateDatabaseStatement','Cal.Data.SqlBuilder.msAccess_buildCreateDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3914,'msAccess_prepareQuery','Cal.Data.SqlBuilder.msAccess_prepareQuery','Cal.Data.SqlBuilder.msAccess_prepareQuery',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3915,'derby_buildFieldDescription','Cal.Data.SqlBuilder.derby_buildFieldDescription','Cal.Data.SqlBuilder.derby_buildFieldDescription',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3916,'db2_quoteIdentifier','Cal.Data.SqlBuilder.db2_quoteIdentifier','Cal.Data.SqlBuilder.db2_quoteIdentifier',NULL,'[CALDoc] Quoting of identifiers is different than the default.\n','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3917,'defaultSqlBuilder','Cal.Data.SqlBuilder.defaultSqlBuilder','Cal.Data.SqlBuilder.defaultSqlBuilder',NULL,'[CALDoc] Creates a default implementation of a <code>SqlBuilder</code>.','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3918,'default_prepareQuery','Cal.Data.SqlBuilder.default_prepareQuery','Cal.Data.SqlBuilder.default_prepareQuery',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3919,'default_buildFieldType','Cal.Data.SqlBuilder.default_buildFieldType','Cal.Data.SqlBuilder.default_buildFieldType',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3920,'msSqlServerSqlBuilder','Cal.Data.SqlBuilder.msSqlServerSqlBuilder','Cal.Data.SqlBuilder.msSqlServerSqlBuilder',NULL,'[CALDoc] The Microsoft SQL Server SQL builder generates queries which will work with SQL Server databases.\n','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3921,'defaultPrimitiveValueBuilder','Cal.Data.SqlBuilder.defaultPrimitiveValueBuilder','Cal.Data.SqlBuilder.defaultPrimitiveValueBuilder',NULL,'[CALDoc] Creates a default primitive value builder.','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3922,'default_timeIntervalToSql','Cal.Data.SqlBuilder.default_timeIntervalToSql','Cal.Data.SqlBuilder.default_timeIntervalToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3923,'default_nullToSql','Cal.Data.SqlBuilder.default_nullToSql','Cal.Data.SqlBuilder.default_nullToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3924,'default_booleanToSql','Cal.Data.SqlBuilder.default_booleanToSql','Cal.Data.SqlBuilder.default_booleanToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3925,'default_timeToSql','Cal.Data.SqlBuilder.default_timeToSql','Cal.Data.SqlBuilder.default_timeToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3926,'default_stringToSql','Cal.Data.SqlBuilder.default_stringToSql','Cal.Data.SqlBuilder.default_stringToSql',NULL,'[CALDoc] Escapes any single quotes in the string value.','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3927,'default_doubleToSql','Cal.Data.SqlBuilder.default_doubleToSql','Cal.Data.SqlBuilder.default_doubleToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3928,'formatNumber','Cal.Data.SqlBuilder.formatNumber','Cal.Data.SqlBuilder.formatNumber',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3929,'default_intToSql','Cal.Data.SqlBuilder.default_intToSql','Cal.Data.SqlBuilder.default_intToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3930,'default_makeSafeName','Cal.Data.SqlBuilder.default_makeSafeName','Cal.Data.SqlBuilder.default_makeSafeName',NULL,'[CALDoc] Returns a SQL-safe version of the specified name.','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3931,'default_isValidFirstSqlChar','Cal.Data.SqlBuilder.default_isValidFirstSqlChar','Cal.Data.SqlBuilder.default_isValidFirstSqlChar',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3932,'default_isValidSqlChar','Cal.Data.SqlBuilder.default_isValidSqlChar','Cal.Data.SqlBuilder.default_isValidSqlChar',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3933,'default_buildTableAndAliasText','Cal.Data.SqlBuilder.default_buildTableAndAliasText','Cal.Data.SqlBuilder.default_buildTableAndAliasText',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3934,'default_quoteIdentifier','Cal.Data.SqlBuilder.default_quoteIdentifier','Cal.Data.SqlBuilder.default_quoteIdentifier',NULL,'[CALDoc] Adds quotes, if needed to the specified identifier.\n','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3935,'default_quotesNeeded','Cal.Data.SqlBuilder.default_quotesNeeded','Cal.Data.SqlBuilder.default_quotesNeeded',NULL,'[CALDoc] Returns whether the specified identifier needs to be quoted.','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3936,'quoteIdentifierHelper','Cal.Data.SqlBuilder.quoteIdentifierHelper','Cal.Data.SqlBuilder.quoteIdentifierHelper',NULL,'[CALDoc] Adds quotes, if needed to the specified identifier.\n','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3937,'default_addParens','Cal.Data.SqlBuilder.default_addParens','Cal.Data.SqlBuilder.default_addParens',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3938,'msSqlServer_functionToSql','Cal.Data.SqlBuilder.msSqlServer_functionToSql','Cal.Data.SqlBuilder.msSqlServer_functionToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3939,'msSqlServer_functionNameText','Cal.Data.SqlBuilder.msSqlServer_functionNameText','Cal.Data.SqlBuilder.msSqlServer_functionNameText',NULL,'[CALDoc] Override the default names of some of the functions for SQL Server.','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3940,'default_functionToSql','Cal.Data.SqlBuilder.default_functionToSql','Cal.Data.SqlBuilder.default_functionToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3941,'default_functionToSql2','Cal.Data.SqlBuilder.default_functionToSql2','Cal.Data.SqlBuilder.default_functionToSql2',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3942,'default_parameterToSql','Cal.Data.SqlBuilder.default_parameterToSql','Cal.Data.SqlBuilder.default_parameterToSql',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3943,'msSqlServer_buildFieldType','Cal.Data.SqlBuilder.msSqlServer_buildFieldType','Cal.Data.SqlBuilder.msSqlServer_buildFieldType',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3944,'default_buildFieldDescription','Cal.Data.SqlBuilder.default_buildFieldDescription','Cal.Data.SqlBuilder.default_buildFieldDescription',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3945,'default_buildCommitStatement','Cal.Data.SqlBuilder.default_buildCommitStatement','Cal.Data.SqlBuilder.default_buildCommitStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3946,'default_buildDeleteRowsStatement','Cal.Data.SqlBuilder.default_buildDeleteRowsStatement','Cal.Data.SqlBuilder.default_buildDeleteRowsStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3947,'default_buildInsertValuesStatement','Cal.Data.SqlBuilder.default_buildInsertValuesStatement','Cal.Data.SqlBuilder.default_buildInsertValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3948,'msSqlServer_buildDropViewStatement','Cal.Data.SqlBuilder.msSqlServer_buildDropViewStatement','Cal.Data.SqlBuilder.msSqlServer_buildDropViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3949,'default_buildDropViewStatement','Cal.Data.SqlBuilder.default_buildDropViewStatement','Cal.Data.SqlBuilder.default_buildDropViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3950,'msSqlServer_buildCreateViewStatement','Cal.Data.SqlBuilder.msSqlServer_buildCreateViewStatement','Cal.Data.SqlBuilder.msSqlServer_buildCreateViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:35','2008-04-20 18:17:35'),(3951,'msSqlServer_buildCreateTableStatement','Cal.Data.SqlBuilder.msSqlServer_buildCreateTableStatement','Cal.Data.SqlBuilder.msSqlServer_buildCreateTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3952,'default_buildCreateTableStatement','Cal.Data.SqlBuilder.default_buildCreateTableStatement','Cal.Data.SqlBuilder.default_buildCreateTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3953,'msSqlServer_buildDropDatabaseStatement','Cal.Data.SqlBuilder.msSqlServer_buildDropDatabaseStatement','Cal.Data.SqlBuilder.msSqlServer_buildDropDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3954,'default_buildDropDatabaseStatement','Cal.Data.SqlBuilder.default_buildDropDatabaseStatement','Cal.Data.SqlBuilder.default_buildDropDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3955,'msSqlServer_buildCreateDatabaseStatement','Cal.Data.SqlBuilder.msSqlServer_buildCreateDatabaseStatement','Cal.Data.SqlBuilder.msSqlServer_buildCreateDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3956,'default_buildCreateDatabaseStatement','Cal.Data.SqlBuilder.default_buildCreateDatabaseStatement','Cal.Data.SqlBuilder.default_buildCreateDatabaseStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3957,'default_buildHavingClause','Cal.Data.SqlBuilder.default_buildHavingClause','Cal.Data.SqlBuilder.default_buildHavingClause',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3958,'default_buildGroupByClause','Cal.Data.SqlBuilder.default_buildGroupByClause','Cal.Data.SqlBuilder.default_buildGroupByClause',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3959,'fillExpressionList','Cal.Data.SqlBuilder.fillExpressionList','Cal.Data.SqlBuilder.fillExpressionList',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3960,'default_buildOrderByClause','Cal.Data.SqlBuilder.default_buildOrderByClause','Cal.Data.SqlBuilder.default_buildOrderByClause',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3961,'default_buildWhereClause','Cal.Data.SqlBuilder.default_buildWhereClause','Cal.Data.SqlBuilder.default_buildWhereClause',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3962,'default_buildFromClause','Cal.Data.SqlBuilder.default_buildFromClause','Cal.Data.SqlBuilder.default_buildFromClause',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3963,'joinNodeText','Cal.Data.SqlBuilder.joinNodeText','Cal.Data.SqlBuilder.joinNodeText',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3964,'joinTypeText','Cal.Data.SqlBuilder.joinTypeText','Cal.Data.SqlBuilder.joinTypeText',NULL,'[CALDoc] Returns the symbol for a join type.','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3965,'isSimpleBinaryComaprisonExpr','Cal.Data.SqlBuilder.isSimpleBinaryComaprisonExpr','Cal.Data.SqlBuilder.isSimpleBinaryComaprisonExpr',NULL,'[CALDoc] Returns whether the expression compares two simple values using a comparison operator.','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3966,'default_buildSelectClause','Cal.Data.SqlBuilder.default_buildSelectClause','Cal.Data.SqlBuilder.default_buildSelectClause',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3967,'default_constructUnionQuery','Cal.Data.SqlBuilder.default_constructUnionQuery','Cal.Data.SqlBuilder.default_constructUnionQuery',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3968,'default_constructQuery','Cal.Data.SqlBuilder.default_constructQuery','Cal.Data.SqlBuilder.default_constructQuery',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3969,'msSqlServer_prepareQuery','Cal.Data.SqlBuilder.msSqlServer_prepareQuery','Cal.Data.SqlBuilder.msSqlServer_prepareQuery',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3970,'limitColumnAliasLength','Cal.Data.SqlBuilder.limitColumnAliasLength','Cal.Data.SqlBuilder.limitColumnAliasLength',NULL,'[CALDoc] Limits the length of the projected column aliases in the query.','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3971,'default_listToSql','Cal.Data.SqlBuilder.default_listToSql','Cal.Data.SqlBuilder.default_listToSql',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3972,'buildExpressionList','Cal.Data.SqlBuilder.buildExpressionList','Cal.Data.SqlBuilder.buildExpressionList',NULL,'[CALDoc] Constructs a comma-separated list of expressions.','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3973,'default_buildCreateViewStatement','Cal.Data.SqlBuilder.default_buildCreateViewStatement','Cal.Data.SqlBuilder.default_buildCreateViewStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3974,'msSqlServer_buildDropTableStatement','Cal.Data.SqlBuilder.msSqlServer_buildDropTableStatement','Cal.Data.SqlBuilder.msSqlServer_buildDropTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3975,'odbc_timeIntervalToSql','Cal.Data.SqlBuilder.odbc_timeIntervalToSql','Cal.Data.SqlBuilder.odbc_timeIntervalToSql',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3976,'timestampPattern','Cal.Data.SqlBuilder.timestampPattern','Cal.Data.SqlBuilder.timestampPattern',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3977,'oracle_booleanToSql','Cal.Data.SqlBuilder.oracle_booleanToSql','Cal.Data.SqlBuilder.oracle_booleanToSql',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3978,'oracle_buildFieldType','Cal.Data.SqlBuilder.oracle_buildFieldType','Cal.Data.SqlBuilder.oracle_buildFieldType',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3979,'buildTableAndAliasTextHelper','Cal.Data.SqlBuilder.buildTableAndAliasTextHelper','Cal.Data.SqlBuilder.buildTableAndAliasTextHelper',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3980,'ncrTeradataSqlBuilder_timeToSql','Cal.Data.SqlBuilder.ncrTeradataSqlBuilder_timeToSql','Cal.Data.SqlBuilder.ncrTeradataSqlBuilder_timeToSql',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3981,'ncrTeradataTimestampPattern','Cal.Data.SqlBuilder.ncrTeradataTimestampPattern','Cal.Data.SqlBuilder.ncrTeradataTimestampPattern',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3982,'db2_booleanToSql','Cal.Data.SqlBuilder.db2_booleanToSql','Cal.Data.SqlBuilder.db2_booleanToSql',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3983,'default_buildInsertQueryValuesStatement','Cal.Data.SqlBuilder.default_buildInsertQueryValuesStatement','Cal.Data.SqlBuilder.default_buildInsertQueryValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3984,'default_buildDropTableStatement','Cal.Data.SqlBuilder.default_buildDropTableStatement','Cal.Data.SqlBuilder.default_buildDropTableStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3985,'default_buildUpdateValuesStatement','Cal.Data.SqlBuilder.default_buildUpdateValuesStatement','Cal.Data.SqlBuilder.default_buildUpdateValuesStatement',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3986,'db2_functionNameText','Cal.Data.SqlBuilder.db2_functionNameText','Cal.Data.SqlBuilder.db2_functionNameText',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3987,'default_functionNameText','Cal.Data.SqlBuilder.default_functionNameText','Cal.Data.SqlBuilder.default_functionNameText',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3988,'restructureTopN','Cal.Data.SqlBuilder.restructureTopN','Cal.Data.SqlBuilder.restructureTopN',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3989,'enclose','Cal.Data.SqlBuilder.enclose','Cal.Data.SqlBuilder.enclose',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3990,'msAccess_buildFieldType','Cal.Data.SqlBuilder.msAccess_buildFieldType','Cal.Data.SqlBuilder.msAccess_buildFieldType',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3991,'showTime','Cal.Utilities.Time.showTime','Cal.Utilities.Time.showTime',NULL,'[CALDoc] ','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3992,'timeParts','Cal.Utilities.Time.timeParts','Cal.Utilities.Time.timeParts',NULL,'[CALDoc] Extract the components of a <code>Time</code>.','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3993,'getDayOfWeek','Cal.Utilities.Time.getDayOfWeek','Cal.Utilities.Time.getDayOfWeek',NULL,'[CALDoc] Returns the <code>DayOfWeek</code> for a <code>Time</code> in a specified <code>TimeZone</code>.','2008-04-20 18:17:36','2008-04-20 18:17:36'),(3994,'zeroDuration','Cal.Utilities.Time.zeroDuration','Cal.Utilities.Time.zeroDuration',NULL,'[CALDoc] Returns a <code>Duration</code> of 0 ticks.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(3995,'makeUTCTimeFromTuple','Cal.Utilities.Time.makeUTCTimeFromTuple','Cal.Utilities.Time.makeUTCTimeFromTuple',NULL,'[CALDoc] Construct a <code>Time</code> value from year, month, day, hour, minute, second and tick in the UTC time zone.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(3996,'nDaysSinceMonday','Cal.Utilities.Time.nDaysSinceMonday','Cal.Utilities.Time.nDaysSinceMonday',NULL,'[CALDoc] Returns the number of days since the most recent Monday.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(3997,'durationToDays','Cal.Utilities.Time.durationToDays','Cal.Utilities.Time.durationToDays',NULL,'[CALDoc] Converts a <code>Duration</code> to a number of days, as a <code>Double</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(3998,'nDaysDuration','Cal.Utilities.Time.nDaysDuration','Cal.Utilities.Time.nDaysDuration',NULL,'[CALDoc] Converts a number of days to a <code>Duration</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(3999,'durationToMinutes','Cal.Utilities.Time.durationToMinutes','Cal.Utilities.Time.durationToMinutes',NULL,'[CALDoc] Converts a <code>Duration</code> to a number of minutes, as a <code>Double</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4000,'deserializeTimeValue','Cal.Utilities.Time.deserializeTimeValue','Cal.Utilities.Time.deserializeTimeValue',NULL,'[CALDoc] Returns: a <code>Time</code> value based on the serialized value provided.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4001,'serializeTimeValue','Cal.Utilities.Time.serializeTimeValue','Cal.Utilities.Time.serializeTimeValue',NULL,'[CALDoc] Returns: a string representing the serialized form of the <code>Time</code> value.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4002,'parseTime','Cal.Utilities.Time.parseTime','Cal.Utilities.Time.parseTime',NULL,'[CALDoc] Parses a time value from a string using the specified pattern.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4003,'formatTime','Cal.Utilities.Time.formatTime','Cal.Utilities.Time.formatTime',NULL,'[CALDoc] Formats a <code>Time</code> value as a string.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4004,'islamicCalendar','Cal.Utilities.Time.islamicCalendar','Cal.Utilities.Time.islamicCalendar',NULL,'[CALDoc] The Islamic calendar is a lunar calendar. ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4005,'hebrewCalendar','Cal.Utilities.Time.hebrewCalendar','Cal.Utilities.Time.hebrewCalendar',NULL,'[CALDoc] The Hebrew calendar is a lunisolar calendar.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4006,'buddhistCalendar','Cal.Utilities.Time.buddhistCalendar','Cal.Utilities.Time.buddhistCalendar',NULL,'[CALDoc] The Buddhist calendar is a lunisolar calendar, and is sometimes used in Thailand and other south-east Asian countries.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4007,'chineseCalendar','Cal.Utilities.Time.chineseCalendar','Cal.Utilities.Time.chineseCalendar',NULL,'[CALDoc] The Chinese calendar.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4008,'japaneseCalendar','Cal.Utilities.Time.japaneseCalendar','Cal.Utilities.Time.japaneseCalendar',NULL,'[CALDoc] The Japanese Emperor calendar. ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4009,'gregorianCalendar','Cal.Utilities.Time.gregorianCalendar','Cal.Utilities.Time.gregorianCalendar',NULL,'[CALDoc] The Gregorian calendar, introduced by Pope Gregory in 1582.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4010,'nSecondsDuration','Cal.Utilities.Time.nSecondsDuration','Cal.Utilities.Time.nSecondsDuration',NULL,'[CALDoc] Converts a number of seconds to a <code>Duration</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4011,'nSecondsAsLongToDuration','Cal.Utilities.Time.nSecondsAsLongToDuration','Cal.Utilities.Time.nSecondsAsLongToDuration',NULL,'[CALDoc] Converts an integer number of seconds to a <code>Duration</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4012,'ticksToDuration','Cal.Utilities.Time.ticksToDuration','Cal.Utilities.Time.ticksToDuration',NULL,'[CALDoc] Converts a number of ticks to a <code>Duration</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4013,'durationToSeconds','Cal.Utilities.Time.durationToSeconds','Cal.Utilities.Time.durationToSeconds',NULL,'[CALDoc] Returns: converts a <code>Duration</code> to a number of seconds, as a <code>Double</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4014,'durationToTicks','Cal.Utilities.Time.durationToTicks','Cal.Utilities.Time.durationToTicks',NULL,'[CALDoc] Converts a <code>Duration</code> to a number of ticks, as a <code>Long</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4015,'addDurationToDuration','Cal.Utilities.Time.addDurationToDuration','Cal.Utilities.Time.addDurationToDuration',NULL,'[CALDoc] Returns: the sum of two <code>Duration</code>s.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4016,'subtractDurationFromDuration','Cal.Utilities.Time.subtractDurationFromDuration','Cal.Utilities.Time.subtractDurationFromDuration',NULL,'[CALDoc] Returns: he difference between two <code>Duration</code>s.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4017,'jTime_getDayOfWeek','Cal.Utilities.Time.jTime_getDayOfWeek','Cal.Utilities.Time.jTime_getDayOfWeek',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4018,'jTimePartList','Cal.Utilities.Time.jTimePartList','Cal.Utilities.Time.jTimePartList',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4019,'addDurationToTime','Cal.Utilities.Time.addDurationToTime','Cal.Utilities.Time.addDurationToTime',NULL,'[CALDoc] Returns: the <code>Time</code> that results from adding a <code>Duration</code> to a <code>Time</code>.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4020,'subtractTimeFromTime','Cal.Utilities.Time.subtractTimeFromTime','Cal.Utilities.Time.subtractTimeFromTime',NULL,'[CALDoc] Returns: the <code>Duration</code> that represents the difference between two <code>Time</code>s.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4021,'now','Cal.Utilities.Time.now','Cal.Utilities.Time.now',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4022,'makeUTCTimeValue','Cal.Utilities.Time.makeUTCTimeValue','Cal.Utilities.Time.makeUTCTimeValue',NULL,'[CALDoc] Returns: a <code>Time</code> value from year, month, day, hour, minute, second and tick in the UTC time zone.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4023,'makeTimeFromTicks','Cal.Utilities.Time.makeTimeFromTicks','Cal.Utilities.Time.makeTimeFromTicks',NULL,'[CALDoc] Returns: a <code>Time</code> value from an absolute number of ticks.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4024,'makeTimeValue','Cal.Utilities.Time.makeTimeValue','Cal.Utilities.Time.makeTimeValue',NULL,'[CALDoc] Returns: a <code>Time</code> value from a year, month, day, hour, minute, second, ticks and time zone.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4025,'Monday','Cal.Utilities.Time.Monday','Cal.Utilities.Time.Monday',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4026,'Tuesday','Cal.Utilities.Time.Tuesday','Cal.Utilities.Time.Tuesday',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4027,'Wednesday','Cal.Utilities.Time.Wednesday','Cal.Utilities.Time.Wednesday',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4028,'Thursday','Cal.Utilities.Time.Thursday','Cal.Utilities.Time.Thursday',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4029,'Friday','Cal.Utilities.Time.Friday','Cal.Utilities.Time.Friday',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4030,'Saturday','Cal.Utilities.Time.Saturday','Cal.Utilities.Time.Saturday',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4031,'Sunday','Cal.Utilities.Time.Sunday','Cal.Utilities.Time.Sunday',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4032,'greaterThanUniqueIdentifier','Cal.Utilities.UniqueIdentifier.greaterThanUniqueIdentifier','Cal.Utilities.UniqueIdentifier.greaterThanUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4033,'outputUniqueIdentifierXmlAttribute','Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXmlAttribute','Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4034,'showUniqueIdentifier','Cal.Utilities.UniqueIdentifier.showUniqueIdentifier','Cal.Utilities.UniqueIdentifier.showUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4035,'equalUniqueIdentifiers','Cal.Utilities.UniqueIdentifier.equalUniqueIdentifiers','Cal.Utilities.UniqueIdentifier.equalUniqueIdentifiers',NULL,'[CALDoc] Returns <code>True</code> if both objects have the same unique ID.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4036,'outputUniqueIdentifier','Cal.Utilities.UniqueIdentifier.outputUniqueIdentifier','Cal.Utilities.UniqueIdentifier.outputUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4037,'notEqualsUniqueIdentifiers','Cal.Utilities.UniqueIdentifier.notEqualsUniqueIdentifiers','Cal.Utilities.UniqueIdentifier.notEqualsUniqueIdentifiers',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4038,'makeUniqueIdentifierByNamePath','Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByNamePath','Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByNamePath',NULL,'[CALDoc] Constructs a unique ID using the specified name path.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4039,'inputUniqueIdentifier','Cal.Utilities.UniqueIdentifier.inputUniqueIdentifier','Cal.Utilities.UniqueIdentifier.inputUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4040,'convertUniqueIdentifier','Cal.Utilities.UniqueIdentifier.convertUniqueIdentifier','Cal.Utilities.UniqueIdentifier.convertUniqueIdentifier',NULL,'[CALDoc] Converts a unique ID of one type to a unique ID of another type.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4041,'compareUniqueIdentifier','Cal.Utilities.UniqueIdentifier.compareUniqueIdentifier','Cal.Utilities.UniqueIdentifier.compareUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4042,'makeUniqueIdentifierWithinList','Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierWithinList','Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierWithinList',NULL,'[CALDoc] Contructs a unique ID using the specified name, if it exists in the list of names\nspecified then name2 is tried and so on till we get a name that\'s unique.','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4043,'appendStringToUniqueIdentifier','Cal.Utilities.UniqueIdentifier.appendStringToUniqueIdentifier','Cal.Utilities.UniqueIdentifier.appendStringToUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4044,'inputUniqueIdentifierXml','Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXml','Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXml',NULL,'[CALDoc] ','2008-04-20 18:17:37','2008-04-20 18:17:37'),(4045,'minUniqueIdentifier','Cal.Utilities.UniqueIdentifier.minUniqueIdentifier','Cal.Utilities.UniqueIdentifier.minUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4046,'lessThanEqualsUniqueIdentifier','Cal.Utilities.UniqueIdentifier.lessThanEqualsUniqueIdentifier','Cal.Utilities.UniqueIdentifier.lessThanEqualsUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4047,'equalsUniqueIdentifiers','Cal.Utilities.UniqueIdentifier.equalsUniqueIdentifiers','Cal.Utilities.UniqueIdentifier.equalsUniqueIdentifiers',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4048,'greaterThanEqualsUniqueIdentifier','Cal.Utilities.UniqueIdentifier.greaterThanEqualsUniqueIdentifier','Cal.Utilities.UniqueIdentifier.greaterThanEqualsUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4049,'maxUniqueIdentifier','Cal.Utilities.UniqueIdentifier.maxUniqueIdentifier','Cal.Utilities.UniqueIdentifier.maxUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4050,'uniqueIdentifierToJUniqueIdentifier','Cal.Utilities.UniqueIdentifier.uniqueIdentifierToJUniqueIdentifier','Cal.Utilities.UniqueIdentifier.uniqueIdentifierToJUniqueIdentifier',NULL,'[CALDoc] Converts from <code>UniqueIdentifier</code> to <code>JUniqueIdentifier</code>','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4051,'jUniqueIdentifierToUniqueIdentifier','Cal.Utilities.UniqueIdentifier.jUniqueIdentifierToUniqueIdentifier','Cal.Utilities.UniqueIdentifier.jUniqueIdentifierToUniqueIdentifier',NULL,'[CALDoc] Converts from <code>JUniqueIdentifier</code> to <code>UniqueIdentifier</code>','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4052,'lessThanUniqueIdentifier','Cal.Utilities.UniqueIdentifier.lessThanUniqueIdentifier','Cal.Utilities.UniqueIdentifier.lessThanUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4053,'getIndentifierNamePieces','Cal.Utilities.UniqueIdentifier.getIndentifierNamePieces','Cal.Utilities.UniqueIdentifier.getIndentifierNamePieces',NULL,'[CALDoc] Returns the pieces of the qualified name held by unique identifier.','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4054,'findMatchingUniquelyNamedItemById','Cal.Utilities.UniqueIdentifier.findMatchingUniquelyNamedItemById','Cal.Utilities.UniqueIdentifier.findMatchingUniquelyNamedItemById',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4055,'getUniqueName','Cal.Utilities.UniqueIdentifier.getUniqueName','Cal.Utilities.UniqueIdentifier.getUniqueName',NULL,'[CALDoc] Returns the string representation of the unique identifier','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4056,'inputUniqueIdentifierXmlAttribute','Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXmlAttribute','Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4057,'makeUniqueIdentifierByName','Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByName','Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByName',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4058,'outputUniqueIdentifierXml','Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXml','Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXml',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4059,'jGetUniqueName','Cal.Utilities.UniqueIdentifier.jGetUniqueName','Cal.Utilities.UniqueIdentifier.jGetUniqueName',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4060,'isJUniqueName','Cal.Utilities.UniqueIdentifier.isJUniqueName','Cal.Utilities.UniqueIdentifier.isJUniqueName',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4061,'jUniqueIdentifierFromName','Cal.Utilities.UniqueIdentifier.jUniqueIdentifierFromName','Cal.Utilities.UniqueIdentifier.jUniqueIdentifierFromName',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4062,'jObjectToJUniqueIdentifier','Cal.Utilities.UniqueIdentifier.jObjectToJUniqueIdentifier','Cal.Utilities.UniqueIdentifier.jObjectToJUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4063,'UniqueName','Cal.Utilities.UniqueIdentifier.UniqueName','Cal.Utilities.UniqueIdentifier.UniqueName',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4064,'getDisplayName','Cal.Utilities.UniqueIdentifier.getDisplayName','Cal.Utilities.UniqueIdentifier.getDisplayName',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4065,'getUniqueIdentifier','Cal.Utilities.UniqueIdentifier.getUniqueIdentifier','Cal.Utilities.UniqueIdentifier.getUniqueIdentifier',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4066,'inputValueTypeXmlAttribute','Cal.Utilities.ValueType.inputValueTypeXmlAttribute','Cal.Utilities.ValueType.inputValueTypeXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4067,'inputValueType','Cal.Utilities.ValueType.inputValueType','Cal.Utilities.ValueType.inputValueType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4068,'inputValueTypeXml','Cal.Utilities.ValueType.inputValueTypeXml','Cal.Utilities.ValueType.inputValueTypeXml',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4069,'outputValueTypeXmlAttribute','Cal.Utilities.ValueType.outputValueTypeXmlAttribute','Cal.Utilities.ValueType.outputValueTypeXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4070,'showValueType','Cal.Utilities.ValueType.showValueType','Cal.Utilities.ValueType.showValueType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4071,'intToValueType','Cal.Utilities.ValueType.intToValueType','Cal.Utilities.ValueType.intToValueType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4072,'fromTypeRep','Cal.Utilities.ValueType.fromTypeRep','Cal.Utilities.ValueType.fromTypeRep',NULL,'[CALDoc] Returns the value type corresponding to the specified type rep.\n','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4073,'outputValueTypeToJObject','Cal.Utilities.ValueType.outputValueTypeToJObject','Cal.Utilities.ValueType.outputValueTypeToJObject',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4074,'outputValueTypeXml','Cal.Utilities.ValueType.outputValueTypeXml','Cal.Utilities.ValueType.outputValueTypeXml',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4075,'outputValueType','Cal.Utilities.ValueType.outputValueType','Cal.Utilities.ValueType.outputValueType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4076,'valueTypeToInt','Cal.Utilities.ValueType.valueTypeToInt','Cal.Utilities.ValueType.valueTypeToInt',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4077,'nameToValueType','Cal.Utilities.ValueType.nameToValueType','Cal.Utilities.ValueType.nameToValueType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4078,'isNumericType','Cal.Utilities.ValueType.isNumericType','Cal.Utilities.ValueType.isNumericType',NULL,'[CALDoc] Returns whether the type is one of the numeric types.','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4079,'jIntToJValueObject','Cal.Utilities.ValueType.jIntToJValueObject','Cal.Utilities.ValueType.jIntToJValueObject',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4080,'jIntToJValue','Cal.Utilities.ValueType.jIntToJValue','Cal.Utilities.ValueType.jIntToJValue',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4081,'jValueTypeToInt','Cal.Utilities.ValueType.jValueTypeToInt','Cal.Utilities.ValueType.jValueTypeToInt',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4082,'NullType','Cal.Utilities.ValueType.NullType','Cal.Utilities.ValueType.NullType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4083,'StringType','Cal.Utilities.ValueType.StringType','Cal.Utilities.ValueType.StringType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4084,'IntType','Cal.Utilities.ValueType.IntType','Cal.Utilities.ValueType.IntType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4085,'DoubleType','Cal.Utilities.ValueType.DoubleType','Cal.Utilities.ValueType.DoubleType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4086,'BooleanType','Cal.Utilities.ValueType.BooleanType','Cal.Utilities.ValueType.BooleanType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4087,'TimeType','Cal.Utilities.ValueType.TimeType','Cal.Utilities.ValueType.TimeType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4088,'BinaryType','Cal.Utilities.ValueType.BinaryType','Cal.Utilities.ValueType.BinaryType',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4089,'documentNotations','Cal.Utilities.XmlBuilder.documentNotations','Cal.Utilities.XmlBuilder.documentNotations',NULL,'[CALDoc] Returns the notations declared in the XML document.','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4090,'outputListXml','Cal.Utilities.XmlBuilder.outputListXml','Cal.Utilities.XmlBuilder.outputListXml',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4091,'addAttributesToXmlElement','Cal.Utilities.XmlBuilder.addAttributesToXmlElement','Cal.Utilities.XmlBuilder.addAttributesToXmlElement',NULL,'[CALDoc] Adds the specified attributes to an XML element.\n','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4092,'inputIntXmlAttribute','Cal.Utilities.XmlBuilder.inputIntXmlAttribute','Cal.Utilities.XmlBuilder.inputIntXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4093,'xmlNodeToString','Cal.Utilities.XmlBuilder.xmlNodeToString','Cal.Utilities.XmlBuilder.xmlNodeToString',NULL,'[CALDoc] Generates a string representation of the XML node (element, comment, etc...).\n','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4094,'outputIntegerXml','Cal.Utilities.XmlBuilder.outputIntegerXml','Cal.Utilities.XmlBuilder.outputIntegerXml',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4095,'notationName','Cal.Utilities.XmlBuilder.notationName','Cal.Utilities.XmlBuilder.notationName',NULL,'[CALDoc] Returns the name of an XML notation.','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4096,'outputDoubleXml','Cal.Utilities.XmlBuilder.outputDoubleXml','Cal.Utilities.XmlBuilder.outputDoubleXml',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4097,'inputColorXml','Cal.Utilities.XmlBuilder.inputColorXml','Cal.Utilities.XmlBuilder.inputColorXml',NULL,'[CALDoc] ','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4098,'setDocumentNotations','Cal.Utilities.XmlBuilder.setDocumentNotations','Cal.Utilities.XmlBuilder.setDocumentNotations',NULL,'[CALDoc] Sets the notations declared in an XML document.','2008-04-20 18:17:38','2008-04-20 18:17:38'),(4099,'outputXmlAttributeForBoolean','Cal.Utilities.XmlBuilder.outputXmlAttributeForBoolean','Cal.Utilities.XmlBuilder.outputXmlAttributeForBoolean',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4100,'inputDoubleXmlAttribute','Cal.Utilities.XmlBuilder.inputDoubleXmlAttribute','Cal.Utilities.XmlBuilder.inputDoubleXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4101,'containsDuplicate','Cal.Utilities.XmlBuilder.containsDuplicate','Cal.Utilities.XmlBuilder.containsDuplicate',NULL,'[CALDoc] Returns whether the list contains at least one duplicate value.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4102,'makeXmlTextNode','Cal.Utilities.XmlBuilder.makeXmlTextNode','Cal.Utilities.XmlBuilder.makeXmlTextNode',NULL,'[CALDoc] Creates a new XML TEXT node with the specified text content.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4103,'inputRangeXml','Cal.Utilities.XmlBuilder.inputRangeXml','Cal.Utilities.XmlBuilder.inputRangeXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4104,'inputRangeFromElement','Cal.Utilities.XmlBuilder.inputRangeFromElement','Cal.Utilities.XmlBuilder.inputRangeFromElement',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4105,'elementChildValueMaybe','Cal.Utilities.XmlBuilder.elementChildValueMaybe','Cal.Utilities.XmlBuilder.elementChildValueMaybe',NULL,'[CALDoc] Returns the deserialized value from the specified child for an XML element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4106,'outputXmlAttributeForDouble','Cal.Utilities.XmlBuilder.outputXmlAttributeForDouble','Cal.Utilities.XmlBuilder.outputXmlAttributeForDouble',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4107,'makeXmlComment','Cal.Utilities.XmlBuilder.makeXmlComment','Cal.Utilities.XmlBuilder.makeXmlComment',NULL,'[CALDoc] Creates a new XML comment node with the specified comment text.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4108,'inputIntegerXmlAttribute','Cal.Utilities.XmlBuilder.inputIntegerXmlAttribute','Cal.Utilities.XmlBuilder.inputIntegerXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4109,'elementChildren','Cal.Utilities.XmlBuilder.elementChildren','Cal.Utilities.XmlBuilder.elementChildren',NULL,'[CALDoc] Returns the child nodes (not necessarily elements) for an XML element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4110,'xmlElementToString','Cal.Utilities.XmlBuilder.xmlElementToString','Cal.Utilities.XmlBuilder.xmlElementToString',NULL,'[CALDoc] Generates a string representation of an XML document with the specified root node.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4111,'outputLongXml','Cal.Utilities.XmlBuilder.outputLongXml','Cal.Utilities.XmlBuilder.outputLongXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4112,'outputStringXml','Cal.Utilities.XmlBuilder.outputStringXml','Cal.Utilities.XmlBuilder.outputStringXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4113,'outputXmlAttributeForLong','Cal.Utilities.XmlBuilder.outputXmlAttributeForLong','Cal.Utilities.XmlBuilder.outputXmlAttributeForLong',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4114,'inputListXml','Cal.Utilities.XmlBuilder.inputListXml','Cal.Utilities.XmlBuilder.inputListXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4115,'inputListXmlElement','Cal.Utilities.XmlBuilder.inputListXmlElement','Cal.Utilities.XmlBuilder.inputListXmlElement',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4116,'makeXmlNamespace','Cal.Utilities.XmlBuilder.makeXmlNamespace','Cal.Utilities.XmlBuilder.makeXmlNamespace',NULL,'[CALDoc] Construct an XML namespace with an optional prefix.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4117,'makeXmlAttributeWithNamespace','Cal.Utilities.XmlBuilder.makeXmlAttributeWithNamespace','Cal.Utilities.XmlBuilder.makeXmlAttributeWithNamespace',NULL,'[CALDoc] Creates a new XML attribute with the specified name, value, and namespace.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4118,'buildXmlForRecord','Cal.Utilities.XmlBuilder.buildXmlForRecord','Cal.Utilities.XmlBuilder.buildXmlForRecord',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4119,'buildXmlElementForRecord','Cal.Utilities.XmlBuilder.buildXmlElementForRecord','Cal.Utilities.XmlBuilder.buildXmlElementForRecord',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4120,'inputDoubleXml','Cal.Utilities.XmlBuilder.inputDoubleXml','Cal.Utilities.XmlBuilder.inputDoubleXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4121,'makeXmlDocument','Cal.Utilities.XmlBuilder.makeXmlDocument','Cal.Utilities.XmlBuilder.makeXmlDocument',NULL,'[CALDoc] Creates an XML document with the specified top-level nodes (one of which must be an element).','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4122,'inputBooleanXmlAttribute','Cal.Utilities.XmlBuilder.inputBooleanXmlAttribute','Cal.Utilities.XmlBuilder.inputBooleanXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4123,'trueTag','Cal.Utilities.XmlBuilder.trueTag','Cal.Utilities.XmlBuilder.trueTag',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4124,'elementQualifiedName','Cal.Utilities.XmlBuilder.elementQualifiedName','Cal.Utilities.XmlBuilder.elementQualifiedName',NULL,'[CALDoc] Returns the qualified name of an XML element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4125,'falseTag','Cal.Utilities.XmlBuilder.falseTag','Cal.Utilities.XmlBuilder.falseTag',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4126,'inputRecordXml','Cal.Utilities.XmlBuilder.inputRecordXml','Cal.Utilities.XmlBuilder.inputRecordXml',NULL,'[CALDoc] Records are always serialized as XmlNodes.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4127,'outputIntXml','Cal.Utilities.XmlBuilder.outputIntXml','Cal.Utilities.XmlBuilder.outputIntXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4128,'makeXmlCDataSectionElement','Cal.Utilities.XmlBuilder.makeXmlCDataSectionElement','Cal.Utilities.XmlBuilder.makeXmlCDataSectionElement',NULL,'[CALDoc] Creates a new XML element with the specified text content wrapped in\nin a CDATA section.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4129,'elementAttributes','Cal.Utilities.XmlBuilder.elementAttributes','Cal.Utilities.XmlBuilder.elementAttributes',NULL,'[CALDoc] Returns the attributes for an XML element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4130,'elementNamespace','Cal.Utilities.XmlBuilder.elementNamespace','Cal.Utilities.XmlBuilder.elementNamespace',NULL,'[CALDoc] Returns the namespace (if any) for an XML Element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4131,'inputBooleanXml','Cal.Utilities.XmlBuilder.inputBooleanXml','Cal.Utilities.XmlBuilder.inputBooleanXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4132,'elementChildText','Cal.Utilities.XmlBuilder.elementChildText','Cal.Utilities.XmlBuilder.elementChildText',NULL,'[CALDoc] Returns the child text for an XML element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4133,'outputFromXmlElementOutputable','Cal.Utilities.XmlBuilder.outputFromXmlElementOutputable','Cal.Utilities.XmlBuilder.outputFromXmlElementOutputable',NULL,'[CALDoc] Helper for implementing toXml from XmlElementOutputable types','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4134,'outputXmlAttributeForInt','Cal.Utilities.XmlBuilder.outputXmlAttributeForInt','Cal.Utilities.XmlBuilder.outputXmlAttributeForInt',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4135,'fromXmlDocument','Cal.Utilities.XmlBuilder.fromXmlDocument','Cal.Utilities.XmlBuilder.fromXmlDocument',NULL,'[CALDoc] Deserializes a value from the root XML element of the specified document.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4136,'documentRootElement','Cal.Utilities.XmlBuilder.documentRootElement','Cal.Utilities.XmlBuilder.documentRootElement',NULL,'[CALDoc] Returns the root element of the XML document.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4137,'inputLongXml','Cal.Utilities.XmlBuilder.inputLongXml','Cal.Utilities.XmlBuilder.inputLongXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4138,'outputXmlElementForList','Cal.Utilities.XmlBuilder.outputXmlElementForList','Cal.Utilities.XmlBuilder.outputXmlElementForList',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4139,'attributeBasedTag','Cal.Utilities.XmlBuilder.attributeBasedTag','Cal.Utilities.XmlBuilder.attributeBasedTag',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4140,'itemTag','Cal.Utilities.XmlBuilder.itemTag','Cal.Utilities.XmlBuilder.itemTag',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4141,'inputTimeXml','Cal.Utilities.XmlBuilder.inputTimeXml','Cal.Utilities.XmlBuilder.inputTimeXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4142,'notationSystemId','Cal.Utilities.XmlBuilder.notationSystemId','Cal.Utilities.XmlBuilder.notationSystemId',NULL,'[CALDoc] Returns the system ID of an XML notation.','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4143,'inputLongXmlAttribute','Cal.Utilities.XmlBuilder.inputLongXmlAttribute','Cal.Utilities.XmlBuilder.inputLongXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4144,'outputXmlAttributeForColor','Cal.Utilities.XmlBuilder.outputXmlAttributeForColor','Cal.Utilities.XmlBuilder.outputXmlAttributeForColor',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4145,'colorToString','Cal.Utilities.XmlBuilder.colorToString','Cal.Utilities.XmlBuilder.colorToString',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4146,'elementChildValue','Cal.Utilities.XmlBuilder.elementChildValue','Cal.Utilities.XmlBuilder.elementChildValue',NULL,'[CALDoc] Returns the deserialized value from the specified child for an XML element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4147,'elementFirstChildElementByName','Cal.Utilities.XmlBuilder.elementFirstChildElementByName','Cal.Utilities.XmlBuilder.elementFirstChildElementByName',NULL,'[CALDoc] Returns the first child element with a specified name for an XML element.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4148,'xmlDocumentToString','Cal.Utilities.XmlBuilder.xmlDocumentToString','Cal.Utilities.XmlBuilder.xmlDocumentToString',NULL,'[CALDoc] Generates a string representation of the XML document.\n','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4149,'outputBooleanXml','Cal.Utilities.XmlBuilder.outputBooleanXml','Cal.Utilities.XmlBuilder.outputBooleanXml',NULL,'[CALDoc] ','2008-04-20 18:17:39','2008-04-20 18:17:39'),(4150,'inputStringXmlAttribute','Cal.Utilities.XmlBuilder.inputStringXmlAttribute','Cal.Utilities.XmlBuilder.inputStringXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4151,'inputIntXml','Cal.Utilities.XmlBuilder.inputIntXml','Cal.Utilities.XmlBuilder.inputIntXml',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4152,'makeXmlNotation','Cal.Utilities.XmlBuilder.makeXmlNotation','Cal.Utilities.XmlBuilder.makeXmlNotation',NULL,'[CALDoc] Creates a new XML notation with the specified name, system ID, and public ID.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4153,'checkWellFormedPublicId','Cal.Utilities.XmlBuilder.checkWellFormedPublicId','Cal.Utilities.XmlBuilder.checkWellFormedPublicId',NULL,'[CALDoc] Checks that the specified string is a well-formed XML public ID.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4154,'checkWellFormedPublicIdChar','Cal.Utilities.XmlBuilder.checkWellFormedPublicIdChar','Cal.Utilities.XmlBuilder.checkWellFormedPublicIdChar',NULL,'[CALDoc] Checks that the specified character is well-formed as a character in an XML public ID.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4155,'elementAttributeValue','Cal.Utilities.XmlBuilder.elementAttributeValue','Cal.Utilities.XmlBuilder.elementAttributeValue',NULL,'[CALDoc] Returns the deserialized value from the specified attribute for an XML element.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4156,'elementAttributeValueMaybe','Cal.Utilities.XmlBuilder.elementAttributeValueMaybe','Cal.Utilities.XmlBuilder.elementAttributeValueMaybe',NULL,'[CALDoc] Returns the deserialized value from the specified attribute for an XML element.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4157,'makeXmlProcessingInstruction','Cal.Utilities.XmlBuilder.makeXmlProcessingInstruction','Cal.Utilities.XmlBuilder.makeXmlProcessingInstruction',NULL,'[CALDoc] Creates a new XML processing instruction node.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4158,'outputXmlForRange','Cal.Utilities.XmlBuilder.outputXmlForRange','Cal.Utilities.XmlBuilder.outputXmlForRange',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4159,'outputXmlElementForRange','Cal.Utilities.XmlBuilder.outputXmlElementForRange','Cal.Utilities.XmlBuilder.outputXmlElementForRange',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4160,'endTag','Cal.Utilities.XmlBuilder.endTag','Cal.Utilities.XmlBuilder.endTag',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4161,'startTag','Cal.Utilities.XmlBuilder.startTag','Cal.Utilities.XmlBuilder.startTag',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4162,'valueTag','Cal.Utilities.XmlBuilder.valueTag','Cal.Utilities.XmlBuilder.valueTag',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4163,'inclusiveTag','Cal.Utilities.XmlBuilder.inclusiveTag','Cal.Utilities.XmlBuilder.inclusiveTag',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4164,'elementForXmlAttributeOutputable','Cal.Utilities.XmlBuilder.elementForXmlAttributeOutputable','Cal.Utilities.XmlBuilder.elementForXmlAttributeOutputable',NULL,'[CALDoc] This is a helper function for the occasional time when during serialization something that\'s normally serialized as an \nattribute needs to be stored as an element.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4165,'checkWellFormedSystemId','Cal.Utilities.XmlBuilder.checkWellFormedSystemId','Cal.Utilities.XmlBuilder.checkWellFormedSystemId',NULL,'[CALDoc] Checks that the specified string is a well-formed XML system ID.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4166,'notationPublicId','Cal.Utilities.XmlBuilder.notationPublicId','Cal.Utilities.XmlBuilder.notationPublicId',NULL,'[CALDoc] Returns the public ID of an XML notation.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4167,'outputXmlAttributeForTime','Cal.Utilities.XmlBuilder.outputXmlAttributeForTime','Cal.Utilities.XmlBuilder.outputXmlAttributeForTime',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4168,'stringForNode','Cal.Utilities.XmlBuilder.stringForNode','Cal.Utilities.XmlBuilder.stringForNode',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4169,'isTextNode','Cal.Utilities.XmlBuilder.isTextNode','Cal.Utilities.XmlBuilder.isTextNode',NULL,'[CALDoc] Returns whether the XML node is TEXT.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4170,'singleIndent','Cal.Utilities.XmlBuilder.singleIndent','Cal.Utilities.XmlBuilder.singleIndent',NULL,'[CALDoc] The string for a single indent level.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4171,'attributesString','Cal.Utilities.XmlBuilder.attributesString','Cal.Utilities.XmlBuilder.attributesString',NULL,'[CALDoc] Construct the text for the attributes of an element.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4172,'stringForAttribute','Cal.Utilities.XmlBuilder.stringForAttribute','Cal.Utilities.XmlBuilder.stringForAttribute',NULL,'[CALDoc] Generates the xml for an attribute.\neg xx=\"yy\" or a:xx=\"yy\"','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4173,'namespaceDeclarationAttribute','Cal.Utilities.XmlBuilder.namespaceDeclarationAttribute','Cal.Utilities.XmlBuilder.namespaceDeclarationAttribute',NULL,'[CALDoc] An attribute to associate a prefix with a namespace URI.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4174,'noNamespaceAttribute','Cal.Utilities.XmlBuilder.noNamespaceAttribute','Cal.Utilities.XmlBuilder.noNamespaceAttribute',NULL,'[CALDoc] An attribute to indicate that an element doesn\'t belong to a namespace.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4175,'namespaceAttribute','Cal.Utilities.XmlBuilder.namespaceAttribute','Cal.Utilities.XmlBuilder.namespaceAttribute',NULL,'[CALDoc] An attribute to indicate that an element belongs to the specified namespace.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4176,'escapeXmlChars','Cal.Utilities.XmlBuilder.escapeXmlChars','Cal.Utilities.XmlBuilder.escapeXmlChars',NULL,'[CALDoc] Replaces the chars <code>\'&amp;\'</code>, <code>\'&lt;\'</code>, and <code>\'&gt;\'</code> with the appropriate XML escape sequences.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4177,'substituteStrings','Cal.Utilities.XmlBuilder.substituteStrings','Cal.Utilities.XmlBuilder.substituteStrings',NULL,'[CALDoc] Returns the specified string with items in the substitutions list\nreplaced by the corresponding substitution strings.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4178,'elementFirstChildElement','Cal.Utilities.XmlBuilder.elementFirstChildElement','Cal.Utilities.XmlBuilder.elementFirstChildElement',NULL,'[CALDoc] Returns the first child element for an XML element.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4179,'outputXmlAttributeForInteger','Cal.Utilities.XmlBuilder.outputXmlAttributeForInteger','Cal.Utilities.XmlBuilder.outputXmlAttributeForInteger',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4180,'outputXmlAttributeForString','Cal.Utilities.XmlBuilder.outputXmlAttributeForString','Cal.Utilities.XmlBuilder.outputXmlAttributeForString',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4181,'makeXmlAttribute','Cal.Utilities.XmlBuilder.makeXmlAttribute','Cal.Utilities.XmlBuilder.makeXmlAttribute',NULL,'[CALDoc] Creates a new XML attribute with the specified name and value.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4182,'fromXmlRecord','Cal.Utilities.XmlBuilder.fromXmlRecord','Cal.Utilities.XmlBuilder.fromXmlRecord',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4183,'elementAttributeByName','Cal.Utilities.XmlBuilder.elementAttributeByName','Cal.Utilities.XmlBuilder.elementAttributeByName',NULL,'[CALDoc] Returns the first attribute with the given name\nAn error is thrown if the node is not an XML element.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4184,'fieldNameToXmlName','Cal.Utilities.XmlBuilder.fieldNameToXmlName','Cal.Utilities.XmlBuilder.fieldNameToXmlName',NULL,'[CALDoc] This function converts a record field name to a well-formed xml name -\nit replaces the leading \'#\' in oridinal field name with an \'_\'','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4185,'inputFromXmlElementInputable','Cal.Utilities.XmlBuilder.inputFromXmlElementInputable','Cal.Utilities.XmlBuilder.inputFromXmlElementInputable',NULL,'[CALDoc] Helper for implementing fromXml from XmlAttributeOutputable types','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4186,'inputStringXml','Cal.Utilities.XmlBuilder.inputStringXml','Cal.Utilities.XmlBuilder.inputStringXml',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4187,'elementChildElementByName','Cal.Utilities.XmlBuilder.elementChildElementByName','Cal.Utilities.XmlBuilder.elementChildElementByName',NULL,'[CALDoc] Returns the fist child elements with a specified name (if any) for an XML element.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4188,'elementChildElementsByName','Cal.Utilities.XmlBuilder.elementChildElementsByName','Cal.Utilities.XmlBuilder.elementChildElementsByName',NULL,'[CALDoc] Returns the child elements with a specified name for an XML element.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4189,'elementLocalName','Cal.Utilities.XmlBuilder.elementLocalName','Cal.Utilities.XmlBuilder.elementLocalName',NULL,'[CALDoc] Returns the local name of an XML element.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4190,'indentSize','Cal.Utilities.XmlBuilder.indentSize','Cal.Utilities.XmlBuilder.indentSize',NULL,'[CALDoc] The number of spaces to insert per indent level.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4191,'makeXmlCDataNode','Cal.Utilities.XmlBuilder.makeXmlCDataNode','Cal.Utilities.XmlBuilder.makeXmlCDataNode',NULL,'[CALDoc] Creates a new XML CDATA section with the specific text context.  ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4192,'outputTimeXml','Cal.Utilities.XmlBuilder.outputTimeXml','Cal.Utilities.XmlBuilder.outputTimeXml',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4193,'inputColorXmlAttribute','Cal.Utilities.XmlBuilder.inputColorXmlAttribute','Cal.Utilities.XmlBuilder.inputColorXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4194,'stringToColor','Cal.Utilities.XmlBuilder.stringToColor','Cal.Utilities.XmlBuilder.stringToColor',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4195,'textNodeText','Cal.Utilities.XmlBuilder.textNodeText','Cal.Utilities.XmlBuilder.textNodeText',NULL,'[CALDoc] Returns the text of an XML text node.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4196,'outputColorXml','Cal.Utilities.XmlBuilder.outputColorXml','Cal.Utilities.XmlBuilder.outputColorXml',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4197,'outputFromXmlAttributeOutputable','Cal.Utilities.XmlBuilder.outputFromXmlAttributeOutputable','Cal.Utilities.XmlBuilder.outputFromXmlAttributeOutputable',NULL,'[CALDoc] Helper for implementing toXml from XmlAttributeOutputable types','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4198,'elementChildElements','Cal.Utilities.XmlBuilder.elementChildElements','Cal.Utilities.XmlBuilder.elementChildElements',NULL,'[CALDoc] Returns the child elements for an XML element.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4199,'isElementNode','Cal.Utilities.XmlBuilder.isElementNode','Cal.Utilities.XmlBuilder.isElementNode',NULL,'[CALDoc] Returns whether the XML node is an element.','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4200,'makeXmlStyleSheet','Cal.Utilities.XmlBuilder.makeXmlStyleSheet','Cal.Utilities.XmlBuilder.makeXmlStyleSheet',NULL,'[CALDoc] Creates a new XML stylesheet node with the specified url and type.\n','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4201,'inputTimeXmlAttribute','Cal.Utilities.XmlBuilder.inputTimeXmlAttribute','Cal.Utilities.XmlBuilder.inputTimeXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:40','2008-04-20 18:17:40'),(4202,'attributeValue','Cal.Utilities.XmlBuilder.attributeValue','Cal.Utilities.XmlBuilder.attributeValue',NULL,'[CALDoc] Returns the value of an XML attribute.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4203,'makeXmlTextElement','Cal.Utilities.XmlBuilder.makeXmlTextElement','Cal.Utilities.XmlBuilder.makeXmlTextElement',NULL,'[CALDoc] Creates a new XML element with the specified text content.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4204,'makeXmlElement','Cal.Utilities.XmlBuilder.makeXmlElement','Cal.Utilities.XmlBuilder.makeXmlElement',NULL,'[CALDoc] Creates a new XML element.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4205,'attributeQualifiedName','Cal.Utilities.XmlBuilder.attributeQualifiedName','Cal.Utilities.XmlBuilder.attributeQualifiedName',NULL,'[CALDoc] Returns the qualified name of an XML attribute.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4206,'namespacePrefix','Cal.Utilities.XmlBuilder.namespacePrefix','Cal.Utilities.XmlBuilder.namespacePrefix',NULL,'[CALDoc] Returns the prefix associated with a namespace.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4207,'attributeNamespace','Cal.Utilities.XmlBuilder.attributeNamespace','Cal.Utilities.XmlBuilder.attributeNamespace',NULL,'[CALDoc] Returns the namespace (if any) for the attribute.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4208,'namespaceURI','Cal.Utilities.XmlBuilder.namespaceURI','Cal.Utilities.XmlBuilder.namespaceURI',NULL,'[CALDoc] Returns the URI for a namespace.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4209,'attributeLocalName','Cal.Utilities.XmlBuilder.attributeLocalName','Cal.Utilities.XmlBuilder.attributeLocalName',NULL,'[CALDoc] Returns the local name of an XML attribute.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4210,'findDuplicate','Cal.Utilities.XmlBuilder.findDuplicate','Cal.Utilities.XmlBuilder.findDuplicate',NULL,'[CALDoc] Returns the first duplicate value found in the specified list, if any.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4211,'checkWellFormedXmlName','Cal.Utilities.XmlBuilder.checkWellFormedXmlName','Cal.Utilities.XmlBuilder.checkWellFormedXmlName',NULL,'[CALDoc] Checks that the specified name is a well-formed XML name.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4212,'checkWellFormedFirstNameChar','Cal.Utilities.XmlBuilder.checkWellFormedFirstNameChar','Cal.Utilities.XmlBuilder.checkWellFormedFirstNameChar',NULL,'[CALDoc] Checks that the specified character is well-formed as the first character in an XML name.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4213,'isWellFormedFirstXmlNameChar','Cal.Utilities.XmlBuilder.isWellFormedFirstXmlNameChar','Cal.Utilities.XmlBuilder.isWellFormedFirstXmlNameChar',NULL,'[CALDoc] Returns whether the specified character is well-formed as the first character in an XML name.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4214,'checkWellFormedNameChar','Cal.Utilities.XmlBuilder.checkWellFormedNameChar','Cal.Utilities.XmlBuilder.checkWellFormedNameChar',NULL,'[CALDoc] Checks that the specified character is well-formed as a character in an XML name.\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4215,'isWellFormedXmlNameChar','Cal.Utilities.XmlBuilder.isWellFormedXmlNameChar','Cal.Utilities.XmlBuilder.isWellFormedXmlNameChar',NULL,'[CALDoc] Returns whether the specified character is well-formed as a character in an XML name (not the first character).','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4216,'inputIntegerXml','Cal.Utilities.XmlBuilder.inputIntegerXml','Cal.Utilities.XmlBuilder.inputIntegerXml',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4217,'inputFromXmlAttributeInputable','Cal.Utilities.XmlBuilder.inputFromXmlAttributeInputable','Cal.Utilities.XmlBuilder.inputFromXmlAttributeInputable',NULL,'[CALDoc] Helper for implementing fromXml from XmlAttributeInputable types','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4218,'XmlDocument','Cal.Utilities.XmlBuilder.XmlDocument','Cal.Utilities.XmlBuilder.XmlDocument',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4219,'XmlNamespace','Cal.Utilities.XmlBuilder.XmlNamespace','Cal.Utilities.XmlBuilder.XmlNamespace',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4220,'XmlProcessingInstruction','Cal.Utilities.XmlBuilder.XmlProcessingInstruction','Cal.Utilities.XmlBuilder.XmlProcessingInstruction',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4221,'XmlStyleSheet','Cal.Utilities.XmlBuilder.XmlStyleSheet','Cal.Utilities.XmlBuilder.XmlStyleSheet',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4222,'XmlElement','Cal.Utilities.XmlBuilder.XmlElement','Cal.Utilities.XmlBuilder.XmlElement',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4223,'XmlText','Cal.Utilities.XmlBuilder.XmlText','Cal.Utilities.XmlBuilder.XmlText',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4224,'XmlCDataSection','Cal.Utilities.XmlBuilder.XmlCDataSection','Cal.Utilities.XmlBuilder.XmlCDataSection',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4225,'XmlComment','Cal.Utilities.XmlBuilder.XmlComment','Cal.Utilities.XmlBuilder.XmlComment',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4226,'XmlAttribute','Cal.Utilities.XmlBuilder.XmlAttribute','Cal.Utilities.XmlBuilder.XmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4227,'XmlNotation','Cal.Utilities.XmlBuilder.XmlNotation','Cal.Utilities.XmlBuilder.XmlNotation',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4228,'toXml','Cal.Utilities.XmlBuilder.toXml','Cal.Utilities.XmlBuilder.toXml',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4229,'toXmlElement','Cal.Utilities.XmlBuilder.toXmlElement','Cal.Utilities.XmlBuilder.toXmlElement',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4230,'toXmlAttribute','Cal.Utilities.XmlBuilder.toXmlAttribute','Cal.Utilities.XmlBuilder.toXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4231,'fromXml','Cal.Utilities.XmlBuilder.fromXml','Cal.Utilities.XmlBuilder.fromXml',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4232,'fromXmlElement','Cal.Utilities.XmlBuilder.fromXmlElement','Cal.Utilities.XmlBuilder.fromXmlElement',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4233,'fromXmlAttribute','Cal.Utilities.XmlBuilder.fromXmlAttribute','Cal.Utilities.XmlBuilder.fromXmlAttribute',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4234,'spaces','Cal.Utilities.Parser.spaces','Cal.Utilities.Parser.spaces',NULL,'[CALDoc] A parser that parses <em>zero</em> or more whitespace characters and discards the result.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4235,'pOrT5','Cal.Utilities.Parser.pOrT5','Cal.Utilities.Parser.pOrT5',NULL,'[CALDoc] The parser <code>pOrT5 p1 p2 p3 p4 p5</code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n (try p4) `pOr`\n p5</pre>\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4236,'token','Cal.Utilities.Parser.token','Cal.Utilities.Parser.token',NULL,'[CALDoc] The parser <code>token showTok posFromTok testTok</code> accepts a token <code>t</code> with\nresult <code>x</code> when the function <code>testTok t</code> returns <code>Just x</code>.\nThe source position of <code>t</code> should be returned by <code>posFromTok t</code> and the token can be shown\nusing <code>showTok t</code>.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4237,'octDigit','Cal.Utilities.Parser.octDigit','Cal.Utilities.Parser.octDigit',NULL,'[CALDoc] A parser that parses an octal digit (a character between <code>\'0\'</code> and <code>\'7\'</code>), and returns the parsed\ncharacter.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4238,'setPosition','Cal.Utilities.Parser.setPosition','Cal.Utilities.Parser.setPosition',NULL,'[CALDoc] The parser <code>setPosition pos</code> sets the current source position to <code>pos</code>.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4239,'caseStringU','Cal.Utilities.Parser.caseStringU','Cal.Utilities.Parser.caseStringU',NULL,'[CALDoc] The parser <code>caseStringU s</code> parses a sequence of characters <code>chars</code> satisfying\n<code>(map toUpperCase chars) == s</code>, and returns the parsed characters in a list.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4240,'sourceName','Cal.Utilities.Parser.sourceName','Cal.Utilities.Parser.sourceName',NULL,'[CALDoc] Extracts the name of the source from a source position.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4241,'isOctDigit','Cal.Utilities.Parser.isOctDigit','Cal.Utilities.Parser.isOctDigit',NULL,'[CALDoc] ','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4242,'newline','Cal.Utilities.Parser.newline','Cal.Utilities.Parser.newline',NULL,'[CALDoc] A parser that parses a newline character (<code>\'\\n\'</code>), and returns the parsed character.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4243,'pFail','Cal.Utilities.Parser.pFail','Cal.Utilities.Parser.pFail',NULL,'[CALDoc] The parser <code>pFail msg</code> always fails with the error message <code>msg</code>\nwithout consuming any input.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4244,'tab','Cal.Utilities.Parser.tab','Cal.Utilities.Parser.tab',NULL,'[CALDoc] A parser that parses a tab character (<code>\'\\t\'</code>), and returns the parsed character.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4245,'getInput','Cal.Utilities.Parser.getInput','Cal.Utilities.Parser.getInput',NULL,'[CALDoc] Same as <code>getInputSeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4246,'pOrT7','Cal.Utilities.Parser.pOrT7','Cal.Utilities.Parser.pOrT7',NULL,'[CALDoc] The parser <code>pOrT7 p1 p2 p3 p4 p5 p6 p7</code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n (try p4) `pOr`\n (try p5) `pOr`\n (try p6) `pOr`\n p7</pre>\n','2008-04-20 18:17:41','2008-04-20 18:17:41'),(4247,'setInput','Cal.Utilities.Parser.setInput','Cal.Utilities.Parser.setInput',NULL,'[CALDoc] Same as <code>setInputSeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4248,'between','Cal.Utilities.Parser.between','Cal.Utilities.Parser.between',NULL,'[CALDoc] The parser <code>between open close p</code> parses <code>open</code>, followed by <code>p</code> and <code>close</code>,\nand returns the value returned by <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4249,'oneOf','Cal.Utilities.Parser.oneOf','Cal.Utilities.Parser.oneOf',NULL,'[CALDoc] The parser <code>oneOf cs</code> succeeds if the current character is in the supplied list of characters\n<code>cs</code>, and returns the parsed character.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4250,'char','Cal.Utilities.Parser.char','Cal.Utilities.Parser.char',NULL,'[CALDoc] The parser <code>char c</code> parses a single character <code>c</code>, and returns the parsed character (i.e. <code>c</code>).','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4251,'lookAhead','Cal.Utilities.Parser.lookAhead','Cal.Utilities.Parser.lookAhead',NULL,'[CALDoc] The parser <code>lookAhead p</code> implements the functionality of lookahead: it applies parser <code>p</code> and\ncaptures its return value <em>without changing the parser\'s state and without consuming input</em>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4252,'sourceColumn','Cal.Utilities.Parser.sourceColumn','Cal.Utilities.Parser.sourceColumn',NULL,'[CALDoc] Extracts the column number from a source position.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4253,'setSourceColumn','Cal.Utilities.Parser.setSourceColumn','Cal.Utilities.Parser.setSourceColumn',NULL,'[CALDoc] Sets the column number of a source position to the given value.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4254,'count','Cal.Utilities.Parser.count','Cal.Utilities.Parser.count',NULL,'[CALDoc] The parser <code>count n p</code> parses <code>n</code> occurrences of <code>p</code>. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4255,'pAppend','Cal.Utilities.Parser.pAppend','Cal.Utilities.Parser.pAppend',NULL,'[CALDoc] The parser <code>p `pAppend` q</code> first applies the parser <code>p</code>, then applies the parser <code>q</code>,\nand finally returns the concatenation of the <code>Appendable</code> results of the parsers <code>p</code> and <code>q</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4256,'choiceT','Cal.Utilities.Parser.choiceT','Cal.Utilities.Parser.choiceT',NULL,'[CALDoc] The parser <code>choiceT ps</code> tries to apply the parsers in the list <code>ps</code> in order using\nthe <code>pOrT</code> combinator, until one of them succeeds. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4257,'setSourceLine','Cal.Utilities.Parser.setSourceLine','Cal.Utilities.Parser.setSourceLine',NULL,'[CALDoc] Sets the line number of a source position to the given value.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4258,'sepEndBy','Cal.Utilities.Parser.sepEndBy','Cal.Utilities.Parser.sepEndBy',NULL,'[CALDoc] The parser <code>sepEndBy p sep</code> parses <em>zero</em> or more occurrences of <code>p</code>,\nseparated and <em>optionally</em> ended by <code>sep</code>, and returns a list of values returned by the applications\nof <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4259,'sepEndBy1','Cal.Utilities.Parser.sepEndBy1','Cal.Utilities.Parser.sepEndBy1',NULL,'[CALDoc] The parser <code>sepEndBy1 p sep</code> parses <em>one</em> or more occurrences of <code>p</code>,\nseparated and <em>optionally</em> ended by <code>sep</code>, and returns a list of values returned by the applications\nof <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4260,'sourceLine','Cal.Utilities.Parser.sourceLine','Cal.Utilities.Parser.sourceLine',NULL,'[CALDoc] Extracts the line number from a source position.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4261,'updateState','Cal.Utilities.Parser.updateState','Cal.Utilities.Parser.updateState',NULL,'[CALDoc] The parser <code>updateState f</code> updates the user state by applying the update function <code>f</code>\non it. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4262,'caseString','Cal.Utilities.Parser.caseString','Cal.Utilities.Parser.caseString',NULL,'[CALDoc] The parser <code>caseString s</code> parses a sequence of characters <code>chars</code> satisfying\n<code>(map toLowerCase chars) == s</code>, and returns the parsed characters in a list.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4263,'runParser','Cal.Utilities.Parser.runParser','Cal.Utilities.Parser.runParser',NULL,'[CALDoc] Same as <code>runParserSeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4264,'lower','Cal.Utilities.Parser.lower','Cal.Utilities.Parser.lower',NULL,'[CALDoc] A parser that parses a lowercase letter (according to <code>Char.isLowerCase</code>) and returns the parsed character.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4265,'parseTest','Cal.Utilities.Parser.parseTest','Cal.Utilities.Parser.parseTest',NULL,'[CALDoc] Same as <code>parseTestSeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4266,'parseTestSeq','Cal.Utilities.Parser.parseTestSeq','Cal.Utilities.Parser.parseTestSeq',NULL,'[CALDoc] <code>parseTestSeq p input</code> applies a parser <code>p</code> against input <code>input</code>\nand returns the result as a string. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4267,'pOrT3','Cal.Utilities.Parser.pOrT3','Cal.Utilities.Parser.pOrT3',NULL,'[CALDoc] The parser <code>pOrT3 p1 p2 p3</code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n p3</pre>\n','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4268,'caseChar','Cal.Utilities.Parser.caseChar','Cal.Utilities.Parser.caseChar',NULL,'[CALDoc] The parser <code>caseChar c</code> parses a single character <code>x</code> where <code>(toLowerCase x) == c</code>,\nand returns the parsed character (i.e. <code>x</code>).','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4269,'getPosition','Cal.Utilities.Parser.getPosition','Cal.Utilities.Parser.getPosition',NULL,'[CALDoc] A parser that returns the current source position.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4270,'setParserState','Cal.Utilities.Parser.setParserState','Cal.Utilities.Parser.setParserState',NULL,'[CALDoc] The parser <code>setParserState st</code> sets the parser\'s state to <code>st</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4271,'makeTSString','Cal.Utilities.Parser.makeTSString','Cal.Utilities.Parser.makeTSString',NULL,'[CALDoc] Constructs a token sequence using the input string as its internal representation.\n','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4272,'digit','Cal.Utilities.Parser.digit','Cal.Utilities.Parser.digit',NULL,'[CALDoc] A parser that parses a digit (according to <code>Char.isDigit</code>) and returns the parsed character.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4273,'getInputSeq','Cal.Utilities.Parser.getInputSeq','Cal.Utilities.Parser.getInputSeq',NULL,'[CALDoc] A parser that returns the current input.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4274,'setSourceName','Cal.Utilities.Parser.setSourceName','Cal.Utilities.Parser.setSourceName',NULL,'[CALDoc] Sets the source name of a source position to the given string.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4275,'choice','Cal.Utilities.Parser.choice','Cal.Utilities.Parser.choice',NULL,'[CALDoc] The parser <code>choice ps</code> tries to apply the parsers in the list <code>ps</code> in order using\nthe <code>pOr</code> combinator, until one of them succeeds. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4276,'pZero','Cal.Utilities.Parser.pZero','Cal.Utilities.Parser.pZero',NULL,'[CALDoc] The parser <code>pZero</code> always fails without consuming any input. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4277,'setInputSeq','Cal.Utilities.Parser.setInputSeq','Cal.Utilities.Parser.setInputSeq',NULL,'[CALDoc] The parser <code>setInput input</code> continues parsing with <code>input</code>. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4278,'optional','Cal.Utilities.Parser.optional','Cal.Utilities.Parser.optional',NULL,'[CALDoc] The parser <code>optional p</code> tries to apply parser <code>p</code>. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4279,'sepBy','Cal.Utilities.Parser.sepBy','Cal.Utilities.Parser.sepBy',NULL,'[CALDoc] The parser <code>sepBy p sep</code> parses <em>zero</em> or more occurrences of <code>p</code>,\nseparated by <code>sep</code>, and returns a list of the values returned by the applications of <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4280,'sepBy1','Cal.Utilities.Parser.sepBy1','Cal.Utilities.Parser.sepBy1',NULL,'[CALDoc] The parser <code>sepBy1 p sep</code> parses <em>one</em> or more occurrences of <code>p</code>,\nseparated by <code>sep</code>, and returns a list of the values returned by the applications of <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4281,'pMap','Cal.Utilities.Parser.pMap','Cal.Utilities.Parser.pMap',NULL,'[CALDoc] The parser <code>pMap f parser</code> is an optimized implementation of\n\n<pre> parser `pBind` (\\x -&gt;\n pReturn (f x))\n</pre>\n','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4282,'sequence','Cal.Utilities.Parser.sequence','Cal.Utilities.Parser.sequence',NULL,'[CALDoc] The parser <code>sequence list</code> applies the parsers in <code>list</code> in sequence, and returns\na list containing the values returned by each parser.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4283,'incSourceColumn','Cal.Utilities.Parser.incSourceColumn','Cal.Utilities.Parser.incSourceColumn',NULL,'[CALDoc] Increments the column number of a source position by the given amount.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4284,'chainRight','Cal.Utilities.Parser.chainRight','Cal.Utilities.Parser.chainRight',NULL,'[CALDoc] The parser <code>chainRight p op x</code> parses <em>zero</em> or more occurrences of <code>p</code>,\nseparated by <code>op</code>, and returns a value obtained by <em>right</em>-associative applications\nof the function returned by <code>op</code> to the values returned by <code>p</code>. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4285,'chainRight1','Cal.Utilities.Parser.chainRight1','Cal.Utilities.Parser.chainRight1',NULL,'[CALDoc] The parser <code>chainRight1 p op</code> parses <em>one</em> or more occurrences of <code>p</code>,\nseparated by <code>op</code>, and returns a value obtained by <em>right</em>-associative applications\nof the function returned by <code>op</code> to the values returned by <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4286,'alphaNum','Cal.Utilities.Parser.alphaNum','Cal.Utilities.Parser.alphaNum',NULL,'[CALDoc] A parser that parses a letter or digit (according to <code>Char.isLetterOrDigit</code>) and returns the parsed character.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4287,'isAlphaNum','Cal.Utilities.Parser.isAlphaNum','Cal.Utilities.Parser.isAlphaNum',NULL,'[CALDoc] ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4288,'parseErrorShow','Cal.Utilities.Parser.parseErrorShow','Cal.Utilities.Parser.parseErrorShow',NULL,'[CALDoc] ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4289,'pOrT6','Cal.Utilities.Parser.pOrT6','Cal.Utilities.Parser.pOrT6',NULL,'[CALDoc] The parser <code>pOrT6 p1 p2 p3 p4 p5 p6</code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n (try p4) `pOr`\n (try p5) `pOr`\n p6</pre>\n','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4290,'tokenSatisfy','Cal.Utilities.Parser.tokenSatisfy','Cal.Utilities.Parser.tokenSatisfy',NULL,'[CALDoc] Same as <code>tokenSatisfySeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4291,'incSourceLine','Cal.Utilities.Parser.incSourceLine','Cal.Utilities.Parser.incSourceLine',NULL,'[CALDoc] Increments the line number of a source position by the given amount.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4292,'endBy','Cal.Utilities.Parser.endBy','Cal.Utilities.Parser.endBy',NULL,'[CALDoc] The parser <code>endBy p sep</code> parses <em>zero</em> or more occurrences of <code>p</code>,\nseparated and ended by <code>sep</code>, and returns a list of values returned by the applications of <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4293,'spaces1','Cal.Utilities.Parser.spaces1','Cal.Utilities.Parser.spaces1',NULL,'[CALDoc] A parser that parses <em>one</em> or more whitespace characters and discards the result.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4294,'skipMany1','Cal.Utilities.Parser.skipMany1','Cal.Utilities.Parser.skipMany1',NULL,'[CALDoc] The parser <code>skipMany1 p</code> applies the parser <code>p</code> <em>one</em> or more times, but discarding the results\nreturned by <code>p</code>. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4295,'skipMany','Cal.Utilities.Parser.skipMany','Cal.Utilities.Parser.skipMany',NULL,'[CALDoc] The parser <code>skipMany p</code> applies the parser <code>p</code> <em>zero</em> or more times, but discarding the results\nreturned by <code>p</code>. ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4296,'letter','Cal.Utilities.Parser.letter','Cal.Utilities.Parser.letter',NULL,'[CALDoc] A parser that parses a letter (according to <code>Char.isLetter</code>) and returns the parsed character.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4297,'isAlpha','Cal.Utilities.Parser.isAlpha','Cal.Utilities.Parser.isAlpha',NULL,'[CALDoc] ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4298,'endBy1','Cal.Utilities.Parser.endBy1','Cal.Utilities.Parser.endBy1',NULL,'[CALDoc] The parser <code>endBy1 p sep</code> parses <em>one</em> or more occurrences of <code>p</code>,\nseparated and ended by <code>sep</code>, and returns a list of values returned by the applications of <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4299,'many1','Cal.Utilities.Parser.many1','Cal.Utilities.Parser.many1',NULL,'[CALDoc] The parser <code>many1 p</code> applies the parser <code>p</code> <em>one</em> or more times, and returns\na list of the values returned by applications of <code>p</code>.','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4300,'stateInput','Cal.Utilities.Parser.stateInput','Cal.Utilities.Parser.stateInput',NULL,'[CALDoc] ','2008-04-20 18:17:42','2008-04-20 18:17:42'),(4301,'parse','Cal.Utilities.Parser.parse','Cal.Utilities.Parser.parse',NULL,'[CALDoc] Same as <code>parseSeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4302,'makeTSList','Cal.Utilities.Parser.makeTSList','Cal.Utilities.Parser.makeTSList',NULL,'[CALDoc] Constructs a token sequence using the input list as its internal representation.\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4303,'tokenPrimEx','Cal.Utilities.Parser.tokenPrimEx','Cal.Utilities.Parser.tokenPrimEx',NULL,'[CALDoc] Same as <code>tokenPrimExSeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4304,'chainLeft','Cal.Utilities.Parser.chainLeft','Cal.Utilities.Parser.chainLeft',NULL,'[CALDoc] The parser <code>chainLeft p op x</code> parses <em>zero</em> or more occurrences of <code>p</code>,\nseparated by <code>op</code>, and returns a value obtained by <em>left</em>-associative applications\nof the function returned by <code>op</code> to the values returned by <code>p</code>. ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4305,'chainLeft1','Cal.Utilities.Parser.chainLeft1','Cal.Utilities.Parser.chainLeft1',NULL,'[CALDoc] The parser <code>chainLeft1 p op</code> parses <em>one</em> or more occurrences of <code>p</code>,\nseparated by <code>op</code>, and returns a value obtained by <em>left</em>-associative applications\nof the function returned by <code>op</code> to the values returned by <code>p</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4306,'upper','Cal.Utilities.Parser.upper','Cal.Utilities.Parser.upper',NULL,'[CALDoc] A parser that parses an uppercase letter (according to <code>Char.isUpperCase</code>) and returns the parsed character.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4307,'eof','Cal.Utilities.Parser.eof','Cal.Utilities.Parser.eof',NULL,'[CALDoc] A parser that only succeeds at the end of the input.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4308,'anyToken','Cal.Utilities.Parser.anyToken','Cal.Utilities.Parser.anyToken',NULL,'[CALDoc] The parser <code>anyToken showTok</code> accepts any kind of token (that can\nbe shown using <code>showTok</code>), and returns the accepted token.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4309,'tokenPrim','Cal.Utilities.Parser.tokenPrim','Cal.Utilities.Parser.tokenPrim',NULL,'[CALDoc] Same as <code>tokenPrimSeq</code>, but with a list of tokens instead of a token sequence.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4310,'wrapNextPos','Cal.Utilities.Parser.wrapNextPos','Cal.Utilities.Parser.wrapNextPos',NULL,'[CALDoc] Convert a nextpos function from accepting a list of tokens to accepting a token sequence.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4311,'tokenSequenceToList','Cal.Utilities.Parser.tokenSequenceToList','Cal.Utilities.Parser.tokenSequenceToList',NULL,'[CALDoc] Converts a token sequence to a list of tokens.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4312,'showParseError','Cal.Utilities.Parser.showParseError','Cal.Utilities.Parser.showParseError',NULL,'[CALDoc] Formats the given <code>ParseError</code> into a string for display.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4313,'errorMessages','Cal.Utilities.Parser.errorMessages','Cal.Utilities.Parser.errorMessages',NULL,'[CALDoc] Extracts the list of error messages from the parse error, sorted according to ordering function <code>messageCompare</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4314,'showErrorMessages','Cal.Utilities.Parser.showErrorMessages','Cal.Utilities.Parser.showErrorMessages',NULL,'[CALDoc] The standard function for showing error messages. ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4315,'errorPos','Cal.Utilities.Parser.errorPos','Cal.Utilities.Parser.errorPos',NULL,'[CALDoc] Extracts the source position from the parse error.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4316,'showSourcePos','Cal.Utilities.Parser.showSourcePos','Cal.Utilities.Parser.showSourcePos',NULL,'[CALDoc] Formats the given <code>SourcePos</code> into a string for display.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4317,'noneOf','Cal.Utilities.Parser.noneOf','Cal.Utilities.Parser.noneOf',NULL,'[CALDoc] The parser <code>noneOf cs</code> succeeds if the current character is <em>not</em> in the supplied list of characters\n<code>cs</code>, and returns the parsed character.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4318,'space','Cal.Utilities.Parser.space','Cal.Utilities.Parser.space',NULL,'[CALDoc] A parser that parses a whitespace character (according to <code>Char.isWhitespace</code>), and returns the\nparsed character.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4319,'manyUntil','Cal.Utilities.Parser.manyUntil','Cal.Utilities.Parser.manyUntil',NULL,'[CALDoc] The parser <code>manyUntil p end</code> applies parser <code>p</code> <em>zero</em> or more times until either\n1) the parser <code>end</code> would succeed if applied on the remaining input, or\n2) the end of the input is reached.\nIt returns the list of values returned by applications of <code>p</code>.\n<p>This parser combinator is exactly the same as:\n\n<pre> manyUntil p end =\n     many ((notFollowedBy end) `pSeq` p)</pre>\n\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4320,'notFollowedBy','Cal.Utilities.Parser.notFollowedBy','Cal.Utilities.Parser.notFollowedBy',NULL,'[CALDoc] The parser <code>notFollowedBy p</code> only succeeds when parser <code>p</code> fails.\nThis parser does not consume any input.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4321,'unexpected','Cal.Utilities.Parser.unexpected','Cal.Utilities.Parser.unexpected',NULL,'[CALDoc] The parser <code>unexpected msg</code> always fails with an <em>unexpected</em> error message\n<code>msg</code> without consuming any input.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4322,'many','Cal.Utilities.Parser.many','Cal.Utilities.Parser.many',NULL,'[CALDoc] The parser <code>many p</code> applies the parser <code>p</code> <em>zero</em> or more times, and returns\na list of the values returned by applications of <code>p</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4323,'manyAccum','Cal.Utilities.Parser.manyAccum','Cal.Utilities.Parser.manyAccum',NULL,'[CALDoc] ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4324,'option','Cal.Utilities.Parser.option','Cal.Utilities.Parser.option',NULL,'[CALDoc] The parser <code>option x p</code> tries to apply parser <code>p</code>. If <code>p</code> fails without consuming\ninput, it returns the value <code>x</code>, otherwise it returns the value returned by <code>p</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4325,'parseSeq','Cal.Utilities.Parser.parseSeq','Cal.Utilities.Parser.parseSeq',NULL,'[CALDoc] <code>parseSeq p name input</code> runs a parser <code>p</code> without user state. ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4326,'runParserSeq','Cal.Utilities.Parser.runParserSeq','Cal.Utilities.Parser.runParserSeq',NULL,'[CALDoc] <code>runParserSeq p state name input</code> runs parser <code>p</code> on the input token sequence\n<code>input</code>, obtained from source named by <code>name</code> with the initial user state <code>st</code>.\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4327,'initialPos','Cal.Utilities.Parser.initialPos','Cal.Utilities.Parser.initialPos',NULL,'[CALDoc] Constructs a <code>SourcePos</code> with the given source name, for the position of line 1, column 1.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4328,'newPos','Cal.Utilities.Parser.newPos','Cal.Utilities.Parser.newPos',NULL,'[CALDoc] Constructs a <code>SourcePos</code> with the given source name, line and column.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4329,'parserReply','Cal.Utilities.Parser.parserReply','Cal.Utilities.Parser.parserReply',NULL,'[CALDoc] ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4330,'anyChar','Cal.Utilities.Parser.anyChar','Cal.Utilities.Parser.anyChar',NULL,'[CALDoc] A parser that succeeds for any character and returns the parsed character.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4331,'tokenSatisfySeq','Cal.Utilities.Parser.tokenSatisfySeq','Cal.Utilities.Parser.tokenSatisfySeq',NULL,'[CALDoc] The parser <code>tokenSatisfy showTok nextPos f</code> accepts and returns token <code>t</code> when the function\n<code>f t</code> returns <code>True</code>. The token can be shown using <code>showTok t</code>. The position of the\n<em>next</em> token should be returned when <code>nextPos</code> is called with the current source position\n<code>pos</code>, the current token <code>t</code> and the rest of the token <code>toks</code>, i.e. <code>(nextPos pos t toks)</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4332,'manyTill','Cal.Utilities.Parser.manyTill','Cal.Utilities.Parser.manyTill',NULL,'[CALDoc] The parser <code>manyTill p end</code> applies parser <code>p</code> <em>zero</em> or more times until parser\n<code>end</code> succeeds. It returns the list of values returned by applications of <code>p</code>.\n<p>This parser combinator is an optimized implementation of the following specification:\n\n<pre> manyTill p end =\n     (end `pSeq` pReturn []) `pOr`\n     (p `pBind` (\\x -&gt;\n      manyTill p end `pBind` (\\xs -&gt;\n      pReturn (x:xs)\n     )));</pre>\n\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4333,'manyTillAccum','Cal.Utilities.Parser.manyTillAccum','Cal.Utilities.Parser.manyTillAccum',NULL,'[CALDoc] ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4334,'getState','Cal.Utilities.Parser.getState','Cal.Utilities.Parser.getState',NULL,'[CALDoc] A parser that returns the current user state.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4335,'getParserState','Cal.Utilities.Parser.getParserState','Cal.Utilities.Parser.getParserState',NULL,'[CALDoc] A parser that returns the current complete state of the parser.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4336,'pBind','Cal.Utilities.Parser.pBind','Cal.Utilities.Parser.pBind',NULL,'[CALDoc] <code>pBind</code> implements a parser combinator for sequencing. The parser <code>p `pBind` f</code>\nfirst applies parser <code>p</code>, then applies <code>f</code> to the returned value of <code>p</code>,\nand finally applies the parser returned by <code>f</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4337,'exactString','Cal.Utilities.Parser.exactString','Cal.Utilities.Parser.exactString',NULL,'[CALDoc] The parser <code>exactString s</code> parses a sequence of characters given by <code>s</code>, and returns\nthe parsed characters in a list.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4338,'updatePosString','Cal.Utilities.Parser.updatePosString','Cal.Utilities.Parser.updatePosString',NULL,'[CALDoc] The expression <code>updatePosString pos s</code> updates the source position <code>pos</code>\nby calling <code>updatePosChar</code> on every character in <code>s</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4339,'tokens','Cal.Utilities.Parser.tokens','Cal.Utilities.Parser.tokens',NULL,'[CALDoc] This parser combinator is an optimized implementation of the following specification.\n\n<pre> tokens shows nextposs s =\n     let\n         show c = shows [c];\n         nextpos pos c cs = nextposs pos [c];\n         testtok x = if (x == c) then Just c else Nothing;\n         \n         scan toks =\n             case toks of\n             []   -&gt; pReturn s;\n             c:cs -&gt; (tokenPrim show nextpos testtok `label` shows s) `pSeq`\n                     (scan cs);\n             ;\n     in\n         scan s;</pre>\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4340,'tokensCompare','Cal.Utilities.Parser.tokensCompare','Cal.Utilities.Parser.tokensCompare',NULL,'[CALDoc] This parser combinator is an optimized implementation of the following specification.\n\n<pre> tokensCompare shows nextposs compareToken s =\n     let\n         show c = shows [c];\n         nextpos pos c cs = nextposs pos [c];\n         testtok x = if (compareToken x c) then Just c else Nothing;\n         \n         scan toks =\n             case toks of\n             []   -&gt; pReturn s;\n             c:cs -&gt; (tokenPrim show nextpos testtok `label` shows s) `pSeq`\n                     (scan cs);\n             ;\n     in\n         scan s;</pre>\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4341,'messageString','Cal.Utilities.Parser.messageString','Cal.Utilities.Parser.messageString',NULL,'[CALDoc] Extracts the message string from an error message.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4342,'pOrT4','Cal.Utilities.Parser.pOrT4','Cal.Utilities.Parser.pOrT4',NULL,'[CALDoc] The parser <code>pOrT4 p1 p2 p3 p4</code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n p4</pre>\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4343,'pOrT','Cal.Utilities.Parser.pOrT','Cal.Utilities.Parser.pOrT',NULL,'[CALDoc] The parser <code>p `pOrT` q</code> is exactly the same as <code>(try p) `pOr` q</code>.\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4344,'try','Cal.Utilities.Parser.try','Cal.Utilities.Parser.try',NULL,'[CALDoc] The parser <code>try p</code> behaves like the parser <code>p</code>, except that it pretends that\nit has not consumed any input when an error occurs.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4345,'setErrorPos','Cal.Utilities.Parser.setErrorPos','Cal.Utilities.Parser.setErrorPos',NULL,'[CALDoc] Sets the source position of the given <code>ParseError</code>.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4346,'pOr','Cal.Utilities.Parser.pOr','Cal.Utilities.Parser.pOr',NULL,'[CALDoc] This parser combinator implements an alternative. The parser <code>p `pOr` q</code> first applies\n<code>p</code>. If it succeeds, the value of <code>p</code> is returned. If <code>p</code> fails\n<em>without consuming any input</em>, then parser <code>q</code> is tried.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4347,'translateState','Cal.Utilities.Parser.translateState','Cal.Utilities.Parser.translateState',NULL,'[CALDoc] The parser <code>translateState inputFn outputFn parser</code> updates the user state by \napplying the first function <code>inputFn</code> to it, applies the parser <code>p</code>, \nupdates the user state by applying the second function <code>outputFn</code> to the original\nstate and the new state, then returns the value returned by <code>p</code>. ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4348,'mapConsumed','Cal.Utilities.Parser.mapConsumed','Cal.Utilities.Parser.mapConsumed',NULL,'[CALDoc] ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4349,'hexDigit','Cal.Utilities.Parser.hexDigit','Cal.Utilities.Parser.hexDigit',NULL,'[CALDoc] A parser that parses a hexadecimal digit (a <code>digit</code> or a letter between <code>\'a\'</code> and <code>\'f\'</code> or\n<code>\'A\'</code> and <code>\'F\'</code>), and returns the parsed character.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4350,'isHexDigit','Cal.Utilities.Parser.isHexDigit','Cal.Utilities.Parser.isHexDigit',NULL,'[CALDoc] ','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4351,'satisfy','Cal.Utilities.Parser.satisfy','Cal.Utilities.Parser.satisfy',NULL,'[CALDoc] The parser <code>satisfy f</code> succeeds for any character for which the supplied predicate\n<code>f</code> returns <code>True</code>, and returns the parsed character.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4352,'satisfyInternal','Cal.Utilities.Parser.satisfyInternal','Cal.Utilities.Parser.satisfyInternal',NULL,'[CALDoc] This parser combinator is exactly the same as:\n\n<pre> satisfy f =\n     tokenPrim\n         (\\c -&gt; String.fromChar c)\n         (\\pos c cs -&gt; updatePosChar pos c)\n         (\\c -&gt; if (f c) then Just c else Nothing)\n</pre>\n','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4353,'updatePosChar','Cal.Utilities.Parser.updatePosChar','Cal.Utilities.Parser.updatePosChar',NULL,'[CALDoc] Updates the source position given a character.','2008-04-20 18:17:43','2008-04-20 18:17:43'),(4354,'tokenPrimSeq','Cal.Utilities.Parser.tokenPrimSeq','Cal.Utilities.Parser.tokenPrimSeq',NULL,'[CALDoc] The parser <code>tokenPrim showTok nextPos testTok</code> accepts a token <code>t</code> with result\n<code>x</code> when the function <code>testTok t</code> returns <code>Just x</code>. The token can\nbe shown using <code>showTok t</code>. The position of the <em>next</em> token should be returned when\n<code>nextPos</code> is called with the current source position <code>pos</code>, the current token <code>t</code>\nand the rest of the token <code>toks</code>, i.e. <code>(nextPos pos t toks)</code>.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4355,'tokenPrimExSeq','Cal.Utilities.Parser.tokenPrimExSeq','Cal.Utilities.Parser.tokenPrimExSeq',NULL,'[CALDoc] The parser <code>tokenPrimEx show nextpos mbnextstate test</code>, recognises tokens when <code>test</code> returns\n<code>Just x</code> (and returns the value <code>x</code>). Tokens are shown in error messages using <code>show</code>.\nThe position is calculated using <code>nextpos</code>, and finally, <code>mbnextstate</code>, can hold a function that updates\nthe user state on every token recognised (e.g. for counting tokens).','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4356,'tsTail','Cal.Utilities.Parser.tsTail','Cal.Utilities.Parser.tsTail',NULL,'[CALDoc] Returns a sequence of the tokens after the first token in the sequence. ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4357,'tsHead','Cal.Utilities.Parser.tsHead','Cal.Utilities.Parser.tsHead',NULL,'[CALDoc] Returns the first token of the specified token sequence. ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4358,'tsIsEmpty','Cal.Utilities.Parser.tsIsEmpty','Cal.Utilities.Parser.tsIsEmpty',NULL,'[CALDoc] Returns whether the token sequence is empty.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4359,'label','Cal.Utilities.Parser.label','Cal.Utilities.Parser.label',NULL,'[CALDoc] The parser <code>p `label` msg</code> behaves as the parser <code>p</code>, but whenever the parser <code>p</code>\nfails <em>without consuming any input</em>, it replaces the <em>expected</em> error messages with the message\n<code>msg</code>.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4360,'labels','Cal.Utilities.Parser.labels','Cal.Utilities.Parser.labels',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4361,'errorIsUnknown','Cal.Utilities.Parser.errorIsUnknown','Cal.Utilities.Parser.errorIsUnknown',NULL,'[CALDoc] Returns: <code>True</code> iff the error is an unknown error.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4362,'setExpectErrors','Cal.Utilities.Parser.setExpectErrors','Cal.Utilities.Parser.setExpectErrors',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4363,'setErrorMessage','Cal.Utilities.Parser.setErrorMessage','Cal.Utilities.Parser.setErrorMessage',NULL,'[CALDoc] Sets the error message of the given <code>ParseError</code>.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4364,'messageEq','Cal.Utilities.Parser.messageEq','Cal.Utilities.Parser.messageEq',NULL,'[CALDoc] <code>messageEq m1 m2</code> equals <code>True</code> if <code>messageCompare m1 m2</code> equals <code>EQ</code>,\nin all other cases it equals <code>False</code>.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4365,'messageCompare','Cal.Utilities.Parser.messageCompare','Cal.Utilities.Parser.messageCompare',NULL,'[CALDoc] Compares two error messages without regards to their content. ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4366,'messageToEnum','Cal.Utilities.Parser.messageToEnum','Cal.Utilities.Parser.messageToEnum',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4367,'addErrorMessage','Cal.Utilities.Parser.addErrorMessage','Cal.Utilities.Parser.addErrorMessage',NULL,'[CALDoc] Adds an error message to the given <code>ParseError</code>.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4368,'setState','Cal.Utilities.Parser.setState','Cal.Utilities.Parser.setState',NULL,'[CALDoc] The parser <code>setState st</code> sets the user state to <code>st</code>.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4369,'pReturn','Cal.Utilities.Parser.pReturn','Cal.Utilities.Parser.pReturn',NULL,'[CALDoc] The parser <code>pReturn x</code> always succeeds with value <code>x</code> without consuming any input.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4370,'updateParserState','Cal.Utilities.Parser.updateParserState','Cal.Utilities.Parser.updateParserState',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4371,'unknownError','Cal.Utilities.Parser.unknownError','Cal.Utilities.Parser.unknownError',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4372,'statePos','Cal.Utilities.Parser.statePos','Cal.Utilities.Parser.statePos',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4373,'newErrorUnknown','Cal.Utilities.Parser.newErrorUnknown','Cal.Utilities.Parser.newErrorUnknown',NULL,'[CALDoc] Constructs a <code>ParseError</code> representing an unknown error at the given source position.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4374,'pSeq','Cal.Utilities.Parser.pSeq','Cal.Utilities.Parser.pSeq',NULL,'[CALDoc] <code>pSeq</code> implements a parser combinator for sequencing. The parser <code>p `pSeq` q</code>\nfirst applies the parser <code>p</code>, then applies the parser <code>q</code>, discarding the value\nreturned by the first parser.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4375,'mergeErrorReply','Cal.Utilities.Parser.mergeErrorReply','Cal.Utilities.Parser.mergeErrorReply',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4376,'mergeError','Cal.Utilities.Parser.mergeError','Cal.Utilities.Parser.mergeError',NULL,'[CALDoc] Merges the two given <code>ParseError</code> values into one.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4377,'sysUnExpectError','Cal.Utilities.Parser.sysUnExpectError','Cal.Utilities.Parser.sysUnExpectError',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4378,'newErrorMessage','Cal.Utilities.Parser.newErrorMessage','Cal.Utilities.Parser.newErrorMessage',NULL,'[CALDoc] Constructs a <code>ParseError</code> representing an error at the given source position with the given message.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4379,'stateUser','Cal.Utilities.Parser.stateUser','Cal.Utilities.Parser.stateUser',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4380,'SourcePos','Cal.Utilities.Parser.SourcePos','Cal.Utilities.Parser.SourcePos',NULL,'[CALDoc] Encapsulates a source position.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4381,'SysUnExpect','Cal.Utilities.Parser.SysUnExpect','Cal.Utilities.Parser.SysUnExpect',NULL,'[CALDoc] A <code>SysUnExpect</code> message is generated internally by the <code>satisfy</code>\ncombinator.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4382,'UnExpect','Cal.Utilities.Parser.UnExpect','Cal.Utilities.Parser.UnExpect',NULL,'[CALDoc] An <code>UnExpect</code> message is generated by the <code>unexpected</code> combinator.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4383,'Expect','Cal.Utilities.Parser.Expect','Cal.Utilities.Parser.Expect',NULL,'[CALDoc] An <code>Expect</code> message is generated by the <code>label</code> combinator.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4384,'Message','Cal.Utilities.Parser.Message','Cal.Utilities.Parser.Message',NULL,'[CALDoc] A <code>Message</code> message is generated by the <code>pFail</code> combinator.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4385,'ParseError','Cal.Utilities.Parser.ParseError','Cal.Utilities.Parser.ParseError',NULL,'[CALDoc] A parse error consists of a source position and a list of error messages.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4386,'TSList','Cal.Utilities.Parser.TSList','Cal.Utilities.Parser.TSList',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4387,'TSString','Cal.Utilities.Parser.TSString','Cal.Utilities.Parser.TSString',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4388,'Parser','Cal.Utilities.Parser.Parser','Cal.Utilities.Parser.Parser',NULL,'[CALDoc] The parser is embodied in a parsing function.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4389,'Consumed','Cal.Utilities.Parser.Consumed','Cal.Utilities.Parser.Consumed',NULL,'[CALDoc] Represents that input is consumed.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4390,'Empty','Cal.Utilities.Parser.Empty','Cal.Utilities.Parser.Empty',NULL,'[CALDoc] Represents that no input is consumed.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4391,'Ok','Cal.Utilities.Parser.Ok','Cal.Utilities.Parser.Ok',NULL,'[CALDoc] Represents that the parsing has succeeded.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4392,'Error','Cal.Utilities.Parser.Error','Cal.Utilities.Parser.Error',NULL,'[CALDoc] Represents that the parsing has failed.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4393,'State','Cal.Utilities.Parser.State','Cal.Utilities.Parser.State',NULL,'[CALDoc] Represents the internal state of the parser.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4394,'gtToken','Cal.Utilities.ExpressionLexer.gtToken','Cal.Utilities.ExpressionLexer.gtToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4395,'keywordToken','Cal.Utilities.ExpressionLexer.keywordToken','Cal.Utilities.ExpressionLexer.keywordToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4396,'caretToken','Cal.Utilities.ExpressionLexer.caretToken','Cal.Utilities.ExpressionLexer.caretToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4397,'plusToken','Cal.Utilities.ExpressionLexer.plusToken','Cal.Utilities.ExpressionLexer.plusToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4398,'ltToken','Cal.Utilities.ExpressionLexer.ltToken','Cal.Utilities.ExpressionLexer.ltToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4399,'percentToken','Cal.Utilities.ExpressionLexer.percentToken','Cal.Utilities.ExpressionLexer.percentToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4400,'stringToken','Cal.Utilities.ExpressionLexer.stringToken','Cal.Utilities.ExpressionLexer.stringToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4401,'stringTokenValue','Cal.Utilities.ExpressionLexer.stringTokenValue','Cal.Utilities.ExpressionLexer.stringTokenValue',NULL,'[CALDoc] Gets the string value from a string token.','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4402,'commaToken','Cal.Utilities.ExpressionLexer.commaToken','Cal.Utilities.ExpressionLexer.commaToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4403,'eqToken','Cal.Utilities.ExpressionLexer.eqToken','Cal.Utilities.ExpressionLexer.eqToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4404,'colonToken','Cal.Utilities.ExpressionLexer.colonToken','Cal.Utilities.ExpressionLexer.colonToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4405,'openParenToken','Cal.Utilities.ExpressionLexer.openParenToken','Cal.Utilities.ExpressionLexer.openParenToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4406,'parseErrorText','Cal.Utilities.ExpressionLexer.parseErrorText','Cal.Utilities.ExpressionLexer.parseErrorText',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4407,'asteriskToken','Cal.Utilities.ExpressionLexer.asteriskToken','Cal.Utilities.ExpressionLexer.asteriskToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4408,'closeParenToken','Cal.Utilities.ExpressionLexer.closeParenToken','Cal.Utilities.ExpressionLexer.closeParenToken',NULL,'[CALDoc] ','2008-04-20 18:17:44','2008-04-20 18:17:44'),(4409,'exclmnToken','Cal.Utilities.ExpressionLexer.exclmnToken','Cal.Utilities.ExpressionLexer.exclmnToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4410,'dotToken','Cal.Utilities.ExpressionLexer.dotToken','Cal.Utilities.ExpressionLexer.dotToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4411,'numberToken','Cal.Utilities.ExpressionLexer.numberToken','Cal.Utilities.ExpressionLexer.numberToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4412,'integerToken','Cal.Utilities.ExpressionLexer.integerToken','Cal.Utilities.ExpressionLexer.integerToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4413,'intTokenValue','Cal.Utilities.ExpressionLexer.intTokenValue','Cal.Utilities.ExpressionLexer.intTokenValue',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4414,'booleanToken','Cal.Utilities.ExpressionLexer.booleanToken','Cal.Utilities.ExpressionLexer.booleanToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4415,'openBraceToken','Cal.Utilities.ExpressionLexer.openBraceToken','Cal.Utilities.ExpressionLexer.openBraceToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4416,'ampersandToken','Cal.Utilities.ExpressionLexer.ampersandToken','Cal.Utilities.ExpressionLexer.ampersandToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4417,'hashToken','Cal.Utilities.ExpressionLexer.hashToken','Cal.Utilities.ExpressionLexer.hashToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4418,'vertBarToken','Cal.Utilities.ExpressionLexer.vertBarToken','Cal.Utilities.ExpressionLexer.vertBarToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4419,'slashToken','Cal.Utilities.ExpressionLexer.slashToken','Cal.Utilities.ExpressionLexer.slashToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4420,'functionToken','Cal.Utilities.ExpressionLexer.functionToken','Cal.Utilities.ExpressionLexer.functionToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4421,'functionTokenValue','Cal.Utilities.ExpressionLexer.functionTokenValue','Cal.Utilities.ExpressionLexer.functionTokenValue',NULL,'[CALDoc] Gets the name of the function from a function token.','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4422,'getTokenIm','Cal.Utilities.ExpressionLexer.getTokenIm','Cal.Utilities.ExpressionLexer.getTokenIm',NULL,'[CALDoc] Gets the image from a <code>Token</code>','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4423,'minusToken','Cal.Utilities.ExpressionLexer.minusToken','Cal.Utilities.ExpressionLexer.minusToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4424,'tildeToken','Cal.Utilities.ExpressionLexer.tildeToken','Cal.Utilities.ExpressionLexer.tildeToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4425,'specificNameToken','Cal.Utilities.ExpressionLexer.specificNameToken','Cal.Utilities.ExpressionLexer.specificNameToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4426,'nameToken','Cal.Utilities.ExpressionLexer.nameToken','Cal.Utilities.ExpressionLexer.nameToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4427,'nameTokenValue','Cal.Utilities.ExpressionLexer.nameTokenValue','Cal.Utilities.ExpressionLexer.nameTokenValue',NULL,'[CALDoc] Gets the name value from a name token.','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4428,'booleanTokenValue','Cal.Utilities.ExpressionLexer.booleanTokenValue','Cal.Utilities.ExpressionLexer.booleanTokenValue',NULL,'[CALDoc] Gets the boolean value from a boolean token.','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4429,'numericTokenValue','Cal.Utilities.ExpressionLexer.numericTokenValue','Cal.Utilities.ExpressionLexer.numericTokenValue',NULL,'[CALDoc] Gets the number value from a number token.','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4430,'tokenStream','Cal.Utilities.ExpressionLexer.tokenStream','Cal.Utilities.ExpressionLexer.tokenStream',NULL,'[CALDoc] String of lexemes with whitespace/comments between\nThis is the top level rule for the expression lexer','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4431,'tokenStream2','Cal.Utilities.ExpressionLexer.tokenStream2','Cal.Utilities.ExpressionLexer.tokenStream2',NULL,'[CALDoc] String of lexemes with whitespace/comments between\nThis is the top level rule for the expression lexer','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4432,'makeSpecialCharSequenceToken','Cal.Utilities.ExpressionLexer.makeSpecialCharSequenceToken','Cal.Utilities.ExpressionLexer.makeSpecialCharSequenceToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4433,'makeIntegerToken','Cal.Utilities.ExpressionLexer.makeIntegerToken','Cal.Utilities.ExpressionLexer.makeIntegerToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4434,'makeDoubleToken','Cal.Utilities.ExpressionLexer.makeDoubleToken','Cal.Utilities.ExpressionLexer.makeDoubleToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4435,'makeStringToken','Cal.Utilities.ExpressionLexer.makeStringToken','Cal.Utilities.ExpressionLexer.makeStringToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4436,'literalQuote','Cal.Utilities.ExpressionLexer.literalQuote','Cal.Utilities.ExpressionLexer.literalQuote',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4437,'literalQuoteChar','Cal.Utilities.ExpressionLexer.literalQuoteChar','Cal.Utilities.ExpressionLexer.literalQuoteChar',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4438,'makeNameToken','Cal.Utilities.ExpressionLexer.makeNameToken','Cal.Utilities.ExpressionLexer.makeNameToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4439,'makeFunctionToken','Cal.Utilities.ExpressionLexer.makeFunctionToken','Cal.Utilities.ExpressionLexer.makeFunctionToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4440,'makeBooleanToken','Cal.Utilities.ExpressionLexer.makeBooleanToken','Cal.Utilities.ExpressionLexer.makeBooleanToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4441,'makeKeywordToken','Cal.Utilities.ExpressionLexer.makeKeywordToken','Cal.Utilities.ExpressionLexer.makeKeywordToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4442,'makeTokenImage','Cal.Utilities.ExpressionLexer.makeTokenImage','Cal.Utilities.ExpressionLexer.makeTokenImage',NULL,'[CALDoc] Makes a <code>TokenImage</code> from a lex results','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4443,'sourcePosToPosition','Cal.Utilities.ExpressionLexer.sourcePosToPosition','Cal.Utilities.ExpressionLexer.sourcePosToPosition',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4444,'closeBraceToken','Cal.Utilities.ExpressionLexer.closeBraceToken','Cal.Utilities.ExpressionLexer.closeBraceToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4445,'specialCharToken','Cal.Utilities.ExpressionLexer.specialCharToken','Cal.Utilities.ExpressionLexer.specialCharToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4446,'specialCharSequenceToken','Cal.Utilities.ExpressionLexer.specialCharSequenceToken','Cal.Utilities.ExpressionLexer.specialCharSequenceToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4447,'satisfyT','Cal.Utilities.ExpressionLexer.satisfyT','Cal.Utilities.ExpressionLexer.satisfyT',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4448,'showToken','Cal.Utilities.ExpressionLexer.showToken','Cal.Utilities.ExpressionLexer.showToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4449,'showTokenImage','Cal.Utilities.ExpressionLexer.showTokenImage','Cal.Utilities.ExpressionLexer.showTokenImage',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4450,'showPosition','Cal.Utilities.ExpressionLexer.showPosition','Cal.Utilities.ExpressionLexer.showPosition',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4451,'getImage','Cal.Utilities.ExpressionLexer.getImage','Cal.Utilities.ExpressionLexer.getImage',NULL,'[CALDoc] Gets the image from a <code>TokenImage</code>','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4452,'updatePosToken','Cal.Utilities.ExpressionLexer.updatePosToken','Cal.Utilities.ExpressionLexer.updatePosToken',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4453,'getPosCol','Cal.Utilities.ExpressionLexer.getPosCol','Cal.Utilities.ExpressionLexer.getPosCol',NULL,'[CALDoc] Gets the Col# from a <code>Position</code>','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4454,'getPosLine','Cal.Utilities.ExpressionLexer.getPosLine','Cal.Utilities.ExpressionLexer.getPosLine',NULL,'[CALDoc] Gets the Line# from a <code>Position</code>','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4455,'getTokenPos','Cal.Utilities.ExpressionLexer.getTokenPos','Cal.Utilities.ExpressionLexer.getTokenPos',NULL,'[CALDoc] Gets the <code>Position</code> from a <code>Token</code>','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4456,'getTokenImage','Cal.Utilities.ExpressionLexer.getTokenImage','Cal.Utilities.ExpressionLexer.getTokenImage',NULL,'[CALDoc] Gets a <code>TokenImage</code> from a <code>Token</code>','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4457,'getPosition','Cal.Utilities.ExpressionLexer.getPosition','Cal.Utilities.ExpressionLexer.getPosition',NULL,'[CALDoc] Gets the <code>Position</code> from a <code>TokenImage</code>','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4458,'Position','Cal.Utilities.ExpressionLexer.Position','Cal.Utilities.ExpressionLexer.Position',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4459,'TokenImage','Cal.Utilities.ExpressionLexer.TokenImage','Cal.Utilities.ExpressionLexer.TokenImage',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4460,'Keyword','Cal.Utilities.ExpressionLexer.Keyword','Cal.Utilities.ExpressionLexer.Keyword',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4461,'Function','Cal.Utilities.ExpressionLexer.Function','Cal.Utilities.ExpressionLexer.Function',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4462,'String','Cal.Utilities.ExpressionLexer.String','Cal.Utilities.ExpressionLexer.String',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4463,'Name','Cal.Utilities.ExpressionLexer.Name','Cal.Utilities.ExpressionLexer.Name',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4464,'Double','Cal.Utilities.ExpressionLexer.Double','Cal.Utilities.ExpressionLexer.Double',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4465,'Integer','Cal.Utilities.ExpressionLexer.Integer','Cal.Utilities.ExpressionLexer.Integer',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4466,'Boolean','Cal.Utilities.ExpressionLexer.Boolean','Cal.Utilities.ExpressionLexer.Boolean',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4467,'SpecialCharSequence','Cal.Utilities.ExpressionLexer.SpecialCharSequence','Cal.Utilities.ExpressionLexer.SpecialCharSequence',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4468,'testTokens','Cal.Data.SqlParser.testTokens','Cal.Data.SqlParser.testTokens',NULL,'[CALDoc] ','2008-04-20 18:17:45','2008-04-20 18:17:45'),(4469,'parseExpression','Cal.Data.SqlParser.parseExpression','Cal.Data.SqlParser.parseExpression',NULL,'[CALDoc] Parses the specified SQL expression text.\n','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4470,'parseSelectStatement','Cal.Data.SqlParser.parseSelectStatement','Cal.Data.SqlParser.parseSelectStatement',NULL,'[CALDoc] Parses the SQL text as a SELECT statement.\n','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4471,'parseSQL','Cal.Data.SqlParser.parseSQL','Cal.Data.SqlParser.parseSQL',NULL,'[CALDoc] Parses the SQL text using the specified rule.','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4472,'sqlTokens','Cal.Data.SqlParser.sqlTokens','Cal.Data.SqlParser.sqlTokens',NULL,'[CALDoc] Parses the SQL into tokens.\n','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4473,'identifierQuoteChars','Cal.Data.SqlParser.identifierQuoteChars','Cal.Data.SqlParser.identifierQuoteChars',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4474,'allFunctionNames','Cal.Data.SqlParser.allFunctionNames','Cal.Data.SqlParser.allFunctionNames',NULL,'[CALDoc] Put the function names in order such that the longest names are first (for greedy consumption).','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4475,'sqlKeywords','Cal.Data.SqlParser.sqlKeywords','Cal.Data.SqlParser.sqlKeywords',NULL,'[CALDoc] SQL Keywords.  ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4476,'specialCharSequences','Cal.Data.SqlParser.specialCharSequences','Cal.Data.SqlParser.specialCharSequences',NULL,'[CALDoc] Special SQL character sequences.\n','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4477,'test2','Cal.Data.SqlParser.test2','Cal.Data.SqlParser.test2',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4478,'identifierNonAlphaChars','Cal.Data.SqlParser.identifierNonAlphaChars','Cal.Data.SqlParser.identifierNonAlphaChars',NULL,'[CALDoc] The non alphanumerics in a SQL identifier','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4479,'parseTestRaw','Cal.Data.SqlParser.parseTestRaw','Cal.Data.SqlParser.parseTestRaw',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4480,'k_ESCAPE','Cal.Data.SqlParser.k_ESCAPE','Cal.Data.SqlParser.k_ESCAPE',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4481,'aliased_scalar_expression','Cal.Data.SqlParser.aliased_scalar_expression','Cal.Data.SqlParser.aliased_scalar_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4482,'aliased_scalar_expression_list','Cal.Data.SqlParser.aliased_scalar_expression_list','Cal.Data.SqlParser.aliased_scalar_expression_list',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4483,'boolean_factor','Cal.Data.SqlParser.boolean_factor','Cal.Data.SqlParser.boolean_factor',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4484,'boolean_term','Cal.Data.SqlParser.boolean_term','Cal.Data.SqlParser.boolean_term',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4485,'boolean_expression','Cal.Data.SqlParser.boolean_expression','Cal.Data.SqlParser.boolean_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4486,'join_node','Cal.Data.SqlParser.join_node','Cal.Data.SqlParser.join_node',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4487,'scalar_expression_list','Cal.Data.SqlParser.scalar_expression_list','Cal.Data.SqlParser.scalar_expression_list',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4488,'comparison_expression','Cal.Data.SqlParser.comparison_expression','Cal.Data.SqlParser.comparison_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4489,'where_clause_info','Cal.Data.SqlParser.where_clause_info','Cal.Data.SqlParser.where_clause_info',NULL,'[CALDoc] Extracts both regular restriction expressions and outer join expressions from the WHERE clause body.','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4490,'order_by_expression_list','Cal.Data.SqlParser.order_by_expression_list','Cal.Data.SqlParser.order_by_expression_list',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4491,'select_statement_helper','Cal.Data.SqlParser.select_statement_helper','Cal.Data.SqlParser.select_statement_helper',NULL,'[CALDoc] Parses an entire SQL SELECT statement.','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4492,'select_statement','Cal.Data.SqlParser.select_statement','Cal.Data.SqlParser.select_statement',NULL,'[CALDoc] Parses an entire SQL SELECT statement.','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4493,'subquery','Cal.Data.SqlParser.subquery','Cal.Data.SqlParser.subquery',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4494,'case_expression','Cal.Data.SqlParser.case_expression','Cal.Data.SqlParser.case_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4495,'aggregate_function_expression','Cal.Data.SqlParser.aggregate_function_expression','Cal.Data.SqlParser.aggregate_function_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4496,'function_expression','Cal.Data.SqlParser.function_expression','Cal.Data.SqlParser.function_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4497,'scalar_factor','Cal.Data.SqlParser.scalar_factor','Cal.Data.SqlParser.scalar_factor',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4498,'scalar_expression','Cal.Data.SqlParser.scalar_expression','Cal.Data.SqlParser.scalar_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4499,'boolean_predicate','Cal.Data.SqlParser.boolean_predicate','Cal.Data.SqlParser.boolean_predicate',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4500,'k_EXISTS','Cal.Data.SqlParser.k_EXISTS','Cal.Data.SqlParser.k_EXISTS',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4501,'k_NULL','Cal.Data.SqlParser.k_NULL','Cal.Data.SqlParser.k_NULL',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4502,'k_IS','Cal.Data.SqlParser.k_IS','Cal.Data.SqlParser.k_IS',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4503,'field_reference','Cal.Data.SqlParser.field_reference','Cal.Data.SqlParser.field_reference',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4504,'functionsInfo','Cal.Data.SqlParser.functionsInfo','Cal.Data.SqlParser.functionsInfo',NULL,'[CALDoc] Associate the <code>DbFunction</code> and the possible arities with each available function name.','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4505,'aggregateFunctionsInfo','Cal.Data.SqlParser.aggregateFunctionsInfo','Cal.Data.SqlParser.aggregateFunctionsInfo',NULL,'[CALDoc] Information about aggregate functions.\n','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4506,'k_END','Cal.Data.SqlParser.k_END','Cal.Data.SqlParser.k_END',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4507,'k_CASE','Cal.Data.SqlParser.k_CASE','Cal.Data.SqlParser.k_CASE',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4508,'k_THEN','Cal.Data.SqlParser.k_THEN','Cal.Data.SqlParser.k_THEN',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4509,'k_WHEN','Cal.Data.SqlParser.k_WHEN','Cal.Data.SqlParser.k_WHEN',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4510,'k_ELSE','Cal.Data.SqlParser.k_ELSE','Cal.Data.SqlParser.k_ELSE',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4511,'literal_expression','Cal.Data.SqlParser.literal_expression','Cal.Data.SqlParser.literal_expression',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4512,'sql_time','Cal.Data.SqlParser.sql_time','Cal.Data.SqlParser.sql_time',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4513,'k_UNION','Cal.Data.SqlParser.k_UNION','Cal.Data.SqlParser.k_UNION',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4514,'k_DESC','Cal.Data.SqlParser.k_DESC','Cal.Data.SqlParser.k_DESC',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4515,'k_ORDERBY','Cal.Data.SqlParser.k_ORDERBY','Cal.Data.SqlParser.k_ORDERBY',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4516,'k_HAVING','Cal.Data.SqlParser.k_HAVING','Cal.Data.SqlParser.k_HAVING',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4517,'k_GROUPBY','Cal.Data.SqlParser.k_GROUPBY','Cal.Data.SqlParser.k_GROUPBY',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4518,'oracleOjToken','Cal.Data.SqlParser.oracleOjToken','Cal.Data.SqlParser.oracleOjToken',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4519,'starEqualsStarToken','Cal.Data.SqlParser.starEqualsStarToken','Cal.Data.SqlParser.starEqualsStarToken',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4520,'equalsStarToken','Cal.Data.SqlParser.equalsStarToken','Cal.Data.SqlParser.equalsStarToken',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4521,'starEqualsToken','Cal.Data.SqlParser.starEqualsToken','Cal.Data.SqlParser.starEqualsToken',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4522,'k_IN','Cal.Data.SqlParser.k_IN','Cal.Data.SqlParser.k_IN',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4523,'k_LIKE','Cal.Data.SqlParser.k_LIKE','Cal.Data.SqlParser.k_LIKE',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4524,'k_BETWEEN','Cal.Data.SqlParser.k_BETWEEN','Cal.Data.SqlParser.k_BETWEEN',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4525,'comparison_operator','Cal.Data.SqlParser.comparison_operator','Cal.Data.SqlParser.comparison_operator',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4526,'k_WHERE','Cal.Data.SqlParser.k_WHERE','Cal.Data.SqlParser.k_WHERE',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4527,'k_OR','Cal.Data.SqlParser.k_OR','Cal.Data.SqlParser.k_OR',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4528,'k_AND','Cal.Data.SqlParser.k_AND','Cal.Data.SqlParser.k_AND',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4529,'k_NOT','Cal.Data.SqlParser.k_NOT','Cal.Data.SqlParser.k_NOT',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4530,'k_ON','Cal.Data.SqlParser.k_ON','Cal.Data.SqlParser.k_ON',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4531,'k_FULL_OJ','Cal.Data.SqlParser.k_FULL_OJ','Cal.Data.SqlParser.k_FULL_OJ',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4532,'k_RIGHT_OJ','Cal.Data.SqlParser.k_RIGHT_OJ','Cal.Data.SqlParser.k_RIGHT_OJ',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4533,'k_LEFT_OJ','Cal.Data.SqlParser.k_LEFT_OJ','Cal.Data.SqlParser.k_LEFT_OJ',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4534,'k_INNER_JOIN','Cal.Data.SqlParser.k_INNER_JOIN','Cal.Data.SqlParser.k_INNER_JOIN',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4535,'k_FROM','Cal.Data.SqlParser.k_FROM','Cal.Data.SqlParser.k_FROM',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4536,'k_SELECT','Cal.Data.SqlParser.k_SELECT','Cal.Data.SqlParser.k_SELECT',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4537,'k_AS','Cal.Data.SqlParser.k_AS','Cal.Data.SqlParser.k_AS',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4538,'sql_name','Cal.Data.SqlParser.sql_name','Cal.Data.SqlParser.sql_name',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4539,'k_WITH_TIES','Cal.Data.SqlParser.k_WITH_TIES','Cal.Data.SqlParser.k_WITH_TIES',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4540,'k_PERCENT','Cal.Data.SqlParser.k_PERCENT','Cal.Data.SqlParser.k_PERCENT',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4541,'sql_number','Cal.Data.SqlParser.sql_number','Cal.Data.SqlParser.sql_number',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4542,'k_TOP','Cal.Data.SqlParser.k_TOP','Cal.Data.SqlParser.k_TOP',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4543,'k_DISTINCT','Cal.Data.SqlParser.k_DISTINCT','Cal.Data.SqlParser.k_DISTINCT',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4544,'k_ALL','Cal.Data.SqlParser.k_ALL','Cal.Data.SqlParser.k_ALL',NULL,'[CALDoc] ','2008-04-20 18:17:46','2008-04-20 18:17:46'),(4545,'k_ASC','Cal.Data.SqlParser.k_ASC','Cal.Data.SqlParser.k_ASC',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4546,'sql_string','Cal.Data.SqlParser.sql_string','Cal.Data.SqlParser.sql_string',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4547,'getFileLength','Cal.IO.File.getFileLength','Cal.IO.File.getFileLength',NULL,'[CALDoc] Returns the length, in bytes, of the file.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4548,'deleteFile','Cal.IO.File.deleteFile','Cal.IO.File.deleteFile',NULL,'[CALDoc] Deletes the specified file.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4549,'isPermissionErrorType','Cal.IO.File.isPermissionErrorType','Cal.IO.File.isPermissionErrorType',NULL,'[CALDoc] Checks to see whether the error type represents an error that arose because\nthe user did not having sufficient privileges to perform the operation.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4550,'isFileOrDirectoryWritable','Cal.IO.File.isFileOrDirectoryWritable','Cal.IO.File.isFileOrDirectoryWritable',NULL,'[CALDoc] Returns whether the specified file or directory is writable.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4551,'getModificationTime','Cal.IO.File.getModificationTime','Cal.IO.File.getModificationTime',NULL,'[CALDoc] Gets the last modification time of the specified file or directory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4552,'isFile','Cal.IO.File.isFile','Cal.IO.File.isFile',NULL,'[CALDoc] Returns whether the specified path refers to an existent file.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4553,'appendFile','Cal.IO.File.appendFile','Cal.IO.File.appendFile',NULL,'[CALDoc] Appends the specified contents to the file specified by the file name.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4554,'renameFile','Cal.IO.File.renameFile','Cal.IO.File.renameFile',NULL,'[CALDoc] Renames the specified file.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4555,'outputIOErrorAsString','Cal.IO.File.outputIOErrorAsString','Cal.IO.File.outputIOErrorAsString',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4556,'inputFileNameFromJObject','Cal.IO.File.inputFileNameFromJObject','Cal.IO.File.inputFileNameFromJObject',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4557,'isFullErrorType','Cal.IO.File.isFullErrorType','Cal.IO.File.isFullErrorType',NULL,'[CALDoc] Checks to see whether the error type represents an error that arose because\nthe hardware device (e.g. the disk) was full.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4558,'extendPath','Cal.IO.File.extendPath','Cal.IO.File.extendPath',NULL,'[CALDoc] Constructs a new file path representing a file or a subdirectory in a given\nparent directory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4559,'isAbsolutePath','Cal.IO.File.isAbsolutePath','Cal.IO.File.isAbsolutePath',NULL,'[CALDoc] Returns whether the given path is absolute.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4560,'getParentFromPath','Cal.IO.File.getParentFromPath','Cal.IO.File.getParentFromPath',NULL,'[CALDoc] Gets the file path\'s parent. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4561,'createDirectory','Cal.IO.File.createDirectory','Cal.IO.File.createDirectory',NULL,'[CALDoc] Creates the specified directory. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4562,'getCanonicalPath','Cal.IO.File.getCanonicalPath','Cal.IO.File.getCanonicalPath',NULL,'[CALDoc] Gets the canonical path of the specified file path.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4563,'fromIOSuccess','Cal.IO.File.fromIOSuccess','Cal.IO.File.fromIOSuccess',NULL,'[CALDoc] Extracts the return value from an\n<code>(Either IOError a)</code> value. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4564,'ioeGetErrorLocation','Cal.IO.File.ioeGetErrorLocation','Cal.IO.File.ioeGetErrorLocation',NULL,'[CALDoc] Gets the error location of the specified IO error.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4565,'renameDirectory','Cal.IO.File.renameDirectory','Cal.IO.File.renameDirectory',NULL,'[CALDoc] Renames the specified directory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4566,'isDeviceNotReadyErrorType','Cal.IO.File.isDeviceNotReadyErrorType','Cal.IO.File.isDeviceNotReadyErrorType',NULL,'[CALDoc] Checks to see whether the error type represents an error that arose because a\nhardware device was not ready.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4567,'isDoesNotExistErrorType','Cal.IO.File.isDoesNotExistErrorType','Cal.IO.File.isDoesNotExistErrorType',NULL,'[CALDoc] Checks to see whether the error type represents an error that arose because\nthe specified file or directory did not exist.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4568,'doesFileOrDirectoryExist','Cal.IO.File.doesFileOrDirectoryExist','Cal.IO.File.doesFileOrDirectoryExist',NULL,'[CALDoc] Returns whether the file or directory denoted by the given path exists.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4569,'isDirectory','Cal.IO.File.isDirectory','Cal.IO.File.isDirectory',NULL,'[CALDoc] Returns whether the specified path refers to an existent directory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4570,'deleteDirectoryTree','Cal.IO.File.deleteDirectoryTree','Cal.IO.File.deleteDirectoryTree',NULL,'[CALDoc] Recursively deletes the directory tree rooted at the specified directory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4571,'getFilteredDirectoryContents','Cal.IO.File.getFilteredDirectoryContents','Cal.IO.File.getFilteredDirectoryContents',NULL,'[CALDoc] Fetches a list of files, or a list of files and subdirectories, in a directory\nmatching the specified pattern (such as <code>\"*.txt\"</code> or <code>\"test?.rpt\"</code>).','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4572,'readFileBinary','Cal.IO.File.readFileBinary','Cal.IO.File.readFileBinary',NULL,'[CALDoc] Reads the contents of the specified file into a byte array.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4573,'isAlreadyInUseErrorType','Cal.IO.File.isAlreadyInUseErrorType','Cal.IO.File.isAlreadyInUseErrorType',NULL,'[CALDoc] Checks to see whether the error type represents an error that arose because\nthe specified file or directory was already in use.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4574,'createDirectoryAndNonexistentParentDirectories','Cal.IO.File.createDirectoryAndNonexistentParentDirectories','Cal.IO.File.createDirectoryAndNonexistentParentDirectories',NULL,'[CALDoc] Creates the specified directory, and all nonexistent parent directories.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4575,'getDirectoryContents','Cal.IO.File.getDirectoryContents','Cal.IO.File.getDirectoryContents',NULL,'[CALDoc] Gets a list of all the files and subdirectories within the specified\ndirectory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4576,'deleteFileOrDirectory','Cal.IO.File.deleteFileOrDirectory','Cal.IO.File.deleteFileOrDirectory',NULL,'[CALDoc] Deletes the specified file or directory. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4577,'writeFileBinary','Cal.IO.File.writeFileBinary','Cal.IO.File.writeFileBinary',NULL,'[CALDoc] Writes the specified binary contents into the file specified by the file name.\n','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4578,'isFileOrDirectoryHidden','Cal.IO.File.isFileOrDirectoryHidden','Cal.IO.File.isFileOrDirectoryHidden',NULL,'[CALDoc] Returns whether the specified file or directory is hidden. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4579,'renameFileOrDirectory','Cal.IO.File.renameFileOrDirectory','Cal.IO.File.renameFileOrDirectory',NULL,'[CALDoc] Renames the specified file or directory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4580,'ioeGetExceptionMessage','Cal.IO.File.ioeGetExceptionMessage','Cal.IO.File.ioeGetExceptionMessage',NULL,'[CALDoc] Gets the associated exception message (if any) of the specified IO error.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4581,'ioeGetErrorType','Cal.IO.File.ioeGetErrorType','Cal.IO.File.ioeGetErrorType',NULL,'[CALDoc] Gets the error type of the specified IO error.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4582,'readFileLines','Cal.IO.File.readFileLines','Cal.IO.File.readFileLines',NULL,'[CALDoc] Reads the lines of the specified text file.\n','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4583,'catchIOException','Cal.IO.File.catchIOException','Cal.IO.File.catchIOException',NULL,'[CALDoc] Evaluates the specified value and catches IOExceptions thrown.\n','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4584,'readBinaryContentsFromFileOrUrl','Cal.IO.File.readBinaryContentsFromFileOrUrl','Cal.IO.File.readBinaryContentsFromFileOrUrl',NULL,'[CALDoc] Reads the contents of the file specified by its file name or URL into a byte array.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4585,'jByteArrayToByteArray','Cal.IO.File.jByteArrayToByteArray','Cal.IO.File.jByteArrayToByteArray',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4586,'showIOErrorType','Cal.IO.File.showIOErrorType','Cal.IO.File.showIOErrorType',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4587,'isFileOrDirectoryReadable','Cal.IO.File.isFileOrDirectoryReadable','Cal.IO.File.isFileOrDirectoryReadable',NULL,'[CALDoc] Returns whether the specified file or directory is readable.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4588,'ioeGetFileName','Cal.IO.File.ioeGetFileName','Cal.IO.File.ioeGetFileName',NULL,'[CALDoc] Gets the associated file name (if any) of the specified IO error.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4589,'buildPathFromComponents','Cal.IO.File.buildPathFromComponents','Cal.IO.File.buildPathFromComponents',NULL,'[CALDoc] Constructs a file path from a list of components. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4590,'showIOError','Cal.IO.File.showIOError','Cal.IO.File.showIOError',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4591,'readFile','Cal.IO.File.readFile','Cal.IO.File.readFile',NULL,'[CALDoc] Reads the contents of the specified file into a string.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4592,'outputFileNameToJObject','Cal.IO.File.outputFileNameToJObject','Cal.IO.File.outputFileNameToJObject',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4593,'getPathFromFileName','Cal.IO.File.getPathFromFileName','Cal.IO.File.getPathFromFileName',NULL,'[CALDoc] Gets the file path represented by the given <code>FileName</code> value as a string.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4594,'appendFileBinary','Cal.IO.File.appendFileBinary','Cal.IO.File.appendFileBinary',NULL,'[CALDoc] Appends the specified binary contents to the file specified by the file name.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4595,'byteArrayToJByteArray','Cal.IO.File.byteArrayToJByteArray','Cal.IO.File.byteArrayToJByteArray',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4596,'isIOSuccess','Cal.IO.File.isIOSuccess','Cal.IO.File.isIOSuccess',NULL,'[CALDoc] Determines whether an <code>(Either IOError a)</code>\nvalue represents an IO error, i.e. in fact the value is of the form <code>Left ioError</code>.\n','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4597,'writeFile','Cal.IO.File.writeFile','Cal.IO.File.writeFile',NULL,'[CALDoc] Writes the specified contents into the file specified by the file name. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4598,'ioTry','Cal.IO.File.ioTry','Cal.IO.File.ioTry',NULL,'[CALDoc] Translates a <code>JIOResult</code> value into an\n<code>(Either IOError a)</code> value, which can then\nbe consumed by the caller of the IO operation. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4599,'ioTryWith','Cal.IO.File.ioTryWith','Cal.IO.File.ioTryWith',NULL,'[CALDoc] Translates a <code>JIOResult</code> value into an\n<code>(Either IOError a)</code> value, which can then\nbe consumed by the caller of the IO operation. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4600,'jFileToFileName','Cal.IO.File.jFileToFileName','Cal.IO.File.jFileToFileName',NULL,'[CALDoc] Converts a <code>JFile</code> value into a <code>FileName</code>.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4601,'jIOExceptionToIOErrorType','Cal.IO.File.jIOExceptionToIOErrorType','Cal.IO.File.jIOExceptionToIOErrorType',NULL,'[CALDoc] Translates a Java IOException into an appropriate <code>IOErrorType</code>. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4602,'getAbsolutePath','Cal.IO.File.getAbsolutePath','Cal.IO.File.getAbsolutePath',NULL,'[CALDoc] Gets the absolute path of the specified file path.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4603,'isUnknownHostErrorType','Cal.IO.File.isUnknownHostErrorType','Cal.IO.File.isUnknownHostErrorType',NULL,'[CALDoc] Checks to see whether the error type represents an error that arose because\nthe specified network host could not be found.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4604,'getNameFromPath','Cal.IO.File.getNameFromPath','Cal.IO.File.getNameFromPath',NULL,'[CALDoc] Gets the file name from the file path. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4605,'isUnhandledIOExceptionErrorType','Cal.IO.File.isUnhandledIOExceptionErrorType','Cal.IO.File.isUnhandledIOExceptionErrorType',NULL,'[CALDoc] Checks to see whether the error type represents an unrecognized Java\nIOException.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4606,'getCurrentDirectory','Cal.IO.File.getCurrentDirectory','Cal.IO.File.getCurrentDirectory',NULL,'[CALDoc] Gets the path of the current working directory.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4607,'makeFileName','Cal.IO.File.makeFileName','Cal.IO.File.makeFileName',NULL,'[CALDoc] Constructs a <code>FileName</code> from a file path.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4608,'deleteDirectory','Cal.IO.File.deleteDirectory','Cal.IO.File.deleteDirectory',NULL,'[CALDoc] Deletes the specified directory. ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4609,'fileNameToJFile','Cal.IO.File.fileNameToJFile','Cal.IO.File.fileNameToJFile',NULL,'[CALDoc] Converts a <code>FileName</code> into a <code>JFile</code> value.','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4610,'jIsUnknownHostException','Cal.IO.File.jIsUnknownHostException','Cal.IO.File.jIsUnknownHostException',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4611,'jIsResourceExhaustedException','Cal.IO.File.jIsResourceExhaustedException','Cal.IO.File.jIsResourceExhaustedException',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4612,'jIsResourceBusyException','Cal.IO.File.jIsResourceBusyException','Cal.IO.File.jIsResourceBusyException',NULL,'[CALDoc] ','2008-04-20 18:17:47','2008-04-20 18:17:47'),(4613,'jIsGenericFileNotFoundException','Cal.IO.File.jIsGenericFileNotFoundException','Cal.IO.File.jIsGenericFileNotFoundException',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4614,'jIsDeviceNotReady_FileNotFoundException','Cal.IO.File.jIsDeviceNotReady_FileNotFoundException','Cal.IO.File.jIsDeviceNotReady_FileNotFoundException',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4615,'jIsPermissionDenied_FileNotFoundException','Cal.IO.File.jIsPermissionDenied_FileNotFoundException','Cal.IO.File.jIsPermissionDenied_FileNotFoundException',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4616,'isNullFile','Cal.IO.File.isNullFile','Cal.IO.File.isNullFile',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4617,'jIOResult_getFile','Cal.IO.File.jIOResult_getFile','Cal.IO.File.jIOResult_getFile',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4618,'jIOResult_getException','Cal.IO.File.jIOResult_getException','Cal.IO.File.jIOResult_getException',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4619,'jIOResult_getResult','Cal.IO.File.jIOResult_getResult','Cal.IO.File.jIOResult_getResult',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4620,'jIOResult_isError','Cal.IO.File.jIOResult_isError','Cal.IO.File.jIOResult_isError',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4621,'jIOException_getMessage','Cal.IO.File.jIOException_getMessage','Cal.IO.File.jIOException_getMessage',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4622,'jGetStackTrace','Cal.IO.File.jGetStackTrace','Cal.IO.File.jGetStackTrace',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4623,'jGetFilteredDirectoryContents','Cal.IO.File.jGetFilteredDirectoryContents','Cal.IO.File.jGetFilteredDirectoryContents',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4624,'jGetDirectoryContents','Cal.IO.File.jGetDirectoryContents','Cal.IO.File.jGetDirectoryContents',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4625,'jFile_renameTo','Cal.IO.File.jFile_renameTo','Cal.IO.File.jFile_renameTo',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4626,'jDeleteDirectoryTree','Cal.IO.File.jDeleteDirectoryTree','Cal.IO.File.jDeleteDirectoryTree',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4627,'jFile_delete','Cal.IO.File.jFile_delete','Cal.IO.File.jFile_delete',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4628,'jFile_mkdirs','Cal.IO.File.jFile_mkdirs','Cal.IO.File.jFile_mkdirs',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4629,'jFile_mkdir','Cal.IO.File.jFile_mkdir','Cal.IO.File.jFile_mkdir',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4630,'jBufferedReader_close','Cal.IO.File.jBufferedReader_close','Cal.IO.File.jBufferedReader_close',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4631,'jBufferedReader_readLine','Cal.IO.File.jBufferedReader_readLine','Cal.IO.File.jBufferedReader_readLine',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4632,'jNewBufferedReader','Cal.IO.File.jNewBufferedReader','Cal.IO.File.jNewBufferedReader',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4633,'jNewFileReader','Cal.IO.File.jNewFileReader','Cal.IO.File.jNewFileReader',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4634,'jAppendFileBinary','Cal.IO.File.jAppendFileBinary','Cal.IO.File.jAppendFileBinary',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4635,'jAppendFile','Cal.IO.File.jAppendFile','Cal.IO.File.jAppendFile',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4636,'jWriteFileBinary','Cal.IO.File.jWriteFileBinary','Cal.IO.File.jWriteFileBinary',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4637,'jWriteFile','Cal.IO.File.jWriteFile','Cal.IO.File.jWriteFile',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4638,'jReadBinaryContentsFromFileOrUrl','Cal.IO.File.jReadBinaryContentsFromFileOrUrl','Cal.IO.File.jReadBinaryContentsFromFileOrUrl',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4639,'jReadFileBinary','Cal.IO.File.jReadFileBinary','Cal.IO.File.jReadFileBinary',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4640,'jReadFile','Cal.IO.File.jReadFile','Cal.IO.File.jReadFile',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4641,'jGetModificationTime','Cal.IO.File.jGetModificationTime','Cal.IO.File.jGetModificationTime',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4642,'jFile_length','Cal.IO.File.jFile_length','Cal.IO.File.jFile_length',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4643,'jFile_isHidden','Cal.IO.File.jFile_isHidden','Cal.IO.File.jFile_isHidden',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4644,'jFile_exists','Cal.IO.File.jFile_exists','Cal.IO.File.jFile_exists',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4645,'jFile_isFile','Cal.IO.File.jFile_isFile','Cal.IO.File.jFile_isFile',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4646,'jFile_isDirectory','Cal.IO.File.jFile_isDirectory','Cal.IO.File.jFile_isDirectory',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4647,'jFile_canWrite','Cal.IO.File.jFile_canWrite','Cal.IO.File.jFile_canWrite',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4648,'jFile_canRead','Cal.IO.File.jFile_canRead','Cal.IO.File.jFile_canRead',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4649,'isNullString','Cal.IO.File.isNullString','Cal.IO.File.isNullString',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4650,'jFile_new_withJFileParentChild','Cal.IO.File.jFile_new_withJFileParentChild','Cal.IO.File.jFile_new_withJFileParentChild',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4651,'jFile_new_withParentChild','Cal.IO.File.jFile_new_withParentChild','Cal.IO.File.jFile_new_withParentChild',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4652,'jFile_getParent','Cal.IO.File.jFile_getParent','Cal.IO.File.jFile_getParent',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4653,'jFile_getName','Cal.IO.File.jFile_getName','Cal.IO.File.jFile_getName',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4654,'jFile_getCanonicalPath','Cal.IO.File.jFile_getCanonicalPath','Cal.IO.File.jFile_getCanonicalPath',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4655,'jFile_getAbsolutePath','Cal.IO.File.jFile_getAbsolutePath','Cal.IO.File.jFile_getAbsolutePath',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4656,'jFile_isAbsolute','Cal.IO.File.jFile_isAbsolute','Cal.IO.File.jFile_isAbsolute',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4657,'jFile_toString','Cal.IO.File.jFile_toString','Cal.IO.File.jFile_toString',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4658,'jFile_new_withPathName','Cal.IO.File.jFile_new_withPathName','Cal.IO.File.jFile_new_withPathName',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4659,'FileName','Cal.IO.File.FileName','Cal.IO.File.FileName',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4660,'PermissionDenied','Cal.IO.File.PermissionDenied','Cal.IO.File.PermissionDenied',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4661,'DeviceNotReady','Cal.IO.File.DeviceNotReady','Cal.IO.File.DeviceNotReady',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4662,'NoSuchThing','Cal.IO.File.NoSuchThing','Cal.IO.File.NoSuchThing',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4663,'ResourceBusy','Cal.IO.File.ResourceBusy','Cal.IO.File.ResourceBusy',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4664,'ResourceExhausted','Cal.IO.File.ResourceExhausted','Cal.IO.File.ResourceExhausted',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4665,'UnknownHost','Cal.IO.File.UnknownHost','Cal.IO.File.UnknownHost',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4666,'UnhandledIOException','Cal.IO.File.UnhandledIOException','Cal.IO.File.UnhandledIOException',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4667,'IOError','Cal.IO.File.IOError','Cal.IO.File.IOError',NULL,'[CALDoc] ','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4668,'formatInColumns','Cal.Utilities.Format.formatInColumns','Cal.Utilities.Format.formatInColumns',NULL,'[CALDoc] Returns a string which can be used to display the specified values in columns.','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4669,'formatTruncatedTable','Cal.Utilities.Format.formatTruncatedTable','Cal.Utilities.Format.formatTruncatedTable',NULL,'[CALDoc] Returns a string which can be used to display the specified rows of values in a nice table.\n','2008-04-20 18:17:48','2008-04-20 18:17:48'),(4670,'formatTable','Cal.Utilities.Format.formatTable','Cal.Utilities.Format.formatTable',NULL,'[CALDoc] Returns a string which can be used to display the specified rows of values in a nice table.\n','2008-04-20 18:17:48','2008-04-20 18:17:48');
/*!40000 ALTER TABLE `pipe_modules` ENABLE KEYS */;
UNLOCK TABLES;