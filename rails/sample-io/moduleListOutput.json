
 JSON string
[{"description": "Cal.Core.Prelude.induceComparator", "name": "induceComparator", "type": "CalCorePreludeinduceComparator", "ui": "\u003Cb\u003ECal.Core.Prelude.induceComparator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Induces an comparator on a type \u003Ccode\u003Ea\u003C/code\u003E via projecting to a type \u003Ccode\u003Eb\u003C/code\u003E and using the \u003Ccode\u003EOrd\u003C/code\u003E instance on \u003Ccode\u003Eb\u003C/code\u003E.", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "projectionFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maybeApply", "name": "maybeApply", "type": "CalCorePreludemaybeApply", "ui": "\u003Cb\u003ECal.Core.Prelude.maybeApply\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ENothing\u003C/code\u003E on \u003Ccode\u003ENothing\u003C/code\u003E or \u003Ccode\u003EJust (func maybeArg)\u003C/code\u003E on \u003Ccode\u003EJust maybeArg\u003C/code\u003E.", "terminals": [{"name": "maybeArg", "input": "text"}, {"name": "func", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absShort", "name": "absShort", "type": "CalCorePreludeabsShort", "ui": "\u003Cb\u003ECal.Core.Prelude.absShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareDouble", "name": "compareDouble", "type": "CalCorePreludecompareDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.compareDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charactersToString", "name": "charactersToString", "type": "CalCorePreludecharactersToString", "ui": "\u003Cb\u003ECal.Core.Prelude.charactersToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts the list of characters to a string.", "terminals": [{"name": "listOfChars", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isDoubleType", "name": "isDoubleType", "type": "CalCorePreludeisDoubleType", "ui": "\u003Cb\u003ECal.Core.Prelude.isDoubleType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of the \u003Ccode\u003EDouble\u003C/code\u003E type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareComparable", "name": "compareComparable", "type": "CalCorePreludecompareComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.compareComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.tuple7", "name": "tuple7", "type": "CalCorePreludetuple7", "ui": "\u003Cb\u003ECal.Core.Prelude.tuple7\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 7-tuple.", "terminals": [{"name": "x3", "input": "text"}, {"name": "x4", "input": "text"}, {"name": "x5", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "x6", "input": "text"}, {"name": "x7", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isRight", "name": "isRight", "type": "CalCorePreludeisRight", "ui": "\u003Cb\u003ECal.Core.Prelude.isRight\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if \u003Ccode\u003EeitherValue\u003C/code\u003E is a \u003Ccode\u003ERight\u003C/code\u003E value and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "eitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsObject", "name": "notEqualsObject", "type": "CalCorePreludenotEqualsObject", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromLeft", "name": "fromLeft", "type": "CalCorePreludefromLeft", "ui": "\u003Cb\u003ECal.Core.Prelude.fromLeft\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the \u003Ccode\u003Evalue\u003C/code\u003E field of a \u003Ccode\u003ELeft\u003C/code\u003E value or terminates in an error if \u003Ccode\u003EeitherValue\u003C/code\u003E is\na \u003Ccode\u003ERight\u003C/code\u003E value.", "terminals": [{"name": "eitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.tuple3", "name": "tuple3", "type": "CalCorePreludetuple3", "ui": "\u003Cb\u003ECal.Core.Prelude.tuple3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 3-tuple.", "terminals": [{"name": "x1", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanDecimal", "name": "lessThanDecimal", "type": "CalCorePreludelessThanDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimalValue2", "input": "text"}, {"name": "decimalValue1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.comparatorToEqualityFunction", "name": "comparatorToEqualityFunction", "type": "CalCorePreludecomparatorToEqualityFunction", "ui": "\u003Cb\u003ECal.Core.Prelude.comparatorToEqualityFunction\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a comparator to an equality function. \n", "terminals": [{"name": "comparator", "input": "text"}, {"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isForeignType", "name": "isForeignType", "type": "CalCorePreludeisForeignType", "ui": "\u003Cb\u003ECal.Core.Prelude.isForeignType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: \u003Ccode\u003ETrue\u003C/code\u003E if the type was declared with a foreign data declaration.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumInt", "name": "signumInt", "type": "CalCorePreludesignumInt", "ui": "\u003Cb\u003ECal.Core.Prelude.signumInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.concatMap", "name": "concatMap", "type": "CalCorePreludeconcatMap", "ui": "\u003Cb\u003ECal.Core.Prelude.concatMap\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EconcatMap mapFunction list\u003C/code\u003E applies \u003Ccode\u003EmapFunction\u003C/code\u003E to each element of list and then concatenates the resulting\nlist. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "mapFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareByte", "name": "compareByte", "type": "CalCorePreludecompareByte", "ui": "\u003Cb\u003ECal.Core.Prelude.compareByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.emptyString", "name": "emptyString", "type": "CalCorePreludeemptyString", "ui": "\u003Cb\u003ECal.Core.Prelude.emptyString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.strictTuple6", "name": "strictTuple6", "type": "CalCorePreludestrictTuple6", "ui": "\u003Cb\u003ECal.Core.Prelude.strictTuple6\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 6-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.", "terminals": [{"name": "x2", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "x6", "input": "text"}, {"name": "x5", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "x4", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testPreludeModule", "name": "testPreludeModule", "type": "CalCorePreludetestPreludeModule", "ui": "\u003Cb\u003ECal.Core.Prelude.testPreludeModule\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Tests all the examples in the Prelude module.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumCheckedInt", "name": "intToEnumCheckedInt", "type": "CalCorePreludeintToEnumCheckedInt", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumCheckedInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnum\u003C/code\u003E instance function for the \u003Ccode\u003EInt\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToInteger", "name": "floatToInteger", "type": "CalCorePreludefloatToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "floatValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareInteger", "name": "compareInteger", "type": "CalCorePreludecompareInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.compareInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToInteger", "name": "shortToInteger", "type": "CalCorePreludeshortToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "shortValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.field2", "name": "field2", "type": "CalCorePreludefield2", "ui": "\u003Cb\u003ECal.Core.Prelude.field2\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the second field of the specified tuple / the ordinal field \u003Ccode\u003E#2\u003C/code\u003E of the specified record.", "terminals": [{"name": "r", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsRecordExamples", "name": "equalsRecordExamples", "type": "CalCorePreludeequalsRecordExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsRecordExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.tuple5", "name": "tuple5", "type": "CalCorePreludetuple5", "ui": "\u003Cb\u003ECal.Core.Prelude.tuple5\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 5-tuple.", "terminals": [{"name": "x5", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "x4", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minDefault", "name": "minDefault", "type": "CalCorePreludeminDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.minDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.strictTuple4", "name": "strictTuple4", "type": "CalCorePreludestrictTuple4", "ui": "\u003Cb\u003ECal.Core.Prelude.strictTuple4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 4-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.", "terminals": [{"name": "x2", "input": "text"}, {"name": "x4", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputBooleanToJObject", "name": "outputBooleanToJObject", "type": "CalCorePreludeoutputBooleanToJObject", "ui": "\u003Cb\u003ECal.Core.Prelude.outputBooleanToJObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "booleanValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minRecord", "name": "minRecord", "type": "CalCorePreludeminRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.minRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "r2", "input": "text"}, {"name": "r1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isPreludeNumTypeExamples", "name": "isPreludeNumTypeExamples", "type": "CalCorePreludeisPreludeNumTypeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.isPreludeNumTypeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isPreludeNumType", "name": "isPreludeNumType", "type": "CalCorePreludeisPreludeNumType", "ui": "\u003Cb\u003ECal.Core.Prelude.isPreludeNumType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of one of the types defined in the Prelude\nmodule as instances of the \u003Ccode\u003ENum\u003C/code\u003E type class (\u003Ccode\u003EByte\u003C/code\u003E, \u003Ccode\u003EShort\u003C/code\u003E, \u003Ccode\u003EInt\u003C/code\u003E,\n\u003Ccode\u003ELong\u003C/code\u003E, \u003Ccode\u003EFloat\u003C/code\u003E, \u003Ccode\u003EDouble\u003C/code\u003E, \u003Ccode\u003EInteger\u003C/code\u003E) or \u003Ccode\u003EDecimal\u003C/code\u003E\nand False otherwise.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.sameRootTypeExamples", "name": "sameRootTypeExamples", "type": "CalCorePreludesameRootTypeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.sameRootTypeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.sameRootType", "name": "sameRootType", "type": "CalCorePreludesameRootType", "ui": "\u003Cb\u003ECal.Core.Prelude.sameRootType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation of the root types of the 2 arguments are the same.", "terminals": [{"name": "typeRep2", "input": "text"}, {"name": "typeRep1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.until", "name": "until", "type": "CalCorePreludeuntil", "ui": "\u003Cb\u003ECal.Core.Prelude.until\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Keeps applying \u003Ccode\u003EiterationFunction\u003C/code\u003E until \u003Ccode\u003EstopConditionFunction\u003C/code\u003E holds.", "terminals": [{"name": "initialValue", "input": "text"}, {"name": "iterationFunction", "input": "text"}, {"name": "stopConditionFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.const", "name": "const", "type": "CalCorePreludeconst", "ui": "\u003Cb\u003ECal.Core.Prelude.const\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A constant function.", "terminals": [{"name": "valueToIgnore", "input": "text"}, {"name": "valueToReturn", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanDefault", "name": "greaterThanDefault", "type": "CalCorePreludegreaterThanDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderByte", "name": "remainderByte", "type": "CalCorePreluderemainderByte", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minShort", "name": "minShort", "type": "CalCorePreludeminShort", "ui": "\u003Cb\u003ECal.Core.Prelude.minShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumByte", "name": "signumByte", "type": "CalCorePreludesignumByte", "ui": "\u003Cb\u003ECal.Core.Prelude.signumByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsDefault", "name": "notEqualsDefault", "type": "CalCorePreludenotEqualsDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeRepToStringExamples", "name": "typeRepToStringExamples", "type": "CalCorePreludetypeRepToStringExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.typeRepToStringExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyByte", "name": "multiplyByte", "type": "CalCorePreludemultiplyByte", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputMaybe", "name": "outputMaybe", "type": "CalCorePreludeoutputMaybe", "ui": "\u003Cb\u003ECal.Core.Prelude.outputMaybe\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "maybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.field6", "name": "field6", "type": "CalCorePreludefield6", "ui": "\u003Cb\u003ECal.Core.Prelude.field6\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the sixth field of the specified tuple / the ordinal field \u003Ccode\u003E#6\u003C/code\u003E of the specified record.", "terminals": [{"name": "r", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isRecordTypeExamples", "name": "isRecordTypeExamples", "type": "CalCorePreludeisRecordTypeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.isRecordTypeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.strict", "name": "strict", "type": "CalCorePreludestrict", "ui": "\u003Cb\u003ECal.Core.Prelude.strict\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Strict function application. ", "terminals": [{"name": "x", "input": "text"}, {"name": "f", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maybeToList", "name": "maybeToList", "type": "CalCorePreludemaybeToList", "ui": "\u003Cb\u003ECal.Core.Prelude.maybeToList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns an empty list when given \u003Ccode\u003ENothing\u003C/code\u003E or a singleton list when not given \u003Ccode\u003ENothing\u003C/code\u003E.", "terminals": [{"name": "maybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.snd", "name": "snd", "type": "CalCorePreludesnd", "ui": "\u003Cb\u003ECal.Core.Prelude.snd\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the second component of a pair.", "terminals": [{"name": "pair", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsInteger", "name": "greaterThanEqualsInteger", "type": "CalCorePreludegreaterThanEqualsInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isEmptyString", "name": "isEmptyString", "type": "CalCorePreludeisEmptyString", "ui": "\u003Cb\u003ECal.Core.Prelude.isEmptyString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "stringValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minByte", "name": "minByte", "type": "CalCorePreludeminByte", "ui": "\u003Cb\u003ECal.Core.Prelude.minByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.castExamples", "name": "castExamples", "type": "CalCorePreludecastExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.castExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareDecimal", "name": "compareDecimal", "type": "CalCorePreludecompareDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.compareDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimalValue2", "input": "text"}, {"name": "decimalValue1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.curry", "name": "curry", "type": "CalCorePreludecurry", "ui": "\u003Cb\u003ECal.Core.Prelude.curry\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a function of a single pair argument to a function accepting 2 input arguments.\n", "terminals": [{"name": "f", "input": "text"}, {"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideByte", "name": "divideByte", "type": "CalCorePreludedivideByte", "ui": "\u003Cb\u003ECal.Core.Prelude.divideByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.field7", "name": "field7", "type": "CalCorePreludefield7", "ui": "\u003Cb\u003ECal.Core.Prelude.field7\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the seventh field of the specified tuple / the ordinal field \u003Ccode\u003E#7\u003C/code\u003E of the specified record.", "terminals": [{"name": "r", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumShort", "name": "intToEnumShort", "type": "CalCorePreludeintToEnumShort", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnum\u003C/code\u003E instance function for the \u003Ccode\u003EShort\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isEmptyOrdering", "name": "isEmptyOrdering", "type": "CalCorePreludeisEmptyOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.isEmptyOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "ordering", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateShort", "name": "negateShort", "type": "CalCorePreludenegateShort", "ui": "\u003Cb\u003ECal.Core.Prelude.negateShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeRepToString", "name": "typeRepToString", "type": "CalCorePreludetypeRepToString", "ui": "\u003Cb\u003ECal.Core.Prelude.typeRepToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the canonical string representation of a \u003Ccode\u003ETypeRep\u003C/code\u003E value.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxChar", "name": "maxChar", "type": "CalCorePreludemaxChar", "ui": "\u003Cb\u003ECal.Core.Prelude.maxChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.strictTuple3", "name": "strictTuple3", "type": "CalCorePreludestrictTuple3", "ui": "\u003Cb\u003ECal.Core.Prelude.strictTuple3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 3-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.", "terminals": [{"name": "x2", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToDecimal", "name": "shortToDecimal", "type": "CalCorePreludeshortToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "shortValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testMaybeInstances", "name": "testMaybeInstances", "type": "CalCorePreludetestMaybeInstances", "ui": "\u003Cb\u003ECal.Core.Prelude.testMaybeInstances\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.concatList", "name": "concatList", "type": "CalCorePreludeconcatList", "ui": "\u003Cb\u003ECal.Core.Prelude.concatList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.downFrom", "name": "downFrom", "type": "CalCorePreludedownFrom", "ui": "\u003Cb\u003ECal.Core.Prelude.downFrom\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EdownFrom start\u003C/code\u003E creates the infinite list \u003Ccode\u003E[start, start - 1, start - 2, ...]\u003C/code\u003E.", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.and", "name": "and", "type": "CalCorePreludeand", "ui": "\u003Cb\u003ECal.Core.Prelude.and\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the result of a logical AND operation on the two arguments.", "terminals": [{"name": "a", "input": "text"}, {"name": "b", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideShort", "name": "divideShort", "type": "CalCorePreludedivideShort", "ui": "\u003Cb\u003ECal.Core.Prelude.divideShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isNothing", "name": "isNothing", "type": "CalCorePreludeisNothing", "ui": "\u003Cb\u003ECal.Core.Prelude.isNothing\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E iff the argument is \u003Ccode\u003ENothing\u003C/code\u003E.", "terminals": [{"name": "maybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputEither", "name": "outputEither", "type": "CalCorePreludeoutputEither", "ui": "\u003Cb\u003ECal.Core.Prelude.outputEither\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "eitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsComparable", "name": "greaterThanEqualsComparable", "type": "CalCorePreludegreaterThanEqualsComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.ordinalValueExamples", "name": "ordinalValueExamples", "type": "CalCorePreludeordinalValueExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.ordinalValueExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareInt", "name": "compareInt", "type": "CalCorePreludecompareInt", "ui": "\u003Cb\u003ECal.Core.Prelude.compareInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanDefault", "name": "lessThanDefault", "type": "CalCorePreludelessThanDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.emptyList", "name": "emptyList", "type": "CalCorePreludeemptyList", "ui": "\u003Cb\u003ECal.Core.Prelude.emptyList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.nTypeArguments", "name": "nTypeArguments", "type": "CalCorePreludenTypeArguments", "ui": "\u003Cb\u003ECal.Core.Prelude.nTypeArguments\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the number of type arguments. i.e. \u003Ccode\u003EnTypeArguments typeRep == length (typeArguments typeRep)\u003C/code\u003E.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsDecimal", "name": "lessThanEqualsDecimal", "type": "CalCorePreludelessThanEqualsDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimalValue2", "input": "text"}, {"name": "decimalValue1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanRecord", "name": "greaterThanRecord", "type": "CalCorePreludegreaterThanRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "r1", "input": "text"}, {"name": "r2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractByte", "name": "subtractByte", "type": "CalCorePreludesubtractByte", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addByte", "name": "addByte", "type": "CalCorePreludeaddByte", "ui": "\u003Cb\u003ECal.Core.Prelude.addByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.makeQuery", "name": "makeQuery", "type": "CalCorePreludemakeQuery", "ui": "\u003Cb\u003ECal.Core.Prelude.makeQuery\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EmakeQuery defaultResult f x\u003C/code\u003E behaves as follows: if \u003Ccode\u003Ex\u003C/code\u003E's type is the same as \u003Ccode\u003Ef\u003C/code\u003E's\nargument type, use \u003Ccode\u003Ef\u003C/code\u003E to interrogate \u003Ccode\u003Ex\u003C/code\u003E; otherwise return \u003Ccode\u003EdefaultResult\u003C/code\u003E.", "terminals": [{"name": "f", "input": "text"}, {"name": "x", "input": "text"}, {"name": "defaultResult", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanInteger", "name": "lessThanInteger", "type": "CalCorePreludelessThanInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsRecord", "name": "greaterThanEqualsRecord", "type": "CalCorePreludegreaterThanEqualsRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "r2", "input": "text"}, {"name": "r1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateByte", "name": "negateByte", "type": "CalCorePreludenegateByte", "ui": "\u003Cb\u003ECal.Core.Prelude.negateByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareChar", "name": "compareChar", "type": "CalCorePreludecompareChar", "ui": "\u003Cb\u003ECal.Core.Prelude.compareChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxShort", "name": "maxShort", "type": "CalCorePreludemaxShort", "ui": "\u003Cb\u003ECal.Core.Prelude.maxShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.flip", "name": "flip", "type": "CalCorePreludeflip", "ui": "\u003Cb\u003ECal.Core.Prelude.flip\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eflip\u003C/code\u003E converts a function of 2 arguments to another function of 2 arguments that accepts its\narguments in the opposite order. ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "f", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputCalValueStrict", "name": "outputCalValueStrict", "type": "CalCorePreludeoutputCalValueStrict", "ui": "\u003Cb\u003ECal.Core.Prelude.outputCalValueStrict\u003C/b\u003E\u003Cbr/\u003E[CALDoc] When \u003Ccode\u003EoutputCalValueStrict calValue\u003C/code\u003E is evaluated, the argument \u003Ccode\u003EcalValue\u003C/code\u003E is first evaluated to weak-head normal form itself,\nand then converted to a Java object that is suitable for external Java clients to use as a handle to the \u003Ccode\u003EcalValue\u003C/code\u003E. \n", "terminals": [{"name": "calValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.concatString", "name": "concatString", "type": "CalCorePreludeconcatString", "ui": "\u003Cb\u003ECal.Core.Prelude.concatString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "listOfStrings", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsRecordType", "name": "notEqualsRecordType", "type": "CalCorePreludenotEqualsRecordType", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsRecordType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "dictionary1", "input": "text"}, {"name": "dictionary2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsRecordType", "name": "equalsRecordType", "type": "CalCorePreludeequalsRecordType", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsRecordType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "dictionary2", "input": "text"}, {"name": "dictionary1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.triple", "name": "triple", "type": "CalCorePreludetriple", "ui": "\u003Cb\u003ECal.Core.Prelude.triple\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a triple (3-tuple).", "terminals": [{"name": "z", "input": "text"}, {"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.truncate", "name": "truncate", "type": "CalCorePreludetruncate", "ui": "\u003Cb\u003ECal.Core.Prelude.truncate\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Truncates a number towards 0.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isStringType", "name": "isStringType", "type": "CalCorePreludeisStringType", "ui": "\u003Cb\u003ECal.Core.Prelude.isStringType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of the \u003Ccode\u003EString\u003C/code\u003E type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isListTypeExamples", "name": "isListTypeExamples", "type": "CalCorePreludeisListTypeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.isListTypeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsDefault", "name": "lessThanEqualsDefault", "type": "CalCorePreludelessThanEqualsDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToDecimal", "name": "intToDecimal", "type": "CalCorePreludeintToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.intToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.tuple2", "name": "tuple2", "type": "CalCorePreludetuple2", "ui": "\u003Cb\u003ECal.Core.Prelude.tuple2\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 2-tuple.", "terminals": [{"name": "x2", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputRecord", "name": "inputRecord", "type": "CalCorePreludeinputRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.inputRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "record", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isMaybeTypeExamples", "name": "isMaybeTypeExamples", "type": "CalCorePreludeisMaybeTypeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.isMaybeTypeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isMaybeType", "name": "isMaybeType", "type": "CalCorePreludeisMaybeType", "ui": "\u003Cb\u003ECal.Core.Prelude.isMaybeType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of the \u003Ccode\u003EMaybe\u003C/code\u003E type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.\n", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isCharType", "name": "isCharType", "type": "CalCorePreludeisCharType", "ui": "\u003Cb\u003ECal.Core.Prelude.isCharType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of the \u003Ccode\u003EChar\u003C/code\u003E type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareShort", "name": "compareShort", "type": "CalCorePreludecompareShort", "ui": "\u003Cb\u003ECal.Core.Prelude.compareShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxComparable", "name": "maxComparable", "type": "CalCorePreludemaxComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.maxComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumInstances", "name": "testEnumInstances", "type": "CalCorePreludetestEnumInstances", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumInstances\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumBooleanInstance", "name": "testEnumBooleanInstance", "type": "CalCorePreludetestEnumBooleanInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumBooleanInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromBooleanExamples", "name": "upFromBooleanExamples", "type": "CalCorePreludeupFromBooleanExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromBooleanExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromBoolean", "name": "upFromBoolean", "type": "CalCorePreludeupFromBoolean", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromBoolean\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumFloatInstance", "name": "testEnumFloatInstance", "type": "CalCorePreludetestEnumFloatInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumFloatInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumDoubleInstance", "name": "testEnumDoubleInstance", "type": "CalCorePreludetestEnumDoubleInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumDoubleInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToDoubleExamples", "name": "upFromToDoubleExamples", "type": "CalCorePreludeupFromToDoubleExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToDoubleExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToDouble", "name": "upFromToDouble", "type": "CalCorePreludeupFromToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenDoubleExamples", "name": "upFromThenDoubleExamples", "type": "CalCorePreludeupFromThenDoubleExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenDoubleExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumLongInstance", "name": "testEnumLongInstance", "type": "CalCorePreludetestEnumLongInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumLongInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToLongExamples", "name": "upFromThenToLongExamples", "type": "CalCorePreludeupFromThenToLongExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToLongExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToLongExamples", "name": "upFromToLongExamples", "type": "CalCorePreludeupFromToLongExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToLongExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToLong", "name": "upFromToLong", "type": "CalCorePreludeupFromToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumIntInstance", "name": "testEnumIntInstance", "type": "CalCorePreludetestEnumIntInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumIntInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenIntExamples", "name": "upFromThenIntExamples", "type": "CalCorePreludeupFromThenIntExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenIntExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenInt", "name": "upFromThenInt", "type": "CalCorePreludeupFromThenInt", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromIntExamples", "name": "upFromIntExamples", "type": "CalCorePreludeupFromIntExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromIntExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.induceEqualityFunction", "name": "induceEqualityFunction", "type": "CalCorePreludeinduceEqualityFunction", "ui": "\u003Cb\u003ECal.Core.Prelude.induceEqualityFunction\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Induces an equality function on a type \u003Ccode\u003Ea\u003C/code\u003E via projecting to a type \u003Ccode\u003Eb\u003C/code\u003E and using the \u003Ccode\u003EEq\u003C/code\u003E instance\non \u003Ccode\u003Eb\u003C/code\u003E.", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "projectionFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToIntExamples", "name": "upFromToIntExamples", "type": "CalCorePreludeupFromToIntExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToIntExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToInt", "name": "upFromToInt", "type": "CalCorePreludeupFromToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isIntType", "name": "isIntType", "type": "CalCorePreludeisIntType", "ui": "\u003Cb\u003ECal.Core.Prelude.isIntType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of the \u003Ccode\u003EInt\u003C/code\u003E type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.tuple4", "name": "tuple4", "type": "CalCorePreludetuple4", "ui": "\u003Cb\u003ECal.Core.Prelude.tuple4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 4-tuple.", "terminals": [{"name": "x4", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromFloatExamples", "name": "upFromFloatExamples", "type": "CalCorePreludeupFromFloatExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromFloatExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToInteger", "name": "intToInteger", "type": "CalCorePreludeintToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.intToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInt\u003C/code\u003E value to the corresponding \u003Ccode\u003EInteger\u003C/code\u003E value.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanListExamples", "name": "greaterThanListExamples", "type": "CalCorePreludegreaterThanListExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanListExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputListFromJObject", "name": "inputListFromJObject", "type": "CalCorePreludeinputListFromJObject", "ui": "\u003Cb\u003ECal.Core.Prelude.inputListFromJObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.listFromJIterator", "name": "listFromJIterator", "type": "CalCorePreludelistFromJIterator", "ui": "\u003Cb\u003ECal.Core.Prelude.listFromJIterator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a Java iterator to a CAL list.", "terminals": [{"name": "iterator", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.listFromJCollection", "name": "listFromJCollection", "type": "CalCorePreludelistFromJCollection", "ui": "\u003Cb\u003ECal.Core.Prelude.listFromJCollection\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a Java collection to a CAL list.", "terminals": [{"name": "collection", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.listFromJCollectionWith", "name": "listFromJCollectionWith", "type": "CalCorePreludelistFromJCollectionWith", "ui": "\u003Cb\u003ECal.Core.Prelude.listFromJCollectionWith\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a Java collection to a CAL list using the element mapping function \u003Ccode\u003Ef\u003C/code\u003E of type \u003Ccode\u003EJObject -\u0026gt; a\u003C/code\u003E \nto convert elements of the Java list.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "javaCollection", "input": "text"}, {"name": "elementMappingFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.listFromJIteratorWith", "name": "listFromJIteratorWith", "type": "CalCorePreludelistFromJIteratorWith", "ui": "\u003Cb\u003ECal.Core.Prelude.listFromJIteratorWith\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a Java iterator to a CAL list using the element mapping function \u003Ccode\u003Ef\u003C/code\u003E of \ntype \u003Ccode\u003EJObject -\u0026gt; a\u003C/code\u003E to convert iteration elements.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "elementMappingFunction", "input": "text"}, {"name": "iterator", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromInt", "name": "upFromInt", "type": "CalCorePreludeupFromInt", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.map", "name": "map", "type": "CalCorePreludemap", "ui": "\u003Cb\u003ECal.Core.Prelude.map\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Emap mapFunction list\u003C/code\u003E applies the function \u003Ccode\u003EmapFunction\u003C/code\u003E to each element of the list and returns\nthe resulting list.", "terminals": [{"name": "mapFunction", "input": "text"}, {"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundLong", "name": "maxBoundLong", "type": "CalCorePreludemaxBoundLong", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractShort", "name": "subtractShort", "type": "CalCorePreludesubtractShort", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.appendStringExamples", "name": "appendStringExamples", "type": "CalCorePreludeappendStringExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.appendStringExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputListToJObject", "name": "outputListToJObject", "type": "CalCorePreludeoutputListToJObject", "ui": "\u003Cb\u003ECal.Core.Prelude.outputListToJObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputList", "name": "outputList", "type": "CalCorePreludeoutputList", "ui": "\u003Cb\u003ECal.Core.Prelude.outputList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a CAL list to a Java list.", "terminals": [{"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromJust", "name": "fromJust", "type": "CalCorePreludefromJust", "ui": "\u003Cb\u003ECal.Core.Prelude.fromJust\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the element out of a \u003Ccode\u003EJust\u003C/code\u003E or terminates in an error if the \u003Ccode\u003EMaybe\u003C/code\u003E value\nis \u003Ccode\u003ENothing\u003C/code\u003E.", "terminals": [{"name": "maybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumCheckedShort", "name": "intToEnumCheckedShort", "type": "CalCorePreludeintToEnumCheckedShort", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumCheckedShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnumChecked\u003C/code\u003E instance function for the \u003Ccode\u003EShort\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareLong", "name": "compareLong", "type": "CalCorePreludecompareLong", "ui": "\u003Cb\u003ECal.Core.Prelude.compareLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputEither", "name": "inputEither", "type": "CalCorePreludeinputEither", "ui": "\u003Cb\u003ECal.Core.Prelude.inputEither\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "javaEitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jEitherToEither", "name": "jEitherToEither", "type": "CalCorePreludejEitherToEither", "ui": "\u003Cb\u003ECal.Core.Prelude.jEitherToEither\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "javaEitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.appendList", "name": "appendList", "type": "CalCorePreludeappendList", "ui": "\u003Cb\u003ECal.Core.Prelude.appendList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "list2", "input": "text"}, {"name": "list1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.deepStrict", "name": "deepStrict", "type": "CalCorePreludedeepStrict", "ui": "\u003Cb\u003ECal.Core.Prelude.deepStrict\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Strict function application. ", "terminals": [{"name": "f", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumCharInstance", "name": "testEnumCharInstance", "type": "CalCorePreludetestEnumCharInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumCharInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToCharExamples", "name": "upFromThenToCharExamples", "type": "CalCorePreludeupFromThenToCharExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToCharExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToCharExamples", "name": "upFromToCharExamples", "type": "CalCorePreludeupFromToCharExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToCharExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenCharExamples", "name": "upFromThenCharExamples", "type": "CalCorePreludeupFromThenCharExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenCharExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.strictTuple7", "name": "strictTuple7", "type": "CalCorePreludestrictTuple7", "ui": "\u003Cb\u003ECal.Core.Prelude.strictTuple7\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 7-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.", "terminals": [{"name": "x3", "input": "text"}, {"name": "x7", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "x5", "input": "text"}, {"name": "x4", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "x6", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.asTypeOf", "name": "asTypeOf", "type": "CalCorePreludeasTypeOf", "ui": "\u003Cb\u003ECal.Core.Prelude.asTypeOf\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EasTypeOf\u003C/code\u003E is a type-restricted version of \u003Ccode\u003Econst\u003C/code\u003E. ", "terminals": [{"name": "valueToReturn", "input": "text"}, {"name": "valueToIgnore", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputOrdering", "name": "outputOrdering", "type": "CalCorePreludeoutputOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.outputOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "orderingValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanComparable", "name": "greaterThanComparable", "type": "CalCorePreludegreaterThanComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.makeTransform", "name": "makeTransform", "type": "CalCorePreludemakeTransform", "ui": "\u003Cb\u003ECal.Core.Prelude.makeTransform\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EmakeTransform f x\u003C/code\u003E applies \u003Ccode\u003Ef\u003C/code\u003E to \u003Ccode\u003Ex\u003C/code\u003E if \u003Ccode\u003Ex\u003C/code\u003E's type is the same as \u003Ccode\u003Ef\u003C/code\u003E's argument type,\nand otherwise applies the identity function \u003Ccode\u003EPrelude.id\u003C/code\u003E to \u003Ccode\u003Ex\u003C/code\u003E.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "f", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.cast", "name": "cast", "type": "CalCorePreludecast", "ui": "\u003Cb\u003ECal.Core.Prelude.cast\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Casts the argument value to the desired return type in a type-safe fashion.\n", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToFloatExamples", "name": "upFromToFloatExamples", "type": "CalCorePreludeupFromToFloatExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToFloatExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToFloat", "name": "upFromToFloat", "type": "CalCorePreludeupFromToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromFloat", "name": "upFromFloat", "type": "CalCorePreludeupFromFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.pair", "name": "pair", "type": "CalCorePreludepair", "ui": "\u003Cb\u003ECal.Core.Prelude.pair\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a pair (2-tuple).", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToInteger", "name": "doubleToInteger", "type": "CalCorePreludedoubleToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "doubleValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxDefault", "name": "maxDefault", "type": "CalCorePreludemaxDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.maxDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxRecord", "name": "maxRecord", "type": "CalCorePreludemaxRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.maxRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "r2", "input": "text"}, {"name": "r1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsDefault", "name": "greaterThanEqualsDefault", "type": "CalCorePreludegreaterThanEqualsDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToDecimal", "name": "byteToDecimal", "type": "CalCorePreludebyteToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "byteValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToChar", "name": "upFromToChar", "type": "CalCorePreludeupFromToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputMaybe", "name": "inputMaybe", "type": "CalCorePreludeinputMaybe", "ui": "\u003Cb\u003ECal.Core.Prelude.inputMaybe\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "javaMaybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.concatDefault", "name": "concatDefault", "type": "CalCorePreludeconcatDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.concatDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.foldRight", "name": "foldRight", "type": "CalCorePreludefoldRight", "ui": "\u003Cb\u003ECal.Core.Prelude.foldRight\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Similar to \u003Ccode\u003ECal.Collections.List.foldLeft\u003C/code\u003E, except that the folding process on the list is started with its rightmost element.\n", "terminals": [{"name": "foldFunction", "input": "text"}, {"name": "list", "input": "text"}, {"name": "initialValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToBooleanExamples", "name": "upFromToBooleanExamples", "type": "CalCorePreludeupFromToBooleanExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToBooleanExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jMaybeToMaybe", "name": "jMaybeToMaybe", "type": "CalCorePreludejMaybeToMaybe", "ui": "\u003Cb\u003ECal.Core.Prelude.jMaybeToMaybe\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "javaMaybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumOrderingInstance", "name": "testEnumOrderingInstance", "type": "CalCorePreludetestEnumOrderingInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumOrderingInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToOrderingExamples", "name": "upFromThenToOrderingExamples", "type": "CalCorePreludeupFromThenToOrderingExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToOrderingExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToOrderingExamples", "name": "upFromToOrderingExamples", "type": "CalCorePreludeupFromToOrderingExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToOrderingExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenOrderingExamples", "name": "upFromThenOrderingExamples", "type": "CalCorePreludeupFromThenOrderingExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenOrderingExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromOrderingExamples", "name": "upFromOrderingExamples", "type": "CalCorePreludeupFromOrderingExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromOrderingExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.either", "name": "either", "type": "CalCorePreludeeither", "ui": "\u003Cb\u003ECal.Core.Prelude.either\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Applies one of the two specified functions to a value encapsulated by an \u003Ccode\u003EEither\u003C/code\u003E type.\n", "terminals": [{"name": "leftFunction", "input": "text"}, {"name": "eitherValue", "input": "text"}, {"name": "rightFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToIntExamples", "name": "upFromThenToIntExamples", "type": "CalCorePreludeupFromThenToIntExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToIntExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToInt", "name": "upFromThenToInt", "type": "CalCorePreludeupFromThenToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "next", "input": "text"}, {"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByDownToInt", "name": "upFromByDownToInt", "type": "CalCorePreludeupFromByDownToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByDownToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "step", "input": "text"}, {"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByUpToInt", "name": "upFromByUpToInt", "type": "CalCorePreludeupFromByUpToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByUpToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "step", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.strictTuple5", "name": "strictTuple5", "type": "CalCorePreludestrictTuple5", "ui": "\u003Cb\u003ECal.Core.Prelude.strictTuple5\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 5-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.", "terminals": [{"name": "x1", "input": "text"}, {"name": "x5", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "x4", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divMod", "name": "divMod", "type": "CalCorePreludedivMod", "ui": "\u003Cb\u003ECal.Core.Prelude.divMod\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Simultaneous \u003Ccode\u003Edivide\u003C/code\u003E and \u003Ccode\u003Eremainder\u003C/code\u003E (or modulus) on \u003Ccode\u003EInt\u003C/code\u003E values.", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsTypeReps", "name": "equalsTypeReps", "type": "CalCorePreludeequalsTypeReps", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsTypeReps\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "typeReps2", "input": "text"}, {"name": "typeReps1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeOfRecord", "name": "typeOfRecord", "type": "CalCorePreludetypeOfRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.typeOfRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "recordValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToDoubleExamples", "name": "upFromThenToDoubleExamples", "type": "CalCorePreludeupFromThenToDoubleExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToDoubleExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.field1", "name": "field1", "type": "CalCorePreludefield1", "ui": "\u003Cb\u003ECal.Core.Prelude.field1\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the first field of the specified tuple / the ordinal field \u003Ccode\u003E#1\u003C/code\u003E of the specified record.", "terminals": [{"name": "r", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumLong", "name": "signumLong", "type": "CalCorePreludesignumLong", "ui": "\u003Cb\u003ECal.Core.Prelude.signumLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromMaybe", "name": "fromMaybe", "type": "CalCorePreludefromMaybe", "ui": "\u003Cb\u003ECal.Core.Prelude.fromMaybe\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the element out of a \u003Ccode\u003EJust\u003C/code\u003E or returns the specified default value if the \u003Ccode\u003EMaybe\u003C/code\u003E value\nis \u003Ccode\u003ENothing\u003C/code\u003E.", "terminals": [{"name": "defaultValue", "input": "text"}, {"name": "maybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsTypeReps", "name": "notEqualsTypeReps", "type": "CalCorePreludenotEqualsTypeReps", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsTypeReps\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "typeReps2", "input": "text"}, {"name": "typeReps1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.field3", "name": "field3", "type": "CalCorePreludefield3", "ui": "\u003Cb\u003ECal.Core.Prelude.field3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the third field of the specified tuple / the ordinal field \u003Ccode\u003E#3\u003C/code\u003E of the specified record.", "terminals": [{"name": "r", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absByte", "name": "absByte", "type": "CalCorePreludeabsByte", "ui": "\u003Cb\u003ECal.Core.Prelude.absByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromRight", "name": "fromRight", "type": "CalCorePreludefromRight", "ui": "\u003Cb\u003ECal.Core.Prelude.fromRight\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the \u003Ccode\u003Evalue\u003C/code\u003E field of a \u003Ccode\u003ERight\u003C/code\u003E value or terminates in an error if \u003Ccode\u003EeitherValue\u003C/code\u003E is\na \u003Ccode\u003ELeft\u003C/code\u003E value.", "terminals": [{"name": "eitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputJObject", "name": "outputJObject", "type": "CalCorePreludeoutputJObject", "ui": "\u003Cb\u003ECal.Core.Prelude.outputJObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type that is not one of the \nprimitive Java types char, boolean, byte, short, int, long, float or double.", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isEven", "name": "isEven", "type": "CalCorePreludeisEven", "ui": "\u003Cb\u003ECal.Core.Prelude.isEven\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the argument is even.", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.field5", "name": "field5", "type": "CalCorePreludefield5", "ui": "\u003Cb\u003ECal.Core.Prelude.field5\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the fifth field of the specified tuple / the ordinal field \u003Ccode\u003E#5\u003C/code\u003E of the specified record.", "terminals": [{"name": "r", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.zip", "name": "zip", "type": "CalCorePreludezip", "ui": "\u003Cb\u003ECal.Core.Prelude.zip\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts two lists into a list of corresponding pairs.\n", "terminals": [{"name": "list2", "input": "text"}, {"name": "list1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minChar", "name": "minChar", "type": "CalCorePreludeminChar", "ui": "\u003Cb\u003ECal.Core.Prelude.minChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.tuple6", "name": "tuple6", "type": "CalCorePreludetuple6", "ui": "\u003Cb\u003ECal.Core.Prelude.tuple6\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 6-tuple.", "terminals": [{"name": "x6", "input": "text"}, {"name": "x4", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "x5", "input": "text"}, {"name": "x3", "input": "text"}, {"name": "x1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputOrdering", "name": "inputOrdering", "type": "CalCorePreludeinputOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.inputOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "javaOrderingValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumShort", "name": "signumShort", "type": "CalCorePreludesignumShort", "ui": "\u003Cb\u003ECal.Core.Prelude.signumShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isBooleanType", "name": "isBooleanType", "type": "CalCorePreludeisBooleanType", "ui": "\u003Cb\u003ECal.Core.Prelude.isBooleanType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of the \u003Ccode\u003EBoolean\u003C/code\u003E type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideDecimal", "name": "divideDecimal", "type": "CalCorePreludedivideDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.divideDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "numerator", "input": "text"}, {"name": "denominator", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumCheckedByte", "name": "intToEnumCheckedByte", "type": "CalCorePreludeintToEnumCheckedByte", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumCheckedByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnumChecked\u003C/code\u003E instance function for the \u003Ccode\u003EByte\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToFloatExamples", "name": "upFromThenToFloatExamples", "type": "CalCorePreludeupFromThenToFloatExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToFloatExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.iff", "name": "iff", "type": "CalCorePreludeiff", "ui": "\u003Cb\u003ECal.Core.Prelude.iff\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Exposes the functionality of \"if-then-else\" as a function.\n\u003Ccode\u003Eiff\u003C/code\u003E can be thought of as the function form of the \"if-the-else\" construct.", "terminals": [{"name": "condition", "input": "text"}, {"name": "trueValue", "input": "text"}, {"name": "falseValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsDecimal", "name": "greaterThanEqualsDecimal", "type": "CalCorePreludegreaterThanEqualsDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimalValue1", "input": "text"}, {"name": "decimalValue2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareFloat", "name": "compareFloat", "type": "CalCorePreludecompareFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.compareFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanInteger", "name": "greaterThanInteger", "type": "CalCorePreludegreaterThanInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxByte", "name": "maxByte", "type": "CalCorePreludemaxByte", "ui": "\u003Cb\u003ECal.Core.Prelude.maxByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minComparable", "name": "minComparable", "type": "CalCorePreludeminComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.minComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsComparable", "name": "lessThanEqualsComparable", "type": "CalCorePreludelessThanEqualsComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanRecordExamples", "name": "greaterThanRecordExamples", "type": "CalCorePreludegreaterThanRecordExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanRecordExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsListExamples", "name": "equalsListExamples", "type": "CalCorePreludeequalsListExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsListExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputStringList", "name": "inputStringList", "type": "CalCorePreludeinputStringList", "ui": "\u003Cb\u003ECal.Core.Prelude.inputStringList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A type-specialized version of \u003Ccode\u003Einput\u003C/code\u003E for use as a marshalling function in a standalone JAR.", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsDecimal", "name": "equalsDecimal", "type": "CalCorePreludeequalsDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimalValue1", "input": "text"}, {"name": "decimalValue2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputUnit", "name": "outputUnit", "type": "CalCorePreludeoutputUnit", "ui": "\u003Cb\u003ECal.Core.Prelude.outputUnit\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.listToMaybe", "name": "listToMaybe", "type": "CalCorePreludelistToMaybe", "ui": "\u003Cb\u003ECal.Core.Prelude.listToMaybe\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ENothing\u003C/code\u003E on an empty list or \u003Ccode\u003EJust firstElement\u003C/code\u003E where \u003Ccode\u003EfirstElement\u003C/code\u003E is\nthe first element of the list.", "terminals": [{"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeArgumentsExamples", "name": "typeArgumentsExamples", "type": "CalCorePreludetypeArgumentsExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.typeArgumentsExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeArguments", "name": "typeArguments", "type": "CalCorePreludetypeArguments", "ui": "\u003Cb\u003ECal.Core.Prelude.typeArguments\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the type arguments of a type representation. ", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordType_fieldTypes", "name": "recordType_fieldTypes", "type": "CalCorePreluderecordType_fieldTypes", "ui": "\u003Cb\u003ECal.Core.Prelude.recordType_fieldTypes\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: A list of \u003Ccode\u003ETypeRep\u003C/code\u003Es representing the types of each field of the record value.\nThe 0th element of the list represents the type of the 0th field of the record,\nand so forth.", "terminals": [{"name": "dictionary", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordType_getNthFieldType", "name": "recordType_getNthFieldType", "type": "CalCorePreluderecordType_getNthFieldType", "ui": "\u003Cb\u003ECal.Core.Prelude.recordType_getNthFieldType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: a \u003Ccode\u003ETypeRep\u003C/code\u003E representing the type of the nth field in the record whose type\nis represented by dictionary.", "terminals": [{"name": "dictionary", "input": "text"}, {"name": "index", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.orderingToInt", "name": "orderingToInt", "type": "CalCorePreludeorderingToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.orderingToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EOrdering\u003C/code\u003E value to an \u003Ccode\u003EInt\u003C/code\u003E value. ", "terminals": [{"name": "orderingValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumDefault", "name": "intToEnumDefault", "type": "CalCorePreludeintToEnumDefault", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumDefault\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToBooleanExamples", "name": "upFromThenToBooleanExamples", "type": "CalCorePreludeupFromThenToBooleanExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToBooleanExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToBoolean", "name": "upFromThenToBoolean", "type": "CalCorePreludeupFromThenToBoolean", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToBoolean\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenLongExamples", "name": "upFromThenLongExamples", "type": "CalCorePreludeupFromThenLongExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenLongExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanRecord", "name": "lessThanRecord", "type": "CalCorePreludelessThanRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "r2", "input": "text"}, {"name": "r1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenFloatExamples", "name": "upFromThenFloatExamples", "type": "CalCorePreludeupFromThenFloatExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenFloatExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderShort", "name": "remainderShort", "type": "CalCorePreluderemainderShort", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumCheckedOrdering", "name": "intToEnumCheckedOrdering", "type": "CalCorePreludeintToEnumCheckedOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumCheckedOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnumChecked\u003C/code\u003E instance function for the \u003Ccode\u003EOrdering\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToOrdering", "name": "intToOrdering", "type": "CalCorePreludeintToOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.intToOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInt\u003C/code\u003E value to an \u003Ccode\u003EOrdering\u003C/code\u003E value. ", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jOrderingToOrdering", "name": "jOrderingToOrdering", "type": "CalCorePreludejOrderingToOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.jOrderingToOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "javaOrderingValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumIntToOrdering", "name": "signumIntToOrdering", "type": "CalCorePreludesignumIntToOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.signumIntToOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] similar to \u003Ccode\u003EintToOrdering\u003C/code\u003E but only handles the intValues -1, 0, 1. ", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsRecord", "name": "lessThanEqualsRecord", "type": "CalCorePreludelessThanEqualsRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "r1", "input": "text"}, {"name": "r2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testIntEnumInstances", "name": "testIntEnumInstances", "type": "CalCorePreludetestIntEnumInstances", "ui": "\u003Cb\u003ECal.Core.Prelude.testIntEnumInstances\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charIntEnumExamples", "name": "charIntEnumExamples", "type": "CalCorePreludecharIntEnumExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.charIntEnumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteIntEnumExamples", "name": "byteIntEnumExamples", "type": "CalCorePreludebyteIntEnumExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.byteIntEnumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortIntEnumExamples", "name": "shortIntEnumExamples", "type": "CalCorePreludeshortIntEnumExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.shortIntEnumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundShortAsInt", "name": "maxBoundShortAsInt", "type": "CalCorePreludemaxBoundShortAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundShortAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundShort", "name": "maxBoundShort", "type": "CalCorePreludemaxBoundShort", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundShortAsInt", "name": "minBoundShortAsInt", "type": "CalCorePreludeminBoundShortAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundShortAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundShort", "name": "minBoundShort", "type": "CalCorePreludeminBoundShort", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intIntEnumExamples", "name": "intIntEnumExamples", "type": "CalCorePreludeintIntEnumExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.intIntEnumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundInt", "name": "maxBoundInt", "type": "CalCorePreludemaxBoundInt", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundInt", "name": "minBoundInt", "type": "CalCorePreludeminBoundInt", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.orderingIntEnumExamples", "name": "orderingIntEnumExamples", "type": "CalCorePreludeorderingIntEnumExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.orderingIntEnumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsDecimal", "name": "notEqualsDecimal", "type": "CalCorePreludenotEqualsDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimalValue1", "input": "text"}, {"name": "decimalValue2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsInteger", "name": "lessThanEqualsInteger", "type": "CalCorePreludelessThanEqualsInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromCharExamples", "name": "upFromCharExamples", "type": "CalCorePreludeupFromCharExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromCharExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromChar", "name": "upFromChar", "type": "CalCorePreludeupFromChar", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToBoolean", "name": "upFromToBoolean", "type": "CalCorePreludeupFromToBoolean", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToBoolean\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.field4", "name": "field4", "type": "CalCorePreludefield4", "ui": "\u003Cb\u003ECal.Core.Prelude.field4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the fourth field of the specified tuple / the ordinal field \u003Ccode\u003E#4\u003C/code\u003E of the specified record.", "terminals": [{"name": "r", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.composeExamples", "name": "composeExamples", "type": "CalCorePreludecomposeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.composeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Example usage of the compose function, in its different forms (regular\nfunction application, backquoted operator, and the \u003Ccode\u003E#\u003C/code\u003E operator).", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compose", "name": "compose", "type": "CalCorePreludecompose", "ui": "\u003Cb\u003ECal.Core.Prelude.compose\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003E(compose f g)\u003C/code\u003E is the function composition of \u003Ccode\u003Ef\u003C/code\u003E with \u003Ccode\u003Eg\u003C/code\u003E. ", "terminals": [{"name": "x", "input": "text"}, {"name": "g", "input": "text"}, {"name": "f", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.apply", "name": "apply", "type": "CalCorePreludeapply", "ui": "\u003Cb\u003ECal.Core.Prelude.apply\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A function application function. ", "terminals": [{"name": "functionToApply", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.emptyOrdering", "name": "emptyOrdering", "type": "CalCorePreludeemptyOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.emptyOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyShort", "name": "multiplyShort", "type": "CalCorePreludemultiplyShort", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumShortInstance", "name": "testEnumShortInstance", "type": "CalCorePreludetestEnumShortInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumShortInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToShortExamples", "name": "upFromThenToShortExamples", "type": "CalCorePreludeupFromThenToShortExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToShortExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToShortExamples", "name": "upFromToShortExamples", "type": "CalCorePreludeupFromToShortExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToShortExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToShort", "name": "upFromToShort", "type": "CalCorePreludeupFromToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromShortExamples", "name": "upFromShortExamples", "type": "CalCorePreludeupFromShortExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromShortExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromShort", "name": "upFromShort", "type": "CalCorePreludeupFromShort", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumByte", "name": "intToEnumByte", "type": "CalCorePreludeintToEnumByte", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnum\u003C/code\u003E instance function for the \u003Ccode\u003EByte\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundByteAsInt", "name": "minBoundByteAsInt", "type": "CalCorePreludeminBoundByteAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundByteAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundByte", "name": "minBoundByte", "type": "CalCorePreludeminBoundByte", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromDoubleExamples", "name": "upFromDoubleExamples", "type": "CalCorePreludeupFromDoubleExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromDoubleExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.replicateList", "name": "replicateList", "type": "CalCorePreludereplicateList", "ui": "\u003Cb\u003ECal.Core.Prelude.replicateList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Replicates a list for a specified number of times.", "terminals": [{"name": "nCopies", "input": "text"}, {"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.replicate", "name": "replicate", "type": "CalCorePreludereplicate", "ui": "\u003Cb\u003ECal.Core.Prelude.replicate\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Ereplicate nCopies valueToReplicate\u003C/code\u003E is a list of length \u003Ccode\u003EnCopies\u003C/code\u003E, with every element equal to\n\u003Ccode\u003EvalueToReplicate\u003C/code\u003E.", "terminals": [{"name": "nCopies", "input": "text"}, {"name": "valueToReplicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenShortExamples", "name": "upFromThenShortExamples", "type": "CalCorePreludeupFromThenShortExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenShortExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenShort", "name": "upFromThenShort", "type": "CalCorePreludeupFromThenShort", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenLong", "name": "upFromThenLong", "type": "CalCorePreludeupFromThenLong", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToDouble", "name": "upFromThenToDouble", "type": "CalCorePreludeupFromThenToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenDouble", "name": "upFromThenDouble", "type": "CalCorePreludeupFromThenDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToLong", "name": "upFromThenToLong", "type": "CalCorePreludeupFromThenToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "next", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByUpToLong", "name": "upFromByUpToLong", "type": "CalCorePreludeupFromByUpToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByUpToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "step", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.strictTuple2", "name": "strictTuple2", "type": "CalCorePreludestrictTuple2", "ui": "\u003Cb\u003ECal.Core.Prelude.strictTuple2\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a 2-tuple value, but ensures that the fields++ are evaluated (to weak-head normal form) prior to returning.", "terminals": [{"name": "x1", "input": "text"}, {"name": "x2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToDecimal", "name": "floatToDecimal", "type": "CalCorePreludefloatToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "floatValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.or", "name": "or", "type": "CalCorePreludeor", "ui": "\u003Cb\u003ECal.Core.Prelude.or\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the result of a logical OR operation on the two arguments.", "terminals": [{"name": "a", "input": "text"}, {"name": "b", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromLongExamples", "name": "upFromLongExamples", "type": "CalCorePreludeupFromLongExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromLongExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromLong", "name": "upFromLong", "type": "CalCorePreludeupFromLong", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.id", "name": "id", "type": "CalCorePreludeid", "ui": "\u003Cb\u003ECal.Core.Prelude.id\u003C/b\u003E\u003Cbr/\u003E[CALDoc] An identity function.", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumChar", "name": "intToEnumChar", "type": "CalCorePreludeintToEnumChar", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnum\u003C/code\u003E instance function for the \u003Ccode\u003EChar\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumIntegerInstance", "name": "testEnumIntegerInstance", "type": "CalCorePreludetestEnumIntegerInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumIntegerInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToIntegerExamples", "name": "upFromThenToIntegerExamples", "type": "CalCorePreludeupFromThenToIntegerExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToIntegerExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToIntegerExamples", "name": "upFromToIntegerExamples", "type": "CalCorePreludeupFromToIntegerExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToIntegerExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToInteger", "name": "upFromToInteger", "type": "CalCorePreludeupFromToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenIntegerExamples", "name": "upFromThenIntegerExamples", "type": "CalCorePreludeupFromThenIntegerExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenIntegerExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenInteger", "name": "upFromThenInteger", "type": "CalCorePreludeupFromThenInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromIntegerExamples", "name": "upFromIntegerExamples", "type": "CalCorePreludeupFromIntegerExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromIntegerExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromInteger", "name": "upFromInteger", "type": "CalCorePreludeupFromInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToShort", "name": "upFromThenToShort", "type": "CalCorePreludeupFromThenToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByDownToShort", "name": "upFromByDownToShort", "type": "CalCorePreludeupFromByDownToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByDownToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "step", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.combineComparators", "name": "combineComparators", "type": "CalCorePreludecombineComparators", "ui": "\u003Cb\u003ECal.Core.Prelude.combineComparators\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Combines two comparators to form a new comparator. ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "comparator2", "input": "text"}, {"name": "comparator1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isEmptyList", "name": "isEmptyList", "type": "CalCorePreludeisEmptyList", "ui": "\u003Cb\u003ECal.Core.Prelude.isEmptyList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isJust", "name": "isJust", "type": "CalCorePreludeisJust", "ui": "\u003Cb\u003ECal.Core.Prelude.isJust\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E iff the argument is of the form \u003Ccode\u003EJust _\u003C/code\u003E.", "terminals": [{"name": "maybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isForeignReferenceTypeExamples", "name": "isForeignReferenceTypeExamples", "type": "CalCorePreludeisForeignReferenceTypeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.isForeignReferenceTypeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isForeignReferenceType", "name": "isForeignReferenceType", "type": "CalCorePreludeisForeignReferenceType", "ui": "\u003Cb\u003ECal.Core.Prelude.isForeignReferenceType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: \u003Ccode\u003ETrue\u003C/code\u003E if the type of the value is a foreign type, that corresponds to a foreign reference\ntype i.e. not a primitive type such as \"int\".", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.foreignClass", "name": "foreignClass", "type": "CalCorePreludeforeignClass", "ui": "\u003Cb\u003ECal.Core.Prelude.foreignClass\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: \u003Ccode\u003EJust javaClass\u003C/code\u003E, where \u003Ccode\u003EjavaClass\u003C/code\u003E is the underlying Java class object\nof the foreign type, if \u003Ccode\u003ETypeRep\u003C/code\u003E represents a non-foreign type. Otherwise \u003Ccode\u003ENothing\u003C/code\u003E.", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanComparable", "name": "lessThanComparable", "type": "CalCorePreludelessThanComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jCompareComparable", "name": "jCompareComparable", "type": "CalCorePreludejCompareComparable", "ui": "\u003Cb\u003ECal.Core.Prelude.jCompareComparable\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "y", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumByteInstance", "name": "testEnumByteInstance", "type": "CalCorePreludetestEnumByteInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumByteInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToByteExamples", "name": "upFromThenToByteExamples", "type": "CalCorePreludeupFromThenToByteExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToByteExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToByteExamples", "name": "upFromToByteExamples", "type": "CalCorePreludeupFromToByteExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToByteExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToByte", "name": "upFromToByte", "type": "CalCorePreludeupFromToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenByteExamples", "name": "upFromThenByteExamples", "type": "CalCorePreludeupFromThenByteExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenByteExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenByte", "name": "upFromThenByte", "type": "CalCorePreludeupFromThenByte", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToByte", "name": "upFromThenToByte", "type": "CalCorePreludeupFromThenToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByUpToByte", "name": "upFromByUpToByte", "type": "CalCorePreludeupFromByUpToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByUpToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "step", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByteExamples", "name": "upFromByteExamples", "type": "CalCorePreludeupFromByteExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByteExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByte", "name": "upFromByte", "type": "CalCorePreludeupFromByte", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumDecimal", "name": "signumDecimal", "type": "CalCorePreludesignumDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.signumDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputRecord", "name": "outputRecord", "type": "CalCorePreludeoutputRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.outputRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "record", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addShort", "name": "addShort", "type": "CalCorePreludeaddShort", "ui": "\u003Cb\u003ECal.Core.Prelude.addShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByUpToShort", "name": "upFromByUpToShort", "type": "CalCorePreludeupFromByUpToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByUpToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "step", "input": "text"}, {"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.reverseComparator", "name": "reverseComparator", "type": "CalCorePreludereverseComparator", "ui": "\u003Cb\u003ECal.Core.Prelude.reverseComparator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Reverses the order of a comparator (also known as a comparison function) so the\ncomparisons that result in \u003Ccode\u003ELT\u003C/code\u003E become \u003Ccode\u003EGT\u003C/code\u003E and those that result in \u003Ccode\u003EGT\u003C/code\u003E become \u003Ccode\u003ELT\u003C/code\u003E.", "terminals": [{"name": "x", "input": "text"}, {"name": "comparator", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundByteAsInt", "name": "maxBoundByteAsInt", "type": "CalCorePreludemaxBoundByteAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundByteAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundByte", "name": "maxBoundByte", "type": "CalCorePreludemaxBoundByte", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenChar", "name": "upFromThenChar", "type": "CalCorePreludeupFromThenChar", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToChar", "name": "upFromThenToChar", "type": "CalCorePreludeupFromThenToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByDownToChar", "name": "upFromByDownToChar", "type": "CalCorePreludeupFromByDownToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByDownToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "step", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByUpToChar", "name": "upFromByUpToChar", "type": "CalCorePreludeupFromByUpToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByUpToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "step", "input": "text"}, {"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeOfExamples", "name": "typeOfExamples", "type": "CalCorePreludetypeOfExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.typeOfExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.undefined", "name": "undefined", "type": "CalCorePreludeundefined", "ui": "\u003Cb\u003ECal.Core.Prelude.undefined\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003Eundefined\u003C/code\u003E function will cause execution to stop immediately. ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.listToTypeReps", "name": "listToTypeReps", "type": "CalCorePreludelistToTypeReps", "ui": "\u003Cb\u003ECal.Core.Prelude.listToTypeReps\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "typeRepList", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.updateTypeReps", "name": "updateTypeReps", "type": "CalCorePreludeupdateTypeReps", "ui": "\u003Cb\u003ECal.Core.Prelude.updateTypeReps\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "index", "input": "text"}, {"name": "typeRep", "input": "text"}, {"name": "typeReps", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toCalValue", "name": "toCalValue", "type": "CalCorePreludetoCalValue", "ui": "\u003Cb\u003ECal.Core.Prelude.toCalValue\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts any value in CAL to a value of type \u003Ccode\u003ECalValue\u003C/code\u003E. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.length", "name": "length", "type": "CalCorePreludelength", "ui": "\u003Cb\u003ECal.Core.Prelude.length\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the length of the specified list. ", "terminals": [{"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundLong", "name": "minBoundLong", "type": "CalCorePreludeminBoundLong", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanDecimal", "name": "greaterThanDecimal", "type": "CalCorePreludegreaterThanDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimalValue1", "input": "text"}, {"name": "decimalValue2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToInteger", "name": "upFromThenToInteger", "type": "CalCorePreludeupFromThenToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByDownToInteger", "name": "upFromByDownToInteger", "type": "CalCorePreludeupFromByDownToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByDownToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "step", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByUpToInteger", "name": "upFromByUpToInteger", "type": "CalCorePreludeupFromByUpToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByUpToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function assumes that \u003Ccode\u003Estep \u0026gt;= 0\u003C/code\u003E.", "terminals": [{"name": "step", "input": "text"}, {"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isLeft", "name": "isLeft", "type": "CalCorePreludeisLeft", "ui": "\u003Cb\u003ECal.Core.Prelude.isLeft\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if \u003Ccode\u003EeitherValue\u003C/code\u003E is a \u003Ccode\u003ELeft\u003C/code\u003E value and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "eitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByDownToByte", "name": "upFromByDownToByte", "type": "CalCorePreludeupFromByDownToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByDownToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "step", "input": "text"}, {"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToFloat", "name": "upFromThenToFloat", "type": "CalCorePreludeupFromThenToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenFloat", "name": "upFromThenFloat", "type": "CalCorePreludeupFromThenFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.iterate", "name": "iterate", "type": "CalCorePreludeiterate", "ui": "\u003Cb\u003ECal.Core.Prelude.iterate\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eiterate f x\u003C/code\u003E returns the infinite list \u003Ccode\u003E[x, f x, f(f x), f(f(f x)), ...]\u003C/code\u003E.", "terminals": [{"name": "iterationFunction", "input": "text"}, {"name": "initialValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.takeWhile", "name": "takeWhile", "type": "CalCorePreludetakeWhile", "ui": "\u003Cb\u003ECal.Core.Prelude.takeWhile\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EtakeWhile takeWhileTrueFunction list\u003C/code\u003E returns the longest prefix of the list for which \u003Ccode\u003EtakeWhileTrueFunction\u003C/code\u003E\nis \u003Ccode\u003ETrue\u003C/code\u003E for each element.", "terminals": [{"name": "list", "input": "text"}, {"name": "takeWhileTrueFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputUnit", "name": "inputUnit", "type": "CalCorePreludeinputUnit", "ui": "\u003Cb\u003ECal.Core.Prelude.inputUnit\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.foldLeftStrict", "name": "foldLeftStrict", "type": "CalCorePreludefoldLeftStrict", "ui": "\u003Cb\u003ECal.Core.Prelude.foldLeftStrict\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This is the strict version of \u003Ccode\u003ECal.Collections.List.foldLeft\u003C/code\u003E. ", "terminals": [{"name": "list", "input": "text"}, {"name": "foldFunction", "input": "text"}, {"name": "initialValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromDouble", "name": "upFromDouble", "type": "CalCorePreludeupFromDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumInteger", "name": "signumInteger", "type": "CalCorePreludesignumInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.signumInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumCheckedChar", "name": "intToEnumCheckedChar", "type": "CalCorePreludeintToEnumCheckedChar", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumCheckedChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EintToEnumChecked\u003C/code\u003E instance function for the \u003Ccode\u003EChar\u003C/code\u003E type.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundCharAsInt", "name": "maxBoundCharAsInt", "type": "CalCorePreludemaxBoundCharAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundCharAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBoundChar", "name": "maxBoundChar", "type": "CalCorePreludemaxBoundChar", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBoundChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundCharAsInt", "name": "minBoundCharAsInt", "type": "CalCorePreludeminBoundCharAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundCharAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBoundChar", "name": "minBoundChar", "type": "CalCorePreludeminBoundChar", "ui": "\u003Cb\u003ECal.Core.Prelude.minBoundChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intersperse", "name": "intersperse", "type": "CalCorePreludeintersperse", "ui": "\u003Cb\u003ECal.Core.Prelude.intersperse\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function takes an element and a list and \"intersperses\" that element\nbetween the elements of the list.", "terminals": [{"name": "list", "input": "text"}, {"name": "separator", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fst", "name": "fst", "type": "CalCorePreludefst", "ui": "\u003Cb\u003ECal.Core.Prelude.fst\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the first component of a pair.", "terminals": [{"name": "pair", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToInteger", "name": "byteToInteger", "type": "CalCorePreludebyteToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "byteValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isFunctionTypeExamples", "name": "isFunctionTypeExamples", "type": "CalCorePreludeisFunctionTypeExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.isFunctionTypeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.not", "name": "not", "type": "CalCorePreludenot", "ui": "\u003Cb\u003ECal.Core.Prelude.not\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the logical negation of the argument.", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isFunctionType", "name": "isFunctionType", "type": "CalCorePreludeisFunctionType", "ui": "\u003Cb\u003ECal.Core.Prelude.isFunctionType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of a function type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.\n", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isRecordType", "name": "isRecordType", "type": "CalCorePreludeisRecordType", "ui": "\u003Cb\u003ECal.Core.Prelude.isRecordType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of a record type and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.\n", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.mod", "name": "mod", "type": "CalCorePreludemod", "ui": "\u003Cb\u003ECal.Core.Prelude.mod\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The remainder that corresponds to \u003Ccode\u003Edivide\u003C/code\u003E.", "terminals": [{"name": "x", "input": "text"}, {"name": "y", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.uncurry", "name": "uncurry", "type": "CalCorePreludeuncurry", "ui": "\u003Cb\u003ECal.Core.Prelude.uncurry\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a function of 2 arguments to a function of a single pair argument.", "terminals": [{"name": "pair", "input": "text"}, {"name": "f", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.testEnumDecimalInstance", "name": "testEnumDecimalInstance", "type": "CalCorePreludetestEnumDecimalInstance", "ui": "\u003Cb\u003ECal.Core.Prelude.testEnumDecimalInstance\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToDecimalExamples", "name": "upFromThenToDecimalExamples", "type": "CalCorePreludeupFromThenToDecimalExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToDecimalExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenToDecimal", "name": "upFromThenToDecimal", "type": "CalCorePreludeupFromThenToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenDecimalExamples", "name": "upFromThenDecimalExamples", "type": "CalCorePreludeupFromThenDecimalExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenDecimalExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenDecimal", "name": "upFromThenDecimal", "type": "CalCorePreludeupFromThenDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "next", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromDecimalExamples", "name": "upFromDecimalExamples", "type": "CalCorePreludeupFromDecimalExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromDecimalExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromDecimal", "name": "upFromDecimal", "type": "CalCorePreludeupFromDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToDecimalExamples", "name": "upFromToDecimalExamples", "type": "CalCorePreludeupFromToDecimalExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToDecimalExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromToDecimal", "name": "upFromToDecimal", "type": "CalCorePreludeupFromToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByUpToDecimal", "name": "upFromByUpToDecimal", "type": "CalCorePreludeupFromByUpToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByUpToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function assumes that \u003Ccode\u003Estep \u0026gt;= 0\u003C/code\u003E", "terminals": [{"name": "step", "input": "text"}, {"name": "end", "input": "text"}, {"name": "start", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.appendOrdering", "name": "appendOrdering", "type": "CalCorePreludeappendOrdering", "ui": "\u003Cb\u003ECal.Core.Prelude.appendOrdering\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "ord1", "input": "text"}, {"name": "ord2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByDownToLong", "name": "upFromByDownToLong", "type": "CalCorePreludeupFromByDownToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByDownToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "end", "input": "text"}, {"name": "step", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isOdd", "name": "isOdd", "type": "CalCorePreludeisOdd", "ui": "\u003Cb\u003ECal.Core.Prelude.isOdd\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the argument is odd.", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromByDownToDecimal", "name": "upFromByDownToDecimal", "type": "CalCorePreludeupFromByDownToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromByDownToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "step", "input": "text"}, {"name": "end", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputListWith", "name": "outputListWith", "type": "CalCorePreludeoutputListWith", "ui": "\u003Cb\u003ECal.Core.Prelude.outputListWith\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a CAL list to a Java list using the element mapping function \u003Ccode\u003Ef\u003C/code\u003E of type \u003Ccode\u003Ea -\u0026gt; JObject\u003C/code\u003E \nto convert elements of the CAL list.", "terminals": [{"name": "list", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "f", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isListType", "name": "isListType", "type": "CalCorePreludeisListType", "ui": "\u003Cb\u003ECal.Core.Prelude.isListType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns \u003Ccode\u003ETrue\u003C/code\u003E if the runtime type representation is that of a \u003Ccode\u003EList\u003C/code\u003E and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.\n", "terminals": [{"name": "typeRep", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenBooleanExamples", "name": "upFromThenBooleanExamples", "type": "CalCorePreludeupFromThenBooleanExamples", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenBooleanExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenBoolean", "name": "upFromThenBoolean", "type": "CalCorePreludeupFromThenBoolean", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenBoolean\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "start", "input": "text"}, {"name": "next", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.repeat", "name": "repeat", "type": "CalCorePreluderepeat", "ui": "\u003Cb\u003ECal.Core.Prelude.repeat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Erepeat valueToRepeat\u003C/code\u003E returns the infinite list \u003Ccode\u003E[valueToRepeat, valueToRepeat, valueToRepeat, ...]\u003C/code\u003E.", "terminals": [{"name": "valueToRepeat", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.take", "name": "take", "type": "CalCorePreludetake", "ui": "\u003Cb\u003ECal.Core.Prelude.take\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Etake nElements list\u003C/code\u003E returns a list consisting of the first \u003Ccode\u003EnElements\u003C/code\u003E elements of \u003Ccode\u003Elist\u003C/code\u003E.\n", "terminals": [{"name": "nElements", "input": "text"}, {"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.assert", "name": "assert", "type": "CalCorePreludeassert", "ui": "\u003Cb\u003ECal.Core.Prelude.assert\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eassert\u003C/code\u003E evaluates the given expression. ", "terminals": [{"name": "expr", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeRepsToList", "name": "typeRepsToList", "type": "CalCorePreludetypeRepsToList", "ui": "\u003Cb\u003ECal.Core.Prelude.typeRepsToList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "typeReps", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subscriptTypeReps", "name": "subscriptTypeReps", "type": "CalCorePreludesubscriptTypeReps", "ui": "\u003Cb\u003ECal.Core.Prelude.subscriptTypeReps\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "typeReps", "input": "text"}, {"name": "index", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.unsafeFromCalValue", "name": "unsafeFromCalValue", "type": "CalCorePreludeunsafeFromCalValue", "ui": "\u003Cb\u003ECal.Core.Prelude.unsafeFromCalValue\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003ECalValue\u003C/code\u003E to a CAL value of type \u003Ccode\u003Ea\u003C/code\u003E. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.evaluateCalFunction", "name": "evaluateCalFunction", "type": "CalCorePreludeevaluateCalFunction", "ui": "\u003Cb\u003ECal.Core.Prelude.evaluateCalFunction\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EevaluateCalFunction func arg\u003C/code\u003E evaluates the CAL function represented by \u003Ccode\u003Efunc\u003C/code\u003E at the value \u003Ccode\u003Earg\u003C/code\u003E.", "terminals": [{"name": null, "input": "text"}, {"name": "calFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jObjectToJMap", "name": "jObjectToJMap", "type": "CalCorePreludejObjectToJMap", "ui": "\u003Cb\u003ECal.Core.Prelude.jObjectToJMap\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isJMap", "name": "isJMap", "type": "CalCorePreludeisJMap", "ui": "\u003Cb\u003ECal.Core.Prelude.isJMap\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jObjectToJList", "name": "jObjectToJList", "type": "CalCorePreludejObjectToJList", "ui": "\u003Cb\u003ECal.Core.Prelude.jObjectToJList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isJList", "name": "isJList", "type": "CalCorePreludeisJList", "ui": "\u003Cb\u003ECal.Core.Prelude.isJList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordType_sameFields", "name": "recordType_sameFields", "type": "CalCorePreluderecordType_sameFields", "ui": "\u003Cb\u003ECal.Core.Prelude.recordType_sameFields\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: \u003Ccode\u003ETrue\u003C/code\u003E if the two \u003Ccode\u003ERecordType\u003C/code\u003Es have the same set of field names (not necessarily field types).\nUsed internally to implemented \u003Ccode\u003EsameRootType\u003C/code\u003E for records.", "terminals": [{"name": "recordType", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordType_isTuple2OrMoreRecord", "name": "recordType_isTuple2OrMoreRecord", "type": "CalCorePreluderecordType_isTuple2OrMoreRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.recordType_isTuple2OrMoreRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: \u003Ccode\u003ETrue\u003C/code\u003E if the record whose type is represented by the \u003Ccode\u003ERecordType\u003C/code\u003E is a tuple with 2 or more\nfields, and \u003Ccode\u003EFalse\u003C/code\u003E otherwise.", "terminals": [{"name": "recordType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordType_getNthFieldName", "name": "recordType_getNthFieldName", "type": "CalCorePreluderecordType_getNthFieldName", "ui": "\u003Cb\u003ECal.Core.Prelude.recordType_getNthFieldName\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: The name of the nth field of the record whose type is represented by the \u003Ccode\u003ERecordType\u003C/code\u003E.", "terminals": [{"name": "recordType", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fieldNameToString", "name": "fieldNameToString", "type": "CalCorePreludefieldNameToString", "ui": "\u003Cb\u003ECal.Core.Prelude.fieldNameToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "fieldName", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordType_getNthFieldValue", "name": "recordType_getNthFieldValue", "type": "CalCorePreluderecordType_getNthFieldValue", "ui": "\u003Cb\u003ECal.Core.Prelude.recordType_getNthFieldValue\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: The nth value contained by the \u003Ccode\u003ERecordType\u003C/code\u003E object.  This will be an internal CAL value representing a function\nthat accepts a single, ignored argument and returns a \u003Ccode\u003ETypeRep\u003C/code\u003E representing the type of\nthe nth field of the record represented by the \u003Ccode\u003ERecordType\u003C/code\u003E.", "terminals": [{"name": null, "input": "text"}, {"name": "recordType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordType_getNFields", "name": "recordType_getNFields", "type": "CalCorePreluderecordType_getNFields", "ui": "\u003Cb\u003ECal.Core.Prelude.recordType_getNFields\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: The number of fields that the record represented by the \u003Ccode\u003ERecordType\u003C/code\u003E contains.", "terminals": [{"name": "recordType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.executionContext_getForeignClass", "name": "executionContext_getForeignClass", "type": "CalCorePreludeexecutionContext_getForeignClass", "ui": "\u003Cb\u003ECal.Core.Prelude.executionContext_getForeignClass\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: the Java class object corresponding to this type for a foreign type. Otherwise null.", "terminals": [{"name": "qualifiedTypeConsName", "input": "text"}, {"name": "foreignName", "input": "text"}, {"name": "executionContext", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_String", "name": "class_String", "type": "CalCorePreludeclass_String", "ui": "\u003Cb\u003ECal.Core.Prelude.class_String\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_double", "name": "class_double", "type": "CalCorePreludeclass_double", "ui": "\u003Cb\u003ECal.Core.Prelude.class_double\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_float", "name": "class_float", "type": "CalCorePreludeclass_float", "ui": "\u003Cb\u003ECal.Core.Prelude.class_float\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_long", "name": "class_long", "type": "CalCorePreludeclass_long", "ui": "\u003Cb\u003ECal.Core.Prelude.class_long\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_int", "name": "class_int", "type": "CalCorePreludeclass_int", "ui": "\u003Cb\u003ECal.Core.Prelude.class_int\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_short", "name": "class_short", "type": "CalCorePreludeclass_short", "ui": "\u003Cb\u003ECal.Core.Prelude.class_short\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_byte", "name": "class_byte", "type": "CalCorePreludeclass_byte", "ui": "\u003Cb\u003ECal.Core.Prelude.class_byte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_char", "name": "class_char", "type": "CalCorePreludeclass_char", "ui": "\u003Cb\u003ECal.Core.Prelude.class_char\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_isPrimitive", "name": "class_isPrimitive", "type": "CalCorePreludeclass_isPrimitive", "ui": "\u003Cb\u003ECal.Core.Prelude.class_isPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jClass", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.class_toString", "name": "class_toString", "type": "CalCorePreludeclass_toString", "ui": "\u003Cb\u003ECal.Core.Prelude.class_toString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jClass", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lengthTypeReps", "name": "lengthTypeReps", "type": "CalCorePreludelengthTypeReps", "ui": "\u003Cb\u003ECal.Core.Prelude.lengthTypeReps\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeRepArray_update", "name": "typeRepArray_update", "type": "CalCorePreludetypeRepArray_update", "ui": "\u003Cb\u003ECal.Core.Prelude.typeRepArray_update\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "index", "input": "text"}, {"name": "newValue", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeRepArray_subscript", "name": "typeRepArray_subscript", "type": "CalCorePreludetypeRepArray_subscript", "ui": "\u003Cb\u003ECal.Core.Prelude.typeRepArray_subscript\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "index", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeRepArray_new", "name": "typeRepArray_new", "type": "CalCorePreludetypeRepArray_new", "ui": "\u003Cb\u003ECal.Core.Prelude.typeRepArray_new\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "size", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToString", "name": "longToString", "type": "CalCorePreludelongToString", "ui": "\u003Cb\u003ECal.Core.Prelude.longToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003ELong\u003C/code\u003E value to its string representation.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToString", "name": "intToString", "type": "CalCorePreludeintToString", "ui": "\u003Cb\u003ECal.Core.Prelude.intToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EInteger\u003C/code\u003E value to its string representation.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToString", "name": "doubleToString", "type": "CalCorePreludedoubleToString", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EDouble\u003C/code\u003E value to its string representation.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jStringBuilder_toString", "name": "jStringBuilder_toString", "type": "CalCorePreludejStringBuilder_toString", "ui": "\u003Cb\u003ECal.Core.Prelude.jStringBuilder_toString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jStringBuilder", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jStringBuilder_append", "name": "jStringBuilder_append", "type": "CalCorePreludejStringBuilder_append", "ui": "\u003Cb\u003ECal.Core.Prelude.jStringBuilder_append\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "jStringBuilder", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jStringBuilder_append2", "name": "jStringBuilder_append2", "type": "CalCorePreludejStringBuilder_append2", "ui": "\u003Cb\u003ECal.Core.Prelude.jStringBuilder_append2\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "jStringBuilder", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jStringBuilder_new", "name": "jStringBuilder_new", "type": "CalCorePreludejStringBuilder_new", "ui": "\u003Cb\u003ECal.Core.Prelude.jStringBuilder_new\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.stringToDouble", "name": "stringToDouble", "type": "CalCorePreludestringToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.stringToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Parses a string representation of a double value into a \u003Ccode\u003EDouble\u003C/code\u003E value.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.stringToLongRadix", "name": "stringToLongRadix", "type": "CalCorePreludestringToLongRadix", "ui": "\u003Cb\u003ECal.Core.Prelude.stringToLongRadix\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Parses a string representation of a long integer value in the specified radix\ninto a \u003Ccode\u003ELong\u003C/code\u003E value.", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.stringToLong", "name": "stringToLong", "type": "CalCorePreludestringToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.stringToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Parses a string representation of a long integer value into a \u003Ccode\u003ELong\u003C/code\u003E value.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.stringToIntRadix", "name": "stringToIntRadix", "type": "CalCorePreludestringToIntRadix", "ui": "\u003Cb\u003ECal.Core.Prelude.stringToIntRadix\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Parses a string representation of an integer value in the specified radix\ninto an \u003Ccode\u003EInt\u003C/code\u003E value.", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.stringToInt", "name": "stringToInt", "type": "CalCorePreludestringToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.stringToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Parses a string representation of an integer value into an \u003Ccode\u003EInt\u003C/code\u003E value.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negativeInfinity", "name": "negativeInfinity", "type": "CalCorePreludenegativeInfinity", "ui": "\u003Cb\u003ECal.Core.Prelude.negativeInfinity\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The special negative infinity value for a \u003Ccode\u003EDouble\u003C/code\u003E.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.positiveInfinity", "name": "positiveInfinity", "type": "CalCorePreludepositiveInfinity", "ui": "\u003Cb\u003ECal.Core.Prelude.positiveInfinity\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The special positive infinity value for a \u003Ccode\u003EDouble\u003C/code\u003E.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isNotANumber", "name": "isNotANumber", "type": "CalCorePreludeisNotANumber", "ui": "\u003Cb\u003ECal.Core.Prelude.isNotANumber\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Checks whether a \u003Ccode\u003EDouble\u003C/code\u003E value is the special not-a-number value.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notANumber", "name": "notANumber", "type": "CalCorePreludenotANumber", "ui": "\u003Cb\u003ECal.Core.Prelude.notANumber\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The special not-a-number value for a \u003Ccode\u003EDouble\u003C/code\u003E.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList_add", "name": "jList_add", "type": "CalCorePreludejList_add", "ui": "\u003Cb\u003ECal.Core.Prelude.jList_add\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jList", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jArrayList_new", "name": "jArrayList_new", "type": "CalCorePreludejArrayList_new", "ui": "\u003Cb\u003ECal.Core.Prelude.jArrayList_new\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList7", "name": "jList7", "type": "CalCorePreludejList7", "ui": "\u003Cb\u003ECal.Core.Prelude.jList7\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e3", "input": "text"}, {"name": "e5", "input": "text"}, {"name": "e1", "input": "text"}, {"name": "e4", "input": "text"}, {"name": "e6", "input": "text"}, {"name": "e0", "input": "text"}, {"name": "e2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList6", "name": "jList6", "type": "CalCorePreludejList6", "ui": "\u003Cb\u003ECal.Core.Prelude.jList6\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e2", "input": "text"}, {"name": "e5", "input": "text"}, {"name": "e3", "input": "text"}, {"name": "e4", "input": "text"}, {"name": "e1", "input": "text"}, {"name": "e0", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList5", "name": "jList5", "type": "CalCorePreludejList5", "ui": "\u003Cb\u003ECal.Core.Prelude.jList5\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e1", "input": "text"}, {"name": "e3", "input": "text"}, {"name": "e2", "input": "text"}, {"name": "e4", "input": "text"}, {"name": "e0", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList4", "name": "jList4", "type": "CalCorePreludejList4", "ui": "\u003Cb\u003ECal.Core.Prelude.jList4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e0", "input": "text"}, {"name": "e3", "input": "text"}, {"name": "e2", "input": "text"}, {"name": "e1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList3", "name": "jList3", "type": "CalCorePreludejList3", "ui": "\u003Cb\u003ECal.Core.Prelude.jList3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e1", "input": "text"}, {"name": "e0", "input": "text"}, {"name": "e2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList2", "name": "jList2", "type": "CalCorePreludejList2", "ui": "\u003Cb\u003ECal.Core.Prelude.jList2\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e0", "input": "text"}, {"name": "e1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList1", "name": "jList1", "type": "CalCorePreludejList1", "ui": "\u003Cb\u003ECal.Core.Prelude.jList1\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e0", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jList0", "name": "jList0", "type": "CalCorePreludejList0", "ui": "\u003Cb\u003ECal.Core.Prelude.jList0\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.javaArrayToJIterator", "name": "javaArrayToJIterator", "type": "CalCorePreludejavaArrayToJIterator", "ui": "\u003Cb\u003ECal.Core.Prelude.javaArrayToJIterator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isJavaArray", "name": "isJavaArray", "type": "CalCorePreludeisJavaArray", "ui": "\u003Cb\u003ECal.Core.Prelude.isJavaArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jEnumerationToJIterator", "name": "jEnumerationToJIterator", "type": "CalCorePreludejEnumerationToJIterator", "ui": "\u003Cb\u003ECal.Core.Prelude.jEnumerationToJIterator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "e", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isJEnumeration", "name": "isJEnumeration", "type": "CalCorePreludeisJEnumeration", "ui": "\u003Cb\u003ECal.Core.Prelude.isJEnumeration\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isJIterator", "name": "isJIterator", "type": "CalCorePreludeisJIterator", "ui": "\u003Cb\u003ECal.Core.Prelude.isJIterator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.iterator_next", "name": "iterator_next", "type": "CalCorePreludeiterator_next", "ui": "\u003Cb\u003ECal.Core.Prelude.iterator_next\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jIterator", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.iterator_hasNext", "name": "iterator_hasNext", "type": "CalCorePreludeiterator_hasNext", "ui": "\u003Cb\u003ECal.Core.Prelude.iterator_hasNext\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jIterator", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.collection_iterator", "name": "collection_iterator", "type": "CalCorePreludecollection_iterator", "ui": "\u003Cb\u003ECal.Core.Prelude.collection_iterator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jCollection", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isJCollection", "name": "isJCollection", "type": "CalCorePreludeisJCollection", "ui": "\u003Cb\u003ECal.Core.Prelude.isJCollection\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputStringFromJObject", "name": "inputStringFromJObject", "type": "CalCorePreludeinputStringFromJObject", "ui": "\u003Cb\u003ECal.Core.Prelude.inputStringFromJObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.unitValue_UNIT", "name": "unitValue_UNIT", "type": "CalCorePreludeunitValue_UNIT", "ui": "\u003Cb\u003ECal.Core.Prelude.unitValue_UNIT\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputDouble", "name": "inputDouble", "type": "CalCorePreludeinputDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.inputDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"double\". \n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputDouble", "name": "outputDouble", "type": "CalCorePreludeoutputDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.outputDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"double\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputFloat", "name": "inputFloat", "type": "CalCorePreludeinputFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.inputFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"float\".\n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputFloat", "name": "outputFloat", "type": "CalCorePreludeoutputFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.outputFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"float\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputLong", "name": "inputLong", "type": "CalCorePreludeinputLong", "ui": "\u003Cb\u003ECal.Core.Prelude.inputLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"long\". \n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputLong", "name": "outputLong", "type": "CalCorePreludeoutputLong", "ui": "\u003Cb\u003ECal.Core.Prelude.outputLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"long\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputInt", "name": "inputInt", "type": "CalCorePreludeinputInt", "ui": "\u003Cb\u003ECal.Core.Prelude.inputInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"int\".\n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputInt", "name": "outputInt", "type": "CalCorePreludeoutputInt", "ui": "\u003Cb\u003ECal.Core.Prelude.outputInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"int\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputShort", "name": "inputShort", "type": "CalCorePreludeinputShort", "ui": "\u003Cb\u003ECal.Core.Prelude.inputShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"short\".\n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputShort", "name": "outputShort", "type": "CalCorePreludeoutputShort", "ui": "\u003Cb\u003ECal.Core.Prelude.outputShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"short\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputByte", "name": "inputByte", "type": "CalCorePreludeinputByte", "ui": "\u003Cb\u003ECal.Core.Prelude.inputByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"byte\".\n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputByte", "name": "outputByte", "type": "CalCorePreludeoutputByte", "ui": "\u003Cb\u003ECal.Core.Prelude.outputByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"byte\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputBoolean", "name": "inputBoolean", "type": "CalCorePreludeinputBoolean", "ui": "\u003Cb\u003ECal.Core.Prelude.inputBoolean\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"boolean\".\n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputBoolean", "name": "outputBoolean", "type": "CalCorePreludeoutputBoolean", "ui": "\u003Cb\u003ECal.Core.Prelude.outputBoolean\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"boolean\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.inputChar", "name": "inputChar", "type": "CalCorePreludeinputChar", "ui": "\u003Cb\u003ECal.Core.Prelude.inputChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Einput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EInputable\u003C/code\u003E for foreign types having implementation type \"char\".\n", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.outputChar", "name": "outputChar", "type": "CalCorePreludeoutputChar", "ui": "\u003Cb\u003ECal.Core.Prelude.outputChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used to implement the \u003Ccode\u003Eoutput\u003C/code\u003E instance function for derived instances of\n\u003Ccode\u003EOutputable\u003C/code\u003E for foreign types having implementation type \"char\".", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.internal_algebraicValue_getNthArgument", "name": "internal_algebraicValue_getNthArgument", "type": "CalCorePreludeinternal_algebraicValue_getNthArgument", "ui": "\u003Cb\u003ECal.Core.Prelude.internal_algebraicValue_getNthArgument\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function is for internal use to support derived \u003Ccode\u003EInputable\u003C/code\u003E and \u003Ccode\u003EOutputable\u003C/code\u003E instances.", "terminals": [{"name": null, "input": "text"}, {"name": "algebraicValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.internal_algebraicValue_getNArguments", "name": "internal_algebraicValue_getNArguments", "type": "CalCorePreludeinternal_algebraicValue_getNArguments", "ui": "\u003Cb\u003ECal.Core.Prelude.internal_algebraicValue_getNArguments\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function is for internal use to support derived \u003Ccode\u003EInputable\u003C/code\u003E and \u003Ccode\u003EOutputable\u003C/code\u003E instances.", "terminals": [{"name": "algebraicValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.internal_algebraicValue_getDataConstructorOrdinal", "name": "internal_algebraicValue_getDataConstructorOrdinal", "type": "CalCorePreludeinternal_algebraicValue_getDataConstructorOrdinal", "ui": "\u003Cb\u003ECal.Core.Prelude.internal_algebraicValue_getDataConstructorOrdinal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function is for internal use to support derived \u003Ccode\u003EInputable\u003C/code\u003E and \u003Ccode\u003EOutputable\u003C/code\u003E instances.", "terminals": [{"name": "algebraicValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.internal_algebraicValue_getDataConstructorName", "name": "internal_algebraicValue_getDataConstructorName", "type": "CalCorePreludeinternal_algebraicValue_getDataConstructorName", "ui": "\u003Cb\u003ECal.Core.Prelude.internal_algebraicValue_getDataConstructorName\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function is for internal use to support derived \u003Ccode\u003EInputable\u003C/code\u003E and \u003Ccode\u003EOutputable\u003C/code\u003E instances.", "terminals": [{"name": "algebraicValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.internal_algebraicValue_new1", "name": "internal_algebraicValue_new1", "type": "CalCorePreludeinternal_algebraicValue_new1", "ui": "\u003Cb\u003ECal.Core.Prelude.internal_algebraicValue_new1\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function is for internal use to support derived \u003Ccode\u003EInputable\u003C/code\u003E and \u003Ccode\u003EOutputable\u003C/code\u003E instances.", "terminals": [{"name": "argumentValue", "input": "text"}, {"name": "dataConstructorName", "input": "text"}, {"name": "dataConstructorOrdinal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.internal_algebraicValue_new0", "name": "internal_algebraicValue_new0", "type": "CalCorePreludeinternal_algebraicValue_new0", "ui": "\u003Cb\u003ECal.Core.Prelude.internal_algebraicValue_new0\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function is for internal use to support derived \u003Ccode\u003EInputable\u003C/code\u003E and \u003Ccode\u003EOutputable\u003C/code\u003E instances.", "terminals": [{"name": "dataConstructorName", "input": "text"}, {"name": "dataConstructorOrdinal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.internal_algebraicValue_new", "name": "internal_algebraicValue_new", "type": "CalCorePreludeinternal_algebraicValue_new", "ui": "\u003Cb\u003ECal.Core.Prelude.internal_algebraicValue_new\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function is for internal use to support derived \u003Ccode\u003EInputable\u003C/code\u003E and \u003Ccode\u003EOutputable\u003C/code\u003E instances.", "terminals": [{"name": "argumentValues", "input": "text"}, {"name": "dataConstructorOrdinal", "input": "text"}, {"name": "dataConstructorName", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lengthString", "name": "lengthString", "type": "CalCorePreludelengthString", "ui": "\u003Cb\u003ECal.Core.Prelude.lengthString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the length of the string. ", "terminals": [{"name": "string", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.appendString", "name": "appendString", "type": "CalCorePreludeappendString", "ui": "\u003Cb\u003ECal.Core.Prelude.appendString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "string", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jStringBuilderToString", "name": "jStringBuilderToString", "type": "CalCorePreludejStringBuilderToString", "ui": "\u003Cb\u003ECal.Core.Prelude.jStringBuilderToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jStringBuilder", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floor", "name": "floor", "type": "CalCorePreludefloor", "ui": "\u003Cb\u003ECal.Core.Prelude.floor\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the greatest integer less than or equal to \u003Ccode\u003Ex\u003C/code\u003E.", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.ceiling", "name": "ceiling", "type": "CalCorePreludeceiling", "ui": "\u003Cb\u003ECal.Core.Prelude.ceiling\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the smallest integer greater than or equal to \u003Ccode\u003Ex\u003C/code\u003E.", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.round", "name": "round", "type": "CalCorePreluderound", "ui": "\u003Cb\u003ECal.Core.Prelude.round\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Rounds a number to the nearest integer. ", "terminals": [{"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderDecimal", "name": "remainderDecimal", "type": "CalCorePreluderemainderDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jROUND_HALF_UP", "name": "jROUND_HALF_UP", "type": "CalCorePreludejROUND_HALF_UP", "ui": "\u003Cb\u003ECal.Core.Prelude.jROUND_HALF_UP\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jDivideDecimal", "name": "jDivideDecimal", "type": "CalCorePreludejDivideDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.jDivideDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "decimal", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyDecimal", "name": "multiplyDecimal", "type": "CalCorePreludemultiplyDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractDecimal", "name": "subtractDecimal", "type": "CalCorePreludesubtractDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addDecimal", "name": "addDecimal", "type": "CalCorePreludeaddDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.addDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumDecimalAsInt", "name": "signumDecimalAsInt", "type": "CalCorePreludesignumDecimalAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.signumDecimalAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absDecimal", "name": "absDecimal", "type": "CalCorePreludeabsDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.absDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateDecimal", "name": "negateDecimal", "type": "CalCorePreludenegateDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.negateDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxDecimal", "name": "maxDecimal", "type": "CalCorePreludemaxDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.maxDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minDecimal", "name": "minDecimal", "type": "CalCorePreludeminDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.minDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jCompareToDecimal", "name": "jCompareToDecimal", "type": "CalCorePreludejCompareToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.jCompareToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns -1, 0, or 1.", "terminals": [{"name": "decimal", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.stringToDecimal", "name": "stringToDecimal", "type": "CalCorePreludestringToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.stringToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Parses a string (eg. \u003Ccode\u003E\"34.33\"\u003C/code\u003E, \u003Ccode\u003E\"1.0e50000\"\u003C/code\u003E) into a \u003Ccode\u003EDecimal\u003C/code\u003E.\n", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integer_ZERO", "name": "integer_ZERO", "type": "CalCorePreludeinteger_ZERO", "ui": "\u003Cb\u003ECal.Core.Prelude.integer_ZERO\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integer_ONE", "name": "integer_ONE", "type": "CalCorePreludeinteger_ONE", "ui": "\u003Cb\u003ECal.Core.Prelude.integer_ONE\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToString", "name": "integerToString", "type": "CalCorePreludeintegerToString", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInteger\u003C/code\u003E value to its string representation.", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.powerInteger", "name": "powerInteger", "type": "CalCorePreludepowerInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.powerInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the result of raising the first argument to the power specified by the second argument.", "terminals": [{"name": "integer", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderInteger", "name": "remainderInteger", "type": "CalCorePreluderemainderInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideInteger", "name": "divideInteger", "type": "CalCorePreludedivideInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.divideInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyInteger", "name": "multiplyInteger", "type": "CalCorePreludemultiplyInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractInteger", "name": "subtractInteger", "type": "CalCorePreludesubtractInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addInteger", "name": "addInteger", "type": "CalCorePreludeaddInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.addInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateInteger", "name": "negateInteger", "type": "CalCorePreludenegateInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.negateInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.stringToInteger", "name": "stringToInteger", "type": "CalCorePreludestringToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.stringToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Parses a string representation of an integer into an \u003Ccode\u003EInteger\u003C/code\u003E value.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumIntegerAsInt", "name": "signumIntegerAsInt", "type": "CalCorePreludesignumIntegerAsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.signumIntegerAsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absInteger", "name": "absInteger", "type": "CalCorePreludeabsInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.absInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minInteger", "name": "minInteger", "type": "CalCorePreludeminInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.minInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxInteger", "name": "maxInteger", "type": "CalCorePreludemaxInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.maxInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jCompareInteger", "name": "jCompareInteger", "type": "CalCorePreludejCompareInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.jCompareInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absLong", "name": "absLong", "type": "CalCorePreludeabsLong", "ui": "\u003Cb\u003ECal.Core.Prelude.absLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minLong", "name": "minLong", "type": "CalCorePreludeminLong", "ui": "\u003Cb\u003ECal.Core.Prelude.minLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxLong", "name": "maxLong", "type": "CalCorePreludemaxLong", "ui": "\u003Cb\u003ECal.Core.Prelude.maxLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumDouble", "name": "signumDouble", "type": "CalCorePreludesignumDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.signumDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] There are some tricky aspects here in how NaN and -0 are handled.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absDouble", "name": "absDouble", "type": "CalCorePreludeabsDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.absDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minDouble", "name": "minDouble", "type": "CalCorePreludeminDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.minDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxDouble", "name": "maxDouble", "type": "CalCorePreludemaxDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.maxDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jCompareDouble", "name": "jCompareDouble", "type": "CalCorePreludejCompareDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.jCompareDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signumFloat", "name": "signumFloat", "type": "CalCorePreludesignumFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.signumFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absFloat", "name": "absFloat", "type": "CalCorePreludeabsFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.absFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minFloat", "name": "minFloat", "type": "CalCorePreludeminFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.minFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxFloat", "name": "maxFloat", "type": "CalCorePreludemaxFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.maxFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jCompareFloat", "name": "jCompareFloat", "type": "CalCorePreludejCompareFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.jCompareFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.absInt", "name": "absInt", "type": "CalCorePreludeabsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.absInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minInt", "name": "minInt", "type": "CalCorePreludeminInt", "ui": "\u003Cb\u003ECal.Core.Prelude.minInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxInt", "name": "maxInt", "type": "CalCorePreludemaxInt", "ui": "\u003Cb\u003ECal.Core.Prelude.maxInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jComparableToJObject", "name": "jComparableToJObject", "type": "CalCorePreludejComparableToJObject", "ui": "\u003Cb\u003ECal.Core.Prelude.jComparableToJObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.jCompareComparableHelper", "name": "jCompareComparableHelper", "type": "CalCorePreludejCompareComparableHelper", "ui": "\u003Cb\u003ECal.Core.Prelude.jCompareComparableHelper\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "jComparable", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsObject", "name": "equalsObject", "type": "CalCorePreludeequalsObject", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "jObject", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.orderingValue_toInt", "name": "orderingValue_toInt", "type": "CalCorePreludeorderingValue_toInt", "ui": "\u003Cb\u003ECal.Core.Prelude.orderingValue_toInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jOrderingValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.orderingValue_GT", "name": "orderingValue_GT", "type": "CalCorePreludeorderingValue_GT", "ui": "\u003Cb\u003ECal.Core.Prelude.orderingValue_GT\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.orderingValue_EQ", "name": "orderingValue_EQ", "type": "CalCorePreludeorderingValue_EQ", "ui": "\u003Cb\u003ECal.Core.Prelude.orderingValue_EQ\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.orderingValue_LT", "name": "orderingValue_LT", "type": "CalCorePreludeorderingValue_LT", "ui": "\u003Cb\u003ECal.Core.Prelude.orderingValue_LT\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.eitherValue_getValueField", "name": "eitherValue_getValueField", "type": "CalCorePreludeeitherValue_getValueField", "ui": "\u003Cb\u003ECal.Core.Prelude.eitherValue_getValueField\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jEitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.eitherValue_isLeft", "name": "eitherValue_isLeft", "type": "CalCorePreludeeitherValue_isLeft", "ui": "\u003Cb\u003ECal.Core.Prelude.eitherValue_isLeft\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jEitherValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.eitherValue_makeRight", "name": "eitherValue_makeRight", "type": "CalCorePreludeeitherValue_makeRight", "ui": "\u003Cb\u003ECal.Core.Prelude.eitherValue_makeRight\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.eitherValue_makeLeft", "name": "eitherValue_makeLeft", "type": "CalCorePreludeeitherValue_makeLeft", "ui": "\u003Cb\u003ECal.Core.Prelude.eitherValue_makeLeft\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maybeValue_getValueField", "name": "maybeValue_getValueField", "type": "CalCorePreludemaybeValue_getValueField", "ui": "\u003Cb\u003ECal.Core.Prelude.maybeValue_getValueField\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jMaybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maybeValue_isNothing", "name": "maybeValue_isNothing", "type": "CalCorePreludemaybeValue_isNothing", "ui": "\u003Cb\u003ECal.Core.Prelude.maybeValue_isNothing\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jMaybeValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maybeValue_makeJust", "name": "maybeValue_makeJust", "type": "CalCorePreludemaybeValue_makeJust", "ui": "\u003Cb\u003ECal.Core.Prelude.maybeValue_makeJust\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maybeValue_makeNothing", "name": "maybeValue_makeNothing", "type": "CalCorePreludemaybeValue_makeNothing", "ui": "\u003Cb\u003ECal.Core.Prelude.maybeValue_makeNothing\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToDecimal", "name": "decimalToDecimal", "type": "CalCorePreludedecimalToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToInteger", "name": "decimalToInteger", "type": "CalCorePreludedecimalToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToDouble", "name": "decimalToDouble", "type": "CalCorePreludedecimalToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Attempts to convert a \u003Ccode\u003EDecimal\u003C/code\u003E value to the nearest \u003Ccode\u003EDouble\u003C/code\u003E value.\n", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToFloat", "name": "decimalToFloat", "type": "CalCorePreludedecimalToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToLong", "name": "decimalToLong", "type": "CalCorePreludedecimalToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToInt", "name": "decimalToInt", "type": "CalCorePreludedecimalToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToShort", "name": "decimalToShort", "type": "CalCorePreludedecimalToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.decimalToByte", "name": "decimalToByte", "type": "CalCorePreludedecimalToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.decimalToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "decimal", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToDecimal", "name": "integerToDecimal", "type": "CalCorePreludeintegerToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInteger\u003C/code\u003E value to the equivalent \u003Ccode\u003EDecimal\u003C/code\u003E value.\n", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToInteger", "name": "integerToInteger", "type": "CalCorePreludeintegerToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToDouble", "name": "integerToDouble", "type": "CalCorePreludeintegerToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToFloat", "name": "integerToFloat", "type": "CalCorePreludeintegerToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToLong", "name": "integerToLong", "type": "CalCorePreludeintegerToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInteger\u003C/code\u003E value to the corresponding \u003Ccode\u003ELong\u003C/code\u003E value.", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToInt", "name": "integerToInt", "type": "CalCorePreludeintegerToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInteger\u003C/code\u003E value to the corresponding \u003Ccode\u003EInt\u003C/code\u003E value.", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToShort", "name": "integerToShort", "type": "CalCorePreludeintegerToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.integerToByte", "name": "integerToByte", "type": "CalCorePreludeintegerToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.integerToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "integer", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToDecimal", "name": "doubleToDecimal", "type": "CalCorePreludedoubleToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EDouble\u003C/code\u003E value to the equivalent \u003Ccode\u003EDecimal\u003C/code\u003E value.\n", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToDouble", "name": "doubleToDouble", "type": "CalCorePreludedoubleToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToFloat", "name": "doubleToFloat", "type": "CalCorePreludedoubleToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToLong", "name": "doubleToLong", "type": "CalCorePreludedoubleToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToInt", "name": "doubleToInt", "type": "CalCorePreludedoubleToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToChar", "name": "doubleToChar", "type": "CalCorePreludedoubleToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToShort", "name": "doubleToShort", "type": "CalCorePreludedoubleToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.doubleToByte", "name": "doubleToByte", "type": "CalCorePreludedoubleToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.doubleToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToDouble", "name": "floatToDouble", "type": "CalCorePreludefloatToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToFloat", "name": "floatToFloat", "type": "CalCorePreludefloatToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToLong", "name": "floatToLong", "type": "CalCorePreludefloatToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToInt", "name": "floatToInt", "type": "CalCorePreludefloatToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToChar", "name": "floatToChar", "type": "CalCorePreludefloatToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToShort", "name": "floatToShort", "type": "CalCorePreludefloatToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.floatToByte", "name": "floatToByte", "type": "CalCorePreludefloatToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.floatToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToDecimal", "name": "longToDecimal", "type": "CalCorePreludelongToDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.longToDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToInteger", "name": "longToInteger", "type": "CalCorePreludelongToInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.longToInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003ELong\u003C/code\u003E value to the corresponding \u003Ccode\u003EInteger\u003C/code\u003E value.", "terminals": [{"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToDouble", "name": "longToDouble", "type": "CalCorePreludelongToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.longToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToFloat", "name": "longToFloat", "type": "CalCorePreludelongToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.longToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToLong", "name": "longToLong", "type": "CalCorePreludelongToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.longToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToInt", "name": "longToInt", "type": "CalCorePreludelongToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.longToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToChar", "name": "longToChar", "type": "CalCorePreludelongToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.longToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToShort", "name": "longToShort", "type": "CalCorePreludelongToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.longToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.longToByte", "name": "longToByte", "type": "CalCorePreludelongToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.longToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToDouble", "name": "intToDouble", "type": "CalCorePreludeintToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.intToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToFloat", "name": "intToFloat", "type": "CalCorePreludeintToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.intToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToLong", "name": "intToLong", "type": "CalCorePreludeintToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.intToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToInt", "name": "intToInt", "type": "CalCorePreludeintToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.intToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToChar", "name": "intToChar", "type": "CalCorePreludeintToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.intToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToShort", "name": "intToShort", "type": "CalCorePreludeintToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.intToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToByte", "name": "intToByte", "type": "CalCorePreludeintToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.intToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charToDouble", "name": "charToDouble", "type": "CalCorePreludecharToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.charToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charToFloat", "name": "charToFloat", "type": "CalCorePreludecharToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.charToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charToLong", "name": "charToLong", "type": "CalCorePreludecharToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.charToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charToInt", "name": "charToInt", "type": "CalCorePreludecharToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.charToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charToChar", "name": "charToChar", "type": "CalCorePreludecharToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.charToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charToShort", "name": "charToShort", "type": "CalCorePreludecharToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.charToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.charToByte", "name": "charToByte", "type": "CalCorePreludecharToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.charToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToDouble", "name": "shortToDouble", "type": "CalCorePreludeshortToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToFloat", "name": "shortToFloat", "type": "CalCorePreludeshortToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToLong", "name": "shortToLong", "type": "CalCorePreludeshortToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToInt", "name": "shortToInt", "type": "CalCorePreludeshortToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToChar", "name": "shortToChar", "type": "CalCorePreludeshortToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToShort", "name": "shortToShort", "type": "CalCorePreludeshortToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.shortToByte", "name": "shortToByte", "type": "CalCorePreludeshortToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.shortToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToDouble", "name": "byteToDouble", "type": "CalCorePreludebyteToDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToFloat", "name": "byteToFloat", "type": "CalCorePreludebyteToFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToLong", "name": "byteToLong", "type": "CalCorePreludebyteToLong", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToInt", "name": "byteToInt", "type": "CalCorePreludebyteToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToShort", "name": "byteToShort", "type": "CalCorePreludebyteToShort", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToChar", "name": "byteToChar", "type": "CalCorePreludebyteToChar", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.byteToByte", "name": "byteToByte", "type": "CalCorePreludebyteToByte", "ui": "\u003Cb\u003ECal.Core.Prelude.byteToByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.executionContext", "name": "executionContext", "type": "CalCorePreludeexecutionContext", "ui": "\u003Cb\u003ECal.Core.Prelude.executionContext\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: the ExecutionContext that executed this call. Not a pure function.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.ordinalValue", "name": "ordinalValue", "type": "CalCorePreludeordinalValue", "ui": "\u003Cb\u003ECal.Core.Prelude.ordinalValue\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function should remain private. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.makeCalFunction", "name": "makeCalFunction", "type": "CalCorePreludemakeCalFunction", "ui": "\u003Cb\u003ECal.Core.Prelude.makeCalFunction\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a \u003Ccode\u003ECalFunction\u003C/code\u003E value from a CAL function of type \u003Ccode\u003EJObject -\u0026gt; JObject\u003C/code\u003E.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.makeEquivalenceRelation", "name": "makeEquivalenceRelation", "type": "CalCorePreludemakeEquivalenceRelation", "ui": "\u003Cb\u003ECal.Core.Prelude.makeEquivalenceRelation\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.makeComparator", "name": "makeComparator", "type": "CalCorePreludemakeComparator", "ui": "\u003Cb\u003ECal.Core.Prelude.makeComparator\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Makes a comparator that uses the ordering function argument to implement the Java comparator's compare method.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.objectToCalValue", "name": "objectToCalValue", "type": "CalCorePreludeobjectToCalValue", "ui": "\u003Cb\u003ECal.Core.Prelude.objectToCalValue\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: checks that \u003Ccode\u003Eobject\u003C/code\u003E is indeed a handle to a \u003Ccode\u003ECalValue\u003C/code\u003E and then returns the underlying CAL value\nevaluating it to weak-head normal form.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.calValueToObject", "name": "calValueToObject", "type": "CalCorePreludecalValueToObject", "ui": "\u003Cb\u003ECal.Core.Prelude.calValueToObject\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: converts the \u003Ccode\u003EcalValue\u003C/code\u003E argument into a Java object that is suitable for external Java clients to use as a handle to the\n\u003Ccode\u003EcalValue\u003C/code\u003E. The \u003Ccode\u003EcalValue\u003C/code\u003E argument itself is not evaluated to weak-head normal form.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordToJListPrimitive", "name": "recordToJListPrimitive", "type": "CalCorePreluderecordToJListPrimitive", "ui": "\u003Cb\u003ECal.Core.Prelude.recordToJListPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns a \u003Ccode\u003Ejava.util.List\u003C/code\u003E value whose elements are obtained by applying \u003Ccode\u003Einput\u003C/code\u003E to each field in the CAL record \nin field-name order. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordFromJMapPrimitive", "name": "recordFromJMapPrimitive", "type": "CalCorePreluderecordFromJMapPrimitive", "ui": "\u003Cb\u003ECal.Core.Prelude.recordFromJMapPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The CAL record obtained by applying \u003Ccode\u003Einput\u003C/code\u003E to each value of the Java map from \u003Ccode\u003Eorg.openquark.cal.compiler.FieldName\u003C/code\u003E\nto \u003Ccode\u003Ejava.lang.Object\u003C/code\u003E. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordFromJListPrimitive", "name": "recordFromJListPrimitive", "type": "CalCorePreluderecordFromJListPrimitive", "ui": "\u003Cb\u003ECal.Core.Prelude.recordFromJListPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The CAL record obtained by applying \u003Ccode\u003Einput\u003C/code\u003E to each element of the Java list. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compareRecord", "name": "compareRecord", "type": "CalCorePreludecompareRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.compareRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: comparison using field-name ordering.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsRecord", "name": "notEqualsRecord", "type": "CalCorePreludenotEqualsRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsRecord", "name": "equalsRecord", "type": "CalCorePreludeequalsRecord", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsRecord\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.recordTypeDictionary", "name": "recordTypeDictionary", "type": "CalCorePreluderecordTypeDictionary", "ui": "\u003Cb\u003ECal.Core.Prelude.recordTypeDictionary\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts the machine-internal type dictionary from a record.  ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.unsafeCoerce", "name": "unsafeCoerce", "type": "CalCorePreludeunsafeCoerce", "ui": "\u003Cb\u003ECal.Core.Prelude.unsafeCoerce\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EunsafeCoerce\u003C/code\u003E is equivalent to the identity function operationally.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.error", "name": "error", "type": "CalCorePreludeerror", "ui": "\u003Cb\u003ECal.Core.Prelude.error\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003Eerror\u003C/code\u003E function will cause execution to stop immediately. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.eager", "name": "eager", "type": "CalCorePreludeeager", "ui": "\u003Cb\u003ECal.Core.Prelude.eager\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eeager\u003C/code\u003E is used to force a strict evaluation of its argument to weak-head normal form.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.deepSeq", "name": "deepSeq", "type": "CalCorePreludedeepSeq", "ui": "\u003Cb\u003ECal.Core.Prelude.deepSeq\u003C/b\u003E\u003Cbr/\u003E[CALDoc] The \u003Ccode\u003EdeepSeq\u003C/code\u003E function is similar to the \u003Ccode\u003Eseq\u003C/code\u003E function, except that \u003Ccode\u003EdeepSeq x y\u003C/code\u003E evaluates the\nargument \u003Ccode\u003Ex\u003C/code\u003E to normal form (instead of weak head normal form). ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.seq", "name": "seq", "type": "CalCorePreludeseq", "ui": "\u003Cb\u003ECal.Core.Prelude.seq\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eseq\u003C/code\u003E is a primitive function used to explicitly control the order of evaluation of CAL.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanChar", "name": "greaterThanChar", "type": "CalCorePreludegreaterThanChar", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsChar", "name": "greaterThanEqualsChar", "type": "CalCorePreludegreaterThanEqualsChar", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsChar", "name": "lessThanEqualsChar", "type": "CalCorePreludelessThanEqualsChar", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanChar", "name": "lessThanChar", "type": "CalCorePreludelessThanChar", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsChar", "name": "notEqualsChar", "type": "CalCorePreludenotEqualsChar", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsChar", "name": "equalsChar", "type": "CalCorePreludeequalsChar", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsChar\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanByte", "name": "greaterThanByte", "type": "CalCorePreludegreaterThanByte", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsByte", "name": "greaterThanEqualsByte", "type": "CalCorePreludegreaterThanEqualsByte", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsByte", "name": "lessThanEqualsByte", "type": "CalCorePreludelessThanEqualsByte", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanByte", "name": "lessThanByte", "type": "CalCorePreludelessThanByte", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsByte", "name": "notEqualsByte", "type": "CalCorePreludenotEqualsByte", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsByte", "name": "equalsByte", "type": "CalCorePreludeequalsByte", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanShort", "name": "greaterThanShort", "type": "CalCorePreludegreaterThanShort", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsShort", "name": "greaterThanEqualsShort", "type": "CalCorePreludegreaterThanEqualsShort", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsShort", "name": "lessThanEqualsShort", "type": "CalCorePreludelessThanEqualsShort", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanShort", "name": "lessThanShort", "type": "CalCorePreludelessThanShort", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsShort", "name": "notEqualsShort", "type": "CalCorePreludenotEqualsShort", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsShort", "name": "equalsShort", "type": "CalCorePreludeequalsShort", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderLong", "name": "remainderLong", "type": "CalCorePreluderemainderLong", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateLong", "name": "negateLong", "type": "CalCorePreludenegateLong", "ui": "\u003Cb\u003ECal.Core.Prelude.negateLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideLong", "name": "divideLong", "type": "CalCorePreludedivideLong", "ui": "\u003Cb\u003ECal.Core.Prelude.divideLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyLong", "name": "multiplyLong", "type": "CalCorePreludemultiplyLong", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractLong", "name": "subtractLong", "type": "CalCorePreludesubtractLong", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addLong", "name": "addLong", "type": "CalCorePreludeaddLong", "ui": "\u003Cb\u003ECal.Core.Prelude.addLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanLong", "name": "greaterThanLong", "type": "CalCorePreludegreaterThanLong", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsLong", "name": "greaterThanEqualsLong", "type": "CalCorePreludegreaterThanEqualsLong", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsLong", "name": "lessThanEqualsLong", "type": "CalCorePreludelessThanEqualsLong", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanLong", "name": "lessThanLong", "type": "CalCorePreludelessThanLong", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsLong", "name": "notEqualsLong", "type": "CalCorePreludenotEqualsLong", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsLong", "name": "equalsLong", "type": "CalCorePreludeequalsLong", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderFloat", "name": "remainderFloat", "type": "CalCorePreluderemainderFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateFloat", "name": "negateFloat", "type": "CalCorePreludenegateFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.negateFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideFloat", "name": "divideFloat", "type": "CalCorePreludedivideFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.divideFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyFloat", "name": "multiplyFloat", "type": "CalCorePreludemultiplyFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractFloat", "name": "subtractFloat", "type": "CalCorePreludesubtractFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addFloat", "name": "addFloat", "type": "CalCorePreludeaddFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.addFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanFloat", "name": "greaterThanFloat", "type": "CalCorePreludegreaterThanFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsFloat", "name": "greaterThanEqualsFloat", "type": "CalCorePreludegreaterThanEqualsFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsFloat", "name": "lessThanEqualsFloat", "type": "CalCorePreludelessThanEqualsFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanFloat", "name": "lessThanFloat", "type": "CalCorePreludelessThanFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsFloat", "name": "notEqualsFloat", "type": "CalCorePreludenotEqualsFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsFloat", "name": "equalsFloat", "type": "CalCorePreludeequalsFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderDouble", "name": "remainderDouble", "type": "CalCorePreluderemainderDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateDouble", "name": "negateDouble", "type": "CalCorePreludenegateDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.negateDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideDouble", "name": "divideDouble", "type": "CalCorePreludedivideDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.divideDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyDouble", "name": "multiplyDouble", "type": "CalCorePreludemultiplyDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractDouble", "name": "subtractDouble", "type": "CalCorePreludesubtractDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addDouble", "name": "addDouble", "type": "CalCorePreludeaddDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.addDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanDouble", "name": "greaterThanDouble", "type": "CalCorePreludegreaterThanDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsDouble", "name": "greaterThanEqualsDouble", "type": "CalCorePreludegreaterThanEqualsDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsDouble", "name": "lessThanEqualsDouble", "type": "CalCorePreludelessThanEqualsDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanDouble", "name": "lessThanDouble", "type": "CalCorePreludelessThanDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsDouble", "name": "notEqualsDouble", "type": "CalCorePreludenotEqualsDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsDouble", "name": "equalsDouble", "type": "CalCorePreludeequalsDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainderInt", "name": "remainderInt", "type": "CalCorePreluderemainderInt", "ui": "\u003Cb\u003ECal.Core.Prelude.remainderInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negateInt", "name": "negateInt", "type": "CalCorePreludenegateInt", "ui": "\u003Cb\u003ECal.Core.Prelude.negateInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divideInt", "name": "divideInt", "type": "CalCorePreludedivideInt", "ui": "\u003Cb\u003ECal.Core.Prelude.divideInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiplyInt", "name": "multiplyInt", "type": "CalCorePreludemultiplyInt", "ui": "\u003Cb\u003ECal.Core.Prelude.multiplyInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtractInt", "name": "subtractInt", "type": "CalCorePreludesubtractInt", "ui": "\u003Cb\u003ECal.Core.Prelude.subtractInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.addInt", "name": "addInt", "type": "CalCorePreludeaddInt", "ui": "\u003Cb\u003ECal.Core.Prelude.addInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanInt", "name": "greaterThanInt", "type": "CalCorePreludegreaterThanInt", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEqualsInt", "name": "greaterThanEqualsInt", "type": "CalCorePreludegreaterThanEqualsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEqualsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEqualsInt", "name": "lessThanEqualsInt", "type": "CalCorePreludelessThanEqualsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEqualsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanInt", "name": "lessThanInt", "type": "CalCorePreludelessThanInt", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEqualsInt", "name": "notEqualsInt", "type": "CalCorePreludenotEqualsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.notEqualsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equalsInt", "name": "equalsInt", "type": "CalCorePreludeequalsInt", "ui": "\u003Cb\u003ECal.Core.Prelude.equalsInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] equalsInt is used to define the instance method equals for derived Eq instances\nfor foreign types where the underlying Java type is the primitive type \"int\".\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.False", "name": "False", "type": "CalCorePreludeFalse", "ui": "\u003Cb\u003ECal.Core.Prelude.False\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.True", "name": "True", "type": "CalCorePreludeTrue", "ui": "\u003Cb\u003ECal.Core.Prelude.True\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.Nil", "name": "Nil", "type": "CalCorePreludeNil", "ui": "\u003Cb\u003ECal.Core.Prelude.Nil\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.Cons", "name": "Cons", "type": "CalCorePreludeCons", "ui": "\u003Cb\u003ECal.Core.Prelude.Cons\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "head", "input": "text"}, {"name": "tail", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.Unit", "name": "Unit", "type": "CalCorePreludeUnit", "ui": "\u003Cb\u003ECal.Core.Prelude.Unit\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.Nothing", "name": "Nothing", "type": "CalCorePreludeNothing", "ui": "\u003Cb\u003ECal.Core.Prelude.Nothing\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A data constructor which represents the fact that a value was not supplied.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.Just", "name": "Just", "type": "CalCorePreludeJust", "ui": "\u003Cb\u003ECal.Core.Prelude.Just\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A data constructor which represents the fact that a value was supplied.", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.Left", "name": "Left", "type": "CalCorePreludeLeft", "ui": "\u003Cb\u003ECal.Core.Prelude.Left\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A data constructor that represents a value of the first of two possible types.", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.Right", "name": "Right", "type": "CalCorePreludeRight", "ui": "\u003Cb\u003ECal.Core.Prelude.Right\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A data constructor that represents a value of the second of two possible types.", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.LT", "name": "LT", "type": "CalCorePreludeLT", "ui": "\u003Cb\u003ECal.Core.Prelude.LT\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A data constructor that represents the ordering relationship of \"less than\".", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.EQ", "name": "EQ", "type": "CalCorePreludeEQ", "ui": "\u003Cb\u003ECal.Core.Prelude.EQ\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A data constructor that represents the ordering relationship of \"equal to\".", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.GT", "name": "GT", "type": "CalCorePreludeGT", "ui": "\u003Cb\u003ECal.Core.Prelude.GT\u003C/b\u003E\u003Cbr/\u003E[CALDoc] A data constructor that represents the ordering relationship of \"greater than\".", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.AlgebraicTypeRep", "name": "AlgebraicTypeRep", "type": "CalCorePreludeAlgebraicTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.AlgebraicTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for algebraic type constructors not supported via special TypeRep data constructors.", "terminals": [{"name": "typeConsName", "input": "text"}, {"name": "argTypes", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.ForeignTypeRep", "name": "ForeignTypeRep", "type": "CalCorePreludeForeignTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.ForeignTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for foreign types i.e. the implementation type is a Java object type or a Java primitive\ntype. ", "terminals": [{"name": "typeConsName", "input": "text"}, {"name": "foreignClass", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.RecordTypeRep", "name": "RecordTypeRep", "type": "CalCorePreludeRecordTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.RecordTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for representing records.", "terminals": [{"name": "dictionary", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.FunctionTypeRep", "name": "FunctionTypeRep", "type": "CalCorePreludeFunctionTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.FunctionTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Function\u003C/code\u003E type constructor \"-\u0026gt;\" when fully saturated.", "terminals": [{"name": "codomainType", "input": "text"}, {"name": "domainType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.ListTypeRep", "name": "ListTypeRep", "type": "CalCorePreludeListTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.ListTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.List\u003C/code\u003E type constructor when fully saturated.", "terminals": [{"name": "elementType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.UnitTypeRep", "name": "UnitTypeRep", "type": "CalCorePreludeUnitTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.UnitTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Unit\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003E()\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.BooleanTypeRep", "name": "BooleanTypeRep", "type": "CalCorePreludeBooleanTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.BooleanTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EBoolean\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EBoolean\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.IntTypeRep", "name": "IntTypeRep", "type": "CalCorePreludeIntTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.IntTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Int\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EInt\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.ByteTypeRep", "name": "ByteTypeRep", "type": "CalCorePreludeByteTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.ByteTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Byte\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EByte\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.ShortTypeRep", "name": "ShortTypeRep", "type": "CalCorePreludeShortTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.ShortTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Short\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EShort\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.LongTypeRep", "name": "LongTypeRep", "type": "CalCorePreludeLongTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.LongTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Long\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003ELong\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.FloatTypeRep", "name": "FloatTypeRep", "type": "CalCorePreludeFloatTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.FloatTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Float\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EFloat\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.DoubleTypeRep", "name": "DoubleTypeRep", "type": "CalCorePreludeDoubleTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.DoubleTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Double\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EDouble\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.CharTypeRep", "name": "CharTypeRep", "type": "CalCorePreludeCharTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.CharTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.Char\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EChar\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.StringTypeRep", "name": "StringTypeRep", "type": "CalCorePreludeStringTypeRep", "ui": "\u003Cb\u003ECal.Core.Prelude.StringTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for the \u003Ccode\u003EPrelude.String\u003C/code\u003E type constructor.\nrepresentation of the \u003Ccode\u003EString\u003C/code\u003E type", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.minBound", "name": "minBound", "type": "CalCorePreludeminBound", "ui": "\u003Cb\u003ECal.Core.Prelude.minBound\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: the minimum bound of the instance type.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.maxBound", "name": "maxBound", "type": "CalCorePreludemaxBound", "ui": "\u003Cb\u003ECal.Core.Prelude.maxBound\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: the maximum bound of the instance type.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.equals", "name": "equals", "type": "CalCorePreludeequals", "ui": "\u003Cb\u003ECal.Core.Prelude.equals\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the two arguments are equal.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.notEquals", "name": "notEquals", "type": "CalCorePreludenotEquals", "ui": "\u003Cb\u003ECal.Core.Prelude.notEquals\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the two arguments not equal.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThan", "name": "lessThan", "type": "CalCorePreludelessThan", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThan\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the first argument is less than the second argument.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.lessThanEquals", "name": "lessThanEquals", "type": "CalCorePreludelessThanEquals", "ui": "\u003Cb\u003ECal.Core.Prelude.lessThanEquals\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the first argument is less than or equal to the second argument.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThanEquals", "name": "greaterThanEquals", "type": "CalCorePreludegreaterThanEquals", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThanEquals\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the first argument is greater than or equal to the second argument.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.greaterThan", "name": "greaterThan", "type": "CalCorePreludegreaterThan", "ui": "\u003Cb\u003ECal.Core.Prelude.greaterThan\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the first argument is greater than the second argument.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.compare", "name": "compare", "type": "CalCorePreludecompare", "ui": "\u003Cb\u003ECal.Core.Prelude.compare\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns an \u003Ccode\u003EOrdering\u003C/code\u003E based on how the first argument compares to the second argument.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.max", "name": "max", "type": "CalCorePreludemax", "ui": "\u003Cb\u003ECal.Core.Prelude.max\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Given the two arguments, returns the value that is the greater of the two.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.min", "name": "min", "type": "CalCorePreludemin", "ui": "\u003Cb\u003ECal.Core.Prelude.min\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Given the two arguments, returns the value that is the lesser of the two.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.negate", "name": "negate", "type": "CalCorePreludenegate", "ui": "\u003Cb\u003ECal.Core.Prelude.negate\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Negates the given number.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.add", "name": "add", "type": "CalCorePreludeadd", "ui": "\u003Cb\u003ECal.Core.Prelude.add\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the sum of two numbers.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.subtract", "name": "subtract", "type": "CalCorePreludesubtract", "ui": "\u003Cb\u003ECal.Core.Prelude.subtract\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the result of subtracting the second number from the first number.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.multiply", "name": "multiply", "type": "CalCorePreludemultiply", "ui": "\u003Cb\u003ECal.Core.Prelude.multiply\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the product of two numbers.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.divide", "name": "divide", "type": "CalCorePreludedivide", "ui": "\u003Cb\u003ECal.Core.Prelude.divide\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the result of dividing the first number by the second number.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.remainder", "name": "remainder", "type": "CalCorePreluderemainder", "ui": "\u003Cb\u003ECal.Core.Prelude.remainder\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the remainder from division.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.abs", "name": "abs", "type": "CalCorePreludeabs", "ui": "\u003Cb\u003ECal.Core.Prelude.abs\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the absolute value of the given number.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.signum", "name": "signum", "type": "CalCorePreludesignum", "ui": "\u003Cb\u003ECal.Core.Prelude.signum\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the sign of the given number.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromByte", "name": "fromByte", "type": "CalCorePreludefromByte", "ui": "\u003Cb\u003ECal.Core.Prelude.fromByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EByte\u003C/code\u003E value to the corresponding value in a type that is an instance of \u003Ccode\u003ENum\u003C/code\u003E.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromShort", "name": "fromShort", "type": "CalCorePreludefromShort", "ui": "\u003Cb\u003ECal.Core.Prelude.fromShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EShort\u003C/code\u003E value to the corresponding value in a type that is an instance of \u003Ccode\u003ENum\u003C/code\u003E.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromInt", "name": "fromInt", "type": "CalCorePreludefromInt", "ui": "\u003Cb\u003ECal.Core.Prelude.fromInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInt\u003C/code\u003E value to the corresponding value in a type that is an instance of \u003Ccode\u003ENum\u003C/code\u003E.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromLong", "name": "fromLong", "type": "CalCorePreludefromLong", "ui": "\u003Cb\u003ECal.Core.Prelude.fromLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003ELong\u003C/code\u003E value to the corresponding value in a type that is an instance of \u003Ccode\u003ENum\u003C/code\u003E.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromFloat", "name": "fromFloat", "type": "CalCorePreludefromFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.fromFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EFloat\u003C/code\u003E value to the corresponding value in a type that is an instance of \u003Ccode\u003ENum\u003C/code\u003E.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromDouble", "name": "fromDouble", "type": "CalCorePreludefromDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.fromDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EDouble\u003C/code\u003E value to the corresponding value in a type that is an instance of \u003Ccode\u003ENum\u003C/code\u003E.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromInteger", "name": "fromInteger", "type": "CalCorePreludefromInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.fromInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInteger\u003C/code\u003E value to a value of the instance type.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.fromDecimal", "name": "fromDecimal", "type": "CalCorePreludefromDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.fromDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EDecimal\u003C/code\u003E value to a value of the instance type.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toByte", "name": "toByte", "type": "CalCorePreludetoByte", "ui": "\u003Cb\u003ECal.Core.Prelude.toByte\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to a \u003Ccode\u003EByte\u003C/code\u003E value.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toShort", "name": "toShort", "type": "CalCorePreludetoShort", "ui": "\u003Cb\u003ECal.Core.Prelude.toShort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to a \u003Ccode\u003EShort\u003C/code\u003E value.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toInt", "name": "toInt", "type": "CalCorePreludetoInt", "ui": "\u003Cb\u003ECal.Core.Prelude.toInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to an \u003Ccode\u003EInt\u003C/code\u003E value.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toLong", "name": "toLong", "type": "CalCorePreludetoLong", "ui": "\u003Cb\u003ECal.Core.Prelude.toLong\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to a \u003Ccode\u003ELong\u003C/code\u003E value.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toFloat", "name": "toFloat", "type": "CalCorePreludetoFloat", "ui": "\u003Cb\u003ECal.Core.Prelude.toFloat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to a \u003Ccode\u003EFloat\u003C/code\u003E value.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toDouble", "name": "toDouble", "type": "CalCorePreludetoDouble", "ui": "\u003Cb\u003ECal.Core.Prelude.toDouble\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to a \u003Ccode\u003EDouble\u003C/code\u003E value.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toInteger", "name": "toInteger", "type": "CalCorePreludetoInteger", "ui": "\u003Cb\u003ECal.Core.Prelude.toInteger\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to an \u003Ccode\u003EInteger\u003C/code\u003E value.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.toDecimal", "name": "toDecimal", "type": "CalCorePreludetoDecimal", "ui": "\u003Cb\u003ECal.Core.Prelude.toDecimal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type to a \u003Ccode\u003EDecimal\u003C/code\u003E value.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.empty", "name": "empty", "type": "CalCorePreludeempty", "ui": "\u003Cb\u003ECal.Core.Prelude.empty\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the empty value of the instance type.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.isEmpty", "name": "isEmpty", "type": "CalCorePreludeisEmpty", "ui": "\u003Cb\u003ECal.Core.Prelude.isEmpty\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the specified value is the empty value.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.append", "name": "append", "type": "CalCorePreludeappend", "ui": "\u003Cb\u003ECal.Core.Prelude.append\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the concatenation of the two values.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.concat", "name": "concat", "type": "CalCorePreludeconcat", "ui": "\u003Cb\u003ECal.Core.Prelude.concat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the concatenation of the values in the specified list.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.input", "name": "input", "type": "CalCorePreludeinput", "ui": "\u003Cb\u003ECal.Core.Prelude.input\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a Java value into a value of the instance type.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.output", "name": "output", "type": "CalCorePreludeoutput", "ui": "\u003Cb\u003ECal.Core.Prelude.output\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of the instance type into a Java value.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.typeOf", "name": "typeOf", "type": "CalCorePreludetypeOf", "ui": "\u003Cb\u003ECal.Core.Prelude.typeOf\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the \u003Ccode\u003ETypeRep\u003C/code\u003E value representing the type of the argument.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFrom", "name": "upFrom", "type": "CalCorePreludeupFrom", "ui": "\u003Cb\u003ECal.Core.Prelude.upFrom\u003C/b\u003E\u003Cbr/\u003E[CALDoc] For numeric types, \u003Ccode\u003EupFrom start creates\u003C/code\u003E the list \u003Ccode\u003E[start, start + 1, start + 2, ...]\u003C/code\u003E.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThen", "name": "upFromThen", "type": "CalCorePreludeupFromThen", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThen\u003C/b\u003E\u003Cbr/\u003E[CALDoc] For numeric types, \u003Ccode\u003EupFromThen start next\u003C/code\u003E creates the arithmetic sequence with first 2 terms \u003Ccode\u003Estart\u003C/code\u003E and\n\u003Ccode\u003Enext\u003C/code\u003E. and then following with that difference i.e.\n\u003Ccode\u003E[start, next, next + (next - start), next + 2*(next - start),...]\u003C/code\u003E.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromTo", "name": "upFromTo", "type": "CalCorePreludeupFromTo", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromTo\u003C/b\u003E\u003Cbr/\u003E[CALDoc] For numeric types, \u003Ccode\u003EupFromTo start end\u003C/code\u003E creates the list \u003Ccode\u003E[start, start + 1, start + 2, ..., end]\u003C/code\u003E.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.upFromThenTo", "name": "upFromThenTo", "type": "CalCorePreludeupFromThenTo", "ui": "\u003Cb\u003ECal.Core.Prelude.upFromThenTo\u003C/b\u003E\u003Cbr/\u003E[CALDoc] For numeric types, \u003Ccode\u003EupFromThenTo start next edn\u003C/code\u003E, creates the arithmetic sequence with first 2 terms \u003Ccode\u003Estart\u003C/code\u003E\nand \u003Ccode\u003Enext\u003C/code\u003E. and then following with that difference i.e.\n\u003Ccode\u003E[start, next, next + (next - start), next + 2*(next - start),..., end]\u003C/code\u003E.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnum", "name": "intToEnum", "type": "CalCorePreludeintToEnum", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnum\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInt\u003C/code\u003E value to its corresponding value of type \u003Ccode\u003EIntEnum a =\u0026gt; a\u003C/code\u003E.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.intToEnumChecked", "name": "intToEnumChecked", "type": "CalCorePreludeintToEnumChecked", "ui": "\u003Cb\u003ECal.Core.Prelude.intToEnumChecked\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EInt\u003C/code\u003E value to its corresponding value of type \u003Ccode\u003EIntEnum a =\u0026gt; a\u003C/code\u003E, if such a value exists,\nor returns \u003Ccode\u003ENothing\u003C/code\u003E if such a value does not exist.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Core.Prelude.enumToInt", "name": "enumToInt", "type": "CalCorePreludeenumToInt", "ui": "\u003Cb\u003ECal.Core.Prelude.enumToInt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a value of type \u003Ccode\u003EIntEnum a =\u0026gt; a\u003C/code\u003E to its canonical underlying representation as an \u003Ccode\u003EInt\u003C/code\u003E.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Core.Prelude"]}, {"description": "Cal.Collections.Array.spanInclusiveExamples", "name": "spanInclusiveExamples", "type": "CalCollectionsArrayspanInclusiveExamples", "ui": "\u003Cb\u003ECal.Collections.Array.spanInclusiveExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.compressBytes", "name": "compressBytes", "type": "CalCollectionsArraycompressBytes", "ui": "\u003Cb\u003ECal.Collections.Array.compressBytes\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns a compressed version of a byte array.", "terminals": [{"name": "byteArray", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.isEmptyArray", "name": "isEmptyArray", "type": "CalCollectionsArrayisEmptyArray", "ui": "\u003Cb\u003ECal.Collections.Array.isEmptyArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.minArray", "name": "minArray", "type": "CalCollectionsArrayminArray", "ui": "\u003Cb\u003ECal.Collections.Array.minArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.coarbitraryArray", "name": "coarbitraryArray", "type": "CalCollectionsArraycoarbitraryArray", "ui": "\u003Cb\u003ECal.Collections.Array.coarbitraryArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.replaceAllExamples", "name": "replaceAllExamples", "type": "CalCollectionsArrayreplaceAllExamples", "ui": "\u003Cb\u003ECal.Collections.Array.replaceAllExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.replaceAll", "name": "replaceAll", "type": "CalCollectionsArrayreplaceAll", "ui": "\u003Cb\u003ECal.Collections.Array.replaceAll\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Applies the predicate to each element and returns the array \nwhere every element for which the predicate evaluated to \u003Ccode\u003ETrue\u003C/code\u003E is replaced by \u003Ccode\u003EreplaceWithValue\u003C/code\u003E.", "terminals": [{"name": "array", "input": "text"}, {"name": "replaceWithValue", "input": "text"}, {"name": "predicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.replaceAtExamples", "name": "replaceAtExamples", "type": "CalCollectionsArrayreplaceAtExamples", "ui": "\u003Cb\u003ECal.Collections.Array.replaceAtExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.greaterThanEqualsArray", "name": "greaterThanEqualsArray", "type": "CalCollectionsArraygreaterThanEqualsArray", "ui": "\u003Cb\u003ECal.Collections.Array.greaterThanEqualsArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.greaterThanArray", "name": "greaterThanArray", "type": "CalCollectionsArraygreaterThanArray", "ui": "\u003Cb\u003ECal.Collections.Array.greaterThanArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.replaceAt", "name": "replaceAt", "type": "CalCollectionsArrayreplaceAt", "ui": "\u003Cb\u003ECal.Collections.Array.replaceAt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the array with the value at a specified offset replaced by a specified value.\n", "terminals": [{"name": "array", "input": "text"}, {"name": "value", "input": "text"}, {"name": "index", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.arbitraryArray", "name": "arbitraryArray", "type": "CalCollectionsArrayarbitraryArray", "ui": "\u003Cb\u003ECal.Collections.Array.arbitraryArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.notEqualsArray", "name": "notEqualsArray", "type": "CalCollectionsArraynotEqualsArray", "ui": "\u003Cb\u003ECal.Collections.Array.notEqualsArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.appendArray", "name": "appendArray", "type": "CalCollectionsArrayappendArray", "ui": "\u003Cb\u003ECal.Collections.Array.appendArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.spanExamples", "name": "spanExamples", "type": "CalCollectionsArrayspanExamples", "ui": "\u003Cb\u003ECal.Collections.Array.spanExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.spanInclusive", "name": "spanInclusive", "type": "CalCollectionsArrayspanInclusive", "ui": "\u003Cb\u003ECal.Collections.Array.spanInclusive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EspanInclusive predicate array\u003C/code\u003E breaks up array into a pair of arrays. ", "terminals": [{"name": "array", "input": "text"}, {"name": "predicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.maxArray", "name": "maxArray", "type": "CalCollectionsArraymaxArray", "ui": "\u003Cb\u003ECal.Collections.Array.maxArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.showArray", "name": "showArray", "type": "CalCollectionsArrayshowArray", "ui": "\u003Cb\u003ECal.Collections.Array.showArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.span", "name": "span", "type": "CalCollectionsArrayspan", "ui": "\u003Cb\u003ECal.Collections.Array.span\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Espan predicate array\u003C/code\u003E breaks up \u003Ccode\u003Earray\u003C/code\u003E into a pair of arrays. ", "terminals": [{"name": "array", "input": "text"}, {"name": "predicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.isElem", "name": "isElem", "type": "CalCollectionsArrayisElem", "ui": "\u003Cb\u003ECal.Collections.Array.isElem\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EisElem elementValue array\u003C/code\u003E returns \u003Ccode\u003ETrue\u003C/code\u003E if \u003Ccode\u003EelementValue\u003C/code\u003E is an element of the array.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.decompressBytes", "name": "decompressBytes", "type": "CalCollectionsArraydecompressBytes", "ui": "\u003Cb\u003ECal.Collections.Array.decompressBytes\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns an uncompressed version of a compressed byte array.", "terminals": [{"name": "byteArray", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.breakExamples", "name": "breakExamples", "type": "CalCollectionsArraybreakExamples", "ui": "\u003Cb\u003ECal.Collections.Array.breakExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.break", "name": "break", "type": "CalCollectionsArraybreak", "ui": "\u003Cb\u003ECal.Collections.Array.break\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Ebreak predicate array\u003C/code\u003E breaks up array into a pair of arrays. ", "terminals": [{"name": "array", "input": "text"}, {"name": "predicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldLeft", "name": "foldLeft", "type": "CalCollectionsArrayfoldLeft", "ui": "\u003Cb\u003ECal.Collections.Array.foldLeft\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EfoldLeft foldFunction initialValue list\u003C/code\u003E collapses or 'folds' the array down to a single result, starting\nfrom the left of the array. ", "terminals": [{"name": "initialValue", "input": "text"}, {"name": "array", "input": "text"}, {"name": "foldFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.product", "name": "product", "type": "CalCollectionsArrayproduct", "ui": "\u003Cb\u003ECal.Collections.Array.product\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eproduct array\u003C/code\u003E return the product of all the elements of \u003Ccode\u003Earray\u003C/code\u003E, multiplying from left to right.\n\u003Ccode\u003Eproduct\u003C/code\u003E applied to an empty array is 1.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.lessThanArray", "name": "lessThanArray", "type": "CalCollectionsArraylessThanArray", "ui": "\u003Cb\u003ECal.Collections.Array.lessThanArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.outputArray", "name": "outputArray", "type": "CalCollectionsArrayoutputArray", "ui": "\u003Cb\u003ECal.Collections.Array.outputArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldLeftStrictAlt", "name": "foldLeftStrictAlt", "type": "CalCollectionsArrayfoldLeftStrictAlt", "ui": "\u003Cb\u003ECal.Collections.Array.foldLeftStrictAlt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] WARNING- keep private, this is for explanation and benchmarking purposes only.", "terminals": [{"name": "array", "input": "text"}, {"name": "initialValue", "input": "text"}, {"name": "foldFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.equalsArray", "name": "equalsArray", "type": "CalCollectionsArrayequalsArray", "ui": "\u003Cb\u003ECal.Collections.Array.equalsArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.testModule", "name": "testModule", "type": "CalCollectionsArraytestModule", "ui": "\u003Cb\u003ECal.Collections.Array.testModule\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Unit test for the \u003Ccode\u003EArray\u003C/code\u003E module.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.periodizeExamples", "name": "periodizeExamples", "type": "CalCollectionsArrayperiodizeExamples", "ui": "\u003Cb\u003ECal.Collections.Array.periodizeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.periodize", "name": "periodize", "type": "CalCollectionsArrayperiodize", "ui": "\u003Cb\u003ECal.Collections.Array.periodize\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Periodizes an array at the specified frequency, returning an array of arrays, one for each modulo of the frequency.", "terminals": [{"name": "frequency", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zipWith3Examples", "name": "zipWith3Examples", "type": "CalCollectionsArrayzipWith3Examples", "ui": "\u003Cb\u003ECal.Collections.Array.zipWith3Examples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zipWithExamples", "name": "zipWithExamples", "type": "CalCollectionsArrayzipWithExamples", "ui": "\u003Cb\u003ECal.Collections.Array.zipWithExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zip4Examples", "name": "zip4Examples", "type": "CalCollectionsArrayzip4Examples", "ui": "\u003Cb\u003ECal.Collections.Array.zip4Examples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zip4", "name": "zip4", "type": "CalCollectionsArrayzip4", "ui": "\u003Cb\u003ECal.Collections.Array.zip4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts four arrays into an array of corresponding 4-tuples.\n", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "array4", "input": "text"}, {"name": "array3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.unzip4Examples", "name": "unzip4Examples", "type": "CalCollectionsArrayunzip4Examples", "ui": "\u003Cb\u003ECal.Collections.Array.unzip4Examples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.unzip4", "name": "unzip4", "type": "CalCollectionsArrayunzip4", "ui": "\u003Cb\u003ECal.Collections.Array.unzip4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Transforms an array of 4-tuples into a 4-tuple of arrays.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.unzip3Examples", "name": "unzip3Examples", "type": "CalCollectionsArrayunzip3Examples", "ui": "\u003Cb\u003ECal.Collections.Array.unzip3Examples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.unzip3", "name": "unzip3", "type": "CalCollectionsArrayunzip3", "ui": "\u003Cb\u003ECal.Collections.Array.unzip3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Transforms an array of triples into a triple of arrays.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.takeWhileExamples", "name": "takeWhileExamples", "type": "CalCollectionsArraytakeWhileExamples", "ui": "\u003Cb\u003ECal.Collections.Array.takeWhileExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.toStringExamples", "name": "toStringExamples", "type": "CalCollectionsArraytoStringExamples", "ui": "\u003Cb\u003ECal.Collections.Array.toStringExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.toString", "name": "toString", "type": "CalCollectionsArraytoString", "ui": "\u003Cb\u003ECal.Collections.Array.toString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an \u003Ccode\u003EArray Char\u003C/code\u003E to a \u003Ccode\u003EString\u003C/code\u003E.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.toListWithExamples", "name": "toListWithExamples", "type": "CalCollectionsArraytoListWithExamples", "ui": "\u003Cb\u003ECal.Collections.Array.toListWithExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.toListExamples", "name": "toListExamples", "type": "CalCollectionsArraytoListExamples", "ui": "\u003Cb\u003ECal.Collections.Array.toListExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.sumExamples", "name": "sumExamples", "type": "CalCollectionsArraysumExamples", "ui": "\u003Cb\u003ECal.Collections.Array.sumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.sum", "name": "sum", "type": "CalCollectionsArraysum", "ui": "\u003Cb\u003ECal.Collections.Array.sum\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Esum array\u003C/code\u003E returns the sum of all the elements of \u003Ccode\u003Earray\u003C/code\u003E, adding from left to right. \u003Ccode\u003Esum\u003C/code\u003E applied\nto an empty array is 0.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.subscriptExamples", "name": "subscriptExamples", "type": "CalCollectionsArraysubscriptExamples", "ui": "\u003Cb\u003ECal.Collections.Array.subscriptExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.startsWithExamples", "name": "startsWithExamples", "type": "CalCollectionsArraystartsWithExamples", "ui": "\u003Cb\u003ECal.Collections.Array.startsWithExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.startsWithByExamples", "name": "startsWithByExamples", "type": "CalCollectionsArraystartsWithByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.startsWithByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.sortExamples", "name": "sortExamples", "type": "CalCollectionsArraysortExamples", "ui": "\u003Cb\u003ECal.Collections.Array.sortExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.sortPrimitive", "name": "sortPrimitive", "type": "CalCollectionsArraysortPrimitive", "ui": "\u003Cb\u003ECal.Collections.Array.sortPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Sorts the specified array. ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.sort", "name": "sort", "type": "CalCollectionsArraysort", "ui": "\u003Cb\u003ECal.Collections.Array.sort\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Sorts the specified array. ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.showArrayInstanceExamples", "name": "showArrayInstanceExamples", "type": "CalCollectionsArrayshowArrayInstanceExamples", "ui": "\u003Cb\u003ECal.Collections.Array.showArrayInstanceExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.replicateArrayExamples", "name": "replicateArrayExamples", "type": "CalCollectionsArrayreplicateArrayExamples", "ui": "\u003Cb\u003ECal.Collections.Array.replicateArrayExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.replicateArray", "name": "replicateArray", "type": "CalCollectionsArrayreplicateArray", "ui": "\u003Cb\u003ECal.Collections.Array.replicateArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Replicates a array for a specified number of times.", "terminals": [{"name": "array", "input": "text"}, {"name": "nCopies", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.orArrayExamples", "name": "orArrayExamples", "type": "CalCollectionsArrayorArrayExamples", "ui": "\u003Cb\u003ECal.Collections.Array.orArrayExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.minimumExamples", "name": "minimumExamples", "type": "CalCollectionsArrayminimumExamples", "ui": "\u003Cb\u003ECal.Collections.Array.minimumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.minimum", "name": "minimum", "type": "CalCollectionsArrayminimum", "ui": "\u003Cb\u003ECal.Collections.Array.minimum\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the minimum value in the specified array.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.minimumByExamples", "name": "minimumByExamples", "type": "CalCollectionsArrayminimumByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.minimumByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.minimumBy", "name": "minimumBy", "type": "CalCollectionsArrayminimumBy", "ui": "\u003Cb\u003ECal.Collections.Array.minimumBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function takes a comparison function and a array and returns the least\nelement of the array by the comparison function. ", "terminals": [{"name": "comparisonFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.maximumExamples", "name": "maximumExamples", "type": "CalCollectionsArraymaximumExamples", "ui": "\u003Cb\u003ECal.Collections.Array.maximumExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.maximum", "name": "maximum", "type": "CalCollectionsArraymaximum", "ui": "\u003Cb\u003ECal.Collections.Array.maximum\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the maximum value in the specified array.\n", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.maximumByExamples", "name": "maximumByExamples", "type": "CalCollectionsArraymaximumByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.maximumByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.maximumBy", "name": "maximumBy", "type": "CalCollectionsArraymaximumBy", "ui": "\u003Cb\u003ECal.Collections.Array.maximumBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function takes a comparison function and a array and returns the greatest\nelement of the array by the comparison function. ", "terminals": [{"name": "array", "input": "text"}, {"name": "comparisonFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldLeft1Strict", "name": "foldLeft1Strict", "type": "CalCollectionsArrayfoldLeft1Strict", "ui": "\u003Cb\u003ECal.Collections.Array.foldLeft1Strict\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EfoldLeft1Strict\u003C/code\u003E is similar to \u003Ccode\u003EfoldLeftStrict\u003C/code\u003E, except that it uses the first element of the array as\nthe initial value in the folding process. ", "terminals": [{"name": "foldFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.mapIndexedExamples", "name": "mapIndexedExamples", "type": "CalCollectionsArraymapIndexedExamples", "ui": "\u003Cb\u003ECal.Collections.Array.mapIndexedExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.mapIndexed", "name": "mapIndexed", "type": "CalCollectionsArraymapIndexed", "ui": "\u003Cb\u003ECal.Collections.Array.mapIndexed\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EmapIndexed mapFunction array\u003C/code\u003E applies the function \u003Ccode\u003EmapFunction\u003C/code\u003E to each element of the array, where\n\u003Ccode\u003EmapFunction\u003C/code\u003E is passed both the element value, and its zero-based index in the array.", "terminals": [{"name": "mapFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.makeArrayFromIndicesExamples", "name": "makeArrayFromIndicesExamples", "type": "CalCollectionsArraymakeArrayFromIndicesExamples", "ui": "\u003Cb\u003ECal.Collections.Array.makeArrayFromIndicesExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.lastIndexOfExamples", "name": "lastIndexOfExamples", "type": "CalCollectionsArraylastIndexOfExamples", "ui": "\u003Cb\u003ECal.Collections.Array.lastIndexOfExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.lastIndexOf", "name": "lastIndexOf", "type": "CalCollectionsArraylastIndexOf", "ui": "\u003Cb\u003ECal.Collections.Array.lastIndexOf\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Finds the index of the last occurrence of \u003Ccode\u003EvalueToFind\u003C/code\u003E in \u003Ccode\u003Earray\u003C/code\u003E or -1 if the value does not occur.", "terminals": [{"name": "array", "input": "text"}, {"name": "valueToFind", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.insertByExamples", "name": "insertByExamples", "type": "CalCollectionsArrayinsertByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.insertByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.insertArrayAtExamples", "name": "insertArrayAtExamples", "type": "CalCollectionsArrayinsertArrayAtExamples", "ui": "\u003Cb\u003ECal.Collections.Array.insertArrayAtExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.inputArrayExamples", "name": "inputArrayExamples", "type": "CalCollectionsArrayinputArrayExamples", "ui": "\u003Cb\u003ECal.Collections.Array.inputArrayExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.fromStringExamples", "name": "fromStringExamples", "type": "CalCollectionsArrayfromStringExamples", "ui": "\u003Cb\u003ECal.Collections.Array.fromStringExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.fromListWithExamples", "name": "fromListWithExamples", "type": "CalCollectionsArrayfromListWithExamples", "ui": "\u003Cb\u003ECal.Collections.Array.fromListWithExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.fromListWith", "name": "fromListWith", "type": "CalCollectionsArrayfromListWith", "ui": "\u003Cb\u003ECal.Collections.Array.fromListWith\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Builds an array from a list with the help of an element conversion function \u003Ccode\u003Ef\u003C/code\u003E.\n", "terminals": [{"name": "f", "input": "text"}, {"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.fromListWithInternal", "name": "fromListWithInternal", "type": "CalCollectionsArrayfromListWithInternal", "ui": "\u003Cb\u003ECal.Collections.Array.fromListWithInternal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "tail", "input": "text"}, {"name": "firstElement", "input": "text"}, {"name": "f", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldRightExamples", "name": "foldRightExamples", "type": "CalCollectionsArrayfoldRightExamples", "ui": "\u003Cb\u003ECal.Collections.Array.foldRightExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldRight", "name": "foldRight", "type": "CalCollectionsArrayfoldRight", "ui": "\u003Cb\u003ECal.Collections.Array.foldRight\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Similar to \u003Ccode\u003EfoldLeft\u003C/code\u003E, except that the folding process on the array is started with its rightmost element.\n", "terminals": [{"name": "foldFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "initialValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.findIndexExamples", "name": "findIndexExamples", "type": "CalCollectionsArrayfindIndexExamples", "ui": "\u003Cb\u003ECal.Collections.Array.findIndexExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.filterExamples", "name": "filterExamples", "type": "CalCollectionsArrayfilterExamples", "ui": "\u003Cb\u003ECal.Collections.Array.filterExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.comparePrimitiveExamples", "name": "comparePrimitiveExamples", "type": "CalCollectionsArraycomparePrimitiveExamples", "ui": "\u003Cb\u003ECal.Collections.Array.comparePrimitiveExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.elemIndexExamples", "name": "elemIndexExamples", "type": "CalCollectionsArrayelemIndexExamples", "ui": "\u003Cb\u003ECal.Collections.Array.elemIndexExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.elemIndex", "name": "elemIndex", "type": "CalCollectionsArrayelemIndex", "ui": "\u003Cb\u003ECal.Collections.Array.elemIndex\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the index of the first element in the given array which is equal to\nthe specified value, or \u003Ccode\u003ENothing\u003C/code\u003E if there is no such element.", "terminals": [{"name": "value", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.indexOf", "name": "indexOf", "type": "CalCollectionsArrayindexOf", "ui": "\u003Cb\u003ECal.Collections.Array.indexOf\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Finds the index of the first occurrence of \u003Ccode\u003EvalueToFind\u003C/code\u003E in \u003Ccode\u003Earray\u003C/code\u003E or -1 if the value does not occur.", "terminals": [{"name": "array", "input": "text"}, {"name": "valueToFind", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.dropWhileExamples", "name": "dropWhileExamples", "type": "CalCollectionsArraydropWhileExamples", "ui": "\u003Cb\u003ECal.Collections.Array.dropWhileExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.dropExamples", "name": "dropExamples", "type": "CalCollectionsArraydropExamples", "ui": "\u003Cb\u003ECal.Collections.Array.dropExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.deleteByExamples", "name": "deleteByExamples", "type": "CalCollectionsArraydeleteByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.deleteByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.deleteExamples", "name": "deleteExamples", "type": "CalCollectionsArraydeleteExamples", "ui": "\u003Cb\u003ECal.Collections.Array.deleteExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.deleteAtExamples", "name": "deleteAtExamples", "type": "CalCollectionsArraydeleteAtExamples", "ui": "\u003Cb\u003ECal.Collections.Array.deleteAtExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.concatArrayExamples", "name": "concatArrayExamples", "type": "CalCollectionsArrayconcatArrayExamples", "ui": "\u003Cb\u003ECal.Collections.Array.concatArrayExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.binarySearchByExamples", "name": "binarySearchByExamples", "type": "CalCollectionsArraybinarySearchByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.binarySearchByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.appendExamples", "name": "appendExamples", "type": "CalCollectionsArrayappendExamples", "ui": "\u003Cb\u003ECal.Collections.Array.appendExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array7", "name": "array7", "type": "CalCollectionsArrayarray7", "ui": "\u003Cb\u003ECal.Collections.Array.array7\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an array of seven items.", "terminals": [{"name": "item6", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "item5", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "item4", "input": "text"}, {"name": "item7", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array7Internal", "name": "array7Internal", "type": "CalCollectionsArrayarray7Internal", "ui": "\u003Cb\u003ECal.Collections.Array.array7Internal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "item1", "input": "text"}, {"name": "item4", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "item6", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "item5", "input": "text"}, {"name": "item7", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array5", "name": "array5", "type": "CalCollectionsArrayarray5", "ui": "\u003Cb\u003ECal.Collections.Array.array5\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an array of five items.", "terminals": [{"name": "item5", "input": "text"}, {"name": "item4", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.anyExamples", "name": "anyExamples", "type": "CalCollectionsArrayanyExamples", "ui": "\u003Cb\u003ECal.Collections.Array.anyExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.andArrayExamples", "name": "andArrayExamples", "type": "CalCollectionsArrayandArrayExamples", "ui": "\u003Cb\u003ECal.Collections.Array.andArrayExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.alternateExamples", "name": "alternateExamples", "type": "CalCollectionsArrayalternateExamples", "ui": "\u003Cb\u003ECal.Collections.Array.alternateExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.alternate", "name": "alternate", "type": "CalCollectionsArrayalternate", "ui": "\u003Cb\u003ECal.Collections.Array.alternate\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Alternate items from the 2 arrays.\n", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.allExamples", "name": "allExamples", "type": "CalCollectionsArrayallExamples", "ui": "\u003Cb\u003ECal.Collections.Array.allExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.replicate", "name": "replicate", "type": "CalCollectionsArrayreplicate", "ui": "\u003Cb\u003ECal.Collections.Array.replicate\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Ereplicate nCopies valueToReplicate\u003C/code\u003E is an array of length \u003Ccode\u003EnCopies\u003C/code\u003E, with every element equal to\n\u003Ccode\u003EvalueToReplicate\u003C/code\u003E.", "terminals": [{"name": "valueToReplicate", "input": "text"}, {"name": "nCopies", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.lengthExamples", "name": "lengthExamples", "type": "CalCollectionsArraylengthExamples", "ui": "\u003Cb\u003ECal.Collections.Array.lengthExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array5Internal", "name": "array5Internal", "type": "CalCollectionsArrayarray5Internal", "ui": "\u003Cb\u003ECal.Collections.Array.array5Internal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "item5", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "item4", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.updateAtExamples", "name": "updateAtExamples", "type": "CalCollectionsArrayupdateAtExamples", "ui": "\u003Cb\u003ECal.Collections.Array.updateAtExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.takeExamples", "name": "takeExamples", "type": "CalCollectionsArraytakeExamples", "ui": "\u003Cb\u003ECal.Collections.Array.takeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zipExamples", "name": "zipExamples", "type": "CalCollectionsArrayzipExamples", "ui": "\u003Cb\u003ECal.Collections.Array.zipExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.isElemByExamples", "name": "isElemByExamples", "type": "CalCollectionsArrayisElemByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.isElemByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.binarySearchExamples", "name": "binarySearchExamples", "type": "CalCollectionsArraybinarySearchExamples", "ui": "\u003Cb\u003ECal.Collections.Array.binarySearchExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.concatExamples", "name": "concatExamples", "type": "CalCollectionsArrayconcatExamples", "ui": "\u003Cb\u003ECal.Collections.Array.concatExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array0", "name": "array0", "type": "CalCollectionsArrayarray0", "ui": "\u003Cb\u003ECal.Collections.Array.array0\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an empty array.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.concat", "name": "concat", "type": "CalCollectionsArrayconcat", "ui": "\u003Cb\u003ECal.Collections.Array.concat\u003C/b\u003E\u003Cbr/\u003E[CALDoc] An Array version of the regular \u003Ccode\u003Econcat\u003C/code\u003E function", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.inputPrimitiveExamples", "name": "inputPrimitiveExamples", "type": "CalCollectionsArrayinputPrimitiveExamples", "ui": "\u003Cb\u003ECal.Collections.Array.inputPrimitiveExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.outputPrimitive", "name": "outputPrimitive", "type": "CalCollectionsArrayoutputPrimitive", "ui": "\u003Cb\u003ECal.Collections.Array.outputPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Outputs the given array to a Java array.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.outputArrayToJObjectArray", "name": "outputArrayToJObjectArray", "type": "CalCollectionsArrayoutputArrayToJObjectArray", "ui": "\u003Cb\u003ECal.Collections.Array.outputArrayToJObjectArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.inputPrimitive", "name": "inputPrimitive", "type": "CalCollectionsArrayinputPrimitive", "ui": "\u003Cb\u003ECal.Collections.Array.inputPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Inputs an array from a Java array.", "terminals": [{"name": "arrayAsObject", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.equalsPrimitiveExamples", "name": "equalsPrimitiveExamples", "type": "CalCollectionsArrayequalsPrimitiveExamples", "ui": "\u003Cb\u003ECal.Collections.Array.equalsPrimitiveExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.toListWith", "name": "toListWith", "type": "CalCollectionsArraytoListWith", "ui": "\u003Cb\u003ECal.Collections.Array.toListWith\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an array to a list with the help of an element conversion function \u003Ccode\u003Ef\u003C/code\u003E", "terminals": [{"name": "f", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.insertExamples", "name": "insertExamples", "type": "CalCollectionsArrayinsertExamples", "ui": "\u003Cb\u003ECal.Collections.Array.insertExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.insert", "name": "insert", "type": "CalCollectionsArrayinsert", "ui": "\u003Cb\u003ECal.Collections.Array.insert\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function takes an element and an array and inserts the element into the\narray at the last position where it is still less than or equal to the next\nelement. ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.insertBy", "name": "insertBy", "type": "CalCollectionsArrayinsertBy", "ui": "\u003Cb\u003ECal.Collections.Array.insertBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This function takes an element and an array and inserts the element into the\narray at the last position where it is still less than or equal to the next\nelement. ", "terminals": [{"name": "value", "input": "text"}, {"name": "comparisonFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.deleteRangeExamples", "name": "deleteRangeExamples", "type": "CalCollectionsArraydeleteRangeExamples", "ui": "\u003Cb\u003ECal.Collections.Array.deleteRangeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zip", "name": "zip", "type": "CalCollectionsArrayzip", "ui": "\u003Cb\u003ECal.Collections.Array.zip\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts two arrays into an array of corresponding pairs.\n", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.inputArrayFromJObjectArray", "name": "inputArrayFromJObjectArray", "type": "CalCollectionsArrayinputArrayFromJObjectArray", "ui": "\u003Cb\u003ECal.Collections.Array.inputArrayFromJObjectArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "objectArray", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.inputArray", "name": "inputArray", "type": "CalCollectionsArrayinputArray", "ui": "\u003Cb\u003ECal.Collections.Array.inputArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "object", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.updateAt", "name": "updateAt", "type": "CalCollectionsArrayupdateAt", "ui": "\u003Cb\u003ECal.Collections.Array.updateAt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Updates an array at a specified index with a new element value. ", "terminals": [{"name": "index", "input": "text"}, {"name": "value", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.lessThanEqualsArray", "name": "lessThanEqualsArray", "type": "CalCollectionsArraylessThanEqualsArray", "ui": "\u003Cb\u003ECal.Collections.Array.lessThanEqualsArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.compareArray", "name": "compareArray", "type": "CalCollectionsArraycompareArray", "ui": "\u003Cb\u003ECal.Collections.Array.compareArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.mergeExamples", "name": "mergeExamples", "type": "CalCollectionsArraymergeExamples", "ui": "\u003Cb\u003ECal.Collections.Array.mergeExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.merge", "name": "merge", "type": "CalCollectionsArraymerge", "ui": "\u003Cb\u003ECal.Collections.Array.merge\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Assuming that \u003Ccode\u003Earray1\u003C/code\u003E and \u003Ccode\u003Earray2\u003C/code\u003E are sorted, \u003Ccode\u003Emerge array1 array2\u003C/code\u003E will merge all\nthe elements of the two arrays into a single sorted array. ", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.orArray", "name": "orArray", "type": "CalCollectionsArrayorArray", "ui": "\u003Cb\u003ECal.Collections.Array.orArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EorArray array\u003C/code\u003E returns \u003Ccode\u003ETrue\u003C/code\u003E if at least one element of the array is \u003Ccode\u003ETrue\u003C/code\u003E.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zipWith4Examples", "name": "zipWith4Examples", "type": "CalCollectionsArrayzipWith4Examples", "ui": "\u003Cb\u003ECal.Collections.Array.zipWith4Examples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zipWith4", "name": "zipWith4", "type": "CalCollectionsArrayzipWith4", "ui": "\u003Cb\u003ECal.Collections.Array.zipWith4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of four arrays.", "terminals": [{"name": "array2", "input": "text"}, {"name": "array4", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "zipFunction", "input": "text"}, {"name": "array3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.lastExamples", "name": "lastExamples", "type": "CalCollectionsArraylastExamples", "ui": "\u003Cb\u003ECal.Collections.Array.lastExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.isElemBy", "name": "isElemBy", "type": "CalCollectionsArrayisElemBy", "ui": "\u003Cb\u003ECal.Collections.Array.isElemBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether a value is an element of an array, according to the specified equality comparison function.", "terminals": [{"name": "eq", "input": "text"}, {"name": "array", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.findExamples", "name": "findExamples", "type": "CalCollectionsArrayfindExamples", "ui": "\u003Cb\u003ECal.Collections.Array.findExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.find", "name": "find", "type": "CalCollectionsArrayfind", "ui": "\u003Cb\u003ECal.Collections.Array.find\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Efind predicate array\u003C/code\u003E returns the first value of array for which the predicate function is \u003Ccode\u003ETrue\u003C/code\u003E,\nif there is one, or \u003Ccode\u003ENothing\u003C/code\u003E otherwise.", "terminals": [{"name": "array", "input": "text"}, {"name": "predicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.reverse", "name": "reverse", "type": "CalCollectionsArrayreverse", "ui": "\u003Cb\u003ECal.Collections.Array.reverse\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Reverses the elements of an array. \u003Ccode\u003Ereverse\u003C/code\u003E is O(n) time where n is the length of the array.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.filterIndexedExamples", "name": "filterIndexedExamples", "type": "CalCollectionsArrayfilterIndexedExamples", "ui": "\u003Cb\u003ECal.Collections.Array.filterIndexedExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.insertAt", "name": "insertAt", "type": "CalCollectionsArrayinsertAt", "ui": "\u003Cb\u003ECal.Collections.Array.insertAt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Inserts a value into a array at the specified index.", "terminals": [{"name": "array", "input": "text"}, {"name": "value", "input": "text"}, {"name": "index", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldLeft1", "name": "foldLeft1", "type": "CalCollectionsArrayfoldLeft1", "ui": "\u003Cb\u003ECal.Collections.Array.foldLeft1\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EfoldLeft1\u003C/code\u003E is similar to \u003Ccode\u003EfoldLeft\u003C/code\u003E, except that it uses the first element of the array as the initial value\nin the folding process. ", "terminals": [{"name": "array", "input": "text"}, {"name": "foldFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.sortByExamples", "name": "sortByExamples", "type": "CalCollectionsArraysortByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.sortByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.sortBy", "name": "sortBy", "type": "CalCollectionsArraysortBy", "ui": "\u003Cb\u003ECal.Collections.Array.sortBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Sorts the specified array according to the specified comparison function. ", "terminals": [{"name": "comparisonFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.makeArrayFromCalValues", "name": "makeArrayFromCalValues", "type": "CalCollectionsArraymakeArrayFromCalValues", "ui": "\u003Cb\u003ECal.Collections.Array.makeArrayFromCalValues\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "array", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.internalArrayValues", "name": "internalArrayValues", "type": "CalCollectionsArrayinternalArrayValues", "ui": "\u003Cb\u003ECal.Collections.Array.internalArrayValues\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Exposes the values array held onto by each object as a Java array of CAL values. ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zipWith", "name": "zipWith", "type": "CalCollectionsArrayzipWith", "ui": "\u003Cb\u003ECal.Collections.Array.zipWith\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of two arrays.", "terminals": [{"name": "array2", "input": "text"}, {"name": "zipFunction", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.eqArrayInstanceExamples", "name": "eqArrayInstanceExamples", "type": "CalCollectionsArrayeqArrayInstanceExamples", "ui": "\u003Cb\u003ECal.Collections.Array.eqArrayInstanceExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.any", "name": "any", "type": "CalCollectionsArrayany", "ui": "\u003Cb\u003ECal.Collections.Array.any\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eany predicate array\u003C/code\u003E returns \u003Ccode\u003ETrue\u003C/code\u003E if the predicate function evaluates to \u003Ccode\u003ETrue\u003C/code\u003E on at least\none element of the array.", "terminals": [{"name": "array", "input": "text"}, {"name": "predicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.dropWhile", "name": "dropWhile", "type": "CalCollectionsArraydropWhile", "ui": "\u003Cb\u003ECal.Collections.Array.dropWhile\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EdropWhile dropWhileTrueFunction list\u003C/code\u003E drops the longest prefix of the array for which \u003Ccode\u003EdropWhileTrueFunction\u003C/code\u003E\nis \u003Ccode\u003ETrue\u003C/code\u003E for each element.", "terminals": [{"name": "array", "input": "text"}, {"name": "dropWhileTrueFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.drop", "name": "drop", "type": "CalCollectionsArraydrop", "ui": "\u003Cb\u003ECal.Collections.Array.drop\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Edrop nElements array\u003C/code\u003E drops the first \u003Ccode\u003EnElements\u003C/code\u003E elements of the array and returns the remaining elements", "terminals": [{"name": "array", "input": "text"}, {"name": "nElementsToDrop", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.indexOfFrom", "name": "indexOfFrom", "type": "CalCollectionsArrayindexOfFrom", "ui": "\u003Cb\u003ECal.Collections.Array.indexOfFrom\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Finds the index of the first occurrence at index greater than or equal to \u003Ccode\u003EfromIndex\u003C/code\u003E of \u003Ccode\u003EvalueToFind\u003C/code\u003E in \u003Ccode\u003Earray\u003C/code\u003E\nor -1 if the value does not occur from \u003Ccode\u003EfromIndex\u003C/code\u003E onwards.", "terminals": [{"name": "fromIndex", "input": "text"}, {"name": "valueToFind", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.last", "name": "last", "type": "CalCollectionsArraylast", "ui": "\u003Cb\u003ECal.Collections.Array.last\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the last element of the specified array. ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.chopExamples", "name": "chopExamples", "type": "CalCollectionsArraychopExamples", "ui": "\u003Cb\u003ECal.Collections.Array.chopExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.chop", "name": "chop", "type": "CalCollectionsArraychop", "ui": "\u003Cb\u003ECal.Collections.Array.chop\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Chops up an Array into equals subarrays of length \u003Ccode\u003EchopLength\u003C/code\u003E.", "terminals": [{"name": "arrayToChop", "input": "text"}, {"name": "chopLength", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.makeArrayFromIndices", "name": "makeArrayFromIndices", "type": "CalCollectionsArraymakeArrayFromIndices", "ui": "\u003Cb\u003ECal.Collections.Array.makeArrayFromIndices\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates an \u003Ccode\u003EArray\u003C/code\u003E calling a function for each of the indices in the resultant array", "terminals": [{"name": "itemFunction", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "size", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zipWith3", "name": "zipWith3", "type": "CalCollectionsArrayzipWith3", "ui": "\u003Cb\u003ECal.Collections.Array.zipWith3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of three arrays.", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "array3", "input": "text"}, {"name": "zipFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.startsWith", "name": "startsWith", "type": "CalCollectionsArraystartsWith", "ui": "\u003Cb\u003ECal.Collections.Array.startsWith\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether \u003Ccode\u003EarrayToTest\u003C/code\u003E starts with the specified prefix.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.startsWithBy", "name": "startsWithBy", "type": "CalCollectionsArraystartsWithBy", "ui": "\u003Cb\u003ECal.Collections.Array.startsWithBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether \u003Ccode\u003EarrayToTest\u003C/code\u003E starts with the specified prefix using \u003Ccode\u003Eeq\u003C/code\u003E as the notion of equality between \nelements of the prefix and elements of the arrayToTest.", "terminals": [{"name": "eq", "input": "text"}, {"name": "arrayToTest", "input": "text"}, {"name": "prefix", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.findIndex", "name": "findIndex", "type": "CalCollectionsArrayfindIndex", "ui": "\u003Cb\u003ECal.Collections.Array.findIndex\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EfindIndex predicate array\u003C/code\u003E returns the first index of array for which the predicate function is \u003Ccode\u003ETrue\u003C/code\u003E,\nif there is one, or \u003Ccode\u003ENothing\u003C/code\u003E otherwise. ", "terminals": [{"name": "predicate", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.comparePrimitive", "name": "comparePrimitive", "type": "CalCollectionsArraycomparePrimitive", "ui": "\u003Cb\u003ECal.Collections.Array.comparePrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns an \u003Ccode\u003EOrdering\u003C/code\u003E based on how the first array compares to the second array.", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.EmptyArray", "name": "EmptyArray", "type": "CalCollectionsArrayEmptyArray", "ui": "\u003Cb\u003ECal.Collections.Array.EmptyArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for an empty array.", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.mergeByExamples", "name": "mergeByExamples", "type": "CalCollectionsArraymergeByExamples", "ui": "\u003Cb\u003ECal.Collections.Array.mergeByExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.mergeBy", "name": "mergeBy", "type": "CalCollectionsArraymergeBy", "ui": "\u003Cb\u003ECal.Collections.Array.mergeBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Assuming that \u003Ccode\u003Earray1\u003C/code\u003E and \u003Ccode\u003Earray2\u003C/code\u003E are sorted according to \u003Ccode\u003Ecomparator\u003C/code\u003E,\n\u003Ccode\u003EmergeBy comparator array1 array2\u003C/code\u003E will merge all the elements of the two arrays into\na single array sorted according to \u003Ccode\u003Ecomparator\u003C/code\u003E. ", "terminals": [{"name": "array2", "input": "text"}, {"name": "array1", "input": "text"}, {"name": "comparator", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.nonEmptyArrayCopy", "name": "nonEmptyArrayCopy", "type": "CalCollectionsArraynonEmptyArrayCopy", "ui": "\u003Cb\u003ECal.Collections.Array.nonEmptyArrayCopy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Performs the analogous functionality to \u003Ccode\u003ESystem.arraycopy\u003C/code\u003E in Java.\n", "terminals": [{"name": "source", "input": "text"}, {"name": "dest", "input": "text"}, {"name": "destPos", "input": "text"}, {"name": "nElemsToCopy", "input": "text"}, {"name": "sourcePos", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.andArray", "name": "andArray", "type": "CalCollectionsArrayandArray", "ui": "\u003Cb\u003ECal.Collections.Array.andArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EandArray array\u003C/code\u003E returns \u003Ccode\u003ETrue\u003C/code\u003E if every element of the array is \u003Ccode\u003ETrue\u003C/code\u003E.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.intToMaybe", "name": "intToMaybe", "type": "CalCollectionsArrayintToMaybe", "ui": "\u003Cb\u003ECal.Collections.Array.intToMaybe\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a failure code of -1 into a \u003Ccode\u003ENothing\u003C/code\u003E value.", "terminals": [{"name": "intValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.takeWhile", "name": "takeWhile", "type": "CalCollectionsArraytakeWhile", "ui": "\u003Cb\u003ECal.Collections.Array.takeWhile\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EtakeWhile takeWhileTrueFunction array\u003C/code\u003E returns the longest prefix of the array for which \u003Ccode\u003EtakeWhileTrueFunction\u003C/code\u003E\nis \u003Ccode\u003ETrue\u003C/code\u003E for each element.", "terminals": [{"name": "array", "input": "text"}, {"name": "takeWhileTrueFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.take", "name": "take", "type": "CalCollectionsArraytake", "ui": "\u003Cb\u003ECal.Collections.Array.take\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Etake nElements array\u003C/code\u003E returns an array consisting of the first \u003Ccode\u003EnElements\u003C/code\u003E elements of \u003Ccode\u003Earray\u003C/code\u003E.\n", "terminals": [{"name": "array", "input": "text"}, {"name": "nElementsToTake", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.filterIndexed", "name": "filterIndexed", "type": "CalCollectionsArrayfilterIndexed", "ui": "\u003Cb\u003ECal.Collections.Array.filterIndexed\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EfilterIndexed keepIfTrueFunction array\u003C/code\u003E applies the predicate function \u003Ccode\u003EkeepIfTrueFunction\u003C/code\u003E to each\nelement of the array, and returns the array of elements for which the predicate evaluates to \u003Ccode\u003ETrue\u003C/code\u003E.\n\u003Ccode\u003EkeepIfTrueFunction\u003C/code\u003E is a function that is passed both the element value, and its zero-based index in the array.", "terminals": [{"name": "array", "input": "text"}, {"name": "keepIfTrueFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.mapExamples", "name": "mapExamples", "type": "CalCollectionsArraymapExamples", "ui": "\u003Cb\u003ECal.Collections.Array.mapExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.map", "name": "map", "type": "CalCollectionsArraymap", "ui": "\u003Cb\u003ECal.Collections.Array.map\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Emap mapFunction array\u003C/code\u003E applies the function \u003Ccode\u003EmapFunction\u003C/code\u003E to each element of array and returns the\nresulting array.", "terminals": [{"name": "mapFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.delete", "name": "delete", "type": "CalCollectionsArraydelete", "ui": "\u003Cb\u003ECal.Collections.Array.delete\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Edelete x array\u003C/code\u003E returns the array with the first element equivalent to \u003Ccode\u003Ex\u003C/code\u003E removed.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.deleteBy", "name": "deleteBy", "type": "CalCollectionsArraydeleteBy", "ui": "\u003Cb\u003ECal.Collections.Array.deleteBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EdeleteBy eq element array\u003C/code\u003E returns the array with the first element equivalent to \u003Ccode\u003Ex\u003C/code\u003E (under \u003Ccode\u003Eeq\u003C/code\u003E) removed.", "terminals": [{"name": "array", "input": "text"}, {"name": "eq", "input": "text"}, {"name": "element", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.deleteAt", "name": "deleteAt", "type": "CalCollectionsArraydeleteAt", "ui": "\u003Cb\u003ECal.Collections.Array.deleteAt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Removes the array item at the specified index.\n", "terminals": [{"name": "array", "input": "text"}, {"name": "index", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.deleteRange", "name": "deleteRange", "type": "CalCollectionsArraydeleteRange", "ui": "\u003Cb\u003ECal.Collections.Array.deleteRange\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Removes the array items at the specified range of indices.\n", "terminals": [{"name": "array", "input": "text"}, {"name": "toIndex", "input": "text"}, {"name": "fromIndex", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.findIndicesExamples", "name": "findIndicesExamples", "type": "CalCollectionsArrayfindIndicesExamples", "ui": "\u003Cb\u003ECal.Collections.Array.findIndicesExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.findIndices", "name": "findIndices", "type": "CalCollectionsArrayfindIndices", "ui": "\u003Cb\u003ECal.Collections.Array.findIndices\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the indices of all elements satisfying the specified predicate, in ascending order. ", "terminals": [{"name": "predicate", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.fromString", "name": "fromString", "type": "CalCollectionsArrayfromString", "ui": "\u003Cb\u003ECal.Collections.Array.fromString\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts a \u003Ccode\u003EString\u003C/code\u003E to an \u003Ccode\u003EArray Char\u003C/code\u003E.", "terminals": [{"name": "string", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.isNotElem", "name": "isNotElem", "type": "CalCollectionsArrayisNotElem", "ui": "\u003Cb\u003ECal.Collections.Array.isNotElem\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EisNotElem elementValue array\u003C/code\u003E returns \u003Ccode\u003ETrue\u003C/code\u003E if \u003Ccode\u003EelementValue\u003C/code\u003E is not an element of the array.", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.all", "name": "all", "type": "CalCollectionsArrayall", "ui": "\u003Cb\u003ECal.Collections.Array.all\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Eall predicate array\u003C/code\u003E returns \u003Ccode\u003ETrue\u003C/code\u003E if the predicate function evaluates to \u003Ccode\u003ETrue\u003C/code\u003E on all the\nelements of the array (and the array is finite).", "terminals": [{"name": "predicate", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.filter", "name": "filter", "type": "CalCollectionsArrayfilter", "ui": "\u003Cb\u003ECal.Collections.Array.filter\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Efilter keepIfTrueFunction array\u003C/code\u003E applies the predicate function to each element of the array, and returns\nthe array of elements for which the predicate evaluates to \u003Ccode\u003ETrue\u003C/code\u003E.", "terminals": [{"name": "keepIfTrueFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.toList", "name": "toList", "type": "CalCollectionsArraytoList", "ui": "\u003Cb\u003ECal.Collections.Array.toList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts an array to a list.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zip3Examples", "name": "zip3Examples", "type": "CalCollectionsArrayzip3Examples", "ui": "\u003Cb\u003ECal.Collections.Array.zip3Examples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.zip3", "name": "zip3", "type": "CalCollectionsArrayzip3", "ui": "\u003Cb\u003ECal.Collections.Array.zip3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Converts three arrays into an array of corresponding triples.\n", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "array3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.binarySearchPrimitive", "name": "binarySearchPrimitive", "type": "CalCollectionsArraybinarySearchPrimitive", "ui": "\u003Cb\u003ECal.Collections.Array.binarySearchPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Searches the array for the specified value using the binary search algorithm. ", "terminals": [{"name": "array", "input": "text"}, {"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.equalsPrimitive", "name": "equalsPrimitive", "type": "CalCollectionsArrayequalsPrimitive", "ui": "\u003Cb\u003ECal.Collections.Array.equalsPrimitive\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns whether the two arrays are equal.", "terminals": [{"name": "array1", "input": "text"}, {"name": "array2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.typeableElementType_fromValue", "name": "typeableElementType_fromValue", "type": "CalCollectionsArraytypeableElementType_fromValue", "ui": "\u003Cb\u003ECal.Collections.Array.typeableElementType_fromValue\u003C/b\u003E\u003Cbr/\u003E[CALDoc] It is important that this function does not touch the value argument.", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.typeableElementType_fromTypeRep", "name": "typeableElementType_fromTypeRep", "type": "CalCollectionsArraytypeableElementType_fromTypeRep", "ui": "\u003Cb\u003ECal.Collections.Array.typeableElementType_fromTypeRep\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "elemType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldLeftStrict", "name": "foldLeftStrict", "type": "CalCollectionsArrayfoldLeftStrict", "ui": "\u003Cb\u003ECal.Collections.Array.foldLeftStrict\u003C/b\u003E\u003Cbr/\u003E[CALDoc] This is the strict version of \u003Ccode\u003EfoldLeft\u003C/code\u003E. ", "terminals": [{"name": "foldFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "initialValue", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.breakAfterExamples", "name": "breakAfterExamples", "type": "CalCollectionsArraybreakAfterExamples", "ui": "\u003Cb\u003ECal.Collections.Array.breakAfterExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array6", "name": "array6", "type": "CalCollectionsArrayarray6", "ui": "\u003Cb\u003ECal.Collections.Array.array6\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an array of six items.", "terminals": [{"name": "item3", "input": "text"}, {"name": "item5", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "item6", "input": "text"}, {"name": "item4", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array6Internal", "name": "array6Internal", "type": "CalCollectionsArrayarray6Internal", "ui": "\u003Cb\u003ECal.Collections.Array.array6Internal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "item1", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "item4", "input": "text"}, {"name": "item6", "input": "text"}, {"name": "item5", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.breakAfter", "name": "breakAfter", "type": "CalCollectionsArraybreakAfter", "ui": "\u003Cb\u003ECal.Collections.Array.breakAfter\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EbreakAfter predicate array\u003C/code\u003E breaks up array into a pair of arrays. ", "terminals": [{"name": "predicate", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.indexOfBy", "name": "indexOfBy", "type": "CalCollectionsArrayindexOfBy", "ui": "\u003Cb\u003ECal.Collections.Array.indexOfBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns: index of the first element for which predicate returns True, or\n-1 if predicate returns False for all elements", "terminals": [{"name": "array", "input": "text"}, {"name": "predicate", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.splitAt", "name": "splitAt", "type": "CalCollectionsArraysplitAt", "ui": "\u003Cb\u003ECal.Collections.Array.splitAt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003EsplitAt nElemsToSplit list\u003C/code\u003E returns a pair of arrays. ", "terminals": [{"name": "array", "input": "text"}, {"name": "nElementsToSplit", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldRight1Examples", "name": "foldRight1Examples", "type": "CalCollectionsArrayfoldRight1Examples", "ui": "\u003Cb\u003ECal.Collections.Array.foldRight1Examples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array1", "name": "array1", "type": "CalCollectionsArrayarray1", "ui": "\u003Cb\u003ECal.Collections.Array.array1\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an array of one item.", "terminals": [{"name": "item", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array1Internal", "name": "array1Internal", "type": "CalCollectionsArrayarray1Internal", "ui": "\u003Cb\u003ECal.Collections.Array.array1Internal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "item", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array2", "name": "array2", "type": "CalCollectionsArrayarray2", "ui": "\u003Cb\u003ECal.Collections.Array.array2\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an array of two items.", "terminals": [{"name": "item2", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array2Internal", "name": "array2Internal", "type": "CalCollectionsArrayarray2Internal", "ui": "\u003Cb\u003ECal.Collections.Array.array2Internal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "elementType", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array3", "name": "array3", "type": "CalCollectionsArrayarray3", "ui": "\u003Cb\u003ECal.Collections.Array.array3\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an array of three items.", "terminals": [{"name": "item2", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array3Internal", "name": "array3Internal", "type": "CalCollectionsArrayarray3Internal", "ui": "\u003Cb\u003ECal.Collections.Array.array3Internal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "item3", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array4", "name": "array4", "type": "CalCollectionsArrayarray4", "ui": "\u003Cb\u003ECal.Collections.Array.array4\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Constructs an array of four items.", "terminals": [{"name": "item4", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "item2", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.array4Internal", "name": "array4Internal", "type": "CalCollectionsArrayarray4Internal", "ui": "\u003Cb\u003ECal.Collections.Array.array4Internal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "item2", "input": "text"}, {"name": "item1", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "item3", "input": "text"}, {"name": "item4", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldRight1", "name": "foldRight1", "type": "CalCollectionsArrayfoldRight1", "ui": "\u003Cb\u003ECal.Collections.Array.foldRight1\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Similar to \u003Ccode\u003EfoldLeft1\u003C/code\u003E, except that the folding process on the array is started with its rightmost element.\n", "terminals": [{"name": "foldFunction", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.foldRightHelper", "name": "foldRightHelper", "type": "CalCollectionsArrayfoldRightHelper", "ui": "\u003Cb\u003ECal.Collections.Array.foldRightHelper\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Helper function used in the implementation of \u003Ccode\u003EfoldRight\u003C/code\u003E and \u003Ccode\u003EfoldRight1\u003C/code\u003E", "terminals": [{"name": "index", "input": "text"}, {"name": "array", "input": "text"}, {"name": "value", "input": "text"}, {"name": "foldFunction", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.unzipExamples", "name": "unzipExamples", "type": "CalCollectionsArrayunzipExamples", "ui": "\u003Cb\u003ECal.Collections.Array.unzipExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.unzip", "name": "unzip", "type": "CalCollectionsArrayunzip", "ui": "\u003Cb\u003ECal.Collections.Array.unzip\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Transforms an array of pairs into a pair of arrays.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.elemIndicesExamples", "name": "elemIndicesExamples", "type": "CalCollectionsArrayelemIndicesExamples", "ui": "\u003Cb\u003ECal.Collections.Array.elemIndicesExamples\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.fromList", "name": "fromList", "type": "CalCollectionsArrayfromList", "ui": "\u003Cb\u003ECal.Collections.Array.fromList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Builds an array from a list. ", "terminals": [{"name": "list", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.fromNonEmptyListInternal", "name": "fromNonEmptyListInternal", "type": "CalCollectionsArrayfromNonEmptyListInternal", "ui": "\u003Cb\u003ECal.Collections.Array.fromNonEmptyListInternal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "nonEmptyList", "input": "text"}, {"name": "elementType", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.elemIndices", "name": "elemIndices", "type": "CalCollectionsArrayelemIndices", "ui": "\u003Cb\u003ECal.Collections.Array.elemIndices\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the indices of all elements of the specified array equal to the\nspecified value, in ascending order.", "terminals": [{"name": "array", "input": "text"}, {"name": "x", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.update", "name": "update", "type": "CalCollectionsArrayupdate", "ui": "\u003Cb\u003ECal.Collections.Array.update\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Destructive array update function. ", "terminals": [{"name": "value", "input": "text"}, {"name": "index", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.makeDefaultInternal", "name": "makeDefaultInternal", "type": "CalCollectionsArraymakeDefaultInternal", "ui": "\u003Cb\u003ECal.Collections.Array.makeDefaultInternal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Creates a default array of the given size. ", "terminals": [{"name": "elementType", "input": "text"}, {"name": "size", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.binarySearch", "name": "binarySearch", "type": "CalCollectionsArraybinarySearch", "ui": "\u003Cb\u003ECal.Collections.Array.binarySearch\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Searches the array for the specified value using the binary search algorithm. ", "terminals": [{"name": "value", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.binarySearchBy", "name": "binarySearchBy", "type": "CalCollectionsArraybinarySearchBy", "ui": "\u003Cb\u003ECal.Collections.Array.binarySearchBy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Searches the array for the specified value using the binary search algorithm. ", "terminals": [{"name": "array", "input": "text"}, {"name": "comparisonFunction", "input": "text"}, {"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.lastIndexOfFrom", "name": "lastIndexOfFrom", "type": "CalCollectionsArraylastIndexOfFrom", "ui": "\u003Cb\u003ECal.Collections.Array.lastIndexOfFrom\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Finds the index of the last occurrence at index less than or equal to \u003Ccode\u003EfromIndex\u003C/code\u003E of \u003Ccode\u003EvalueToFind\u003C/code\u003E\nin \u003Ccode\u003Earray\u003C/code\u003E or -1 if the value does not occur from \u003Ccode\u003EfromIndex\u003C/code\u003E and earlier.", "terminals": [{"name": "fromIndex", "input": "text"}, {"name": "array", "input": "text"}, {"name": "valueToFind", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.insertArrayAt", "name": "insertArrayAt", "type": "CalCollectionsArrayinsertArrayAt", "ui": "\u003Cb\u003ECal.Collections.Array.insertArrayAt\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Inserts values into a array at the specified index.", "terminals": [{"name": "valuesToInsert", "input": "text"}, {"name": "index", "input": "text"}, {"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.length", "name": "length", "type": "CalCollectionsArraylength", "ui": "\u003Cb\u003ECal.Collections.Array.length\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the length of the specified array. ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.subArray", "name": "subArray", "type": "CalCollectionsArraysubArray", "ui": "\u003Cb\u003ECal.Collections.Array.subArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Extracts a portion of the argument array as a new array.", "terminals": [{"name": "toIndex", "input": "text"}, {"name": "array", "input": "text"}, {"name": "fromIndex", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.concatArray", "name": "concatArray", "type": "CalCollectionsArrayconcatArray", "ui": "\u003Cb\u003ECal.Collections.Array.concatArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "listOfArrays", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.elementType_fromNonEmptyArray", "name": "elementType_fromNonEmptyArray", "type": "CalCollectionsArrayelementType_fromNonEmptyArray", "ui": "\u003Cb\u003ECal.Collections.Array.elementType_fromNonEmptyArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the element type for the underlying value type of the first (internal) value in\na non-empty array.", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.subscript", "name": "subscript", "type": "CalCollectionsArraysubscript", "ui": "\u003Cb\u003ECal.Collections.Array.subscript\u003C/b\u003E\u003Cbr/\u003E[CALDoc] \u003Ccode\u003Esubscript array index\u003C/code\u003E returns the nth element of the array where n = \u003Ccode\u003Eindex\u003C/code\u003E. ", "terminals": [{"name": "array", "input": "text"}, {"name": "index", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.elementType_fromValue", "name": "elementType_fromValue", "type": "CalCollectionsArrayelementType_fromValue", "ui": "\u003Cb\u003ECal.Collections.Array.elementType_fromValue\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the element type for the underlying value type of an internal value.", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.concatNonEmptyArrayInternal", "name": "concatNonEmptyArrayInternal", "type": "CalCollectionsArrayconcatNonEmptyArrayInternal", "ui": "\u003Cb\u003ECal.Collections.Array.concatNonEmptyArrayInternal\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "elementType", "input": "text"}, {"name": "listOfNonEmptyArrays", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.nonEmptyArrayValues", "name": "nonEmptyArrayValues", "type": "CalCollectionsArraynonEmptyArrayValues", "ui": "\u003Cb\u003ECal.Collections.Array.nonEmptyArrayValues\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Exposes the primitive array values held by the array argument. ", "terminals": [{"name": "array", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.jListToJObjectArray", "name": "jListToJObjectArray", "type": "CalCollectionsArrayjListToJObjectArray", "ui": "\u003Cb\u003ECal.Collections.Array.jListToJObjectArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "jList", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.isJList", "name": "isJList", "type": "CalCollectionsArrayisJList", "ui": "\u003Cb\u003ECal.Collections.Array.isJList\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": "_INPUT", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.system_arraycopy", "name": "system_arraycopy", "type": "CalCollectionsArraysystem_arraycopy", "ui": "\u003Cb\u003ECal.Collections.Array.system_arraycopy\u003C/b\u003E\u003Cbr/\u003E[CALDoc] ", "terminals": [{"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": null, "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.jGetElementType", "name": "jGetElementType", "type": "CalCollectionsArrayjGetElementType", "ui": "\u003Cb\u003ECal.Collections.Array.jGetElementType\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Returns the integer representation of the enumeration value (of type \u003Ccode\u003EArray.ElementType\u003C/code\u003E)\nfor the underlying value type of an internal value.", "terminals": [{"name": "value", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}, {"description": "Cal.Collections.Array.CharArray", "name": "CharArray", "type": "CalCollectionsArrayCharArray", "ui": "\u003Cb\u003ECal.Collections.Array.CharArray\u003C/b\u003E\u003Cbr/\u003E[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"char\"   \nsuch as the \u003Ccode\u003EPrelude.Char\u003C/code\u003E type. ", "terminals": [{"name": "values", "input": "text"}, {"name": "_OUTPUT", "output": "text"}], "tags": ["system:Cal.Collections.Array"]}]