
 JSON string
[{"description":"Cal.Core.Prelude.induceComparator","name":"induceComparator","type":"CalCorePreludeinduceComparator","ui":"<b>Cal.Core.Prelude.induceComparator<\/b><br\/>[CALDoc] Induces an comparator on a type <code>a<\/code> via projecting to a type <code>b<\/code> and using the <code>Ord<\/code> instance on <code>b<\/code>.","terminals":[{"name":"projectionFunction","input":"text"},{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maybeApply","name":"maybeApply","type":"CalCorePreludemaybeApply","ui":"<b>Cal.Core.Prelude.maybeApply<\/b><br\/>[CALDoc] Returns <code>Nothing<\/code> on <code>Nothing<\/code> or <code>Just (func maybeArg)<\/code> on <code>Just maybeArg<\/code>.","terminals":[{"name":"maybeArg","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absShort","name":"absShort","type":"CalCorePreludeabsShort","ui":"<b>Cal.Core.Prelude.absShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareDouble","name":"compareDouble","type":"CalCorePreludecompareDouble","ui":"<b>Cal.Core.Prelude.compareDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charactersToString","name":"charactersToString","type":"CalCorePreludecharactersToString","ui":"<b>Cal.Core.Prelude.charactersToString<\/b><br\/>[CALDoc] Converts the list of characters to a string.","terminals":[{"name":"listOfChars","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isDoubleType","name":"isDoubleType","type":"CalCorePreludeisDoubleType","ui":"<b>Cal.Core.Prelude.isDoubleType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of the <code>Double<\/code> type and <code>False<\/code> otherwise.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareComparable","name":"compareComparable","type":"CalCorePreludecompareComparable","ui":"<b>Cal.Core.Prelude.compareComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.tuple7","name":"tuple7","type":"CalCorePreludetuple7","ui":"<b>Cal.Core.Prelude.tuple7<\/b><br\/>[CALDoc] Creates a 7-tuple.","terminals":[{"name":"x7","input":"text"},{"name":"x4","input":"text"},{"name":"x3","input":"text"},{"name":"x2","input":"text"},{"name":"x5","input":"text"},{"name":"x1","input":"text"},{"name":"x6","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isRight","name":"isRight","type":"CalCorePreludeisRight","ui":"<b>Cal.Core.Prelude.isRight<\/b><br\/>[CALDoc] Returns <code>True<\/code> if <code>eitherValue<\/code> is a <code>Right<\/code> value and <code>False<\/code> otherwise.","terminals":[{"name":"eitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsObject","name":"notEqualsObject","type":"CalCorePreludenotEqualsObject","ui":"<b>Cal.Core.Prelude.notEqualsObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromLeft","name":"fromLeft","type":"CalCorePreludefromLeft","ui":"<b>Cal.Core.Prelude.fromLeft<\/b><br\/>[CALDoc] Extracts the <code>value<\/code> field of a <code>Left<\/code> value or terminates in an error if <code>eitherValue<\/code> is\na <code>Right<\/code> value.","terminals":[{"name":"eitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.tuple3","name":"tuple3","type":"CalCorePreludetuple3","ui":"<b>Cal.Core.Prelude.tuple3<\/b><br\/>[CALDoc] Creates a 3-tuple.","terminals":[{"name":"x3","input":"text"},{"name":"x2","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanDecimal","name":"lessThanDecimal","type":"CalCorePreludelessThanDecimal","ui":"<b>Cal.Core.Prelude.lessThanDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimalValue2","input":"text"},{"name":"decimalValue1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.comparatorToEqualityFunction","name":"comparatorToEqualityFunction","type":"CalCorePreludecomparatorToEqualityFunction","ui":"<b>Cal.Core.Prelude.comparatorToEqualityFunction<\/b><br\/>[CALDoc] Converts a comparator to an equality function. \n","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"comparator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isForeignType","name":"isForeignType","type":"CalCorePreludeisForeignType","ui":"<b>Cal.Core.Prelude.isForeignType<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if the type was declared with a foreign data declaration.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumInt","name":"signumInt","type":"CalCorePreludesignumInt","ui":"<b>Cal.Core.Prelude.signumInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.concatMap","name":"concatMap","type":"CalCorePreludeconcatMap","ui":"<b>Cal.Core.Prelude.concatMap<\/b><br\/>[CALDoc] <code>concatMap mapFunction list<\/code> applies <code>mapFunction<\/code> to each element of list and then concatenates the resulting\nlist. ","terminals":[{"name":"mapFunction","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareByte","name":"compareByte","type":"CalCorePreludecompareByte","ui":"<b>Cal.Core.Prelude.compareByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.emptyString","name":"emptyString","type":"CalCorePreludeemptyString","ui":"<b>Cal.Core.Prelude.emptyString<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.strictTuple6","name":"strictTuple6","type":"CalCorePreludestrictTuple6","ui":"<b>Cal.Core.Prelude.strictTuple6<\/b><br\/>[CALDoc] Creates a 6-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.","terminals":[{"name":"x2","input":"text"},{"name":"x6","input":"text"},{"name":"x4","input":"text"},{"name":"x1","input":"text"},{"name":"x3","input":"text"},{"name":"x5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testPreludeModule","name":"testPreludeModule","type":"CalCorePreludetestPreludeModule","ui":"<b>Cal.Core.Prelude.testPreludeModule<\/b><br\/>[CALDoc] Tests all the examples in the Prelude module.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumCheckedInt","name":"intToEnumCheckedInt","type":"CalCorePreludeintToEnumCheckedInt","ui":"<b>Cal.Core.Prelude.intToEnumCheckedInt<\/b><br\/>[CALDoc] The <code>intToEnum<\/code> instance function for the <code>Int<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToInteger","name":"floatToInteger","type":"CalCorePreludefloatToInteger","ui":"<b>Cal.Core.Prelude.floatToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"floatValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareInteger","name":"compareInteger","type":"CalCorePreludecompareInteger","ui":"<b>Cal.Core.Prelude.compareInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToInteger","name":"shortToInteger","type":"CalCorePreludeshortToInteger","ui":"<b>Cal.Core.Prelude.shortToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"shortValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.field2","name":"field2","type":"CalCorePreludefield2","ui":"<b>Cal.Core.Prelude.field2<\/b><br\/>[CALDoc] Extracts the second field of the specified tuple \/ the ordinal field <code>#2<\/code> of the specified record.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsRecordExamples","name":"equalsRecordExamples","type":"CalCorePreludeequalsRecordExamples","ui":"<b>Cal.Core.Prelude.equalsRecordExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.tuple5","name":"tuple5","type":"CalCorePreludetuple5","ui":"<b>Cal.Core.Prelude.tuple5<\/b><br\/>[CALDoc] Creates a 5-tuple.","terminals":[{"name":"x4","input":"text"},{"name":"x2","input":"text"},{"name":"x1","input":"text"},{"name":"x3","input":"text"},{"name":"x5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minDefault","name":"minDefault","type":"CalCorePreludeminDefault","ui":"<b>Cal.Core.Prelude.minDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.strictTuple4","name":"strictTuple4","type":"CalCorePreludestrictTuple4","ui":"<b>Cal.Core.Prelude.strictTuple4<\/b><br\/>[CALDoc] Creates a 4-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.","terminals":[{"name":"x3","input":"text"},{"name":"x4","input":"text"},{"name":"x2","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputBooleanToJObject","name":"outputBooleanToJObject","type":"CalCorePreludeoutputBooleanToJObject","ui":"<b>Cal.Core.Prelude.outputBooleanToJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"booleanValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minRecord","name":"minRecord","type":"CalCorePreludeminRecord","ui":"<b>Cal.Core.Prelude.minRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"r1","input":"text"},{"name":"r2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isPreludeNumTypeExamples","name":"isPreludeNumTypeExamples","type":"CalCorePreludeisPreludeNumTypeExamples","ui":"<b>Cal.Core.Prelude.isPreludeNumTypeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isPreludeNumType","name":"isPreludeNumType","type":"CalCorePreludeisPreludeNumType","ui":"<b>Cal.Core.Prelude.isPreludeNumType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of one of the types defined in the Prelude\nmodule as instances of the <code>Num<\/code> type class (<code>Byte<\/code>, <code>Short<\/code>, <code>Int<\/code>,\n<code>Long<\/code>, <code>Float<\/code>, <code>Double<\/code>, <code>Integer<\/code>) or <code>Decimal<\/code>\nand False otherwise.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.sameRootTypeExamples","name":"sameRootTypeExamples","type":"CalCorePreludesameRootTypeExamples","ui":"<b>Cal.Core.Prelude.sameRootTypeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.sameRootType","name":"sameRootType","type":"CalCorePreludesameRootType","ui":"<b>Cal.Core.Prelude.sameRootType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation of the root types of the 2 arguments are the same.","terminals":[{"name":"typeRep1","input":"text"},{"name":"typeRep2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.until","name":"until","type":"CalCorePreludeuntil","ui":"<b>Cal.Core.Prelude.until<\/b><br\/>[CALDoc] Keeps applying <code>iterationFunction<\/code> until <code>stopConditionFunction<\/code> holds.","terminals":[{"name":"iterationFunction","input":"text"},{"name":"initialValue","input":"text"},{"name":"stopConditionFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.const","name":"const","type":"CalCorePreludeconst","ui":"<b>Cal.Core.Prelude.const<\/b><br\/>[CALDoc] A constant function.","terminals":[{"name":"valueToIgnore","input":"text"},{"name":"valueToReturn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanDefault","name":"greaterThanDefault","type":"CalCorePreludegreaterThanDefault","ui":"<b>Cal.Core.Prelude.greaterThanDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderByte","name":"remainderByte","type":"CalCorePreluderemainderByte","ui":"<b>Cal.Core.Prelude.remainderByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minShort","name":"minShort","type":"CalCorePreludeminShort","ui":"<b>Cal.Core.Prelude.minShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumByte","name":"signumByte","type":"CalCorePreludesignumByte","ui":"<b>Cal.Core.Prelude.signumByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsDefault","name":"notEqualsDefault","type":"CalCorePreludenotEqualsDefault","ui":"<b>Cal.Core.Prelude.notEqualsDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeRepToStringExamples","name":"typeRepToStringExamples","type":"CalCorePreludetypeRepToStringExamples","ui":"<b>Cal.Core.Prelude.typeRepToStringExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyByte","name":"multiplyByte","type":"CalCorePreludemultiplyByte","ui":"<b>Cal.Core.Prelude.multiplyByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputMaybe","name":"outputMaybe","type":"CalCorePreludeoutputMaybe","ui":"<b>Cal.Core.Prelude.outputMaybe<\/b><br\/>[CALDoc] ","terminals":[{"name":"maybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.field6","name":"field6","type":"CalCorePreludefield6","ui":"<b>Cal.Core.Prelude.field6<\/b><br\/>[CALDoc] Extracts the sixth field of the specified tuple \/ the ordinal field <code>#6<\/code> of the specified record.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isRecordTypeExamples","name":"isRecordTypeExamples","type":"CalCorePreludeisRecordTypeExamples","ui":"<b>Cal.Core.Prelude.isRecordTypeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.strict","name":"strict","type":"CalCorePreludestrict","ui":"<b>Cal.Core.Prelude.strict<\/b><br\/>[CALDoc] Strict function application. ","terminals":[{"name":"f","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maybeToList","name":"maybeToList","type":"CalCorePreludemaybeToList","ui":"<b>Cal.Core.Prelude.maybeToList<\/b><br\/>[CALDoc] Returns an empty list when given <code>Nothing<\/code> or a singleton list when not given <code>Nothing<\/code>.","terminals":[{"name":"maybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.snd","name":"snd","type":"CalCorePreludesnd","ui":"<b>Cal.Core.Prelude.snd<\/b><br\/>[CALDoc] Extracts the second component of a pair.","terminals":[{"name":"pair","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsInteger","name":"greaterThanEqualsInteger","type":"CalCorePreludegreaterThanEqualsInteger","ui":"<b>Cal.Core.Prelude.greaterThanEqualsInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isEmptyString","name":"isEmptyString","type":"CalCorePreludeisEmptyString","ui":"<b>Cal.Core.Prelude.isEmptyString<\/b><br\/>[CALDoc] ","terminals":[{"name":"stringValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minByte","name":"minByte","type":"CalCorePreludeminByte","ui":"<b>Cal.Core.Prelude.minByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.castExamples","name":"castExamples","type":"CalCorePreludecastExamples","ui":"<b>Cal.Core.Prelude.castExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareDecimal","name":"compareDecimal","type":"CalCorePreludecompareDecimal","ui":"<b>Cal.Core.Prelude.compareDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimalValue1","input":"text"},{"name":"decimalValue2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.curry","name":"curry","type":"CalCorePreludecurry","ui":"<b>Cal.Core.Prelude.curry<\/b><br\/>[CALDoc] Converts a function of a single pair argument to a function accepting 2 input arguments.\n","terminals":[{"name":"x","input":"text"},{"name":"f","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideByte","name":"divideByte","type":"CalCorePreludedivideByte","ui":"<b>Cal.Core.Prelude.divideByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.field7","name":"field7","type":"CalCorePreludefield7","ui":"<b>Cal.Core.Prelude.field7<\/b><br\/>[CALDoc] Extracts the seventh field of the specified tuple \/ the ordinal field <code>#7<\/code> of the specified record.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumShort","name":"intToEnumShort","type":"CalCorePreludeintToEnumShort","ui":"<b>Cal.Core.Prelude.intToEnumShort<\/b><br\/>[CALDoc] The <code>intToEnum<\/code> instance function for the <code>Short<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isEmptyOrdering","name":"isEmptyOrdering","type":"CalCorePreludeisEmptyOrdering","ui":"<b>Cal.Core.Prelude.isEmptyOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"ordering","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateShort","name":"negateShort","type":"CalCorePreludenegateShort","ui":"<b>Cal.Core.Prelude.negateShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeRepToString","name":"typeRepToString","type":"CalCorePreludetypeRepToString","ui":"<b>Cal.Core.Prelude.typeRepToString<\/b><br\/>[CALDoc] Returns the canonical string representation of a <code>TypeRep<\/code> value.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxChar","name":"maxChar","type":"CalCorePreludemaxChar","ui":"<b>Cal.Core.Prelude.maxChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.strictTuple3","name":"strictTuple3","type":"CalCorePreludestrictTuple3","ui":"<b>Cal.Core.Prelude.strictTuple3<\/b><br\/>[CALDoc] Creates a 3-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.","terminals":[{"name":"x3","input":"text"},{"name":"x2","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToDecimal","name":"shortToDecimal","type":"CalCorePreludeshortToDecimal","ui":"<b>Cal.Core.Prelude.shortToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"shortValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testMaybeInstances","name":"testMaybeInstances","type":"CalCorePreludetestMaybeInstances","ui":"<b>Cal.Core.Prelude.testMaybeInstances<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.concatList","name":"concatList","type":"CalCorePreludeconcatList","ui":"<b>Cal.Core.Prelude.concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.downFrom","name":"downFrom","type":"CalCorePreludedownFrom","ui":"<b>Cal.Core.Prelude.downFrom<\/b><br\/>[CALDoc] <code>downFrom start<\/code> creates the infinite list <code>[start, start - 1, start - 2, ...]<\/code>.","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.and","name":"and","type":"CalCorePreludeand","ui":"<b>Cal.Core.Prelude.and<\/b><br\/>[CALDoc] Returns the result of a logical AND operation on the two arguments.","terminals":[{"name":"b","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideShort","name":"divideShort","type":"CalCorePreludedivideShort","ui":"<b>Cal.Core.Prelude.divideShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isNothing","name":"isNothing","type":"CalCorePreludeisNothing","ui":"<b>Cal.Core.Prelude.isNothing<\/b><br\/>[CALDoc] Returns <code>True<\/code> iff the argument is <code>Nothing<\/code>.","terminals":[{"name":"maybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputEither","name":"outputEither","type":"CalCorePreludeoutputEither","ui":"<b>Cal.Core.Prelude.outputEither<\/b><br\/>[CALDoc] ","terminals":[{"name":"eitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsComparable","name":"greaterThanEqualsComparable","type":"CalCorePreludegreaterThanEqualsComparable","ui":"<b>Cal.Core.Prelude.greaterThanEqualsComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.ordinalValueExamples","name":"ordinalValueExamples","type":"CalCorePreludeordinalValueExamples","ui":"<b>Cal.Core.Prelude.ordinalValueExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareInt","name":"compareInt","type":"CalCorePreludecompareInt","ui":"<b>Cal.Core.Prelude.compareInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanDefault","name":"lessThanDefault","type":"CalCorePreludelessThanDefault","ui":"<b>Cal.Core.Prelude.lessThanDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.emptyList","name":"emptyList","type":"CalCorePreludeemptyList","ui":"<b>Cal.Core.Prelude.emptyList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.nTypeArguments","name":"nTypeArguments","type":"CalCorePreludenTypeArguments","ui":"<b>Cal.Core.Prelude.nTypeArguments<\/b><br\/>[CALDoc] Returns the number of type arguments. i.e. <code>nTypeArguments typeRep == length (typeArguments typeRep)<\/code>.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsDecimal","name":"lessThanEqualsDecimal","type":"CalCorePreludelessThanEqualsDecimal","ui":"<b>Cal.Core.Prelude.lessThanEqualsDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimalValue1","input":"text"},{"name":"decimalValue2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanRecord","name":"greaterThanRecord","type":"CalCorePreludegreaterThanRecord","ui":"<b>Cal.Core.Prelude.greaterThanRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"r1","input":"text"},{"name":"r2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractByte","name":"subtractByte","type":"CalCorePreludesubtractByte","ui":"<b>Cal.Core.Prelude.subtractByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addByte","name":"addByte","type":"CalCorePreludeaddByte","ui":"<b>Cal.Core.Prelude.addByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.makeQuery","name":"makeQuery","type":"CalCorePreludemakeQuery","ui":"<b>Cal.Core.Prelude.makeQuery<\/b><br\/>[CALDoc] <code>makeQuery defaultResult f x<\/code> behaves as follows: if <code>x<\/code>'s type is the same as <code>f<\/code>'s\nargument type, use <code>f<\/code> to interrogate <code>x<\/code>; otherwise return <code>defaultResult<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"x","input":"text"},{"name":"defaultResult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanInteger","name":"lessThanInteger","type":"CalCorePreludelessThanInteger","ui":"<b>Cal.Core.Prelude.lessThanInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsRecord","name":"greaterThanEqualsRecord","type":"CalCorePreludegreaterThanEqualsRecord","ui":"<b>Cal.Core.Prelude.greaterThanEqualsRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"r1","input":"text"},{"name":"r2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateByte","name":"negateByte","type":"CalCorePreludenegateByte","ui":"<b>Cal.Core.Prelude.negateByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareChar","name":"compareChar","type":"CalCorePreludecompareChar","ui":"<b>Cal.Core.Prelude.compareChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxShort","name":"maxShort","type":"CalCorePreludemaxShort","ui":"<b>Cal.Core.Prelude.maxShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.flip","name":"flip","type":"CalCorePreludeflip","ui":"<b>Cal.Core.Prelude.flip<\/b><br\/>[CALDoc] <code>flip<\/code> converts a function of 2 arguments to another function of 2 arguments that accepts its\narguments in the opposite order. ","terminals":[{"name":"y","input":"text"},{"name":"f","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputCalValueStrict","name":"outputCalValueStrict","type":"CalCorePreludeoutputCalValueStrict","ui":"<b>Cal.Core.Prelude.outputCalValueStrict<\/b><br\/>[CALDoc] When <code>outputCalValueStrict calValue<\/code> is evaluated, the argument <code>calValue<\/code> is first evaluated to weak-head normal form itself,\nand then converted to a Java object that is suitable for external Java clients to use as a handle to the <code>calValue<\/code>. \n","terminals":[{"name":"calValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.concatString","name":"concatString","type":"CalCorePreludeconcatString","ui":"<b>Cal.Core.Prelude.concatString<\/b><br\/>[CALDoc] ","terminals":[{"name":"listOfStrings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsRecordType","name":"notEqualsRecordType","type":"CalCorePreludenotEqualsRecordType","ui":"<b>Cal.Core.Prelude.notEqualsRecordType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dictionary1","input":"text"},{"name":"dictionary2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsRecordType","name":"equalsRecordType","type":"CalCorePreludeequalsRecordType","ui":"<b>Cal.Core.Prelude.equalsRecordType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dictionary1","input":"text"},{"name":"dictionary2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.triple","name":"triple","type":"CalCorePreludetriple","ui":"<b>Cal.Core.Prelude.triple<\/b><br\/>[CALDoc] Creates a triple (3-tuple).","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"z","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.truncate","name":"truncate","type":"CalCorePreludetruncate","ui":"<b>Cal.Core.Prelude.truncate<\/b><br\/>[CALDoc] Truncates a number towards 0.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isStringType","name":"isStringType","type":"CalCorePreludeisStringType","ui":"<b>Cal.Core.Prelude.isStringType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of the <code>String<\/code> type and <code>False<\/code> otherwise.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isListTypeExamples","name":"isListTypeExamples","type":"CalCorePreludeisListTypeExamples","ui":"<b>Cal.Core.Prelude.isListTypeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsDefault","name":"lessThanEqualsDefault","type":"CalCorePreludelessThanEqualsDefault","ui":"<b>Cal.Core.Prelude.lessThanEqualsDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToDecimal","name":"intToDecimal","type":"CalCorePreludeintToDecimal","ui":"<b>Cal.Core.Prelude.intToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.tuple2","name":"tuple2","type":"CalCorePreludetuple2","ui":"<b>Cal.Core.Prelude.tuple2<\/b><br\/>[CALDoc] Creates a 2-tuple.","terminals":[{"name":"x1","input":"text"},{"name":"x2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputRecord","name":"inputRecord","type":"CalCorePreludeinputRecord","ui":"<b>Cal.Core.Prelude.inputRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"record","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isMaybeTypeExamples","name":"isMaybeTypeExamples","type":"CalCorePreludeisMaybeTypeExamples","ui":"<b>Cal.Core.Prelude.isMaybeTypeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isMaybeType","name":"isMaybeType","type":"CalCorePreludeisMaybeType","ui":"<b>Cal.Core.Prelude.isMaybeType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of the <code>Maybe<\/code> type and <code>False<\/code> otherwise.\n","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isCharType","name":"isCharType","type":"CalCorePreludeisCharType","ui":"<b>Cal.Core.Prelude.isCharType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of the <code>Char<\/code> type and <code>False<\/code> otherwise.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareShort","name":"compareShort","type":"CalCorePreludecompareShort","ui":"<b>Cal.Core.Prelude.compareShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxComparable","name":"maxComparable","type":"CalCorePreludemaxComparable","ui":"<b>Cal.Core.Prelude.maxComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumInstances","name":"testEnumInstances","type":"CalCorePreludetestEnumInstances","ui":"<b>Cal.Core.Prelude.testEnumInstances<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumBooleanInstance","name":"testEnumBooleanInstance","type":"CalCorePreludetestEnumBooleanInstance","ui":"<b>Cal.Core.Prelude.testEnumBooleanInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromBooleanExamples","name":"upFromBooleanExamples","type":"CalCorePreludeupFromBooleanExamples","ui":"<b>Cal.Core.Prelude.upFromBooleanExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromBoolean","name":"upFromBoolean","type":"CalCorePreludeupFromBoolean","ui":"<b>Cal.Core.Prelude.upFromBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumFloatInstance","name":"testEnumFloatInstance","type":"CalCorePreludetestEnumFloatInstance","ui":"<b>Cal.Core.Prelude.testEnumFloatInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumDoubleInstance","name":"testEnumDoubleInstance","type":"CalCorePreludetestEnumDoubleInstance","ui":"<b>Cal.Core.Prelude.testEnumDoubleInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToDoubleExamples","name":"upFromToDoubleExamples","type":"CalCorePreludeupFromToDoubleExamples","ui":"<b>Cal.Core.Prelude.upFromToDoubleExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToDouble","name":"upFromToDouble","type":"CalCorePreludeupFromToDouble","ui":"<b>Cal.Core.Prelude.upFromToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenDoubleExamples","name":"upFromThenDoubleExamples","type":"CalCorePreludeupFromThenDoubleExamples","ui":"<b>Cal.Core.Prelude.upFromThenDoubleExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumLongInstance","name":"testEnumLongInstance","type":"CalCorePreludetestEnumLongInstance","ui":"<b>Cal.Core.Prelude.testEnumLongInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToLongExamples","name":"upFromThenToLongExamples","type":"CalCorePreludeupFromThenToLongExamples","ui":"<b>Cal.Core.Prelude.upFromThenToLongExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToLongExamples","name":"upFromToLongExamples","type":"CalCorePreludeupFromToLongExamples","ui":"<b>Cal.Core.Prelude.upFromToLongExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToLong","name":"upFromToLong","type":"CalCorePreludeupFromToLong","ui":"<b>Cal.Core.Prelude.upFromToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumIntInstance","name":"testEnumIntInstance","type":"CalCorePreludetestEnumIntInstance","ui":"<b>Cal.Core.Prelude.testEnumIntInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenIntExamples","name":"upFromThenIntExamples","type":"CalCorePreludeupFromThenIntExamples","ui":"<b>Cal.Core.Prelude.upFromThenIntExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenInt","name":"upFromThenInt","type":"CalCorePreludeupFromThenInt","ui":"<b>Cal.Core.Prelude.upFromThenInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromIntExamples","name":"upFromIntExamples","type":"CalCorePreludeupFromIntExamples","ui":"<b>Cal.Core.Prelude.upFromIntExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.induceEqualityFunction","name":"induceEqualityFunction","type":"CalCorePreludeinduceEqualityFunction","ui":"<b>Cal.Core.Prelude.induceEqualityFunction<\/b><br\/>[CALDoc] Induces an equality function on a type <code>a<\/code> via projecting to a type <code>b<\/code> and using the <code>Eq<\/code> instance\non <code>b<\/code>.","terminals":[{"name":"projectionFunction","input":"text"},{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToIntExamples","name":"upFromToIntExamples","type":"CalCorePreludeupFromToIntExamples","ui":"<b>Cal.Core.Prelude.upFromToIntExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToInt","name":"upFromToInt","type":"CalCorePreludeupFromToInt","ui":"<b>Cal.Core.Prelude.upFromToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isIntType","name":"isIntType","type":"CalCorePreludeisIntType","ui":"<b>Cal.Core.Prelude.isIntType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of the <code>Int<\/code> type and <code>False<\/code> otherwise.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.tuple4","name":"tuple4","type":"CalCorePreludetuple4","ui":"<b>Cal.Core.Prelude.tuple4<\/b><br\/>[CALDoc] Creates a 4-tuple.","terminals":[{"name":"x1","input":"text"},{"name":"x2","input":"text"},{"name":"x3","input":"text"},{"name":"x4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromFloatExamples","name":"upFromFloatExamples","type":"CalCorePreludeupFromFloatExamples","ui":"<b>Cal.Core.Prelude.upFromFloatExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToInteger","name":"intToInteger","type":"CalCorePreludeintToInteger","ui":"<b>Cal.Core.Prelude.intToInteger<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> value to the corresponding <code>Integer<\/code> value.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanListExamples","name":"greaterThanListExamples","type":"CalCorePreludegreaterThanListExamples","ui":"<b>Cal.Core.Prelude.greaterThanListExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputListFromJObject","name":"inputListFromJObject","type":"CalCorePreludeinputListFromJObject","ui":"<b>Cal.Core.Prelude.inputListFromJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.listFromJIterator","name":"listFromJIterator","type":"CalCorePreludelistFromJIterator","ui":"<b>Cal.Core.Prelude.listFromJIterator<\/b><br\/>[CALDoc] Converts a Java iterator to a CAL list.","terminals":[{"name":"iterator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.listFromJCollection","name":"listFromJCollection","type":"CalCorePreludelistFromJCollection","ui":"<b>Cal.Core.Prelude.listFromJCollection<\/b><br\/>[CALDoc] Converts a Java collection to a CAL list.","terminals":[{"name":"collection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.listFromJCollectionWith","name":"listFromJCollectionWith","type":"CalCorePreludelistFromJCollectionWith","ui":"<b>Cal.Core.Prelude.listFromJCollectionWith<\/b><br\/>[CALDoc] Converts a Java collection to a CAL list using the element mapping function <code>f<\/code> of type <code>JObject -&gt; a<\/code> \nto convert elements of the Java list.","terminals":[{"name":"elementMappingFunction","input":"text"},{"name":"javaCollection","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.listFromJIteratorWith","name":"listFromJIteratorWith","type":"CalCorePreludelistFromJIteratorWith","ui":"<b>Cal.Core.Prelude.listFromJIteratorWith<\/b><br\/>[CALDoc] Converts a Java iterator to a CAL list using the element mapping function <code>f<\/code> of \ntype <code>JObject -&gt; a<\/code> to convert iteration elements.","terminals":[{"name":"_INPUT","input":"text"},{"name":"elementMappingFunction","input":"text"},{"name":"iterator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromInt","name":"upFromInt","type":"CalCorePreludeupFromInt","ui":"<b>Cal.Core.Prelude.upFromInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.map","name":"map","type":"CalCorePreludemap","ui":"<b>Cal.Core.Prelude.map<\/b><br\/>[CALDoc] <code>map mapFunction list<\/code> applies the function <code>mapFunction<\/code> to each element of the list and returns\nthe resulting list.","terminals":[{"name":"mapFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundLong","name":"maxBoundLong","type":"CalCorePreludemaxBoundLong","ui":"<b>Cal.Core.Prelude.maxBoundLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractShort","name":"subtractShort","type":"CalCorePreludesubtractShort","ui":"<b>Cal.Core.Prelude.subtractShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.appendStringExamples","name":"appendStringExamples","type":"CalCorePreludeappendStringExamples","ui":"<b>Cal.Core.Prelude.appendStringExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputListToJObject","name":"outputListToJObject","type":"CalCorePreludeoutputListToJObject","ui":"<b>Cal.Core.Prelude.outputListToJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputList","name":"outputList","type":"CalCorePreludeoutputList","ui":"<b>Cal.Core.Prelude.outputList<\/b><br\/>[CALDoc] Converts a CAL list to a Java list.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromJust","name":"fromJust","type":"CalCorePreludefromJust","ui":"<b>Cal.Core.Prelude.fromJust<\/b><br\/>[CALDoc] Extracts the element out of a <code>Just<\/code> or terminates in an error if the <code>Maybe<\/code> value\nis <code>Nothing<\/code>.","terminals":[{"name":"maybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumCheckedShort","name":"intToEnumCheckedShort","type":"CalCorePreludeintToEnumCheckedShort","ui":"<b>Cal.Core.Prelude.intToEnumCheckedShort<\/b><br\/>[CALDoc] The <code>intToEnumChecked<\/code> instance function for the <code>Short<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareLong","name":"compareLong","type":"CalCorePreludecompareLong","ui":"<b>Cal.Core.Prelude.compareLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputEither","name":"inputEither","type":"CalCorePreludeinputEither","ui":"<b>Cal.Core.Prelude.inputEither<\/b><br\/>[CALDoc] ","terminals":[{"name":"javaEitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jEitherToEither","name":"jEitherToEither","type":"CalCorePreludejEitherToEither","ui":"<b>Cal.Core.Prelude.jEitherToEither<\/b><br\/>[CALDoc] ","terminals":[{"name":"javaEitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.appendList","name":"appendList","type":"CalCorePreludeappendList","ui":"<b>Cal.Core.Prelude.appendList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list1","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.deepStrict","name":"deepStrict","type":"CalCorePreludedeepStrict","ui":"<b>Cal.Core.Prelude.deepStrict<\/b><br\/>[CALDoc] Strict function application. ","terminals":[{"name":"x","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumCharInstance","name":"testEnumCharInstance","type":"CalCorePreludetestEnumCharInstance","ui":"<b>Cal.Core.Prelude.testEnumCharInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToCharExamples","name":"upFromThenToCharExamples","type":"CalCorePreludeupFromThenToCharExamples","ui":"<b>Cal.Core.Prelude.upFromThenToCharExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToCharExamples","name":"upFromToCharExamples","type":"CalCorePreludeupFromToCharExamples","ui":"<b>Cal.Core.Prelude.upFromToCharExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenCharExamples","name":"upFromThenCharExamples","type":"CalCorePreludeupFromThenCharExamples","ui":"<b>Cal.Core.Prelude.upFromThenCharExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.strictTuple7","name":"strictTuple7","type":"CalCorePreludestrictTuple7","ui":"<b>Cal.Core.Prelude.strictTuple7<\/b><br\/>[CALDoc] Creates a 7-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.","terminals":[{"name":"x2","input":"text"},{"name":"x5","input":"text"},{"name":"x4","input":"text"},{"name":"x1","input":"text"},{"name":"x7","input":"text"},{"name":"x3","input":"text"},{"name":"x6","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.asTypeOf","name":"asTypeOf","type":"CalCorePreludeasTypeOf","ui":"<b>Cal.Core.Prelude.asTypeOf<\/b><br\/>[CALDoc] <code>asTypeOf<\/code> is a type-restricted version of <code>const<\/code>. ","terminals":[{"name":"valueToIgnore","input":"text"},{"name":"valueToReturn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputOrdering","name":"outputOrdering","type":"CalCorePreludeoutputOrdering","ui":"<b>Cal.Core.Prelude.outputOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"orderingValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanComparable","name":"greaterThanComparable","type":"CalCorePreludegreaterThanComparable","ui":"<b>Cal.Core.Prelude.greaterThanComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.makeTransform","name":"makeTransform","type":"CalCorePreludemakeTransform","ui":"<b>Cal.Core.Prelude.makeTransform<\/b><br\/>[CALDoc] <code>makeTransform f x<\/code> applies <code>f<\/code> to <code>x<\/code> if <code>x<\/code>'s type is the same as <code>f<\/code>'s argument type,\nand otherwise applies the identity function <code>Prelude.id<\/code> to <code>x<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.cast","name":"cast","type":"CalCorePreludecast","ui":"<b>Cal.Core.Prelude.cast<\/b><br\/>[CALDoc] Casts the argument value to the desired return type in a type-safe fashion.\n","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToFloatExamples","name":"upFromToFloatExamples","type":"CalCorePreludeupFromToFloatExamples","ui":"<b>Cal.Core.Prelude.upFromToFloatExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToFloat","name":"upFromToFloat","type":"CalCorePreludeupFromToFloat","ui":"<b>Cal.Core.Prelude.upFromToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromFloat","name":"upFromFloat","type":"CalCorePreludeupFromFloat","ui":"<b>Cal.Core.Prelude.upFromFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.pair","name":"pair","type":"CalCorePreludepair","ui":"<b>Cal.Core.Prelude.pair<\/b><br\/>[CALDoc] Creates a pair (2-tuple).","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToInteger","name":"doubleToInteger","type":"CalCorePreludedoubleToInteger","ui":"<b>Cal.Core.Prelude.doubleToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"doubleValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxDefault","name":"maxDefault","type":"CalCorePreludemaxDefault","ui":"<b>Cal.Core.Prelude.maxDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxRecord","name":"maxRecord","type":"CalCorePreludemaxRecord","ui":"<b>Cal.Core.Prelude.maxRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"r2","input":"text"},{"name":"r1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsDefault","name":"greaterThanEqualsDefault","type":"CalCorePreludegreaterThanEqualsDefault","ui":"<b>Cal.Core.Prelude.greaterThanEqualsDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToDecimal","name":"byteToDecimal","type":"CalCorePreludebyteToDecimal","ui":"<b>Cal.Core.Prelude.byteToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"byteValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToChar","name":"upFromToChar","type":"CalCorePreludeupFromToChar","ui":"<b>Cal.Core.Prelude.upFromToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputMaybe","name":"inputMaybe","type":"CalCorePreludeinputMaybe","ui":"<b>Cal.Core.Prelude.inputMaybe<\/b><br\/>[CALDoc] ","terminals":[{"name":"javaMaybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.concatDefault","name":"concatDefault","type":"CalCorePreludeconcatDefault","ui":"<b>Cal.Core.Prelude.concatDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.foldRight","name":"foldRight","type":"CalCorePreludefoldRight","ui":"<b>Cal.Core.Prelude.foldRight<\/b><br\/>[CALDoc] Similar to <code>Cal.Collections.List.foldLeft<\/code>, except that the folding process on the list is started with its rightmost element.\n","terminals":[{"name":"list","input":"text"},{"name":"initialValue","input":"text"},{"name":"foldFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToBooleanExamples","name":"upFromToBooleanExamples","type":"CalCorePreludeupFromToBooleanExamples","ui":"<b>Cal.Core.Prelude.upFromToBooleanExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jMaybeToMaybe","name":"jMaybeToMaybe","type":"CalCorePreludejMaybeToMaybe","ui":"<b>Cal.Core.Prelude.jMaybeToMaybe<\/b><br\/>[CALDoc] ","terminals":[{"name":"javaMaybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumOrderingInstance","name":"testEnumOrderingInstance","type":"CalCorePreludetestEnumOrderingInstance","ui":"<b>Cal.Core.Prelude.testEnumOrderingInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToOrderingExamples","name":"upFromThenToOrderingExamples","type":"CalCorePreludeupFromThenToOrderingExamples","ui":"<b>Cal.Core.Prelude.upFromThenToOrderingExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToOrderingExamples","name":"upFromToOrderingExamples","type":"CalCorePreludeupFromToOrderingExamples","ui":"<b>Cal.Core.Prelude.upFromToOrderingExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenOrderingExamples","name":"upFromThenOrderingExamples","type":"CalCorePreludeupFromThenOrderingExamples","ui":"<b>Cal.Core.Prelude.upFromThenOrderingExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromOrderingExamples","name":"upFromOrderingExamples","type":"CalCorePreludeupFromOrderingExamples","ui":"<b>Cal.Core.Prelude.upFromOrderingExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.either","name":"either","type":"CalCorePreludeeither","ui":"<b>Cal.Core.Prelude.either<\/b><br\/>[CALDoc] Applies one of the two specified functions to a value encapsulated by an <code>Either<\/code> type.\n","terminals":[{"name":"eitherValue","input":"text"},{"name":"rightFunction","input":"text"},{"name":"leftFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToIntExamples","name":"upFromThenToIntExamples","type":"CalCorePreludeupFromThenToIntExamples","ui":"<b>Cal.Core.Prelude.upFromThenToIntExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToInt","name":"upFromThenToInt","type":"CalCorePreludeupFromThenToInt","ui":"<b>Cal.Core.Prelude.upFromThenToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByDownToInt","name":"upFromByDownToInt","type":"CalCorePreludeupFromByDownToInt","ui":"<b>Cal.Core.Prelude.upFromByDownToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"step","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByUpToInt","name":"upFromByUpToInt","type":"CalCorePreludeupFromByUpToInt","ui":"<b>Cal.Core.Prelude.upFromByUpToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"step","input":"text"},{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.strictTuple5","name":"strictTuple5","type":"CalCorePreludestrictTuple5","ui":"<b>Cal.Core.Prelude.strictTuple5<\/b><br\/>[CALDoc] Creates a 5-tuple value, but ensures that the fields are evaluated (to weak-head normal form) prior to returning.","terminals":[{"name":"x1","input":"text"},{"name":"x4","input":"text"},{"name":"x2","input":"text"},{"name":"x3","input":"text"},{"name":"x5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divMod","name":"divMod","type":"CalCorePreludedivMod","ui":"<b>Cal.Core.Prelude.divMod<\/b><br\/>[CALDoc] Simultaneous <code>divide<\/code> and <code>remainder<\/code> (or modulus) on <code>Int<\/code> values.","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsTypeReps","name":"equalsTypeReps","type":"CalCorePreludeequalsTypeReps","ui":"<b>Cal.Core.Prelude.equalsTypeReps<\/b><br\/>[CALDoc] ","terminals":[{"name":"typeReps1","input":"text"},{"name":"typeReps2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeOfRecord","name":"typeOfRecord","type":"CalCorePreludetypeOfRecord","ui":"<b>Cal.Core.Prelude.typeOfRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"recordValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToDoubleExamples","name":"upFromThenToDoubleExamples","type":"CalCorePreludeupFromThenToDoubleExamples","ui":"<b>Cal.Core.Prelude.upFromThenToDoubleExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.field1","name":"field1","type":"CalCorePreludefield1","ui":"<b>Cal.Core.Prelude.field1<\/b><br\/>[CALDoc] Extracts the first field of the specified tuple \/ the ordinal field <code>#1<\/code> of the specified record.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumLong","name":"signumLong","type":"CalCorePreludesignumLong","ui":"<b>Cal.Core.Prelude.signumLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromMaybe","name":"fromMaybe","type":"CalCorePreludefromMaybe","ui":"<b>Cal.Core.Prelude.fromMaybe<\/b><br\/>[CALDoc] Extracts the element out of a <code>Just<\/code> or returns the specified default value if the <code>Maybe<\/code> value\nis <code>Nothing<\/code>.","terminals":[{"name":"maybeValue","input":"text"},{"name":"defaultValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsTypeReps","name":"notEqualsTypeReps","type":"CalCorePreludenotEqualsTypeReps","ui":"<b>Cal.Core.Prelude.notEqualsTypeReps<\/b><br\/>[CALDoc] ","terminals":[{"name":"typeReps2","input":"text"},{"name":"typeReps1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.field3","name":"field3","type":"CalCorePreludefield3","ui":"<b>Cal.Core.Prelude.field3<\/b><br\/>[CALDoc] Extracts the third field of the specified tuple \/ the ordinal field <code>#3<\/code> of the specified record.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absByte","name":"absByte","type":"CalCorePreludeabsByte","ui":"<b>Cal.Core.Prelude.absByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromRight","name":"fromRight","type":"CalCorePreludefromRight","ui":"<b>Cal.Core.Prelude.fromRight<\/b><br\/>[CALDoc] Extracts the <code>value<\/code> field of a <code>Right<\/code> value or terminates in an error if <code>eitherValue<\/code> is\na <code>Left<\/code> value.","terminals":[{"name":"eitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputJObject","name":"outputJObject","type":"CalCorePreludeoutputJObject","ui":"<b>Cal.Core.Prelude.outputJObject<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type that is not one of the \nprimitive Java types char, boolean, byte, short, int, long, float or double.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isEven","name":"isEven","type":"CalCorePreludeisEven","ui":"<b>Cal.Core.Prelude.isEven<\/b><br\/>[CALDoc] Returns whether the argument is even.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.field5","name":"field5","type":"CalCorePreludefield5","ui":"<b>Cal.Core.Prelude.field5<\/b><br\/>[CALDoc] Extracts the fifth field of the specified tuple \/ the ordinal field <code>#5<\/code> of the specified record.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.zip","name":"zip","type":"CalCorePreludezip","ui":"<b>Cal.Core.Prelude.zip<\/b><br\/>[CALDoc] Converts two lists into a list of corresponding pairs.\n","terminals":[{"name":"list1","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minChar","name":"minChar","type":"CalCorePreludeminChar","ui":"<b>Cal.Core.Prelude.minChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.tuple6","name":"tuple6","type":"CalCorePreludetuple6","ui":"<b>Cal.Core.Prelude.tuple6<\/b><br\/>[CALDoc] Creates a 6-tuple.","terminals":[{"name":"x2","input":"text"},{"name":"x5","input":"text"},{"name":"x6","input":"text"},{"name":"x3","input":"text"},{"name":"x4","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputOrdering","name":"inputOrdering","type":"CalCorePreludeinputOrdering","ui":"<b>Cal.Core.Prelude.inputOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"javaOrderingValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumShort","name":"signumShort","type":"CalCorePreludesignumShort","ui":"<b>Cal.Core.Prelude.signumShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isBooleanType","name":"isBooleanType","type":"CalCorePreludeisBooleanType","ui":"<b>Cal.Core.Prelude.isBooleanType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of the <code>Boolean<\/code> type and <code>False<\/code> otherwise.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideDecimal","name":"divideDecimal","type":"CalCorePreludedivideDecimal","ui":"<b>Cal.Core.Prelude.divideDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"denominator","input":"text"},{"name":"numerator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumCheckedByte","name":"intToEnumCheckedByte","type":"CalCorePreludeintToEnumCheckedByte","ui":"<b>Cal.Core.Prelude.intToEnumCheckedByte<\/b><br\/>[CALDoc] The <code>intToEnumChecked<\/code> instance function for the <code>Byte<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToFloatExamples","name":"upFromThenToFloatExamples","type":"CalCorePreludeupFromThenToFloatExamples","ui":"<b>Cal.Core.Prelude.upFromThenToFloatExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.iff","name":"iff","type":"CalCorePreludeiff","ui":"<b>Cal.Core.Prelude.iff<\/b><br\/>[CALDoc] Exposes the functionality of \"if-then-else\" as a function.\n<code>iff<\/code> can be thought of as the function form of the \"if-the-else\" construct.","terminals":[{"name":"condition","input":"text"},{"name":"trueValue","input":"text"},{"name":"falseValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsDecimal","name":"greaterThanEqualsDecimal","type":"CalCorePreludegreaterThanEqualsDecimal","ui":"<b>Cal.Core.Prelude.greaterThanEqualsDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimalValue2","input":"text"},{"name":"decimalValue1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareFloat","name":"compareFloat","type":"CalCorePreludecompareFloat","ui":"<b>Cal.Core.Prelude.compareFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanInteger","name":"greaterThanInteger","type":"CalCorePreludegreaterThanInteger","ui":"<b>Cal.Core.Prelude.greaterThanInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxByte","name":"maxByte","type":"CalCorePreludemaxByte","ui":"<b>Cal.Core.Prelude.maxByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minComparable","name":"minComparable","type":"CalCorePreludeminComparable","ui":"<b>Cal.Core.Prelude.minComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsComparable","name":"lessThanEqualsComparable","type":"CalCorePreludelessThanEqualsComparable","ui":"<b>Cal.Core.Prelude.lessThanEqualsComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanRecordExamples","name":"greaterThanRecordExamples","type":"CalCorePreludegreaterThanRecordExamples","ui":"<b>Cal.Core.Prelude.greaterThanRecordExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsListExamples","name":"equalsListExamples","type":"CalCorePreludeequalsListExamples","ui":"<b>Cal.Core.Prelude.equalsListExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputStringList","name":"inputStringList","type":"CalCorePreludeinputStringList","ui":"<b>Cal.Core.Prelude.inputStringList<\/b><br\/>[CALDoc] A type-specialized version of <code>input<\/code> for use as a marshalling function in a standalone JAR.","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsDecimal","name":"equalsDecimal","type":"CalCorePreludeequalsDecimal","ui":"<b>Cal.Core.Prelude.equalsDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimalValue2","input":"text"},{"name":"decimalValue1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputUnit","name":"outputUnit","type":"CalCorePreludeoutputUnit","ui":"<b>Cal.Core.Prelude.outputUnit<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.listToMaybe","name":"listToMaybe","type":"CalCorePreludelistToMaybe","ui":"<b>Cal.Core.Prelude.listToMaybe<\/b><br\/>[CALDoc] Returns <code>Nothing<\/code> on an empty list or <code>Just firstElement<\/code> where <code>firstElement<\/code> is\nthe first element of the list.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeArgumentsExamples","name":"typeArgumentsExamples","type":"CalCorePreludetypeArgumentsExamples","ui":"<b>Cal.Core.Prelude.typeArgumentsExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeArguments","name":"typeArguments","type":"CalCorePreludetypeArguments","ui":"<b>Cal.Core.Prelude.typeArguments<\/b><br\/>[CALDoc] Returns the type arguments of a type representation. ","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordType_fieldTypes","name":"recordType_fieldTypes","type":"CalCorePreluderecordType_fieldTypes","ui":"<b>Cal.Core.Prelude.recordType_fieldTypes<\/b><br\/>[CALDoc] Returns: A list of <code>TypeRep<\/code>s representing the types of each field of the record value.\nThe 0th element of the list represents the type of the 0th field of the record,\nand so forth.","terminals":[{"name":"dictionary","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordType_getNthFieldType","name":"recordType_getNthFieldType","type":"CalCorePreluderecordType_getNthFieldType","ui":"<b>Cal.Core.Prelude.recordType_getNthFieldType<\/b><br\/>[CALDoc] Returns: a <code>TypeRep<\/code> representing the type of the nth field in the record whose type\nis represented by dictionary.","terminals":[{"name":"index","input":"text"},{"name":"dictionary","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.orderingToInt","name":"orderingToInt","type":"CalCorePreludeorderingToInt","ui":"<b>Cal.Core.Prelude.orderingToInt<\/b><br\/>[CALDoc] Converts an <code>Ordering<\/code> value to an <code>Int<\/code> value. ","terminals":[{"name":"orderingValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumDefault","name":"intToEnumDefault","type":"CalCorePreludeintToEnumDefault","ui":"<b>Cal.Core.Prelude.intToEnumDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToBooleanExamples","name":"upFromThenToBooleanExamples","type":"CalCorePreludeupFromThenToBooleanExamples","ui":"<b>Cal.Core.Prelude.upFromThenToBooleanExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToBoolean","name":"upFromThenToBoolean","type":"CalCorePreludeupFromThenToBoolean","ui":"<b>Cal.Core.Prelude.upFromThenToBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenLongExamples","name":"upFromThenLongExamples","type":"CalCorePreludeupFromThenLongExamples","ui":"<b>Cal.Core.Prelude.upFromThenLongExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanRecord","name":"lessThanRecord","type":"CalCorePreludelessThanRecord","ui":"<b>Cal.Core.Prelude.lessThanRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"r1","input":"text"},{"name":"r2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenFloatExamples","name":"upFromThenFloatExamples","type":"CalCorePreludeupFromThenFloatExamples","ui":"<b>Cal.Core.Prelude.upFromThenFloatExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderShort","name":"remainderShort","type":"CalCorePreluderemainderShort","ui":"<b>Cal.Core.Prelude.remainderShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumCheckedOrdering","name":"intToEnumCheckedOrdering","type":"CalCorePreludeintToEnumCheckedOrdering","ui":"<b>Cal.Core.Prelude.intToEnumCheckedOrdering<\/b><br\/>[CALDoc] The <code>intToEnumChecked<\/code> instance function for the <code>Ordering<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToOrdering","name":"intToOrdering","type":"CalCorePreludeintToOrdering","ui":"<b>Cal.Core.Prelude.intToOrdering<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> value to an <code>Ordering<\/code> value. ","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jOrderingToOrdering","name":"jOrderingToOrdering","type":"CalCorePreludejOrderingToOrdering","ui":"<b>Cal.Core.Prelude.jOrderingToOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"javaOrderingValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumIntToOrdering","name":"signumIntToOrdering","type":"CalCorePreludesignumIntToOrdering","ui":"<b>Cal.Core.Prelude.signumIntToOrdering<\/b><br\/>[CALDoc] similar to <code>intToOrdering<\/code> but only handles the intValues -1, 0, 1. ","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsRecord","name":"lessThanEqualsRecord","type":"CalCorePreludelessThanEqualsRecord","ui":"<b>Cal.Core.Prelude.lessThanEqualsRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"r1","input":"text"},{"name":"r2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testIntEnumInstances","name":"testIntEnumInstances","type":"CalCorePreludetestIntEnumInstances","ui":"<b>Cal.Core.Prelude.testIntEnumInstances<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charIntEnumExamples","name":"charIntEnumExamples","type":"CalCorePreludecharIntEnumExamples","ui":"<b>Cal.Core.Prelude.charIntEnumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteIntEnumExamples","name":"byteIntEnumExamples","type":"CalCorePreludebyteIntEnumExamples","ui":"<b>Cal.Core.Prelude.byteIntEnumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortIntEnumExamples","name":"shortIntEnumExamples","type":"CalCorePreludeshortIntEnumExamples","ui":"<b>Cal.Core.Prelude.shortIntEnumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundShortAsInt","name":"maxBoundShortAsInt","type":"CalCorePreludemaxBoundShortAsInt","ui":"<b>Cal.Core.Prelude.maxBoundShortAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundShort","name":"maxBoundShort","type":"CalCorePreludemaxBoundShort","ui":"<b>Cal.Core.Prelude.maxBoundShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundShortAsInt","name":"minBoundShortAsInt","type":"CalCorePreludeminBoundShortAsInt","ui":"<b>Cal.Core.Prelude.minBoundShortAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundShort","name":"minBoundShort","type":"CalCorePreludeminBoundShort","ui":"<b>Cal.Core.Prelude.minBoundShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intIntEnumExamples","name":"intIntEnumExamples","type":"CalCorePreludeintIntEnumExamples","ui":"<b>Cal.Core.Prelude.intIntEnumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundInt","name":"maxBoundInt","type":"CalCorePreludemaxBoundInt","ui":"<b>Cal.Core.Prelude.maxBoundInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundInt","name":"minBoundInt","type":"CalCorePreludeminBoundInt","ui":"<b>Cal.Core.Prelude.minBoundInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.orderingIntEnumExamples","name":"orderingIntEnumExamples","type":"CalCorePreludeorderingIntEnumExamples","ui":"<b>Cal.Core.Prelude.orderingIntEnumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsDecimal","name":"notEqualsDecimal","type":"CalCorePreludenotEqualsDecimal","ui":"<b>Cal.Core.Prelude.notEqualsDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimalValue1","input":"text"},{"name":"decimalValue2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsInteger","name":"lessThanEqualsInteger","type":"CalCorePreludelessThanEqualsInteger","ui":"<b>Cal.Core.Prelude.lessThanEqualsInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromCharExamples","name":"upFromCharExamples","type":"CalCorePreludeupFromCharExamples","ui":"<b>Cal.Core.Prelude.upFromCharExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromChar","name":"upFromChar","type":"CalCorePreludeupFromChar","ui":"<b>Cal.Core.Prelude.upFromChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToBoolean","name":"upFromToBoolean","type":"CalCorePreludeupFromToBoolean","ui":"<b>Cal.Core.Prelude.upFromToBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.field4","name":"field4","type":"CalCorePreludefield4","ui":"<b>Cal.Core.Prelude.field4<\/b><br\/>[CALDoc] Extracts the fourth field of the specified tuple \/ the ordinal field <code>#4<\/code> of the specified record.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.composeExamples","name":"composeExamples","type":"CalCorePreludecomposeExamples","ui":"<b>Cal.Core.Prelude.composeExamples<\/b><br\/>[CALDoc] Example usage of the compose function, in its different forms (regular\nfunction application, backquoted operator, and the <code>#<\/code> operator).","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compose","name":"compose","type":"CalCorePreludecompose","ui":"<b>Cal.Core.Prelude.compose<\/b><br\/>[CALDoc] <code>(compose f g)<\/code> is the function composition of <code>f<\/code> with <code>g<\/code>. ","terminals":[{"name":"x","input":"text"},{"name":"g","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.apply","name":"apply","type":"CalCorePreludeapply","ui":"<b>Cal.Core.Prelude.apply<\/b><br\/>[CALDoc] A function application function. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"functionToApply","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.emptyOrdering","name":"emptyOrdering","type":"CalCorePreludeemptyOrdering","ui":"<b>Cal.Core.Prelude.emptyOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyShort","name":"multiplyShort","type":"CalCorePreludemultiplyShort","ui":"<b>Cal.Core.Prelude.multiplyShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumShortInstance","name":"testEnumShortInstance","type":"CalCorePreludetestEnumShortInstance","ui":"<b>Cal.Core.Prelude.testEnumShortInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToShortExamples","name":"upFromThenToShortExamples","type":"CalCorePreludeupFromThenToShortExamples","ui":"<b>Cal.Core.Prelude.upFromThenToShortExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToShortExamples","name":"upFromToShortExamples","type":"CalCorePreludeupFromToShortExamples","ui":"<b>Cal.Core.Prelude.upFromToShortExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToShort","name":"upFromToShort","type":"CalCorePreludeupFromToShort","ui":"<b>Cal.Core.Prelude.upFromToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromShortExamples","name":"upFromShortExamples","type":"CalCorePreludeupFromShortExamples","ui":"<b>Cal.Core.Prelude.upFromShortExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromShort","name":"upFromShort","type":"CalCorePreludeupFromShort","ui":"<b>Cal.Core.Prelude.upFromShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumByte","name":"intToEnumByte","type":"CalCorePreludeintToEnumByte","ui":"<b>Cal.Core.Prelude.intToEnumByte<\/b><br\/>[CALDoc] The <code>intToEnum<\/code> instance function for the <code>Byte<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundByteAsInt","name":"minBoundByteAsInt","type":"CalCorePreludeminBoundByteAsInt","ui":"<b>Cal.Core.Prelude.minBoundByteAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundByte","name":"minBoundByte","type":"CalCorePreludeminBoundByte","ui":"<b>Cal.Core.Prelude.minBoundByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromDoubleExamples","name":"upFromDoubleExamples","type":"CalCorePreludeupFromDoubleExamples","ui":"<b>Cal.Core.Prelude.upFromDoubleExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.replicateList","name":"replicateList","type":"CalCorePreludereplicateList","ui":"<b>Cal.Core.Prelude.replicateList<\/b><br\/>[CALDoc] Replicates a list for a specified number of times.","terminals":[{"name":"nCopies","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.replicate","name":"replicate","type":"CalCorePreludereplicate","ui":"<b>Cal.Core.Prelude.replicate<\/b><br\/>[CALDoc] <code>replicate nCopies valueToReplicate<\/code> is a list of length <code>nCopies<\/code>, with every element equal to\n<code>valueToReplicate<\/code>.","terminals":[{"name":"nCopies","input":"text"},{"name":"valueToReplicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenShortExamples","name":"upFromThenShortExamples","type":"CalCorePreludeupFromThenShortExamples","ui":"<b>Cal.Core.Prelude.upFromThenShortExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenShort","name":"upFromThenShort","type":"CalCorePreludeupFromThenShort","ui":"<b>Cal.Core.Prelude.upFromThenShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenLong","name":"upFromThenLong","type":"CalCorePreludeupFromThenLong","ui":"<b>Cal.Core.Prelude.upFromThenLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToDouble","name":"upFromThenToDouble","type":"CalCorePreludeupFromThenToDouble","ui":"<b>Cal.Core.Prelude.upFromThenToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"next","input":"text"},{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenDouble","name":"upFromThenDouble","type":"CalCorePreludeupFromThenDouble","ui":"<b>Cal.Core.Prelude.upFromThenDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToLong","name":"upFromThenToLong","type":"CalCorePreludeupFromThenToLong","ui":"<b>Cal.Core.Prelude.upFromThenToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"next","input":"text"},{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByUpToLong","name":"upFromByUpToLong","type":"CalCorePreludeupFromByUpToLong","ui":"<b>Cal.Core.Prelude.upFromByUpToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"step","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.strictTuple2","name":"strictTuple2","type":"CalCorePreludestrictTuple2","ui":"<b>Cal.Core.Prelude.strictTuple2<\/b><br\/>[CALDoc] Creates a 2-tuple value, but ensures that the fields++ are evaluated (to weak-head normal form) prior to returning.","terminals":[{"name":"x2","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToDecimal","name":"floatToDecimal","type":"CalCorePreludefloatToDecimal","ui":"<b>Cal.Core.Prelude.floatToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"floatValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.or","name":"or","type":"CalCorePreludeor","ui":"<b>Cal.Core.Prelude.or<\/b><br\/>[CALDoc] Returns the result of a logical OR operation on the two arguments.","terminals":[{"name":"a","input":"text"},{"name":"b","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromLongExamples","name":"upFromLongExamples","type":"CalCorePreludeupFromLongExamples","ui":"<b>Cal.Core.Prelude.upFromLongExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromLong","name":"upFromLong","type":"CalCorePreludeupFromLong","ui":"<b>Cal.Core.Prelude.upFromLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.id","name":"id","type":"CalCorePreludeid","ui":"<b>Cal.Core.Prelude.id<\/b><br\/>[CALDoc] An identity function.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumChar","name":"intToEnumChar","type":"CalCorePreludeintToEnumChar","ui":"<b>Cal.Core.Prelude.intToEnumChar<\/b><br\/>[CALDoc] The <code>intToEnum<\/code> instance function for the <code>Char<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumIntegerInstance","name":"testEnumIntegerInstance","type":"CalCorePreludetestEnumIntegerInstance","ui":"<b>Cal.Core.Prelude.testEnumIntegerInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToIntegerExamples","name":"upFromThenToIntegerExamples","type":"CalCorePreludeupFromThenToIntegerExamples","ui":"<b>Cal.Core.Prelude.upFromThenToIntegerExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToIntegerExamples","name":"upFromToIntegerExamples","type":"CalCorePreludeupFromToIntegerExamples","ui":"<b>Cal.Core.Prelude.upFromToIntegerExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToInteger","name":"upFromToInteger","type":"CalCorePreludeupFromToInteger","ui":"<b>Cal.Core.Prelude.upFromToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenIntegerExamples","name":"upFromThenIntegerExamples","type":"CalCorePreludeupFromThenIntegerExamples","ui":"<b>Cal.Core.Prelude.upFromThenIntegerExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenInteger","name":"upFromThenInteger","type":"CalCorePreludeupFromThenInteger","ui":"<b>Cal.Core.Prelude.upFromThenInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromIntegerExamples","name":"upFromIntegerExamples","type":"CalCorePreludeupFromIntegerExamples","ui":"<b>Cal.Core.Prelude.upFromIntegerExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromInteger","name":"upFromInteger","type":"CalCorePreludeupFromInteger","ui":"<b>Cal.Core.Prelude.upFromInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToShort","name":"upFromThenToShort","type":"CalCorePreludeupFromThenToShort","ui":"<b>Cal.Core.Prelude.upFromThenToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByDownToShort","name":"upFromByDownToShort","type":"CalCorePreludeupFromByDownToShort","ui":"<b>Cal.Core.Prelude.upFromByDownToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"step","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.combineComparators","name":"combineComparators","type":"CalCorePreludecombineComparators","ui":"<b>Cal.Core.Prelude.combineComparators<\/b><br\/>[CALDoc] Combines two comparators to form a new comparator. ","terminals":[{"name":"comparator2","input":"text"},{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"comparator1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isEmptyList","name":"isEmptyList","type":"CalCorePreludeisEmptyList","ui":"<b>Cal.Core.Prelude.isEmptyList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isJust","name":"isJust","type":"CalCorePreludeisJust","ui":"<b>Cal.Core.Prelude.isJust<\/b><br\/>[CALDoc] Returns <code>True<\/code> iff the argument is of the form <code>Just _<\/code>.","terminals":[{"name":"maybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isForeignReferenceTypeExamples","name":"isForeignReferenceTypeExamples","type":"CalCorePreludeisForeignReferenceTypeExamples","ui":"<b>Cal.Core.Prelude.isForeignReferenceTypeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isForeignReferenceType","name":"isForeignReferenceType","type":"CalCorePreludeisForeignReferenceType","ui":"<b>Cal.Core.Prelude.isForeignReferenceType<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if the type of the value is a foreign type, that corresponds to a foreign reference\ntype i.e. not a primitive type such as \"int\".","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.foreignClass","name":"foreignClass","type":"CalCorePreludeforeignClass","ui":"<b>Cal.Core.Prelude.foreignClass<\/b><br\/>[CALDoc] Returns: <code>Just javaClass<\/code>, where <code>javaClass<\/code> is the underlying Java class object\nof the foreign type, if <code>TypeRep<\/code> represents a non-foreign type. Otherwise <code>Nothing<\/code>.","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanComparable","name":"lessThanComparable","type":"CalCorePreludelessThanComparable","ui":"<b>Cal.Core.Prelude.lessThanComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jCompareComparable","name":"jCompareComparable","type":"CalCorePreludejCompareComparable","ui":"<b>Cal.Core.Prelude.jCompareComparable<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumByteInstance","name":"testEnumByteInstance","type":"CalCorePreludetestEnumByteInstance","ui":"<b>Cal.Core.Prelude.testEnumByteInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToByteExamples","name":"upFromThenToByteExamples","type":"CalCorePreludeupFromThenToByteExamples","ui":"<b>Cal.Core.Prelude.upFromThenToByteExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToByteExamples","name":"upFromToByteExamples","type":"CalCorePreludeupFromToByteExamples","ui":"<b>Cal.Core.Prelude.upFromToByteExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToByte","name":"upFromToByte","type":"CalCorePreludeupFromToByte","ui":"<b>Cal.Core.Prelude.upFromToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenByteExamples","name":"upFromThenByteExamples","type":"CalCorePreludeupFromThenByteExamples","ui":"<b>Cal.Core.Prelude.upFromThenByteExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenByte","name":"upFromThenByte","type":"CalCorePreludeupFromThenByte","ui":"<b>Cal.Core.Prelude.upFromThenByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"next","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToByte","name":"upFromThenToByte","type":"CalCorePreludeupFromThenToByte","ui":"<b>Cal.Core.Prelude.upFromThenToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByUpToByte","name":"upFromByUpToByte","type":"CalCorePreludeupFromByUpToByte","ui":"<b>Cal.Core.Prelude.upFromByUpToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"step","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByteExamples","name":"upFromByteExamples","type":"CalCorePreludeupFromByteExamples","ui":"<b>Cal.Core.Prelude.upFromByteExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByte","name":"upFromByte","type":"CalCorePreludeupFromByte","ui":"<b>Cal.Core.Prelude.upFromByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumDecimal","name":"signumDecimal","type":"CalCorePreludesignumDecimal","ui":"<b>Cal.Core.Prelude.signumDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputRecord","name":"outputRecord","type":"CalCorePreludeoutputRecord","ui":"<b>Cal.Core.Prelude.outputRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"record","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addShort","name":"addShort","type":"CalCorePreludeaddShort","ui":"<b>Cal.Core.Prelude.addShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByUpToShort","name":"upFromByUpToShort","type":"CalCorePreludeupFromByUpToShort","ui":"<b>Cal.Core.Prelude.upFromByUpToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"step","input":"text"},{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.reverseComparator","name":"reverseComparator","type":"CalCorePreludereverseComparator","ui":"<b>Cal.Core.Prelude.reverseComparator<\/b><br\/>[CALDoc] Reverses the order of a comparator (also known as a comparison function) so the\ncomparisons that result in <code>LT<\/code> become <code>GT<\/code> and those that result in <code>GT<\/code> become <code>LT<\/code>.","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"comparator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundByteAsInt","name":"maxBoundByteAsInt","type":"CalCorePreludemaxBoundByteAsInt","ui":"<b>Cal.Core.Prelude.maxBoundByteAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundByte","name":"maxBoundByte","type":"CalCorePreludemaxBoundByte","ui":"<b>Cal.Core.Prelude.maxBoundByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenChar","name":"upFromThenChar","type":"CalCorePreludeupFromThenChar","ui":"<b>Cal.Core.Prelude.upFromThenChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"next","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToChar","name":"upFromThenToChar","type":"CalCorePreludeupFromThenToChar","ui":"<b>Cal.Core.Prelude.upFromThenToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByDownToChar","name":"upFromByDownToChar","type":"CalCorePreludeupFromByDownToChar","ui":"<b>Cal.Core.Prelude.upFromByDownToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"step","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByUpToChar","name":"upFromByUpToChar","type":"CalCorePreludeupFromByUpToChar","ui":"<b>Cal.Core.Prelude.upFromByUpToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"step","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeOfExamples","name":"typeOfExamples","type":"CalCorePreludetypeOfExamples","ui":"<b>Cal.Core.Prelude.typeOfExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.undefined","name":"undefined","type":"CalCorePreludeundefined","ui":"<b>Cal.Core.Prelude.undefined<\/b><br\/>[CALDoc] The <code>undefined<\/code> function will cause execution to stop immediately. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.listToTypeReps","name":"listToTypeReps","type":"CalCorePreludelistToTypeReps","ui":"<b>Cal.Core.Prelude.listToTypeReps<\/b><br\/>[CALDoc] ","terminals":[{"name":"typeRepList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.updateTypeReps","name":"updateTypeReps","type":"CalCorePreludeupdateTypeReps","ui":"<b>Cal.Core.Prelude.updateTypeReps<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"typeReps","input":"text"},{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toCalValue","name":"toCalValue","type":"CalCorePreludetoCalValue","ui":"<b>Cal.Core.Prelude.toCalValue<\/b><br\/>[CALDoc] Converts any value in CAL to a value of type <code>CalValue<\/code>. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.length","name":"length","type":"CalCorePreludelength","ui":"<b>Cal.Core.Prelude.length<\/b><br\/>[CALDoc] Returns the length of the specified list. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundLong","name":"minBoundLong","type":"CalCorePreludeminBoundLong","ui":"<b>Cal.Core.Prelude.minBoundLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanDecimal","name":"greaterThanDecimal","type":"CalCorePreludegreaterThanDecimal","ui":"<b>Cal.Core.Prelude.greaterThanDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimalValue2","input":"text"},{"name":"decimalValue1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToInteger","name":"upFromThenToInteger","type":"CalCorePreludeupFromThenToInteger","ui":"<b>Cal.Core.Prelude.upFromThenToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByDownToInteger","name":"upFromByDownToInteger","type":"CalCorePreludeupFromByDownToInteger","ui":"<b>Cal.Core.Prelude.upFromByDownToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"step","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByUpToInteger","name":"upFromByUpToInteger","type":"CalCorePreludeupFromByUpToInteger","ui":"<b>Cal.Core.Prelude.upFromByUpToInteger<\/b><br\/>[CALDoc] This function assumes that <code>step &gt;= 0<\/code>.","terminals":[{"name":"end","input":"text"},{"name":"start","input":"text"},{"name":"step","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isLeft","name":"isLeft","type":"CalCorePreludeisLeft","ui":"<b>Cal.Core.Prelude.isLeft<\/b><br\/>[CALDoc] Returns <code>True<\/code> if <code>eitherValue<\/code> is a <code>Left<\/code> value and <code>False<\/code> otherwise.","terminals":[{"name":"eitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByDownToByte","name":"upFromByDownToByte","type":"CalCorePreludeupFromByDownToByte","ui":"<b>Cal.Core.Prelude.upFromByDownToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"step","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToFloat","name":"upFromThenToFloat","type":"CalCorePreludeupFromThenToFloat","ui":"<b>Cal.Core.Prelude.upFromThenToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenFloat","name":"upFromThenFloat","type":"CalCorePreludeupFromThenFloat","ui":"<b>Cal.Core.Prelude.upFromThenFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"next","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.iterate","name":"iterate","type":"CalCorePreludeiterate","ui":"<b>Cal.Core.Prelude.iterate<\/b><br\/>[CALDoc] <code>iterate f x<\/code> returns the infinite list <code>[x, f x, f(f x), f(f(f x)), ...]<\/code>.","terminals":[{"name":"initialValue","input":"text"},{"name":"iterationFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.takeWhile","name":"takeWhile","type":"CalCorePreludetakeWhile","ui":"<b>Cal.Core.Prelude.takeWhile<\/b><br\/>[CALDoc] <code>takeWhile takeWhileTrueFunction list<\/code> returns the longest prefix of the list for which <code>takeWhileTrueFunction<\/code>\nis <code>True<\/code> for each element.","terminals":[{"name":"takeWhileTrueFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputUnit","name":"inputUnit","type":"CalCorePreludeinputUnit","ui":"<b>Cal.Core.Prelude.inputUnit<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.foldLeftStrict","name":"foldLeftStrict","type":"CalCorePreludefoldLeftStrict","ui":"<b>Cal.Core.Prelude.foldLeftStrict<\/b><br\/>[CALDoc] This is the strict version of <code>Cal.Collections.List.foldLeft<\/code>. ","terminals":[{"name":"foldFunction","input":"text"},{"name":"initialValue","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromDouble","name":"upFromDouble","type":"CalCorePreludeupFromDouble","ui":"<b>Cal.Core.Prelude.upFromDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumInteger","name":"signumInteger","type":"CalCorePreludesignumInteger","ui":"<b>Cal.Core.Prelude.signumInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumCheckedChar","name":"intToEnumCheckedChar","type":"CalCorePreludeintToEnumCheckedChar","ui":"<b>Cal.Core.Prelude.intToEnumCheckedChar<\/b><br\/>[CALDoc] The <code>intToEnumChecked<\/code> instance function for the <code>Char<\/code> type.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundCharAsInt","name":"maxBoundCharAsInt","type":"CalCorePreludemaxBoundCharAsInt","ui":"<b>Cal.Core.Prelude.maxBoundCharAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBoundChar","name":"maxBoundChar","type":"CalCorePreludemaxBoundChar","ui":"<b>Cal.Core.Prelude.maxBoundChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundCharAsInt","name":"minBoundCharAsInt","type":"CalCorePreludeminBoundCharAsInt","ui":"<b>Cal.Core.Prelude.minBoundCharAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBoundChar","name":"minBoundChar","type":"CalCorePreludeminBoundChar","ui":"<b>Cal.Core.Prelude.minBoundChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intersperse","name":"intersperse","type":"CalCorePreludeintersperse","ui":"<b>Cal.Core.Prelude.intersperse<\/b><br\/>[CALDoc] This function takes an element and a list and \"intersperses\" that element\nbetween the elements of the list.","terminals":[{"name":"separator","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fst","name":"fst","type":"CalCorePreludefst","ui":"<b>Cal.Core.Prelude.fst<\/b><br\/>[CALDoc] Extracts the first component of a pair.","terminals":[{"name":"pair","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToInteger","name":"byteToInteger","type":"CalCorePreludebyteToInteger","ui":"<b>Cal.Core.Prelude.byteToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"byteValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isFunctionTypeExamples","name":"isFunctionTypeExamples","type":"CalCorePreludeisFunctionTypeExamples","ui":"<b>Cal.Core.Prelude.isFunctionTypeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.not","name":"not","type":"CalCorePreludenot","ui":"<b>Cal.Core.Prelude.not<\/b><br\/>[CALDoc] Returns the logical negation of the argument.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isFunctionType","name":"isFunctionType","type":"CalCorePreludeisFunctionType","ui":"<b>Cal.Core.Prelude.isFunctionType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of a function type and <code>False<\/code> otherwise.\n","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isRecordType","name":"isRecordType","type":"CalCorePreludeisRecordType","ui":"<b>Cal.Core.Prelude.isRecordType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of a record type and <code>False<\/code> otherwise.\n","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.mod","name":"mod","type":"CalCorePreludemod","ui":"<b>Cal.Core.Prelude.mod<\/b><br\/>[CALDoc] The remainder that corresponds to <code>divide<\/code>.","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.uncurry","name":"uncurry","type":"CalCorePreludeuncurry","ui":"<b>Cal.Core.Prelude.uncurry<\/b><br\/>[CALDoc] Converts a function of 2 arguments to a function of a single pair argument.","terminals":[{"name":"pair","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.testEnumDecimalInstance","name":"testEnumDecimalInstance","type":"CalCorePreludetestEnumDecimalInstance","ui":"<b>Cal.Core.Prelude.testEnumDecimalInstance<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToDecimalExamples","name":"upFromThenToDecimalExamples","type":"CalCorePreludeupFromThenToDecimalExamples","ui":"<b>Cal.Core.Prelude.upFromThenToDecimalExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenToDecimal","name":"upFromThenToDecimal","type":"CalCorePreludeupFromThenToDecimal","ui":"<b>Cal.Core.Prelude.upFromThenToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"next","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenDecimalExamples","name":"upFromThenDecimalExamples","type":"CalCorePreludeupFromThenDecimalExamples","ui":"<b>Cal.Core.Prelude.upFromThenDecimalExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenDecimal","name":"upFromThenDecimal","type":"CalCorePreludeupFromThenDecimal","ui":"<b>Cal.Core.Prelude.upFromThenDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"next","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromDecimalExamples","name":"upFromDecimalExamples","type":"CalCorePreludeupFromDecimalExamples","ui":"<b>Cal.Core.Prelude.upFromDecimalExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromDecimal","name":"upFromDecimal","type":"CalCorePreludeupFromDecimal","ui":"<b>Cal.Core.Prelude.upFromDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToDecimalExamples","name":"upFromToDecimalExamples","type":"CalCorePreludeupFromToDecimalExamples","ui":"<b>Cal.Core.Prelude.upFromToDecimalExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromToDecimal","name":"upFromToDecimal","type":"CalCorePreludeupFromToDecimal","ui":"<b>Cal.Core.Prelude.upFromToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByUpToDecimal","name":"upFromByUpToDecimal","type":"CalCorePreludeupFromByUpToDecimal","ui":"<b>Cal.Core.Prelude.upFromByUpToDecimal<\/b><br\/>[CALDoc] This function assumes that <code>step &gt;= 0<\/code>","terminals":[{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"step","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.appendOrdering","name":"appendOrdering","type":"CalCorePreludeappendOrdering","ui":"<b>Cal.Core.Prelude.appendOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"ord1","input":"text"},{"name":"ord2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByDownToLong","name":"upFromByDownToLong","type":"CalCorePreludeupFromByDownToLong","ui":"<b>Cal.Core.Prelude.upFromByDownToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"step","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isOdd","name":"isOdd","type":"CalCorePreludeisOdd","ui":"<b>Cal.Core.Prelude.isOdd<\/b><br\/>[CALDoc] Returns whether the argument is odd.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromByDownToDecimal","name":"upFromByDownToDecimal","type":"CalCorePreludeupFromByDownToDecimal","ui":"<b>Cal.Core.Prelude.upFromByDownToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"step","input":"text"},{"name":"start","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputListWith","name":"outputListWith","type":"CalCorePreludeoutputListWith","ui":"<b>Cal.Core.Prelude.outputListWith<\/b><br\/>[CALDoc] Converts a CAL list to a Java list using the element mapping function <code>f<\/code> of type <code>a -&gt; JObject<\/code> \nto convert elements of the CAL list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"f","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isListType","name":"isListType","type":"CalCorePreludeisListType","ui":"<b>Cal.Core.Prelude.isListType<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the runtime type representation is that of a <code>List<\/code> and <code>False<\/code> otherwise.\n","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenBooleanExamples","name":"upFromThenBooleanExamples","type":"CalCorePreludeupFromThenBooleanExamples","ui":"<b>Cal.Core.Prelude.upFromThenBooleanExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenBoolean","name":"upFromThenBoolean","type":"CalCorePreludeupFromThenBoolean","ui":"<b>Cal.Core.Prelude.upFromThenBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"next","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.repeat","name":"repeat","type":"CalCorePreluderepeat","ui":"<b>Cal.Core.Prelude.repeat<\/b><br\/>[CALDoc] <code>repeat valueToRepeat<\/code> returns the infinite list <code>[valueToRepeat, valueToRepeat, valueToRepeat, ...]<\/code>.","terminals":[{"name":"valueToRepeat","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.take","name":"take","type":"CalCorePreludetake","ui":"<b>Cal.Core.Prelude.take<\/b><br\/>[CALDoc] <code>take nElements list<\/code> returns a list consisting of the first <code>nElements<\/code> elements of <code>list<\/code>.\n","terminals":[{"name":"nElements","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.assert","name":"assert","type":"CalCorePreludeassert","ui":"<b>Cal.Core.Prelude.assert<\/b><br\/>[CALDoc] <code>assert<\/code> evaluates the given expression. ","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeRepsToList","name":"typeRepsToList","type":"CalCorePreludetypeRepsToList","ui":"<b>Cal.Core.Prelude.typeRepsToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"typeReps","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subscriptTypeReps","name":"subscriptTypeReps","type":"CalCorePreludesubscriptTypeReps","ui":"<b>Cal.Core.Prelude.subscriptTypeReps<\/b><br\/>[CALDoc] ","terminals":[{"name":"typeReps","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.unsafeFromCalValue","name":"unsafeFromCalValue","type":"CalCorePreludeunsafeFromCalValue","ui":"<b>Cal.Core.Prelude.unsafeFromCalValue<\/b><br\/>[CALDoc] Converts a <code>CalValue<\/code> to a CAL value of type <code>a<\/code>. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.evaluateCalFunction","name":"evaluateCalFunction","type":"CalCorePreludeevaluateCalFunction","ui":"<b>Cal.Core.Prelude.evaluateCalFunction<\/b><br\/>[CALDoc] <code>evaluateCalFunction func arg<\/code> evaluates the CAL function represented by <code>func<\/code> at the value <code>arg<\/code>.","terminals":[{"name":"calFunction","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jObjectToJMap","name":"jObjectToJMap","type":"CalCorePreludejObjectToJMap","ui":"<b>Cal.Core.Prelude.jObjectToJMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isJMap","name":"isJMap","type":"CalCorePreludeisJMap","ui":"<b>Cal.Core.Prelude.isJMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jObjectToJList","name":"jObjectToJList","type":"CalCorePreludejObjectToJList","ui":"<b>Cal.Core.Prelude.jObjectToJList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isJList","name":"isJList","type":"CalCorePreludeisJList","ui":"<b>Cal.Core.Prelude.isJList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordType_sameFields","name":"recordType_sameFields","type":"CalCorePreluderecordType_sameFields","ui":"<b>Cal.Core.Prelude.recordType_sameFields<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if the two <code>RecordType<\/code>s have the same set of field names (not necessarily field types).\nUsed internally to implemented <code>sameRootType<\/code> for records.","terminals":[{"name":null,"input":"text"},{"name":"recordType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordType_isTuple2OrMoreRecord","name":"recordType_isTuple2OrMoreRecord","type":"CalCorePreluderecordType_isTuple2OrMoreRecord","ui":"<b>Cal.Core.Prelude.recordType_isTuple2OrMoreRecord<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if the record whose type is represented by the <code>RecordType<\/code> is a tuple with 2 or more\nfields, and <code>False<\/code> otherwise.","terminals":[{"name":"recordType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordType_getNthFieldName","name":"recordType_getNthFieldName","type":"CalCorePreluderecordType_getNthFieldName","ui":"<b>Cal.Core.Prelude.recordType_getNthFieldName<\/b><br\/>[CALDoc] Returns: The name of the nth field of the record whose type is represented by the <code>RecordType<\/code>.","terminals":[{"name":null,"input":"text"},{"name":"recordType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fieldNameToString","name":"fieldNameToString","type":"CalCorePreludefieldNameToString","ui":"<b>Cal.Core.Prelude.fieldNameToString<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordType_getNthFieldValue","name":"recordType_getNthFieldValue","type":"CalCorePreluderecordType_getNthFieldValue","ui":"<b>Cal.Core.Prelude.recordType_getNthFieldValue<\/b><br\/>[CALDoc] Returns: The nth value contained by the <code>RecordType<\/code> object.  This will be an internal CAL value representing a function\nthat accepts a single, ignored argument and returns a <code>TypeRep<\/code> representing the type of\nthe nth field of the record represented by the <code>RecordType<\/code>.","terminals":[{"name":null,"input":"text"},{"name":"recordType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordType_getNFields","name":"recordType_getNFields","type":"CalCorePreluderecordType_getNFields","ui":"<b>Cal.Core.Prelude.recordType_getNFields<\/b><br\/>[CALDoc] Returns: The number of fields that the record represented by the <code>RecordType<\/code> contains.","terminals":[{"name":"recordType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.executionContext_getForeignClass","name":"executionContext_getForeignClass","type":"CalCorePreludeexecutionContext_getForeignClass","ui":"<b>Cal.Core.Prelude.executionContext_getForeignClass<\/b><br\/>[CALDoc] Returns: the Java class object corresponding to this type for a foreign type. Otherwise null.","terminals":[{"name":"executionContext","input":"text"},{"name":"qualifiedTypeConsName","input":"text"},{"name":"foreignName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_String","name":"class_String","type":"CalCorePreludeclass_String","ui":"<b>Cal.Core.Prelude.class_String<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_double","name":"class_double","type":"CalCorePreludeclass_double","ui":"<b>Cal.Core.Prelude.class_double<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_float","name":"class_float","type":"CalCorePreludeclass_float","ui":"<b>Cal.Core.Prelude.class_float<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_long","name":"class_long","type":"CalCorePreludeclass_long","ui":"<b>Cal.Core.Prelude.class_long<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_int","name":"class_int","type":"CalCorePreludeclass_int","ui":"<b>Cal.Core.Prelude.class_int<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_short","name":"class_short","type":"CalCorePreludeclass_short","ui":"<b>Cal.Core.Prelude.class_short<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_byte","name":"class_byte","type":"CalCorePreludeclass_byte","ui":"<b>Cal.Core.Prelude.class_byte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_char","name":"class_char","type":"CalCorePreludeclass_char","ui":"<b>Cal.Core.Prelude.class_char<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_isPrimitive","name":"class_isPrimitive","type":"CalCorePreludeclass_isPrimitive","ui":"<b>Cal.Core.Prelude.class_isPrimitive<\/b><br\/>[CALDoc] ","terminals":[{"name":"jClass","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.class_toString","name":"class_toString","type":"CalCorePreludeclass_toString","ui":"<b>Cal.Core.Prelude.class_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jClass","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lengthTypeReps","name":"lengthTypeReps","type":"CalCorePreludelengthTypeReps","ui":"<b>Cal.Core.Prelude.lengthTypeReps<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeRepArray_update","name":"typeRepArray_update","type":"CalCorePreludetypeRepArray_update","ui":"<b>Cal.Core.Prelude.typeRepArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeRepArray_subscript","name":"typeRepArray_subscript","type":"CalCorePreludetypeRepArray_subscript","ui":"<b>Cal.Core.Prelude.typeRepArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeRepArray_new","name":"typeRepArray_new","type":"CalCorePreludetypeRepArray_new","ui":"<b>Cal.Core.Prelude.typeRepArray_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToString","name":"longToString","type":"CalCorePreludelongToString","ui":"<b>Cal.Core.Prelude.longToString<\/b><br\/>[CALDoc] Converts a <code>Long<\/code> value to its string representation.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToString","name":"intToString","type":"CalCorePreludeintToString","ui":"<b>Cal.Core.Prelude.intToString<\/b><br\/>[CALDoc] Converts a <code>Integer<\/code> value to its string representation.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToString","name":"doubleToString","type":"CalCorePreludedoubleToString","ui":"<b>Cal.Core.Prelude.doubleToString<\/b><br\/>[CALDoc] Converts a <code>Double<\/code> value to its string representation.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jStringBuilder_toString","name":"jStringBuilder_toString","type":"CalCorePreludejStringBuilder_toString","ui":"<b>Cal.Core.Prelude.jStringBuilder_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jStringBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jStringBuilder_append","name":"jStringBuilder_append","type":"CalCorePreludejStringBuilder_append","ui":"<b>Cal.Core.Prelude.jStringBuilder_append<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jStringBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jStringBuilder_append2","name":"jStringBuilder_append2","type":"CalCorePreludejStringBuilder_append2","ui":"<b>Cal.Core.Prelude.jStringBuilder_append2<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jStringBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jStringBuilder_new","name":"jStringBuilder_new","type":"CalCorePreludejStringBuilder_new","ui":"<b>Cal.Core.Prelude.jStringBuilder_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.stringToDouble","name":"stringToDouble","type":"CalCorePreludestringToDouble","ui":"<b>Cal.Core.Prelude.stringToDouble<\/b><br\/>[CALDoc] Parses a string representation of a double value into a <code>Double<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.stringToLongRadix","name":"stringToLongRadix","type":"CalCorePreludestringToLongRadix","ui":"<b>Cal.Core.Prelude.stringToLongRadix<\/b><br\/>[CALDoc] Parses a string representation of a long integer value in the specified radix\ninto a <code>Long<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.stringToLong","name":"stringToLong","type":"CalCorePreludestringToLong","ui":"<b>Cal.Core.Prelude.stringToLong<\/b><br\/>[CALDoc] Parses a string representation of a long integer value into a <code>Long<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.stringToIntRadix","name":"stringToIntRadix","type":"CalCorePreludestringToIntRadix","ui":"<b>Cal.Core.Prelude.stringToIntRadix<\/b><br\/>[CALDoc] Parses a string representation of an integer value in the specified radix\ninto an <code>Int<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.stringToInt","name":"stringToInt","type":"CalCorePreludestringToInt","ui":"<b>Cal.Core.Prelude.stringToInt<\/b><br\/>[CALDoc] Parses a string representation of an integer value into an <code>Int<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negativeInfinity","name":"negativeInfinity","type":"CalCorePreludenegativeInfinity","ui":"<b>Cal.Core.Prelude.negativeInfinity<\/b><br\/>[CALDoc] The special negative infinity value for a <code>Double<\/code>.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.positiveInfinity","name":"positiveInfinity","type":"CalCorePreludepositiveInfinity","ui":"<b>Cal.Core.Prelude.positiveInfinity<\/b><br\/>[CALDoc] The special positive infinity value for a <code>Double<\/code>.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isNotANumber","name":"isNotANumber","type":"CalCorePreludeisNotANumber","ui":"<b>Cal.Core.Prelude.isNotANumber<\/b><br\/>[CALDoc] Checks whether a <code>Double<\/code> value is the special not-a-number value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notANumber","name":"notANumber","type":"CalCorePreludenotANumber","ui":"<b>Cal.Core.Prelude.notANumber<\/b><br\/>[CALDoc] The special not-a-number value for a <code>Double<\/code>.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList_add","name":"jList_add","type":"CalCorePreludejList_add","ui":"<b>Cal.Core.Prelude.jList_add<\/b><br\/>[CALDoc] ","terminals":[{"name":"jList","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jArrayList_new","name":"jArrayList_new","type":"CalCorePreludejArrayList_new","ui":"<b>Cal.Core.Prelude.jArrayList_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList7","name":"jList7","type":"CalCorePreludejList7","ui":"<b>Cal.Core.Prelude.jList7<\/b><br\/>[CALDoc] ","terminals":[{"name":"e1","input":"text"},{"name":"e5","input":"text"},{"name":"e0","input":"text"},{"name":"e6","input":"text"},{"name":"e4","input":"text"},{"name":"e3","input":"text"},{"name":"e2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList6","name":"jList6","type":"CalCorePreludejList6","ui":"<b>Cal.Core.Prelude.jList6<\/b><br\/>[CALDoc] ","terminals":[{"name":"e4","input":"text"},{"name":"e0","input":"text"},{"name":"e3","input":"text"},{"name":"e1","input":"text"},{"name":"e5","input":"text"},{"name":"e2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList5","name":"jList5","type":"CalCorePreludejList5","ui":"<b>Cal.Core.Prelude.jList5<\/b><br\/>[CALDoc] ","terminals":[{"name":"e2","input":"text"},{"name":"e3","input":"text"},{"name":"e1","input":"text"},{"name":"e0","input":"text"},{"name":"e4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList4","name":"jList4","type":"CalCorePreludejList4","ui":"<b>Cal.Core.Prelude.jList4<\/b><br\/>[CALDoc] ","terminals":[{"name":"e1","input":"text"},{"name":"e0","input":"text"},{"name":"e2","input":"text"},{"name":"e3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList3","name":"jList3","type":"CalCorePreludejList3","ui":"<b>Cal.Core.Prelude.jList3<\/b><br\/>[CALDoc] ","terminals":[{"name":"e1","input":"text"},{"name":"e2","input":"text"},{"name":"e0","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList2","name":"jList2","type":"CalCorePreludejList2","ui":"<b>Cal.Core.Prelude.jList2<\/b><br\/>[CALDoc] ","terminals":[{"name":"e0","input":"text"},{"name":"e1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList1","name":"jList1","type":"CalCorePreludejList1","ui":"<b>Cal.Core.Prelude.jList1<\/b><br\/>[CALDoc] ","terminals":[{"name":"e0","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jList0","name":"jList0","type":"CalCorePreludejList0","ui":"<b>Cal.Core.Prelude.jList0<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.javaArrayToJIterator","name":"javaArrayToJIterator","type":"CalCorePreludejavaArrayToJIterator","ui":"<b>Cal.Core.Prelude.javaArrayToJIterator<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isJavaArray","name":"isJavaArray","type":"CalCorePreludeisJavaArray","ui":"<b>Cal.Core.Prelude.isJavaArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jEnumerationToJIterator","name":"jEnumerationToJIterator","type":"CalCorePreludejEnumerationToJIterator","ui":"<b>Cal.Core.Prelude.jEnumerationToJIterator<\/b><br\/>[CALDoc] ","terminals":[{"name":"e","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isJEnumeration","name":"isJEnumeration","type":"CalCorePreludeisJEnumeration","ui":"<b>Cal.Core.Prelude.isJEnumeration<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isJIterator","name":"isJIterator","type":"CalCorePreludeisJIterator","ui":"<b>Cal.Core.Prelude.isJIterator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.iterator_next","name":"iterator_next","type":"CalCorePreludeiterator_next","ui":"<b>Cal.Core.Prelude.iterator_next<\/b><br\/>[CALDoc] ","terminals":[{"name":"jIterator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.iterator_hasNext","name":"iterator_hasNext","type":"CalCorePreludeiterator_hasNext","ui":"<b>Cal.Core.Prelude.iterator_hasNext<\/b><br\/>[CALDoc] ","terminals":[{"name":"jIterator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.collection_iterator","name":"collection_iterator","type":"CalCorePreludecollection_iterator","ui":"<b>Cal.Core.Prelude.collection_iterator<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCollection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isJCollection","name":"isJCollection","type":"CalCorePreludeisJCollection","ui":"<b>Cal.Core.Prelude.isJCollection<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputStringFromJObject","name":"inputStringFromJObject","type":"CalCorePreludeinputStringFromJObject","ui":"<b>Cal.Core.Prelude.inputStringFromJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.unitValue_UNIT","name":"unitValue_UNIT","type":"CalCorePreludeunitValue_UNIT","ui":"<b>Cal.Core.Prelude.unitValue_UNIT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputDouble","name":"inputDouble","type":"CalCorePreludeinputDouble","ui":"<b>Cal.Core.Prelude.inputDouble<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"double\". \n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputDouble","name":"outputDouble","type":"CalCorePreludeoutputDouble","ui":"<b>Cal.Core.Prelude.outputDouble<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"double\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputFloat","name":"inputFloat","type":"CalCorePreludeinputFloat","ui":"<b>Cal.Core.Prelude.inputFloat<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"float\".\n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputFloat","name":"outputFloat","type":"CalCorePreludeoutputFloat","ui":"<b>Cal.Core.Prelude.outputFloat<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"float\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputLong","name":"inputLong","type":"CalCorePreludeinputLong","ui":"<b>Cal.Core.Prelude.inputLong<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"long\". \n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputLong","name":"outputLong","type":"CalCorePreludeoutputLong","ui":"<b>Cal.Core.Prelude.outputLong<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"long\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputInt","name":"inputInt","type":"CalCorePreludeinputInt","ui":"<b>Cal.Core.Prelude.inputInt<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"int\".\n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputInt","name":"outputInt","type":"CalCorePreludeoutputInt","ui":"<b>Cal.Core.Prelude.outputInt<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"int\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputShort","name":"inputShort","type":"CalCorePreludeinputShort","ui":"<b>Cal.Core.Prelude.inputShort<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"short\".\n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputShort","name":"outputShort","type":"CalCorePreludeoutputShort","ui":"<b>Cal.Core.Prelude.outputShort<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"short\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputByte","name":"inputByte","type":"CalCorePreludeinputByte","ui":"<b>Cal.Core.Prelude.inputByte<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"byte\".\n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputByte","name":"outputByte","type":"CalCorePreludeoutputByte","ui":"<b>Cal.Core.Prelude.outputByte<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"byte\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputBoolean","name":"inputBoolean","type":"CalCorePreludeinputBoolean","ui":"<b>Cal.Core.Prelude.inputBoolean<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"boolean\".\n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputBoolean","name":"outputBoolean","type":"CalCorePreludeoutputBoolean","ui":"<b>Cal.Core.Prelude.outputBoolean<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"boolean\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.inputChar","name":"inputChar","type":"CalCorePreludeinputChar","ui":"<b>Cal.Core.Prelude.inputChar<\/b><br\/>[CALDoc] Used to implement the <code>input<\/code> instance function for derived instances of\n<code>Inputable<\/code> for foreign types having implementation type \"char\".\n","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.outputChar","name":"outputChar","type":"CalCorePreludeoutputChar","ui":"<b>Cal.Core.Prelude.outputChar<\/b><br\/>[CALDoc] Used to implement the <code>output<\/code> instance function for derived instances of\n<code>Outputable<\/code> for foreign types having implementation type \"char\".","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.internal_algebraicValue_getNthArgument","name":"internal_algebraicValue_getNthArgument","type":"CalCorePreludeinternal_algebraicValue_getNthArgument","ui":"<b>Cal.Core.Prelude.internal_algebraicValue_getNthArgument<\/b><br\/>[CALDoc] This function is for internal use to support derived <code>Inputable<\/code> and <code>Outputable<\/code> instances.","terminals":[{"name":"algebraicValue","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.internal_algebraicValue_getNArguments","name":"internal_algebraicValue_getNArguments","type":"CalCorePreludeinternal_algebraicValue_getNArguments","ui":"<b>Cal.Core.Prelude.internal_algebraicValue_getNArguments<\/b><br\/>[CALDoc] This function is for internal use to support derived <code>Inputable<\/code> and <code>Outputable<\/code> instances.","terminals":[{"name":"algebraicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.internal_algebraicValue_getDataConstructorOrdinal","name":"internal_algebraicValue_getDataConstructorOrdinal","type":"CalCorePreludeinternal_algebraicValue_getDataConstructorOrdinal","ui":"<b>Cal.Core.Prelude.internal_algebraicValue_getDataConstructorOrdinal<\/b><br\/>[CALDoc] This function is for internal use to support derived <code>Inputable<\/code> and <code>Outputable<\/code> instances.","terminals":[{"name":"algebraicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.internal_algebraicValue_getDataConstructorName","name":"internal_algebraicValue_getDataConstructorName","type":"CalCorePreludeinternal_algebraicValue_getDataConstructorName","ui":"<b>Cal.Core.Prelude.internal_algebraicValue_getDataConstructorName<\/b><br\/>[CALDoc] This function is for internal use to support derived <code>Inputable<\/code> and <code>Outputable<\/code> instances.","terminals":[{"name":"algebraicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.internal_algebraicValue_new1","name":"internal_algebraicValue_new1","type":"CalCorePreludeinternal_algebraicValue_new1","ui":"<b>Cal.Core.Prelude.internal_algebraicValue_new1<\/b><br\/>[CALDoc] This function is for internal use to support derived <code>Inputable<\/code> and <code>Outputable<\/code> instances.","terminals":[{"name":"dataConstructorName","input":"text"},{"name":"argumentValue","input":"text"},{"name":"dataConstructorOrdinal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.internal_algebraicValue_new0","name":"internal_algebraicValue_new0","type":"CalCorePreludeinternal_algebraicValue_new0","ui":"<b>Cal.Core.Prelude.internal_algebraicValue_new0<\/b><br\/>[CALDoc] This function is for internal use to support derived <code>Inputable<\/code> and <code>Outputable<\/code> instances.","terminals":[{"name":"dataConstructorOrdinal","input":"text"},{"name":"dataConstructorName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.internal_algebraicValue_new","name":"internal_algebraicValue_new","type":"CalCorePreludeinternal_algebraicValue_new","ui":"<b>Cal.Core.Prelude.internal_algebraicValue_new<\/b><br\/>[CALDoc] This function is for internal use to support derived <code>Inputable<\/code> and <code>Outputable<\/code> instances.","terminals":[{"name":"dataConstructorName","input":"text"},{"name":"dataConstructorOrdinal","input":"text"},{"name":"argumentValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lengthString","name":"lengthString","type":"CalCorePreludelengthString","ui":"<b>Cal.Core.Prelude.lengthString<\/b><br\/>[CALDoc] Returns the length of the string. ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.appendString","name":"appendString","type":"CalCorePreludeappendString","ui":"<b>Cal.Core.Prelude.appendString<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jStringBuilderToString","name":"jStringBuilderToString","type":"CalCorePreludejStringBuilderToString","ui":"<b>Cal.Core.Prelude.jStringBuilderToString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jStringBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floor","name":"floor","type":"CalCorePreludefloor","ui":"<b>Cal.Core.Prelude.floor<\/b><br\/>[CALDoc] Returns the greatest integer less than or equal to <code>x<\/code>.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.ceiling","name":"ceiling","type":"CalCorePreludeceiling","ui":"<b>Cal.Core.Prelude.ceiling<\/b><br\/>[CALDoc] Returns the smallest integer greater than or equal to <code>x<\/code>.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.round","name":"round","type":"CalCorePreluderound","ui":"<b>Cal.Core.Prelude.round<\/b><br\/>[CALDoc] Rounds a number to the nearest integer. ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderDecimal","name":"remainderDecimal","type":"CalCorePreluderemainderDecimal","ui":"<b>Cal.Core.Prelude.remainderDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jROUND_HALF_UP","name":"jROUND_HALF_UP","type":"CalCorePreludejROUND_HALF_UP","ui":"<b>Cal.Core.Prelude.jROUND_HALF_UP<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jDivideDecimal","name":"jDivideDecimal","type":"CalCorePreludejDivideDecimal","ui":"<b>Cal.Core.Prelude.jDivideDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyDecimal","name":"multiplyDecimal","type":"CalCorePreludemultiplyDecimal","ui":"<b>Cal.Core.Prelude.multiplyDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractDecimal","name":"subtractDecimal","type":"CalCorePreludesubtractDecimal","ui":"<b>Cal.Core.Prelude.subtractDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addDecimal","name":"addDecimal","type":"CalCorePreludeaddDecimal","ui":"<b>Cal.Core.Prelude.addDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumDecimalAsInt","name":"signumDecimalAsInt","type":"CalCorePreludesignumDecimalAsInt","ui":"<b>Cal.Core.Prelude.signumDecimalAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absDecimal","name":"absDecimal","type":"CalCorePreludeabsDecimal","ui":"<b>Cal.Core.Prelude.absDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateDecimal","name":"negateDecimal","type":"CalCorePreludenegateDecimal","ui":"<b>Cal.Core.Prelude.negateDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxDecimal","name":"maxDecimal","type":"CalCorePreludemaxDecimal","ui":"<b>Cal.Core.Prelude.maxDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minDecimal","name":"minDecimal","type":"CalCorePreludeminDecimal","ui":"<b>Cal.Core.Prelude.minDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jCompareToDecimal","name":"jCompareToDecimal","type":"CalCorePreludejCompareToDecimal","ui":"<b>Cal.Core.Prelude.jCompareToDecimal<\/b><br\/>[CALDoc] Returns -1, 0, or 1.","terminals":[{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.stringToDecimal","name":"stringToDecimal","type":"CalCorePreludestringToDecimal","ui":"<b>Cal.Core.Prelude.stringToDecimal<\/b><br\/>[CALDoc] Parses a string (eg. <code>\"34.33\"<\/code>, <code>\"1.0e50000\"<\/code>) into a <code>Decimal<\/code>.\n","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integer_ZERO","name":"integer_ZERO","type":"CalCorePreludeinteger_ZERO","ui":"<b>Cal.Core.Prelude.integer_ZERO<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integer_ONE","name":"integer_ONE","type":"CalCorePreludeinteger_ONE","ui":"<b>Cal.Core.Prelude.integer_ONE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToString","name":"integerToString","type":"CalCorePreludeintegerToString","ui":"<b>Cal.Core.Prelude.integerToString<\/b><br\/>[CALDoc] Converts an <code>Integer<\/code> value to its string representation.","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.powerInteger","name":"powerInteger","type":"CalCorePreludepowerInteger","ui":"<b>Cal.Core.Prelude.powerInteger<\/b><br\/>[CALDoc] Returns the result of raising the first argument to the power specified by the second argument.","terminals":[{"name":"integer","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderInteger","name":"remainderInteger","type":"CalCorePreluderemainderInteger","ui":"<b>Cal.Core.Prelude.remainderInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideInteger","name":"divideInteger","type":"CalCorePreludedivideInteger","ui":"<b>Cal.Core.Prelude.divideInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyInteger","name":"multiplyInteger","type":"CalCorePreludemultiplyInteger","ui":"<b>Cal.Core.Prelude.multiplyInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractInteger","name":"subtractInteger","type":"CalCorePreludesubtractInteger","ui":"<b>Cal.Core.Prelude.subtractInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addInteger","name":"addInteger","type":"CalCorePreludeaddInteger","ui":"<b>Cal.Core.Prelude.addInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateInteger","name":"negateInteger","type":"CalCorePreludenegateInteger","ui":"<b>Cal.Core.Prelude.negateInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.stringToInteger","name":"stringToInteger","type":"CalCorePreludestringToInteger","ui":"<b>Cal.Core.Prelude.stringToInteger<\/b><br\/>[CALDoc] Parses a string representation of an integer into an <code>Integer<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumIntegerAsInt","name":"signumIntegerAsInt","type":"CalCorePreludesignumIntegerAsInt","ui":"<b>Cal.Core.Prelude.signumIntegerAsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absInteger","name":"absInteger","type":"CalCorePreludeabsInteger","ui":"<b>Cal.Core.Prelude.absInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minInteger","name":"minInteger","type":"CalCorePreludeminInteger","ui":"<b>Cal.Core.Prelude.minInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxInteger","name":"maxInteger","type":"CalCorePreludemaxInteger","ui":"<b>Cal.Core.Prelude.maxInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jCompareInteger","name":"jCompareInteger","type":"CalCorePreludejCompareInteger","ui":"<b>Cal.Core.Prelude.jCompareInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absLong","name":"absLong","type":"CalCorePreludeabsLong","ui":"<b>Cal.Core.Prelude.absLong<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minLong","name":"minLong","type":"CalCorePreludeminLong","ui":"<b>Cal.Core.Prelude.minLong<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxLong","name":"maxLong","type":"CalCorePreludemaxLong","ui":"<b>Cal.Core.Prelude.maxLong<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumDouble","name":"signumDouble","type":"CalCorePreludesignumDouble","ui":"<b>Cal.Core.Prelude.signumDouble<\/b><br\/>[CALDoc] There are some tricky aspects here in how NaN and -0 are handled.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absDouble","name":"absDouble","type":"CalCorePreludeabsDouble","ui":"<b>Cal.Core.Prelude.absDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minDouble","name":"minDouble","type":"CalCorePreludeminDouble","ui":"<b>Cal.Core.Prelude.minDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxDouble","name":"maxDouble","type":"CalCorePreludemaxDouble","ui":"<b>Cal.Core.Prelude.maxDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jCompareDouble","name":"jCompareDouble","type":"CalCorePreludejCompareDouble","ui":"<b>Cal.Core.Prelude.jCompareDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signumFloat","name":"signumFloat","type":"CalCorePreludesignumFloat","ui":"<b>Cal.Core.Prelude.signumFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absFloat","name":"absFloat","type":"CalCorePreludeabsFloat","ui":"<b>Cal.Core.Prelude.absFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minFloat","name":"minFloat","type":"CalCorePreludeminFloat","ui":"<b>Cal.Core.Prelude.minFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxFloat","name":"maxFloat","type":"CalCorePreludemaxFloat","ui":"<b>Cal.Core.Prelude.maxFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jCompareFloat","name":"jCompareFloat","type":"CalCorePreludejCompareFloat","ui":"<b>Cal.Core.Prelude.jCompareFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.absInt","name":"absInt","type":"CalCorePreludeabsInt","ui":"<b>Cal.Core.Prelude.absInt<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minInt","name":"minInt","type":"CalCorePreludeminInt","ui":"<b>Cal.Core.Prelude.minInt<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxInt","name":"maxInt","type":"CalCorePreludemaxInt","ui":"<b>Cal.Core.Prelude.maxInt<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jComparableToJObject","name":"jComparableToJObject","type":"CalCorePreludejComparableToJObject","ui":"<b>Cal.Core.Prelude.jComparableToJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.jCompareComparableHelper","name":"jCompareComparableHelper","type":"CalCorePreludejCompareComparableHelper","ui":"<b>Cal.Core.Prelude.jCompareComparableHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jComparable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsObject","name":"equalsObject","type":"CalCorePreludeequalsObject","ui":"<b>Cal.Core.Prelude.equalsObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObject","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.orderingValue_toInt","name":"orderingValue_toInt","type":"CalCorePreludeorderingValue_toInt","ui":"<b>Cal.Core.Prelude.orderingValue_toInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"jOrderingValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.orderingValue_GT","name":"orderingValue_GT","type":"CalCorePreludeorderingValue_GT","ui":"<b>Cal.Core.Prelude.orderingValue_GT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.orderingValue_EQ","name":"orderingValue_EQ","type":"CalCorePreludeorderingValue_EQ","ui":"<b>Cal.Core.Prelude.orderingValue_EQ<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.orderingValue_LT","name":"orderingValue_LT","type":"CalCorePreludeorderingValue_LT","ui":"<b>Cal.Core.Prelude.orderingValue_LT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.eitherValue_getValueField","name":"eitherValue_getValueField","type":"CalCorePreludeeitherValue_getValueField","ui":"<b>Cal.Core.Prelude.eitherValue_getValueField<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.eitherValue_isLeft","name":"eitherValue_isLeft","type":"CalCorePreludeeitherValue_isLeft","ui":"<b>Cal.Core.Prelude.eitherValue_isLeft<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEitherValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.eitherValue_makeRight","name":"eitherValue_makeRight","type":"CalCorePreludeeitherValue_makeRight","ui":"<b>Cal.Core.Prelude.eitherValue_makeRight<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.eitherValue_makeLeft","name":"eitherValue_makeLeft","type":"CalCorePreludeeitherValue_makeLeft","ui":"<b>Cal.Core.Prelude.eitherValue_makeLeft<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maybeValue_getValueField","name":"maybeValue_getValueField","type":"CalCorePreludemaybeValue_getValueField","ui":"<b>Cal.Core.Prelude.maybeValue_getValueField<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maybeValue_isNothing","name":"maybeValue_isNothing","type":"CalCorePreludemaybeValue_isNothing","ui":"<b>Cal.Core.Prelude.maybeValue_isNothing<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaybeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maybeValue_makeJust","name":"maybeValue_makeJust","type":"CalCorePreludemaybeValue_makeJust","ui":"<b>Cal.Core.Prelude.maybeValue_makeJust<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maybeValue_makeNothing","name":"maybeValue_makeNothing","type":"CalCorePreludemaybeValue_makeNothing","ui":"<b>Cal.Core.Prelude.maybeValue_makeNothing<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToDecimal","name":"decimalToDecimal","type":"CalCorePreludedecimalToDecimal","ui":"<b>Cal.Core.Prelude.decimalToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToInteger","name":"decimalToInteger","type":"CalCorePreludedecimalToInteger","ui":"<b>Cal.Core.Prelude.decimalToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToDouble","name":"decimalToDouble","type":"CalCorePreludedecimalToDouble","ui":"<b>Cal.Core.Prelude.decimalToDouble<\/b><br\/>[CALDoc] Attempts to convert a <code>Decimal<\/code> value to the nearest <code>Double<\/code> value.\n","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToFloat","name":"decimalToFloat","type":"CalCorePreludedecimalToFloat","ui":"<b>Cal.Core.Prelude.decimalToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToLong","name":"decimalToLong","type":"CalCorePreludedecimalToLong","ui":"<b>Cal.Core.Prelude.decimalToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToInt","name":"decimalToInt","type":"CalCorePreludedecimalToInt","ui":"<b>Cal.Core.Prelude.decimalToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToShort","name":"decimalToShort","type":"CalCorePreludedecimalToShort","ui":"<b>Cal.Core.Prelude.decimalToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.decimalToByte","name":"decimalToByte","type":"CalCorePreludedecimalToByte","ui":"<b>Cal.Core.Prelude.decimalToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToDecimal","name":"integerToDecimal","type":"CalCorePreludeintegerToDecimal","ui":"<b>Cal.Core.Prelude.integerToDecimal<\/b><br\/>[CALDoc] Converts an <code>Integer<\/code> value to the equivalent <code>Decimal<\/code> value.\n","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToInteger","name":"integerToInteger","type":"CalCorePreludeintegerToInteger","ui":"<b>Cal.Core.Prelude.integerToInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToDouble","name":"integerToDouble","type":"CalCorePreludeintegerToDouble","ui":"<b>Cal.Core.Prelude.integerToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToFloat","name":"integerToFloat","type":"CalCorePreludeintegerToFloat","ui":"<b>Cal.Core.Prelude.integerToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToLong","name":"integerToLong","type":"CalCorePreludeintegerToLong","ui":"<b>Cal.Core.Prelude.integerToLong<\/b><br\/>[CALDoc] Converts an <code>Integer<\/code> value to the corresponding <code>Long<\/code> value.","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToInt","name":"integerToInt","type":"CalCorePreludeintegerToInt","ui":"<b>Cal.Core.Prelude.integerToInt<\/b><br\/>[CALDoc] Converts an <code>Integer<\/code> value to the corresponding <code>Int<\/code> value.","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToShort","name":"integerToShort","type":"CalCorePreludeintegerToShort","ui":"<b>Cal.Core.Prelude.integerToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.integerToByte","name":"integerToByte","type":"CalCorePreludeintegerToByte","ui":"<b>Cal.Core.Prelude.integerToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"integer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToDecimal","name":"doubleToDecimal","type":"CalCorePreludedoubleToDecimal","ui":"<b>Cal.Core.Prelude.doubleToDecimal<\/b><br\/>[CALDoc] Converts a <code>Double<\/code> value to the equivalent <code>Decimal<\/code> value.\n","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToDouble","name":"doubleToDouble","type":"CalCorePreludedoubleToDouble","ui":"<b>Cal.Core.Prelude.doubleToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToFloat","name":"doubleToFloat","type":"CalCorePreludedoubleToFloat","ui":"<b>Cal.Core.Prelude.doubleToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToLong","name":"doubleToLong","type":"CalCorePreludedoubleToLong","ui":"<b>Cal.Core.Prelude.doubleToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToInt","name":"doubleToInt","type":"CalCorePreludedoubleToInt","ui":"<b>Cal.Core.Prelude.doubleToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToChar","name":"doubleToChar","type":"CalCorePreludedoubleToChar","ui":"<b>Cal.Core.Prelude.doubleToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToShort","name":"doubleToShort","type":"CalCorePreludedoubleToShort","ui":"<b>Cal.Core.Prelude.doubleToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.doubleToByte","name":"doubleToByte","type":"CalCorePreludedoubleToByte","ui":"<b>Cal.Core.Prelude.doubleToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToDouble","name":"floatToDouble","type":"CalCorePreludefloatToDouble","ui":"<b>Cal.Core.Prelude.floatToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToFloat","name":"floatToFloat","type":"CalCorePreludefloatToFloat","ui":"<b>Cal.Core.Prelude.floatToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToLong","name":"floatToLong","type":"CalCorePreludefloatToLong","ui":"<b>Cal.Core.Prelude.floatToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToInt","name":"floatToInt","type":"CalCorePreludefloatToInt","ui":"<b>Cal.Core.Prelude.floatToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToChar","name":"floatToChar","type":"CalCorePreludefloatToChar","ui":"<b>Cal.Core.Prelude.floatToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToShort","name":"floatToShort","type":"CalCorePreludefloatToShort","ui":"<b>Cal.Core.Prelude.floatToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.floatToByte","name":"floatToByte","type":"CalCorePreludefloatToByte","ui":"<b>Cal.Core.Prelude.floatToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToDecimal","name":"longToDecimal","type":"CalCorePreludelongToDecimal","ui":"<b>Cal.Core.Prelude.longToDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToInteger","name":"longToInteger","type":"CalCorePreludelongToInteger","ui":"<b>Cal.Core.Prelude.longToInteger<\/b><br\/>[CALDoc] Converts a <code>Long<\/code> value to the corresponding <code>Integer<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToDouble","name":"longToDouble","type":"CalCorePreludelongToDouble","ui":"<b>Cal.Core.Prelude.longToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToFloat","name":"longToFloat","type":"CalCorePreludelongToFloat","ui":"<b>Cal.Core.Prelude.longToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToLong","name":"longToLong","type":"CalCorePreludelongToLong","ui":"<b>Cal.Core.Prelude.longToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToInt","name":"longToInt","type":"CalCorePreludelongToInt","ui":"<b>Cal.Core.Prelude.longToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToChar","name":"longToChar","type":"CalCorePreludelongToChar","ui":"<b>Cal.Core.Prelude.longToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToShort","name":"longToShort","type":"CalCorePreludelongToShort","ui":"<b>Cal.Core.Prelude.longToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.longToByte","name":"longToByte","type":"CalCorePreludelongToByte","ui":"<b>Cal.Core.Prelude.longToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToDouble","name":"intToDouble","type":"CalCorePreludeintToDouble","ui":"<b>Cal.Core.Prelude.intToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToFloat","name":"intToFloat","type":"CalCorePreludeintToFloat","ui":"<b>Cal.Core.Prelude.intToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToLong","name":"intToLong","type":"CalCorePreludeintToLong","ui":"<b>Cal.Core.Prelude.intToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToInt","name":"intToInt","type":"CalCorePreludeintToInt","ui":"<b>Cal.Core.Prelude.intToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToChar","name":"intToChar","type":"CalCorePreludeintToChar","ui":"<b>Cal.Core.Prelude.intToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToShort","name":"intToShort","type":"CalCorePreludeintToShort","ui":"<b>Cal.Core.Prelude.intToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToByte","name":"intToByte","type":"CalCorePreludeintToByte","ui":"<b>Cal.Core.Prelude.intToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charToDouble","name":"charToDouble","type":"CalCorePreludecharToDouble","ui":"<b>Cal.Core.Prelude.charToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charToFloat","name":"charToFloat","type":"CalCorePreludecharToFloat","ui":"<b>Cal.Core.Prelude.charToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charToLong","name":"charToLong","type":"CalCorePreludecharToLong","ui":"<b>Cal.Core.Prelude.charToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charToInt","name":"charToInt","type":"CalCorePreludecharToInt","ui":"<b>Cal.Core.Prelude.charToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charToChar","name":"charToChar","type":"CalCorePreludecharToChar","ui":"<b>Cal.Core.Prelude.charToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charToShort","name":"charToShort","type":"CalCorePreludecharToShort","ui":"<b>Cal.Core.Prelude.charToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.charToByte","name":"charToByte","type":"CalCorePreludecharToByte","ui":"<b>Cal.Core.Prelude.charToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToDouble","name":"shortToDouble","type":"CalCorePreludeshortToDouble","ui":"<b>Cal.Core.Prelude.shortToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToFloat","name":"shortToFloat","type":"CalCorePreludeshortToFloat","ui":"<b>Cal.Core.Prelude.shortToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToLong","name":"shortToLong","type":"CalCorePreludeshortToLong","ui":"<b>Cal.Core.Prelude.shortToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToInt","name":"shortToInt","type":"CalCorePreludeshortToInt","ui":"<b>Cal.Core.Prelude.shortToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToChar","name":"shortToChar","type":"CalCorePreludeshortToChar","ui":"<b>Cal.Core.Prelude.shortToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToShort","name":"shortToShort","type":"CalCorePreludeshortToShort","ui":"<b>Cal.Core.Prelude.shortToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.shortToByte","name":"shortToByte","type":"CalCorePreludeshortToByte","ui":"<b>Cal.Core.Prelude.shortToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToDouble","name":"byteToDouble","type":"CalCorePreludebyteToDouble","ui":"<b>Cal.Core.Prelude.byteToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToFloat","name":"byteToFloat","type":"CalCorePreludebyteToFloat","ui":"<b>Cal.Core.Prelude.byteToFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToLong","name":"byteToLong","type":"CalCorePreludebyteToLong","ui":"<b>Cal.Core.Prelude.byteToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToInt","name":"byteToInt","type":"CalCorePreludebyteToInt","ui":"<b>Cal.Core.Prelude.byteToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToShort","name":"byteToShort","type":"CalCorePreludebyteToShort","ui":"<b>Cal.Core.Prelude.byteToShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToChar","name":"byteToChar","type":"CalCorePreludebyteToChar","ui":"<b>Cal.Core.Prelude.byteToChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.byteToByte","name":"byteToByte","type":"CalCorePreludebyteToByte","ui":"<b>Cal.Core.Prelude.byteToByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.executionContext","name":"executionContext","type":"CalCorePreludeexecutionContext","ui":"<b>Cal.Core.Prelude.executionContext<\/b><br\/>[CALDoc] Returns: the ExecutionContext that executed this call. Not a pure function.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.ordinalValue","name":"ordinalValue","type":"CalCorePreludeordinalValue","ui":"<b>Cal.Core.Prelude.ordinalValue<\/b><br\/>[CALDoc] This function should remain private. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.makeCalFunction","name":"makeCalFunction","type":"CalCorePreludemakeCalFunction","ui":"<b>Cal.Core.Prelude.makeCalFunction<\/b><br\/>[CALDoc] Creates a <code>CalFunction<\/code> value from a CAL function of type <code>JObject -&gt; JObject<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.makeEquivalenceRelation","name":"makeEquivalenceRelation","type":"CalCorePreludemakeEquivalenceRelation","ui":"<b>Cal.Core.Prelude.makeEquivalenceRelation<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.makeComparator","name":"makeComparator","type":"CalCorePreludemakeComparator","ui":"<b>Cal.Core.Prelude.makeComparator<\/b><br\/>[CALDoc] Makes a comparator that uses the ordering function argument to implement the Java comparator's compare method.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.objectToCalValue","name":"objectToCalValue","type":"CalCorePreludeobjectToCalValue","ui":"<b>Cal.Core.Prelude.objectToCalValue<\/b><br\/>[CALDoc] Returns: checks that <code>object<\/code> is indeed a handle to a <code>CalValue<\/code> and then returns the underlying CAL value\nevaluating it to weak-head normal form.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.calValueToObject","name":"calValueToObject","type":"CalCorePreludecalValueToObject","ui":"<b>Cal.Core.Prelude.calValueToObject<\/b><br\/>[CALDoc] Returns: converts the <code>calValue<\/code> argument into a Java object that is suitable for external Java clients to use as a handle to the\n<code>calValue<\/code>. The <code>calValue<\/code> argument itself is not evaluated to weak-head normal form.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordToJListPrimitive","name":"recordToJListPrimitive","type":"CalCorePreluderecordToJListPrimitive","ui":"<b>Cal.Core.Prelude.recordToJListPrimitive<\/b><br\/>[CALDoc] Returns a <code>java.util.List<\/code> value whose elements are obtained by applying <code>input<\/code> to each field in the CAL record \nin field-name order. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordFromJMapPrimitive","name":"recordFromJMapPrimitive","type":"CalCorePreluderecordFromJMapPrimitive","ui":"<b>Cal.Core.Prelude.recordFromJMapPrimitive<\/b><br\/>[CALDoc] The CAL record obtained by applying <code>input<\/code> to each value of the Java map from <code>org.openquark.cal.compiler.FieldName<\/code>\nto <code>java.lang.Object<\/code>. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordFromJListPrimitive","name":"recordFromJListPrimitive","type":"CalCorePreluderecordFromJListPrimitive","ui":"<b>Cal.Core.Prelude.recordFromJListPrimitive<\/b><br\/>[CALDoc] The CAL record obtained by applying <code>input<\/code> to each element of the Java list. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compareRecord","name":"compareRecord","type":"CalCorePreludecompareRecord","ui":"<b>Cal.Core.Prelude.compareRecord<\/b><br\/>[CALDoc] Returns: comparison using field-name ordering.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsRecord","name":"notEqualsRecord","type":"CalCorePreludenotEqualsRecord","ui":"<b>Cal.Core.Prelude.notEqualsRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsRecord","name":"equalsRecord","type":"CalCorePreludeequalsRecord","ui":"<b>Cal.Core.Prelude.equalsRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.recordTypeDictionary","name":"recordTypeDictionary","type":"CalCorePreluderecordTypeDictionary","ui":"<b>Cal.Core.Prelude.recordTypeDictionary<\/b><br\/>[CALDoc] Extracts the machine-internal type dictionary from a record.  ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.unsafeCoerce","name":"unsafeCoerce","type":"CalCorePreludeunsafeCoerce","ui":"<b>Cal.Core.Prelude.unsafeCoerce<\/b><br\/>[CALDoc] <code>unsafeCoerce<\/code> is equivalent to the identity function operationally.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.error","name":"error","type":"CalCorePreludeerror","ui":"<b>Cal.Core.Prelude.error<\/b><br\/>[CALDoc] The <code>error<\/code> function will cause execution to stop immediately. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.eager","name":"eager","type":"CalCorePreludeeager","ui":"<b>Cal.Core.Prelude.eager<\/b><br\/>[CALDoc] <code>eager<\/code> is used to force a strict evaluation of its argument to weak-head normal form.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.deepSeq","name":"deepSeq","type":"CalCorePreludedeepSeq","ui":"<b>Cal.Core.Prelude.deepSeq<\/b><br\/>[CALDoc] The <code>deepSeq<\/code> function is similar to the <code>seq<\/code> function, except that <code>deepSeq x y<\/code> evaluates the\nargument <code>x<\/code> to normal form (instead of weak head normal form). ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.seq","name":"seq","type":"CalCorePreludeseq","ui":"<b>Cal.Core.Prelude.seq<\/b><br\/>[CALDoc] <code>seq<\/code> is a primitive function used to explicitly control the order of evaluation of CAL.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanChar","name":"greaterThanChar","type":"CalCorePreludegreaterThanChar","ui":"<b>Cal.Core.Prelude.greaterThanChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsChar","name":"greaterThanEqualsChar","type":"CalCorePreludegreaterThanEqualsChar","ui":"<b>Cal.Core.Prelude.greaterThanEqualsChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsChar","name":"lessThanEqualsChar","type":"CalCorePreludelessThanEqualsChar","ui":"<b>Cal.Core.Prelude.lessThanEqualsChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanChar","name":"lessThanChar","type":"CalCorePreludelessThanChar","ui":"<b>Cal.Core.Prelude.lessThanChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsChar","name":"notEqualsChar","type":"CalCorePreludenotEqualsChar","ui":"<b>Cal.Core.Prelude.notEqualsChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsChar","name":"equalsChar","type":"CalCorePreludeequalsChar","ui":"<b>Cal.Core.Prelude.equalsChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanByte","name":"greaterThanByte","type":"CalCorePreludegreaterThanByte","ui":"<b>Cal.Core.Prelude.greaterThanByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsByte","name":"greaterThanEqualsByte","type":"CalCorePreludegreaterThanEqualsByte","ui":"<b>Cal.Core.Prelude.greaterThanEqualsByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsByte","name":"lessThanEqualsByte","type":"CalCorePreludelessThanEqualsByte","ui":"<b>Cal.Core.Prelude.lessThanEqualsByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanByte","name":"lessThanByte","type":"CalCorePreludelessThanByte","ui":"<b>Cal.Core.Prelude.lessThanByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsByte","name":"notEqualsByte","type":"CalCorePreludenotEqualsByte","ui":"<b>Cal.Core.Prelude.notEqualsByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsByte","name":"equalsByte","type":"CalCorePreludeequalsByte","ui":"<b>Cal.Core.Prelude.equalsByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanShort","name":"greaterThanShort","type":"CalCorePreludegreaterThanShort","ui":"<b>Cal.Core.Prelude.greaterThanShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsShort","name":"greaterThanEqualsShort","type":"CalCorePreludegreaterThanEqualsShort","ui":"<b>Cal.Core.Prelude.greaterThanEqualsShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsShort","name":"lessThanEqualsShort","type":"CalCorePreludelessThanEqualsShort","ui":"<b>Cal.Core.Prelude.lessThanEqualsShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanShort","name":"lessThanShort","type":"CalCorePreludelessThanShort","ui":"<b>Cal.Core.Prelude.lessThanShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsShort","name":"notEqualsShort","type":"CalCorePreludenotEqualsShort","ui":"<b>Cal.Core.Prelude.notEqualsShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsShort","name":"equalsShort","type":"CalCorePreludeequalsShort","ui":"<b>Cal.Core.Prelude.equalsShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderLong","name":"remainderLong","type":"CalCorePreluderemainderLong","ui":"<b>Cal.Core.Prelude.remainderLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateLong","name":"negateLong","type":"CalCorePreludenegateLong","ui":"<b>Cal.Core.Prelude.negateLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideLong","name":"divideLong","type":"CalCorePreludedivideLong","ui":"<b>Cal.Core.Prelude.divideLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyLong","name":"multiplyLong","type":"CalCorePreludemultiplyLong","ui":"<b>Cal.Core.Prelude.multiplyLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractLong","name":"subtractLong","type":"CalCorePreludesubtractLong","ui":"<b>Cal.Core.Prelude.subtractLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addLong","name":"addLong","type":"CalCorePreludeaddLong","ui":"<b>Cal.Core.Prelude.addLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanLong","name":"greaterThanLong","type":"CalCorePreludegreaterThanLong","ui":"<b>Cal.Core.Prelude.greaterThanLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsLong","name":"greaterThanEqualsLong","type":"CalCorePreludegreaterThanEqualsLong","ui":"<b>Cal.Core.Prelude.greaterThanEqualsLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsLong","name":"lessThanEqualsLong","type":"CalCorePreludelessThanEqualsLong","ui":"<b>Cal.Core.Prelude.lessThanEqualsLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanLong","name":"lessThanLong","type":"CalCorePreludelessThanLong","ui":"<b>Cal.Core.Prelude.lessThanLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsLong","name":"notEqualsLong","type":"CalCorePreludenotEqualsLong","ui":"<b>Cal.Core.Prelude.notEqualsLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsLong","name":"equalsLong","type":"CalCorePreludeequalsLong","ui":"<b>Cal.Core.Prelude.equalsLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderFloat","name":"remainderFloat","type":"CalCorePreluderemainderFloat","ui":"<b>Cal.Core.Prelude.remainderFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateFloat","name":"negateFloat","type":"CalCorePreludenegateFloat","ui":"<b>Cal.Core.Prelude.negateFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideFloat","name":"divideFloat","type":"CalCorePreludedivideFloat","ui":"<b>Cal.Core.Prelude.divideFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyFloat","name":"multiplyFloat","type":"CalCorePreludemultiplyFloat","ui":"<b>Cal.Core.Prelude.multiplyFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractFloat","name":"subtractFloat","type":"CalCorePreludesubtractFloat","ui":"<b>Cal.Core.Prelude.subtractFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addFloat","name":"addFloat","type":"CalCorePreludeaddFloat","ui":"<b>Cal.Core.Prelude.addFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanFloat","name":"greaterThanFloat","type":"CalCorePreludegreaterThanFloat","ui":"<b>Cal.Core.Prelude.greaterThanFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsFloat","name":"greaterThanEqualsFloat","type":"CalCorePreludegreaterThanEqualsFloat","ui":"<b>Cal.Core.Prelude.greaterThanEqualsFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsFloat","name":"lessThanEqualsFloat","type":"CalCorePreludelessThanEqualsFloat","ui":"<b>Cal.Core.Prelude.lessThanEqualsFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanFloat","name":"lessThanFloat","type":"CalCorePreludelessThanFloat","ui":"<b>Cal.Core.Prelude.lessThanFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsFloat","name":"notEqualsFloat","type":"CalCorePreludenotEqualsFloat","ui":"<b>Cal.Core.Prelude.notEqualsFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsFloat","name":"equalsFloat","type":"CalCorePreludeequalsFloat","ui":"<b>Cal.Core.Prelude.equalsFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderDouble","name":"remainderDouble","type":"CalCorePreluderemainderDouble","ui":"<b>Cal.Core.Prelude.remainderDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateDouble","name":"negateDouble","type":"CalCorePreludenegateDouble","ui":"<b>Cal.Core.Prelude.negateDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideDouble","name":"divideDouble","type":"CalCorePreludedivideDouble","ui":"<b>Cal.Core.Prelude.divideDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyDouble","name":"multiplyDouble","type":"CalCorePreludemultiplyDouble","ui":"<b>Cal.Core.Prelude.multiplyDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractDouble","name":"subtractDouble","type":"CalCorePreludesubtractDouble","ui":"<b>Cal.Core.Prelude.subtractDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addDouble","name":"addDouble","type":"CalCorePreludeaddDouble","ui":"<b>Cal.Core.Prelude.addDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanDouble","name":"greaterThanDouble","type":"CalCorePreludegreaterThanDouble","ui":"<b>Cal.Core.Prelude.greaterThanDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsDouble","name":"greaterThanEqualsDouble","type":"CalCorePreludegreaterThanEqualsDouble","ui":"<b>Cal.Core.Prelude.greaterThanEqualsDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsDouble","name":"lessThanEqualsDouble","type":"CalCorePreludelessThanEqualsDouble","ui":"<b>Cal.Core.Prelude.lessThanEqualsDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanDouble","name":"lessThanDouble","type":"CalCorePreludelessThanDouble","ui":"<b>Cal.Core.Prelude.lessThanDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsDouble","name":"notEqualsDouble","type":"CalCorePreludenotEqualsDouble","ui":"<b>Cal.Core.Prelude.notEqualsDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsDouble","name":"equalsDouble","type":"CalCorePreludeequalsDouble","ui":"<b>Cal.Core.Prelude.equalsDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainderInt","name":"remainderInt","type":"CalCorePreluderemainderInt","ui":"<b>Cal.Core.Prelude.remainderInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negateInt","name":"negateInt","type":"CalCorePreludenegateInt","ui":"<b>Cal.Core.Prelude.negateInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divideInt","name":"divideInt","type":"CalCorePreludedivideInt","ui":"<b>Cal.Core.Prelude.divideInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiplyInt","name":"multiplyInt","type":"CalCorePreludemultiplyInt","ui":"<b>Cal.Core.Prelude.multiplyInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtractInt","name":"subtractInt","type":"CalCorePreludesubtractInt","ui":"<b>Cal.Core.Prelude.subtractInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.addInt","name":"addInt","type":"CalCorePreludeaddInt","ui":"<b>Cal.Core.Prelude.addInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanInt","name":"greaterThanInt","type":"CalCorePreludegreaterThanInt","ui":"<b>Cal.Core.Prelude.greaterThanInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEqualsInt","name":"greaterThanEqualsInt","type":"CalCorePreludegreaterThanEqualsInt","ui":"<b>Cal.Core.Prelude.greaterThanEqualsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEqualsInt","name":"lessThanEqualsInt","type":"CalCorePreludelessThanEqualsInt","ui":"<b>Cal.Core.Prelude.lessThanEqualsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanInt","name":"lessThanInt","type":"CalCorePreludelessThanInt","ui":"<b>Cal.Core.Prelude.lessThanInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEqualsInt","name":"notEqualsInt","type":"CalCorePreludenotEqualsInt","ui":"<b>Cal.Core.Prelude.notEqualsInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equalsInt","name":"equalsInt","type":"CalCorePreludeequalsInt","ui":"<b>Cal.Core.Prelude.equalsInt<\/b><br\/>[CALDoc] equalsInt is used to define the instance method equals for derived Eq instances\nfor foreign types where the underlying Java type is the primitive type \"int\".\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.False","name":"False","type":"CalCorePreludeFalse","ui":"<b>Cal.Core.Prelude.False<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.True","name":"True","type":"CalCorePreludeTrue","ui":"<b>Cal.Core.Prelude.True<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.Nil","name":"Nil","type":"CalCorePreludeNil","ui":"<b>Cal.Core.Prelude.Nil<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.Cons","name":"Cons","type":"CalCorePreludeCons","ui":"<b>Cal.Core.Prelude.Cons<\/b><br\/>[CALDoc] ","terminals":[{"name":"head","input":"text"},{"name":"tail","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.Unit","name":"Unit","type":"CalCorePreludeUnit","ui":"<b>Cal.Core.Prelude.Unit<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.Nothing","name":"Nothing","type":"CalCorePreludeNothing","ui":"<b>Cal.Core.Prelude.Nothing<\/b><br\/>[CALDoc] A data constructor which represents the fact that a value was not supplied.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.Just","name":"Just","type":"CalCorePreludeJust","ui":"<b>Cal.Core.Prelude.Just<\/b><br\/>[CALDoc] A data constructor which represents the fact that a value was supplied.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.Left","name":"Left","type":"CalCorePreludeLeft","ui":"<b>Cal.Core.Prelude.Left<\/b><br\/>[CALDoc] A data constructor that represents a value of the first of two possible types.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.Right","name":"Right","type":"CalCorePreludeRight","ui":"<b>Cal.Core.Prelude.Right<\/b><br\/>[CALDoc] A data constructor that represents a value of the second of two possible types.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.LT","name":"LT","type":"CalCorePreludeLT","ui":"<b>Cal.Core.Prelude.LT<\/b><br\/>[CALDoc] A data constructor that represents the ordering relationship of \"less than\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.EQ","name":"EQ","type":"CalCorePreludeEQ","ui":"<b>Cal.Core.Prelude.EQ<\/b><br\/>[CALDoc] A data constructor that represents the ordering relationship of \"equal to\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.GT","name":"GT","type":"CalCorePreludeGT","ui":"<b>Cal.Core.Prelude.GT<\/b><br\/>[CALDoc] A data constructor that represents the ordering relationship of \"greater than\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.AlgebraicTypeRep","name":"AlgebraicTypeRep","type":"CalCorePreludeAlgebraicTypeRep","ui":"<b>Cal.Core.Prelude.AlgebraicTypeRep<\/b><br\/>[CALDoc] Used for algebraic type constructors not supported via special TypeRep data constructors.","terminals":[{"name":"argTypes","input":"text"},{"name":"typeConsName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.ForeignTypeRep","name":"ForeignTypeRep","type":"CalCorePreludeForeignTypeRep","ui":"<b>Cal.Core.Prelude.ForeignTypeRep<\/b><br\/>[CALDoc] Used for foreign types i.e. the implementation type is a Java object type or a Java primitive\ntype. ","terminals":[{"name":"typeConsName","input":"text"},{"name":"foreignClass","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.RecordTypeRep","name":"RecordTypeRep","type":"CalCorePreludeRecordTypeRep","ui":"<b>Cal.Core.Prelude.RecordTypeRep<\/b><br\/>[CALDoc] Used for representing records.","terminals":[{"name":"dictionary","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.FunctionTypeRep","name":"FunctionTypeRep","type":"CalCorePreludeFunctionTypeRep","ui":"<b>Cal.Core.Prelude.FunctionTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Function<\/code> type constructor \"-&gt;\" when fully saturated.","terminals":[{"name":"codomainType","input":"text"},{"name":"domainType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.ListTypeRep","name":"ListTypeRep","type":"CalCorePreludeListTypeRep","ui":"<b>Cal.Core.Prelude.ListTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.List<\/code> type constructor when fully saturated.","terminals":[{"name":"elementType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.UnitTypeRep","name":"UnitTypeRep","type":"CalCorePreludeUnitTypeRep","ui":"<b>Cal.Core.Prelude.UnitTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Unit<\/code> type constructor.\nrepresentation of the <code>()<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.BooleanTypeRep","name":"BooleanTypeRep","type":"CalCorePreludeBooleanTypeRep","ui":"<b>Cal.Core.Prelude.BooleanTypeRep<\/b><br\/>[CALDoc] Used for the <code>Boolean<\/code> type constructor.\nrepresentation of the <code>Boolean<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.IntTypeRep","name":"IntTypeRep","type":"CalCorePreludeIntTypeRep","ui":"<b>Cal.Core.Prelude.IntTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Int<\/code> type constructor.\nrepresentation of the <code>Int<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.ByteTypeRep","name":"ByteTypeRep","type":"CalCorePreludeByteTypeRep","ui":"<b>Cal.Core.Prelude.ByteTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Byte<\/code> type constructor.\nrepresentation of the <code>Byte<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.ShortTypeRep","name":"ShortTypeRep","type":"CalCorePreludeShortTypeRep","ui":"<b>Cal.Core.Prelude.ShortTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Short<\/code> type constructor.\nrepresentation of the <code>Short<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.LongTypeRep","name":"LongTypeRep","type":"CalCorePreludeLongTypeRep","ui":"<b>Cal.Core.Prelude.LongTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Long<\/code> type constructor.\nrepresentation of the <code>Long<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.FloatTypeRep","name":"FloatTypeRep","type":"CalCorePreludeFloatTypeRep","ui":"<b>Cal.Core.Prelude.FloatTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Float<\/code> type constructor.\nrepresentation of the <code>Float<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.DoubleTypeRep","name":"DoubleTypeRep","type":"CalCorePreludeDoubleTypeRep","ui":"<b>Cal.Core.Prelude.DoubleTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Double<\/code> type constructor.\nrepresentation of the <code>Double<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.CharTypeRep","name":"CharTypeRep","type":"CalCorePreludeCharTypeRep","ui":"<b>Cal.Core.Prelude.CharTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.Char<\/code> type constructor.\nrepresentation of the <code>Char<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.StringTypeRep","name":"StringTypeRep","type":"CalCorePreludeStringTypeRep","ui":"<b>Cal.Core.Prelude.StringTypeRep<\/b><br\/>[CALDoc] Used for the <code>Prelude.String<\/code> type constructor.\nrepresentation of the <code>String<\/code> type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.minBound","name":"minBound","type":"CalCorePreludeminBound","ui":"<b>Cal.Core.Prelude.minBound<\/b><br\/>[CALDoc] Returns: the minimum bound of the instance type.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.maxBound","name":"maxBound","type":"CalCorePreludemaxBound","ui":"<b>Cal.Core.Prelude.maxBound<\/b><br\/>[CALDoc] Returns: the maximum bound of the instance type.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.equals","name":"equals","type":"CalCorePreludeequals","ui":"<b>Cal.Core.Prelude.equals<\/b><br\/>[CALDoc] Returns whether the two arguments are equal.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.notEquals","name":"notEquals","type":"CalCorePreludenotEquals","ui":"<b>Cal.Core.Prelude.notEquals<\/b><br\/>[CALDoc] Returns whether the two arguments not equal.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThan","name":"lessThan","type":"CalCorePreludelessThan","ui":"<b>Cal.Core.Prelude.lessThan<\/b><br\/>[CALDoc] Returns whether the first argument is less than the second argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.lessThanEquals","name":"lessThanEquals","type":"CalCorePreludelessThanEquals","ui":"<b>Cal.Core.Prelude.lessThanEquals<\/b><br\/>[CALDoc] Returns whether the first argument is less than or equal to the second argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThanEquals","name":"greaterThanEquals","type":"CalCorePreludegreaterThanEquals","ui":"<b>Cal.Core.Prelude.greaterThanEquals<\/b><br\/>[CALDoc] Returns whether the first argument is greater than or equal to the second argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.greaterThan","name":"greaterThan","type":"CalCorePreludegreaterThan","ui":"<b>Cal.Core.Prelude.greaterThan<\/b><br\/>[CALDoc] Returns whether the first argument is greater than the second argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.compare","name":"compare","type":"CalCorePreludecompare","ui":"<b>Cal.Core.Prelude.compare<\/b><br\/>[CALDoc] Returns an <code>Ordering<\/code> based on how the first argument compares to the second argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.max","name":"max","type":"CalCorePreludemax","ui":"<b>Cal.Core.Prelude.max<\/b><br\/>[CALDoc] Given the two arguments, returns the value that is the greater of the two.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.min","name":"min","type":"CalCorePreludemin","ui":"<b>Cal.Core.Prelude.min<\/b><br\/>[CALDoc] Given the two arguments, returns the value that is the lesser of the two.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.negate","name":"negate","type":"CalCorePreludenegate","ui":"<b>Cal.Core.Prelude.negate<\/b><br\/>[CALDoc] Negates the given number.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.add","name":"add","type":"CalCorePreludeadd","ui":"<b>Cal.Core.Prelude.add<\/b><br\/>[CALDoc] Returns the sum of two numbers.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.subtract","name":"subtract","type":"CalCorePreludesubtract","ui":"<b>Cal.Core.Prelude.subtract<\/b><br\/>[CALDoc] Returns the result of subtracting the second number from the first number.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.multiply","name":"multiply","type":"CalCorePreludemultiply","ui":"<b>Cal.Core.Prelude.multiply<\/b><br\/>[CALDoc] Returns the product of two numbers.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.divide","name":"divide","type":"CalCorePreludedivide","ui":"<b>Cal.Core.Prelude.divide<\/b><br\/>[CALDoc] Returns the result of dividing the first number by the second number.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.remainder","name":"remainder","type":"CalCorePreluderemainder","ui":"<b>Cal.Core.Prelude.remainder<\/b><br\/>[CALDoc] Returns the remainder from division.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.abs","name":"abs","type":"CalCorePreludeabs","ui":"<b>Cal.Core.Prelude.abs<\/b><br\/>[CALDoc] Returns the absolute value of the given number.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.signum","name":"signum","type":"CalCorePreludesignum","ui":"<b>Cal.Core.Prelude.signum<\/b><br\/>[CALDoc] Returns the sign of the given number.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromByte","name":"fromByte","type":"CalCorePreludefromByte","ui":"<b>Cal.Core.Prelude.fromByte<\/b><br\/>[CALDoc] Converts a <code>Byte<\/code> value to the corresponding value in a type that is an instance of <code>Num<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromShort","name":"fromShort","type":"CalCorePreludefromShort","ui":"<b>Cal.Core.Prelude.fromShort<\/b><br\/>[CALDoc] Converts a <code>Short<\/code> value to the corresponding value in a type that is an instance of <code>Num<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromInt","name":"fromInt","type":"CalCorePreludefromInt","ui":"<b>Cal.Core.Prelude.fromInt<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> value to the corresponding value in a type that is an instance of <code>Num<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromLong","name":"fromLong","type":"CalCorePreludefromLong","ui":"<b>Cal.Core.Prelude.fromLong<\/b><br\/>[CALDoc] Converts a <code>Long<\/code> value to the corresponding value in a type that is an instance of <code>Num<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromFloat","name":"fromFloat","type":"CalCorePreludefromFloat","ui":"<b>Cal.Core.Prelude.fromFloat<\/b><br\/>[CALDoc] Converts a <code>Float<\/code> value to the corresponding value in a type that is an instance of <code>Num<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromDouble","name":"fromDouble","type":"CalCorePreludefromDouble","ui":"<b>Cal.Core.Prelude.fromDouble<\/b><br\/>[CALDoc] Converts a <code>Double<\/code> value to the corresponding value in a type that is an instance of <code>Num<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromInteger","name":"fromInteger","type":"CalCorePreludefromInteger","ui":"<b>Cal.Core.Prelude.fromInteger<\/b><br\/>[CALDoc] Converts an <code>Integer<\/code> value to a value of the instance type.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.fromDecimal","name":"fromDecimal","type":"CalCorePreludefromDecimal","ui":"<b>Cal.Core.Prelude.fromDecimal<\/b><br\/>[CALDoc] Converts a <code>Decimal<\/code> value to a value of the instance type.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toByte","name":"toByte","type":"CalCorePreludetoByte","ui":"<b>Cal.Core.Prelude.toByte<\/b><br\/>[CALDoc] Converts a value of the instance type to a <code>Byte<\/code> value.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toShort","name":"toShort","type":"CalCorePreludetoShort","ui":"<b>Cal.Core.Prelude.toShort<\/b><br\/>[CALDoc] Converts a value of the instance type to a <code>Short<\/code> value.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toInt","name":"toInt","type":"CalCorePreludetoInt","ui":"<b>Cal.Core.Prelude.toInt<\/b><br\/>[CALDoc] Converts a value of the instance type to an <code>Int<\/code> value.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toLong","name":"toLong","type":"CalCorePreludetoLong","ui":"<b>Cal.Core.Prelude.toLong<\/b><br\/>[CALDoc] Converts a value of the instance type to a <code>Long<\/code> value.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toFloat","name":"toFloat","type":"CalCorePreludetoFloat","ui":"<b>Cal.Core.Prelude.toFloat<\/b><br\/>[CALDoc] Converts a value of the instance type to a <code>Float<\/code> value.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toDouble","name":"toDouble","type":"CalCorePreludetoDouble","ui":"<b>Cal.Core.Prelude.toDouble<\/b><br\/>[CALDoc] Converts a value of the instance type to a <code>Double<\/code> value.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toInteger","name":"toInteger","type":"CalCorePreludetoInteger","ui":"<b>Cal.Core.Prelude.toInteger<\/b><br\/>[CALDoc] Converts a value of the instance type to an <code>Integer<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.toDecimal","name":"toDecimal","type":"CalCorePreludetoDecimal","ui":"<b>Cal.Core.Prelude.toDecimal<\/b><br\/>[CALDoc] Converts a value of the instance type to a <code>Decimal<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.empty","name":"empty","type":"CalCorePreludeempty","ui":"<b>Cal.Core.Prelude.empty<\/b><br\/>[CALDoc] Returns the empty value of the instance type.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.isEmpty","name":"isEmpty","type":"CalCorePreludeisEmpty","ui":"<b>Cal.Core.Prelude.isEmpty<\/b><br\/>[CALDoc] Returns whether the specified value is the empty value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.append","name":"append","type":"CalCorePreludeappend","ui":"<b>Cal.Core.Prelude.append<\/b><br\/>[CALDoc] Returns the concatenation of the two values.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.concat","name":"concat","type":"CalCorePreludeconcat","ui":"<b>Cal.Core.Prelude.concat<\/b><br\/>[CALDoc] Returns the concatenation of the values in the specified list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.input","name":"input","type":"CalCorePreludeinput","ui":"<b>Cal.Core.Prelude.input<\/b><br\/>[CALDoc] Converts a Java value into a value of the instance type.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.output","name":"output","type":"CalCorePreludeoutput","ui":"<b>Cal.Core.Prelude.output<\/b><br\/>[CALDoc] Converts a value of the instance type into a Java value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.typeOf","name":"typeOf","type":"CalCorePreludetypeOf","ui":"<b>Cal.Core.Prelude.typeOf<\/b><br\/>[CALDoc] Returns the <code>TypeRep<\/code> value representing the type of the argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFrom","name":"upFrom","type":"CalCorePreludeupFrom","ui":"<b>Cal.Core.Prelude.upFrom<\/b><br\/>[CALDoc] For numeric types, <code>upFrom start creates<\/code> the list <code>[start, start + 1, start + 2, ...]<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThen","name":"upFromThen","type":"CalCorePreludeupFromThen","ui":"<b>Cal.Core.Prelude.upFromThen<\/b><br\/>[CALDoc] For numeric types, <code>upFromThen start next<\/code> creates the arithmetic sequence with first 2 terms <code>start<\/code> and\n<code>next<\/code>. and then following with that difference i.e.\n<code>[start, next, next + (next - start), next + 2*(next - start),...]<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromTo","name":"upFromTo","type":"CalCorePreludeupFromTo","ui":"<b>Cal.Core.Prelude.upFromTo<\/b><br\/>[CALDoc] For numeric types, <code>upFromTo start end<\/code> creates the list <code>[start, start + 1, start + 2, ..., end]<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.upFromThenTo","name":"upFromThenTo","type":"CalCorePreludeupFromThenTo","ui":"<b>Cal.Core.Prelude.upFromThenTo<\/b><br\/>[CALDoc] For numeric types, <code>upFromThenTo start next edn<\/code>, creates the arithmetic sequence with first 2 terms <code>start<\/code>\nand <code>next<\/code>. and then following with that difference i.e.\n<code>[start, next, next + (next - start), next + 2*(next - start),..., end]<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnum","name":"intToEnum","type":"CalCorePreludeintToEnum","ui":"<b>Cal.Core.Prelude.intToEnum<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> value to its corresponding value of type <code>IntEnum a =&gt; a<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.intToEnumChecked","name":"intToEnumChecked","type":"CalCorePreludeintToEnumChecked","ui":"<b>Cal.Core.Prelude.intToEnumChecked<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> value to its corresponding value of type <code>IntEnum a =&gt; a<\/code>, if such a value exists,\nor returns <code>Nothing<\/code> if such a value does not exist.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Core.Prelude.enumToInt","name":"enumToInt","type":"CalCorePreludeenumToInt","ui":"<b>Cal.Core.Prelude.enumToInt<\/b><br\/>[CALDoc] Converts a value of type <code>IntEnum a =&gt; a<\/code> to its canonical underlying representation as an <code>Int<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Prelude"]},{"description":"Cal.Collections.Array.spanInclusiveExamples","name":"spanInclusiveExamples","type":"CalCollectionsArrayspanInclusiveExamples","ui":"<b>Cal.Collections.Array.spanInclusiveExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.compressBytes","name":"compressBytes","type":"CalCollectionsArraycompressBytes","ui":"<b>Cal.Collections.Array.compressBytes<\/b><br\/>[CALDoc] Returns a compressed version of a byte array.","terminals":[{"name":"byteArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.isEmptyArray","name":"isEmptyArray","type":"CalCollectionsArrayisEmptyArray","ui":"<b>Cal.Collections.Array.isEmptyArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.minArray","name":"minArray","type":"CalCollectionsArrayminArray","ui":"<b>Cal.Collections.Array.minArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.coarbitraryArray","name":"coarbitraryArray","type":"CalCollectionsArraycoarbitraryArray","ui":"<b>Cal.Collections.Array.coarbitraryArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.replaceAllExamples","name":"replaceAllExamples","type":"CalCollectionsArrayreplaceAllExamples","ui":"<b>Cal.Collections.Array.replaceAllExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.replaceAll","name":"replaceAll","type":"CalCollectionsArrayreplaceAll","ui":"<b>Cal.Collections.Array.replaceAll<\/b><br\/>[CALDoc] Applies the predicate to each element and returns the array \nwhere every element for which the predicate evaluated to <code>True<\/code> is replaced by <code>replaceWithValue<\/code>.","terminals":[{"name":"replaceWithValue","input":"text"},{"name":"array","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.replaceAtExamples","name":"replaceAtExamples","type":"CalCollectionsArrayreplaceAtExamples","ui":"<b>Cal.Collections.Array.replaceAtExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.greaterThanEqualsArray","name":"greaterThanEqualsArray","type":"CalCollectionsArraygreaterThanEqualsArray","ui":"<b>Cal.Collections.Array.greaterThanEqualsArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.greaterThanArray","name":"greaterThanArray","type":"CalCollectionsArraygreaterThanArray","ui":"<b>Cal.Collections.Array.greaterThanArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.replaceAt","name":"replaceAt","type":"CalCollectionsArrayreplaceAt","ui":"<b>Cal.Collections.Array.replaceAt<\/b><br\/>[CALDoc] Returns the array with the value at a specified offset replaced by a specified value.\n","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.arbitraryArray","name":"arbitraryArray","type":"CalCollectionsArrayarbitraryArray","ui":"<b>Cal.Collections.Array.arbitraryArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.notEqualsArray","name":"notEqualsArray","type":"CalCollectionsArraynotEqualsArray","ui":"<b>Cal.Collections.Array.notEqualsArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.appendArray","name":"appendArray","type":"CalCollectionsArrayappendArray","ui":"<b>Cal.Collections.Array.appendArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.spanExamples","name":"spanExamples","type":"CalCollectionsArrayspanExamples","ui":"<b>Cal.Collections.Array.spanExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.spanInclusive","name":"spanInclusive","type":"CalCollectionsArrayspanInclusive","ui":"<b>Cal.Collections.Array.spanInclusive<\/b><br\/>[CALDoc] <code>spanInclusive predicate array<\/code> breaks up array into a pair of arrays. ","terminals":[{"name":"predicate","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.maxArray","name":"maxArray","type":"CalCollectionsArraymaxArray","ui":"<b>Cal.Collections.Array.maxArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.showArray","name":"showArray","type":"CalCollectionsArrayshowArray","ui":"<b>Cal.Collections.Array.showArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.span","name":"span","type":"CalCollectionsArrayspan","ui":"<b>Cal.Collections.Array.span<\/b><br\/>[CALDoc] <code>span predicate array<\/code> breaks up <code>array<\/code> into a pair of arrays. ","terminals":[{"name":"predicate","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.isElem","name":"isElem","type":"CalCollectionsArrayisElem","ui":"<b>Cal.Collections.Array.isElem<\/b><br\/>[CALDoc] <code>isElem elementValue array<\/code> returns <code>True<\/code> if <code>elementValue<\/code> is an element of the array.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.decompressBytes","name":"decompressBytes","type":"CalCollectionsArraydecompressBytes","ui":"<b>Cal.Collections.Array.decompressBytes<\/b><br\/>[CALDoc] Returns an uncompressed version of a compressed byte array.","terminals":[{"name":"byteArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.breakExamples","name":"breakExamples","type":"CalCollectionsArraybreakExamples","ui":"<b>Cal.Collections.Array.breakExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.break","name":"break","type":"CalCollectionsArraybreak","ui":"<b>Cal.Collections.Array.break<\/b><br\/>[CALDoc] <code>break predicate array<\/code> breaks up array into a pair of arrays. ","terminals":[{"name":"array","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldLeft","name":"foldLeft","type":"CalCollectionsArrayfoldLeft","ui":"<b>Cal.Collections.Array.foldLeft<\/b><br\/>[CALDoc] <code>foldLeft foldFunction initialValue list<\/code> collapses or 'folds' the array down to a single result, starting\nfrom the left of the array. ","terminals":[{"name":"array","input":"text"},{"name":"foldFunction","input":"text"},{"name":"initialValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.product","name":"product","type":"CalCollectionsArrayproduct","ui":"<b>Cal.Collections.Array.product<\/b><br\/>[CALDoc] <code>product array<\/code> return the product of all the elements of <code>array<\/code>, multiplying from left to right.\n<code>product<\/code> applied to an empty array is 1.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.lessThanArray","name":"lessThanArray","type":"CalCollectionsArraylessThanArray","ui":"<b>Cal.Collections.Array.lessThanArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.outputArray","name":"outputArray","type":"CalCollectionsArrayoutputArray","ui":"<b>Cal.Collections.Array.outputArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldLeftStrictAlt","name":"foldLeftStrictAlt","type":"CalCollectionsArrayfoldLeftStrictAlt","ui":"<b>Cal.Collections.Array.foldLeftStrictAlt<\/b><br\/>[CALDoc] WARNING- keep private, this is for explanation and benchmarking purposes only.","terminals":[{"name":"initialValue","input":"text"},{"name":"foldFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.equalsArray","name":"equalsArray","type":"CalCollectionsArrayequalsArray","ui":"<b>Cal.Collections.Array.equalsArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.testModule","name":"testModule","type":"CalCollectionsArraytestModule","ui":"<b>Cal.Collections.Array.testModule<\/b><br\/>[CALDoc] Unit test for the <code>Array<\/code> module.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.periodizeExamples","name":"periodizeExamples","type":"CalCollectionsArrayperiodizeExamples","ui":"<b>Cal.Collections.Array.periodizeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.periodize","name":"periodize","type":"CalCollectionsArrayperiodize","ui":"<b>Cal.Collections.Array.periodize<\/b><br\/>[CALDoc] Periodizes an array at the specified frequency, returning an array of arrays, one for each modulo of the frequency.","terminals":[{"name":"frequency","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zipWith3Examples","name":"zipWith3Examples","type":"CalCollectionsArrayzipWith3Examples","ui":"<b>Cal.Collections.Array.zipWith3Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zipWithExamples","name":"zipWithExamples","type":"CalCollectionsArrayzipWithExamples","ui":"<b>Cal.Collections.Array.zipWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zip4Examples","name":"zip4Examples","type":"CalCollectionsArrayzip4Examples","ui":"<b>Cal.Collections.Array.zip4Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zip4","name":"zip4","type":"CalCollectionsArrayzip4","ui":"<b>Cal.Collections.Array.zip4<\/b><br\/>[CALDoc] Converts four arrays into an array of corresponding 4-tuples.\n","terminals":[{"name":"array4","input":"text"},{"name":"array3","input":"text"},{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.unzip4Examples","name":"unzip4Examples","type":"CalCollectionsArrayunzip4Examples","ui":"<b>Cal.Collections.Array.unzip4Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.unzip4","name":"unzip4","type":"CalCollectionsArrayunzip4","ui":"<b>Cal.Collections.Array.unzip4<\/b><br\/>[CALDoc] Transforms an array of 4-tuples into a 4-tuple of arrays.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.unzip3Examples","name":"unzip3Examples","type":"CalCollectionsArrayunzip3Examples","ui":"<b>Cal.Collections.Array.unzip3Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.unzip3","name":"unzip3","type":"CalCollectionsArrayunzip3","ui":"<b>Cal.Collections.Array.unzip3<\/b><br\/>[CALDoc] Transforms an array of triples into a triple of arrays.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.takeWhileExamples","name":"takeWhileExamples","type":"CalCollectionsArraytakeWhileExamples","ui":"<b>Cal.Collections.Array.takeWhileExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.toStringExamples","name":"toStringExamples","type":"CalCollectionsArraytoStringExamples","ui":"<b>Cal.Collections.Array.toStringExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.toString","name":"toString","type":"CalCollectionsArraytoString","ui":"<b>Cal.Collections.Array.toString<\/b><br\/>[CALDoc] Converts an <code>Array Char<\/code> to a <code>String<\/code>.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.toListWithExamples","name":"toListWithExamples","type":"CalCollectionsArraytoListWithExamples","ui":"<b>Cal.Collections.Array.toListWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.toListExamples","name":"toListExamples","type":"CalCollectionsArraytoListExamples","ui":"<b>Cal.Collections.Array.toListExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.sumExamples","name":"sumExamples","type":"CalCollectionsArraysumExamples","ui":"<b>Cal.Collections.Array.sumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.sum","name":"sum","type":"CalCollectionsArraysum","ui":"<b>Cal.Collections.Array.sum<\/b><br\/>[CALDoc] <code>sum array<\/code> returns the sum of all the elements of <code>array<\/code>, adding from left to right. <code>sum<\/code> applied\nto an empty array is 0.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.subscriptExamples","name":"subscriptExamples","type":"CalCollectionsArraysubscriptExamples","ui":"<b>Cal.Collections.Array.subscriptExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.startsWithExamples","name":"startsWithExamples","type":"CalCollectionsArraystartsWithExamples","ui":"<b>Cal.Collections.Array.startsWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.startsWithByExamples","name":"startsWithByExamples","type":"CalCollectionsArraystartsWithByExamples","ui":"<b>Cal.Collections.Array.startsWithByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.sortExamples","name":"sortExamples","type":"CalCollectionsArraysortExamples","ui":"<b>Cal.Collections.Array.sortExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.sortPrimitive","name":"sortPrimitive","type":"CalCollectionsArraysortPrimitive","ui":"<b>Cal.Collections.Array.sortPrimitive<\/b><br\/>[CALDoc] Sorts the specified array. ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.sort","name":"sort","type":"CalCollectionsArraysort","ui":"<b>Cal.Collections.Array.sort<\/b><br\/>[CALDoc] Sorts the specified array. ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.showArrayInstanceExamples","name":"showArrayInstanceExamples","type":"CalCollectionsArrayshowArrayInstanceExamples","ui":"<b>Cal.Collections.Array.showArrayInstanceExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.replicateArrayExamples","name":"replicateArrayExamples","type":"CalCollectionsArrayreplicateArrayExamples","ui":"<b>Cal.Collections.Array.replicateArrayExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.replicateArray","name":"replicateArray","type":"CalCollectionsArrayreplicateArray","ui":"<b>Cal.Collections.Array.replicateArray<\/b><br\/>[CALDoc] Replicates a array for a specified number of times.","terminals":[{"name":"nCopies","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.orArrayExamples","name":"orArrayExamples","type":"CalCollectionsArrayorArrayExamples","ui":"<b>Cal.Collections.Array.orArrayExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.minimumExamples","name":"minimumExamples","type":"CalCollectionsArrayminimumExamples","ui":"<b>Cal.Collections.Array.minimumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.minimum","name":"minimum","type":"CalCollectionsArrayminimum","ui":"<b>Cal.Collections.Array.minimum<\/b><br\/>[CALDoc] Returns the minimum value in the specified array.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.minimumByExamples","name":"minimumByExamples","type":"CalCollectionsArrayminimumByExamples","ui":"<b>Cal.Collections.Array.minimumByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.minimumBy","name":"minimumBy","type":"CalCollectionsArrayminimumBy","ui":"<b>Cal.Collections.Array.minimumBy<\/b><br\/>[CALDoc] This function takes a comparison function and a array and returns the least\nelement of the array by the comparison function. ","terminals":[{"name":"array","input":"text"},{"name":"comparisonFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.maximumExamples","name":"maximumExamples","type":"CalCollectionsArraymaximumExamples","ui":"<b>Cal.Collections.Array.maximumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.maximum","name":"maximum","type":"CalCollectionsArraymaximum","ui":"<b>Cal.Collections.Array.maximum<\/b><br\/>[CALDoc] Returns the maximum value in the specified array.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.maximumByExamples","name":"maximumByExamples","type":"CalCollectionsArraymaximumByExamples","ui":"<b>Cal.Collections.Array.maximumByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.maximumBy","name":"maximumBy","type":"CalCollectionsArraymaximumBy","ui":"<b>Cal.Collections.Array.maximumBy<\/b><br\/>[CALDoc] This function takes a comparison function and a array and returns the greatest\nelement of the array by the comparison function. ","terminals":[{"name":"comparisonFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldLeft1Strict","name":"foldLeft1Strict","type":"CalCollectionsArrayfoldLeft1Strict","ui":"<b>Cal.Collections.Array.foldLeft1Strict<\/b><br\/>[CALDoc] <code>foldLeft1Strict<\/code> is similar to <code>foldLeftStrict<\/code>, except that it uses the first element of the array as\nthe initial value in the folding process. ","terminals":[{"name":"foldFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.mapIndexedExamples","name":"mapIndexedExamples","type":"CalCollectionsArraymapIndexedExamples","ui":"<b>Cal.Collections.Array.mapIndexedExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.mapIndexed","name":"mapIndexed","type":"CalCollectionsArraymapIndexed","ui":"<b>Cal.Collections.Array.mapIndexed<\/b><br\/>[CALDoc] <code>mapIndexed mapFunction array<\/code> applies the function <code>mapFunction<\/code> to each element of the array, where\n<code>mapFunction<\/code> is passed both the element value, and its zero-based index in the array.","terminals":[{"name":"mapFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.makeArrayFromIndicesExamples","name":"makeArrayFromIndicesExamples","type":"CalCollectionsArraymakeArrayFromIndicesExamples","ui":"<b>Cal.Collections.Array.makeArrayFromIndicesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.lastIndexOfExamples","name":"lastIndexOfExamples","type":"CalCollectionsArraylastIndexOfExamples","ui":"<b>Cal.Collections.Array.lastIndexOfExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.lastIndexOf","name":"lastIndexOf","type":"CalCollectionsArraylastIndexOf","ui":"<b>Cal.Collections.Array.lastIndexOf<\/b><br\/>[CALDoc] Finds the index of the last occurrence of <code>valueToFind<\/code> in <code>array<\/code> or -1 if the value does not occur.","terminals":[{"name":"array","input":"text"},{"name":"valueToFind","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.insertByExamples","name":"insertByExamples","type":"CalCollectionsArrayinsertByExamples","ui":"<b>Cal.Collections.Array.insertByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.insertArrayAtExamples","name":"insertArrayAtExamples","type":"CalCollectionsArrayinsertArrayAtExamples","ui":"<b>Cal.Collections.Array.insertArrayAtExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.inputArrayExamples","name":"inputArrayExamples","type":"CalCollectionsArrayinputArrayExamples","ui":"<b>Cal.Collections.Array.inputArrayExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.fromStringExamples","name":"fromStringExamples","type":"CalCollectionsArrayfromStringExamples","ui":"<b>Cal.Collections.Array.fromStringExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.fromListWithExamples","name":"fromListWithExamples","type":"CalCollectionsArrayfromListWithExamples","ui":"<b>Cal.Collections.Array.fromListWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.fromListWith","name":"fromListWith","type":"CalCollectionsArrayfromListWith","ui":"<b>Cal.Collections.Array.fromListWith<\/b><br\/>[CALDoc] Builds an array from a list with the help of an element conversion function <code>f<\/code>.\n","terminals":[{"name":"list","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.fromListWithInternal","name":"fromListWithInternal","type":"CalCollectionsArrayfromListWithInternal","ui":"<b>Cal.Collections.Array.fromListWithInternal<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"tail","input":"text"},{"name":"firstElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldRightExamples","name":"foldRightExamples","type":"CalCollectionsArrayfoldRightExamples","ui":"<b>Cal.Collections.Array.foldRightExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldRight","name":"foldRight","type":"CalCollectionsArrayfoldRight","ui":"<b>Cal.Collections.Array.foldRight<\/b><br\/>[CALDoc] Similar to <code>foldLeft<\/code>, except that the folding process on the array is started with its rightmost element.\n","terminals":[{"name":"foldFunction","input":"text"},{"name":"array","input":"text"},{"name":"initialValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.findIndexExamples","name":"findIndexExamples","type":"CalCollectionsArrayfindIndexExamples","ui":"<b>Cal.Collections.Array.findIndexExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.filterExamples","name":"filterExamples","type":"CalCollectionsArrayfilterExamples","ui":"<b>Cal.Collections.Array.filterExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.comparePrimitiveExamples","name":"comparePrimitiveExamples","type":"CalCollectionsArraycomparePrimitiveExamples","ui":"<b>Cal.Collections.Array.comparePrimitiveExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.elemIndexExamples","name":"elemIndexExamples","type":"CalCollectionsArrayelemIndexExamples","ui":"<b>Cal.Collections.Array.elemIndexExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.elemIndex","name":"elemIndex","type":"CalCollectionsArrayelemIndex","ui":"<b>Cal.Collections.Array.elemIndex<\/b><br\/>[CALDoc] Returns the index of the first element in the given array which is equal to\nthe specified value, or <code>Nothing<\/code> if there is no such element.","terminals":[{"name":"array","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.indexOf","name":"indexOf","type":"CalCollectionsArrayindexOf","ui":"<b>Cal.Collections.Array.indexOf<\/b><br\/>[CALDoc] Finds the index of the first occurrence of <code>valueToFind<\/code> in <code>array<\/code> or -1 if the value does not occur.","terminals":[{"name":"array","input":"text"},{"name":"valueToFind","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.dropWhileExamples","name":"dropWhileExamples","type":"CalCollectionsArraydropWhileExamples","ui":"<b>Cal.Collections.Array.dropWhileExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.dropExamples","name":"dropExamples","type":"CalCollectionsArraydropExamples","ui":"<b>Cal.Collections.Array.dropExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.deleteByExamples","name":"deleteByExamples","type":"CalCollectionsArraydeleteByExamples","ui":"<b>Cal.Collections.Array.deleteByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.deleteExamples","name":"deleteExamples","type":"CalCollectionsArraydeleteExamples","ui":"<b>Cal.Collections.Array.deleteExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.deleteAtExamples","name":"deleteAtExamples","type":"CalCollectionsArraydeleteAtExamples","ui":"<b>Cal.Collections.Array.deleteAtExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.concatArrayExamples","name":"concatArrayExamples","type":"CalCollectionsArrayconcatArrayExamples","ui":"<b>Cal.Collections.Array.concatArrayExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.binarySearchByExamples","name":"binarySearchByExamples","type":"CalCollectionsArraybinarySearchByExamples","ui":"<b>Cal.Collections.Array.binarySearchByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.appendExamples","name":"appendExamples","type":"CalCollectionsArrayappendExamples","ui":"<b>Cal.Collections.Array.appendExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array7","name":"array7","type":"CalCollectionsArrayarray7","ui":"<b>Cal.Collections.Array.array7<\/b><br\/>[CALDoc] Constructs an array of seven items.","terminals":[{"name":"item4","input":"text"},{"name":"item5","input":"text"},{"name":"item3","input":"text"},{"name":"item1","input":"text"},{"name":"item6","input":"text"},{"name":"item7","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array7Internal","name":"array7Internal","type":"CalCollectionsArrayarray7Internal","ui":"<b>Cal.Collections.Array.array7Internal<\/b><br\/>[CALDoc] ","terminals":[{"name":"item5","input":"text"},{"name":"item2","input":"text"},{"name":"item4","input":"text"},{"name":"item1","input":"text"},{"name":"elementType","input":"text"},{"name":"item6","input":"text"},{"name":"item3","input":"text"},{"name":"item7","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array5","name":"array5","type":"CalCollectionsArrayarray5","ui":"<b>Cal.Collections.Array.array5<\/b><br\/>[CALDoc] Constructs an array of five items.","terminals":[{"name":"item1","input":"text"},{"name":"item2","input":"text"},{"name":"item3","input":"text"},{"name":"item5","input":"text"},{"name":"item4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.anyExamples","name":"anyExamples","type":"CalCollectionsArrayanyExamples","ui":"<b>Cal.Collections.Array.anyExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.andArrayExamples","name":"andArrayExamples","type":"CalCollectionsArrayandArrayExamples","ui":"<b>Cal.Collections.Array.andArrayExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.alternateExamples","name":"alternateExamples","type":"CalCollectionsArrayalternateExamples","ui":"<b>Cal.Collections.Array.alternateExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.alternate","name":"alternate","type":"CalCollectionsArrayalternate","ui":"<b>Cal.Collections.Array.alternate<\/b><br\/>[CALDoc] Alternate items from the 2 arrays.\n","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.allExamples","name":"allExamples","type":"CalCollectionsArrayallExamples","ui":"<b>Cal.Collections.Array.allExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.replicate","name":"replicate","type":"CalCollectionsArrayreplicate","ui":"<b>Cal.Collections.Array.replicate<\/b><br\/>[CALDoc] <code>replicate nCopies valueToReplicate<\/code> is an array of length <code>nCopies<\/code>, with every element equal to\n<code>valueToReplicate<\/code>.","terminals":[{"name":"nCopies","input":"text"},{"name":"valueToReplicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.lengthExamples","name":"lengthExamples","type":"CalCollectionsArraylengthExamples","ui":"<b>Cal.Collections.Array.lengthExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array5Internal","name":"array5Internal","type":"CalCollectionsArrayarray5Internal","ui":"<b>Cal.Collections.Array.array5Internal<\/b><br\/>[CALDoc] ","terminals":[{"name":"item4","input":"text"},{"name":"item1","input":"text"},{"name":"elementType","input":"text"},{"name":"item5","input":"text"},{"name":"item3","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.updateAtExamples","name":"updateAtExamples","type":"CalCollectionsArrayupdateAtExamples","ui":"<b>Cal.Collections.Array.updateAtExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.takeExamples","name":"takeExamples","type":"CalCollectionsArraytakeExamples","ui":"<b>Cal.Collections.Array.takeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zipExamples","name":"zipExamples","type":"CalCollectionsArrayzipExamples","ui":"<b>Cal.Collections.Array.zipExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.isElemByExamples","name":"isElemByExamples","type":"CalCollectionsArrayisElemByExamples","ui":"<b>Cal.Collections.Array.isElemByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.binarySearchExamples","name":"binarySearchExamples","type":"CalCollectionsArraybinarySearchExamples","ui":"<b>Cal.Collections.Array.binarySearchExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.concatExamples","name":"concatExamples","type":"CalCollectionsArrayconcatExamples","ui":"<b>Cal.Collections.Array.concatExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array0","name":"array0","type":"CalCollectionsArrayarray0","ui":"<b>Cal.Collections.Array.array0<\/b><br\/>[CALDoc] Constructs an empty array.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.concat","name":"concat","type":"CalCollectionsArrayconcat","ui":"<b>Cal.Collections.Array.concat<\/b><br\/>[CALDoc] An Array version of the regular <code>concat<\/code> function","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.inputPrimitiveExamples","name":"inputPrimitiveExamples","type":"CalCollectionsArrayinputPrimitiveExamples","ui":"<b>Cal.Collections.Array.inputPrimitiveExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.outputPrimitive","name":"outputPrimitive","type":"CalCollectionsArrayoutputPrimitive","ui":"<b>Cal.Collections.Array.outputPrimitive<\/b><br\/>[CALDoc] Outputs the given array to a Java array.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.outputArrayToJObjectArray","name":"outputArrayToJObjectArray","type":"CalCollectionsArrayoutputArrayToJObjectArray","ui":"<b>Cal.Collections.Array.outputArrayToJObjectArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.inputPrimitive","name":"inputPrimitive","type":"CalCollectionsArrayinputPrimitive","ui":"<b>Cal.Collections.Array.inputPrimitive<\/b><br\/>[CALDoc] Inputs an array from a Java array.","terminals":[{"name":"arrayAsObject","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.equalsPrimitiveExamples","name":"equalsPrimitiveExamples","type":"CalCollectionsArrayequalsPrimitiveExamples","ui":"<b>Cal.Collections.Array.equalsPrimitiveExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.toListWith","name":"toListWith","type":"CalCollectionsArraytoListWith","ui":"<b>Cal.Collections.Array.toListWith<\/b><br\/>[CALDoc] Converts an array to a list with the help of an element conversion function <code>f<\/code>","terminals":[{"name":"array","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.insertExamples","name":"insertExamples","type":"CalCollectionsArrayinsertExamples","ui":"<b>Cal.Collections.Array.insertExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.insert","name":"insert","type":"CalCollectionsArrayinsert","ui":"<b>Cal.Collections.Array.insert<\/b><br\/>[CALDoc] This function takes an element and an array and inserts the element into the\narray at the last position where it is still less than or equal to the next\nelement. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.insertBy","name":"insertBy","type":"CalCollectionsArrayinsertBy","ui":"<b>Cal.Collections.Array.insertBy<\/b><br\/>[CALDoc] This function takes an element and an array and inserts the element into the\narray at the last position where it is still less than or equal to the next\nelement. ","terminals":[{"name":"array","input":"text"},{"name":"value","input":"text"},{"name":"comparisonFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.deleteRangeExamples","name":"deleteRangeExamples","type":"CalCollectionsArraydeleteRangeExamples","ui":"<b>Cal.Collections.Array.deleteRangeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zip","name":"zip","type":"CalCollectionsArrayzip","ui":"<b>Cal.Collections.Array.zip<\/b><br\/>[CALDoc] Converts two arrays into an array of corresponding pairs.\n","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.inputArrayFromJObjectArray","name":"inputArrayFromJObjectArray","type":"CalCollectionsArrayinputArrayFromJObjectArray","ui":"<b>Cal.Collections.Array.inputArrayFromJObjectArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"objectArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.inputArray","name":"inputArray","type":"CalCollectionsArrayinputArray","ui":"<b>Cal.Collections.Array.inputArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.updateAt","name":"updateAt","type":"CalCollectionsArrayupdateAt","ui":"<b>Cal.Collections.Array.updateAt<\/b><br\/>[CALDoc] Updates an array at a specified index with a new element value. ","terminals":[{"name":"index","input":"text"},{"name":"value","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.lessThanEqualsArray","name":"lessThanEqualsArray","type":"CalCollectionsArraylessThanEqualsArray","ui":"<b>Cal.Collections.Array.lessThanEqualsArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.compareArray","name":"compareArray","type":"CalCollectionsArraycompareArray","ui":"<b>Cal.Collections.Array.compareArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.mergeExamples","name":"mergeExamples","type":"CalCollectionsArraymergeExamples","ui":"<b>Cal.Collections.Array.mergeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.merge","name":"merge","type":"CalCollectionsArraymerge","ui":"<b>Cal.Collections.Array.merge<\/b><br\/>[CALDoc] Assuming that <code>array1<\/code> and <code>array2<\/code> are sorted, <code>merge array1 array2<\/code> will merge all\nthe elements of the two arrays into a single sorted array. ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.orArray","name":"orArray","type":"CalCollectionsArrayorArray","ui":"<b>Cal.Collections.Array.orArray<\/b><br\/>[CALDoc] <code>orArray array<\/code> returns <code>True<\/code> if at least one element of the array is <code>True<\/code>.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zipWith4Examples","name":"zipWith4Examples","type":"CalCollectionsArrayzipWith4Examples","ui":"<b>Cal.Collections.Array.zipWith4Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zipWith4","name":"zipWith4","type":"CalCollectionsArrayzipWith4","ui":"<b>Cal.Collections.Array.zipWith4<\/b><br\/>[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of four arrays.","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"array3","input":"text"},{"name":"array4","input":"text"},{"name":"zipFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.lastExamples","name":"lastExamples","type":"CalCollectionsArraylastExamples","ui":"<b>Cal.Collections.Array.lastExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.isElemBy","name":"isElemBy","type":"CalCollectionsArrayisElemBy","ui":"<b>Cal.Collections.Array.isElemBy<\/b><br\/>[CALDoc] Returns whether a value is an element of an array, according to the specified equality comparison function.","terminals":[{"name":"array","input":"text"},{"name":"x","input":"text"},{"name":"eq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.findExamples","name":"findExamples","type":"CalCollectionsArrayfindExamples","ui":"<b>Cal.Collections.Array.findExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.find","name":"find","type":"CalCollectionsArrayfind","ui":"<b>Cal.Collections.Array.find<\/b><br\/>[CALDoc] <code>find predicate array<\/code> returns the first value of array for which the predicate function is <code>True<\/code>,\nif there is one, or <code>Nothing<\/code> otherwise.","terminals":[{"name":"array","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.reverse","name":"reverse","type":"CalCollectionsArrayreverse","ui":"<b>Cal.Collections.Array.reverse<\/b><br\/>[CALDoc] Reverses the elements of an array. <code>reverse<\/code> is O(n) time where n is the length of the array.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.filterIndexedExamples","name":"filterIndexedExamples","type":"CalCollectionsArrayfilterIndexedExamples","ui":"<b>Cal.Collections.Array.filterIndexedExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.insertAt","name":"insertAt","type":"CalCollectionsArrayinsertAt","ui":"<b>Cal.Collections.Array.insertAt<\/b><br\/>[CALDoc] Inserts a value into a array at the specified index.","terminals":[{"name":"index","input":"text"},{"name":"value","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldLeft1","name":"foldLeft1","type":"CalCollectionsArrayfoldLeft1","ui":"<b>Cal.Collections.Array.foldLeft1<\/b><br\/>[CALDoc] <code>foldLeft1<\/code> is similar to <code>foldLeft<\/code>, except that it uses the first element of the array as the initial value\nin the folding process. ","terminals":[{"name":"foldFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.sortByExamples","name":"sortByExamples","type":"CalCollectionsArraysortByExamples","ui":"<b>Cal.Collections.Array.sortByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.sortBy","name":"sortBy","type":"CalCollectionsArraysortBy","ui":"<b>Cal.Collections.Array.sortBy<\/b><br\/>[CALDoc] Sorts the specified array according to the specified comparison function. ","terminals":[{"name":"array","input":"text"},{"name":"comparisonFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.makeArrayFromCalValues","name":"makeArrayFromCalValues","type":"CalCollectionsArraymakeArrayFromCalValues","ui":"<b>Cal.Collections.Array.makeArrayFromCalValues<\/b><br\/>[CALDoc] ","terminals":[{"name":"elementType","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.internalArrayValues","name":"internalArrayValues","type":"CalCollectionsArrayinternalArrayValues","ui":"<b>Cal.Collections.Array.internalArrayValues<\/b><br\/>[CALDoc] Exposes the values array held onto by each object as a Java array of CAL values. ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zipWith","name":"zipWith","type":"CalCollectionsArrayzipWith","ui":"<b>Cal.Collections.Array.zipWith<\/b><br\/>[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of two arrays.","terminals":[{"name":"array2","input":"text"},{"name":"zipFunction","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.eqArrayInstanceExamples","name":"eqArrayInstanceExamples","type":"CalCollectionsArrayeqArrayInstanceExamples","ui":"<b>Cal.Collections.Array.eqArrayInstanceExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.any","name":"any","type":"CalCollectionsArrayany","ui":"<b>Cal.Collections.Array.any<\/b><br\/>[CALDoc] <code>any predicate array<\/code> returns <code>True<\/code> if the predicate function evaluates to <code>True<\/code> on at least\none element of the array.","terminals":[{"name":"array","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.dropWhile","name":"dropWhile","type":"CalCollectionsArraydropWhile","ui":"<b>Cal.Collections.Array.dropWhile<\/b><br\/>[CALDoc] <code>dropWhile dropWhileTrueFunction list<\/code> drops the longest prefix of the array for which <code>dropWhileTrueFunction<\/code>\nis <code>True<\/code> for each element.","terminals":[{"name":"dropWhileTrueFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.drop","name":"drop","type":"CalCollectionsArraydrop","ui":"<b>Cal.Collections.Array.drop<\/b><br\/>[CALDoc] <code>drop nElements array<\/code> drops the first <code>nElements<\/code> elements of the array and returns the remaining elements","terminals":[{"name":"nElementsToDrop","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.indexOfFrom","name":"indexOfFrom","type":"CalCollectionsArrayindexOfFrom","ui":"<b>Cal.Collections.Array.indexOfFrom<\/b><br\/>[CALDoc] Finds the index of the first occurrence at index greater than or equal to <code>fromIndex<\/code> of <code>valueToFind<\/code> in <code>array<\/code>\nor -1 if the value does not occur from <code>fromIndex<\/code> onwards.","terminals":[{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"valueToFind","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.last","name":"last","type":"CalCollectionsArraylast","ui":"<b>Cal.Collections.Array.last<\/b><br\/>[CALDoc] Returns the last element of the specified array. ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.chopExamples","name":"chopExamples","type":"CalCollectionsArraychopExamples","ui":"<b>Cal.Collections.Array.chopExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.chop","name":"chop","type":"CalCollectionsArraychop","ui":"<b>Cal.Collections.Array.chop<\/b><br\/>[CALDoc] Chops up an Array into equals subarrays of length <code>chopLength<\/code>.","terminals":[{"name":"chopLength","input":"text"},{"name":"arrayToChop","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.makeArrayFromIndices","name":"makeArrayFromIndices","type":"CalCollectionsArraymakeArrayFromIndices","ui":"<b>Cal.Collections.Array.makeArrayFromIndices<\/b><br\/>[CALDoc] Creates an <code>Array<\/code> calling a function for each of the indices in the resultant array","terminals":[{"name":"_INPUT","input":"text"},{"name":"itemFunction","input":"text"},{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zipWith3","name":"zipWith3","type":"CalCollectionsArrayzipWith3","ui":"<b>Cal.Collections.Array.zipWith3<\/b><br\/>[CALDoc] Returns an array where each element is the result of applying a function to the\ncorresponding elements of three arrays.","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"array3","input":"text"},{"name":"zipFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.startsWith","name":"startsWith","type":"CalCollectionsArraystartsWith","ui":"<b>Cal.Collections.Array.startsWith<\/b><br\/>[CALDoc] Returns whether <code>arrayToTest<\/code> starts with the specified prefix.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.startsWithBy","name":"startsWithBy","type":"CalCollectionsArraystartsWithBy","ui":"<b>Cal.Collections.Array.startsWithBy<\/b><br\/>[CALDoc] Returns whether <code>arrayToTest<\/code> starts with the specified prefix using <code>eq<\/code> as the notion of equality between \nelements of the prefix and elements of the arrayToTest.","terminals":[{"name":"arrayToTest","input":"text"},{"name":"eq","input":"text"},{"name":"prefix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.findIndex","name":"findIndex","type":"CalCollectionsArrayfindIndex","ui":"<b>Cal.Collections.Array.findIndex<\/b><br\/>[CALDoc] <code>findIndex predicate array<\/code> returns the first index of array for which the predicate function is <code>True<\/code>,\nif there is one, or <code>Nothing<\/code> otherwise. ","terminals":[{"name":"array","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.comparePrimitive","name":"comparePrimitive","type":"CalCollectionsArraycomparePrimitive","ui":"<b>Cal.Collections.Array.comparePrimitive<\/b><br\/>[CALDoc] Returns an <code>Ordering<\/code> based on how the first array compares to the second array.","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.EmptyArray","name":"EmptyArray","type":"CalCollectionsArrayEmptyArray","ui":"<b>Cal.Collections.Array.EmptyArray<\/b><br\/>[CALDoc] Used for an empty array.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.mergeByExamples","name":"mergeByExamples","type":"CalCollectionsArraymergeByExamples","ui":"<b>Cal.Collections.Array.mergeByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.mergeBy","name":"mergeBy","type":"CalCollectionsArraymergeBy","ui":"<b>Cal.Collections.Array.mergeBy<\/b><br\/>[CALDoc] Assuming that <code>array1<\/code> and <code>array2<\/code> are sorted according to <code>comparator<\/code>,\n<code>mergeBy comparator array1 array2<\/code> will merge all the elements of the two arrays into\na single array sorted according to <code>comparator<\/code>. ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"comparator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.nonEmptyArrayCopy","name":"nonEmptyArrayCopy","type":"CalCollectionsArraynonEmptyArrayCopy","ui":"<b>Cal.Collections.Array.nonEmptyArrayCopy<\/b><br\/>[CALDoc] Performs the analogous functionality to <code>System.arraycopy<\/code> in Java.\n","terminals":[{"name":"nElemsToCopy","input":"text"},{"name":"source","input":"text"},{"name":"destPos","input":"text"},{"name":"sourcePos","input":"text"},{"name":"dest","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.andArray","name":"andArray","type":"CalCollectionsArrayandArray","ui":"<b>Cal.Collections.Array.andArray<\/b><br\/>[CALDoc] <code>andArray array<\/code> returns <code>True<\/code> if every element of the array is <code>True<\/code>.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.intToMaybe","name":"intToMaybe","type":"CalCollectionsArrayintToMaybe","ui":"<b>Cal.Collections.Array.intToMaybe<\/b><br\/>[CALDoc] Converts a failure code of -1 into a <code>Nothing<\/code> value.","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.takeWhile","name":"takeWhile","type":"CalCollectionsArraytakeWhile","ui":"<b>Cal.Collections.Array.takeWhile<\/b><br\/>[CALDoc] <code>takeWhile takeWhileTrueFunction array<\/code> returns the longest prefix of the array for which <code>takeWhileTrueFunction<\/code>\nis <code>True<\/code> for each element.","terminals":[{"name":"takeWhileTrueFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.take","name":"take","type":"CalCollectionsArraytake","ui":"<b>Cal.Collections.Array.take<\/b><br\/>[CALDoc] <code>take nElements array<\/code> returns an array consisting of the first <code>nElements<\/code> elements of <code>array<\/code>.\n","terminals":[{"name":"array","input":"text"},{"name":"nElementsToTake","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.filterIndexed","name":"filterIndexed","type":"CalCollectionsArrayfilterIndexed","ui":"<b>Cal.Collections.Array.filterIndexed<\/b><br\/>[CALDoc] <code>filterIndexed keepIfTrueFunction array<\/code> applies the predicate function <code>keepIfTrueFunction<\/code> to each\nelement of the array, and returns the array of elements for which the predicate evaluates to <code>True<\/code>.\n<code>keepIfTrueFunction<\/code> is a function that is passed both the element value, and its zero-based index in the array.","terminals":[{"name":"keepIfTrueFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.mapExamples","name":"mapExamples","type":"CalCollectionsArraymapExamples","ui":"<b>Cal.Collections.Array.mapExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.map","name":"map","type":"CalCollectionsArraymap","ui":"<b>Cal.Collections.Array.map<\/b><br\/>[CALDoc] <code>map mapFunction array<\/code> applies the function <code>mapFunction<\/code> to each element of array and returns the\nresulting array.","terminals":[{"name":"array","input":"text"},{"name":"mapFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.delete","name":"delete","type":"CalCollectionsArraydelete","ui":"<b>Cal.Collections.Array.delete<\/b><br\/>[CALDoc] <code>delete x array<\/code> returns the array with the first element equivalent to <code>x<\/code> removed.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.deleteBy","name":"deleteBy","type":"CalCollectionsArraydeleteBy","ui":"<b>Cal.Collections.Array.deleteBy<\/b><br\/>[CALDoc] <code>deleteBy eq element array<\/code> returns the array with the first element equivalent to <code>x<\/code> (under <code>eq<\/code>) removed.","terminals":[{"name":"element","input":"text"},{"name":"eq","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.deleteAt","name":"deleteAt","type":"CalCollectionsArraydeleteAt","ui":"<b>Cal.Collections.Array.deleteAt<\/b><br\/>[CALDoc] Removes the array item at the specified index.\n","terminals":[{"name":"array","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.deleteRange","name":"deleteRange","type":"CalCollectionsArraydeleteRange","ui":"<b>Cal.Collections.Array.deleteRange<\/b><br\/>[CALDoc] Removes the array items at the specified range of indices.\n","terminals":[{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.findIndicesExamples","name":"findIndicesExamples","type":"CalCollectionsArrayfindIndicesExamples","ui":"<b>Cal.Collections.Array.findIndicesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.findIndices","name":"findIndices","type":"CalCollectionsArrayfindIndices","ui":"<b>Cal.Collections.Array.findIndices<\/b><br\/>[CALDoc] Returns the indices of all elements satisfying the specified predicate, in ascending order. ","terminals":[{"name":"predicate","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.fromString","name":"fromString","type":"CalCollectionsArrayfromString","ui":"<b>Cal.Collections.Array.fromString<\/b><br\/>[CALDoc] Converts a <code>String<\/code> to an <code>Array Char<\/code>.","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.isNotElem","name":"isNotElem","type":"CalCollectionsArrayisNotElem","ui":"<b>Cal.Collections.Array.isNotElem<\/b><br\/>[CALDoc] <code>isNotElem elementValue array<\/code> returns <code>True<\/code> if <code>elementValue<\/code> is not an element of the array.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.all","name":"all","type":"CalCollectionsArrayall","ui":"<b>Cal.Collections.Array.all<\/b><br\/>[CALDoc] <code>all predicate array<\/code> returns <code>True<\/code> if the predicate function evaluates to <code>True<\/code> on all the\nelements of the array (and the array is finite).","terminals":[{"name":"array","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.filter","name":"filter","type":"CalCollectionsArrayfilter","ui":"<b>Cal.Collections.Array.filter<\/b><br\/>[CALDoc] <code>filter keepIfTrueFunction array<\/code> applies the predicate function to each element of the array, and returns\nthe array of elements for which the predicate evaluates to <code>True<\/code>.","terminals":[{"name":"array","input":"text"},{"name":"keepIfTrueFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.toList","name":"toList","type":"CalCollectionsArraytoList","ui":"<b>Cal.Collections.Array.toList<\/b><br\/>[CALDoc] Converts an array to a list.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zip3Examples","name":"zip3Examples","type":"CalCollectionsArrayzip3Examples","ui":"<b>Cal.Collections.Array.zip3Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.zip3","name":"zip3","type":"CalCollectionsArrayzip3","ui":"<b>Cal.Collections.Array.zip3<\/b><br\/>[CALDoc] Converts three arrays into an array of corresponding triples.\n","terminals":[{"name":"array3","input":"text"},{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.binarySearchPrimitive","name":"binarySearchPrimitive","type":"CalCollectionsArraybinarySearchPrimitive","ui":"<b>Cal.Collections.Array.binarySearchPrimitive<\/b><br\/>[CALDoc] Searches the array for the specified value using the binary search algorithm. ","terminals":[{"name":"value","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.equalsPrimitive","name":"equalsPrimitive","type":"CalCollectionsArrayequalsPrimitive","ui":"<b>Cal.Collections.Array.equalsPrimitive<\/b><br\/>[CALDoc] Returns whether the two arrays are equal.","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.typeableElementType_fromValue","name":"typeableElementType_fromValue","type":"CalCollectionsArraytypeableElementType_fromValue","ui":"<b>Cal.Collections.Array.typeableElementType_fromValue<\/b><br\/>[CALDoc] It is important that this function does not touch the value argument.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.typeableElementType_fromTypeRep","name":"typeableElementType_fromTypeRep","type":"CalCollectionsArraytypeableElementType_fromTypeRep","ui":"<b>Cal.Collections.Array.typeableElementType_fromTypeRep<\/b><br\/>[CALDoc] ","terminals":[{"name":"elemType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldLeftStrict","name":"foldLeftStrict","type":"CalCollectionsArrayfoldLeftStrict","ui":"<b>Cal.Collections.Array.foldLeftStrict<\/b><br\/>[CALDoc] This is the strict version of <code>foldLeft<\/code>. ","terminals":[{"name":"array","input":"text"},{"name":"initialValue","input":"text"},{"name":"foldFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.breakAfterExamples","name":"breakAfterExamples","type":"CalCollectionsArraybreakAfterExamples","ui":"<b>Cal.Collections.Array.breakAfterExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array6","name":"array6","type":"CalCollectionsArrayarray6","ui":"<b>Cal.Collections.Array.array6<\/b><br\/>[CALDoc] Constructs an array of six items.","terminals":[{"name":"item6","input":"text"},{"name":"item1","input":"text"},{"name":"item5","input":"text"},{"name":"item3","input":"text"},{"name":"item2","input":"text"},{"name":"item4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array6Internal","name":"array6Internal","type":"CalCollectionsArrayarray6Internal","ui":"<b>Cal.Collections.Array.array6Internal<\/b><br\/>[CALDoc] ","terminals":[{"name":"item5","input":"text"},{"name":"item3","input":"text"},{"name":"elementType","input":"text"},{"name":"item2","input":"text"},{"name":"item1","input":"text"},{"name":"item6","input":"text"},{"name":"item4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.breakAfter","name":"breakAfter","type":"CalCollectionsArraybreakAfter","ui":"<b>Cal.Collections.Array.breakAfter<\/b><br\/>[CALDoc] <code>breakAfter predicate array<\/code> breaks up array into a pair of arrays. ","terminals":[{"name":"predicate","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.indexOfBy","name":"indexOfBy","type":"CalCollectionsArrayindexOfBy","ui":"<b>Cal.Collections.Array.indexOfBy<\/b><br\/>[CALDoc] Returns: index of the first element for which predicate returns True, or\n-1 if predicate returns False for all elements","terminals":[{"name":"predicate","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.splitAt","name":"splitAt","type":"CalCollectionsArraysplitAt","ui":"<b>Cal.Collections.Array.splitAt<\/b><br\/>[CALDoc] <code>splitAt nElemsToSplit list<\/code> returns a pair of arrays. ","terminals":[{"name":"array","input":"text"},{"name":"nElementsToSplit","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldRight1Examples","name":"foldRight1Examples","type":"CalCollectionsArrayfoldRight1Examples","ui":"<b>Cal.Collections.Array.foldRight1Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array1","name":"array1","type":"CalCollectionsArrayarray1","ui":"<b>Cal.Collections.Array.array1<\/b><br\/>[CALDoc] Constructs an array of one item.","terminals":[{"name":"item","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array1Internal","name":"array1Internal","type":"CalCollectionsArrayarray1Internal","ui":"<b>Cal.Collections.Array.array1Internal<\/b><br\/>[CALDoc] ","terminals":[{"name":"elementType","input":"text"},{"name":"item","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array2","name":"array2","type":"CalCollectionsArrayarray2","ui":"<b>Cal.Collections.Array.array2<\/b><br\/>[CALDoc] Constructs an array of two items.","terminals":[{"name":"item1","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array2Internal","name":"array2Internal","type":"CalCollectionsArrayarray2Internal","ui":"<b>Cal.Collections.Array.array2Internal<\/b><br\/>[CALDoc] ","terminals":[{"name":"elementType","input":"text"},{"name":"item2","input":"text"},{"name":"item1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array3","name":"array3","type":"CalCollectionsArrayarray3","ui":"<b>Cal.Collections.Array.array3<\/b><br\/>[CALDoc] Constructs an array of three items.","terminals":[{"name":"item1","input":"text"},{"name":"item2","input":"text"},{"name":"item3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array3Internal","name":"array3Internal","type":"CalCollectionsArrayarray3Internal","ui":"<b>Cal.Collections.Array.array3Internal<\/b><br\/>[CALDoc] ","terminals":[{"name":"item3","input":"text"},{"name":"item1","input":"text"},{"name":"elementType","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array4","name":"array4","type":"CalCollectionsArrayarray4","ui":"<b>Cal.Collections.Array.array4<\/b><br\/>[CALDoc] Constructs an array of four items.","terminals":[{"name":"item3","input":"text"},{"name":"item4","input":"text"},{"name":"item1","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.array4Internal","name":"array4Internal","type":"CalCollectionsArrayarray4Internal","ui":"<b>Cal.Collections.Array.array4Internal<\/b><br\/>[CALDoc] ","terminals":[{"name":"item3","input":"text"},{"name":"elementType","input":"text"},{"name":"item4","input":"text"},{"name":"item2","input":"text"},{"name":"item1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldRight1","name":"foldRight1","type":"CalCollectionsArrayfoldRight1","ui":"<b>Cal.Collections.Array.foldRight1<\/b><br\/>[CALDoc] Similar to <code>foldLeft1<\/code>, except that the folding process on the array is started with its rightmost element.\n","terminals":[{"name":"foldFunction","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.foldRightHelper","name":"foldRightHelper","type":"CalCollectionsArrayfoldRightHelper","ui":"<b>Cal.Collections.Array.foldRightHelper<\/b><br\/>[CALDoc] Helper function used in the implementation of <code>foldRight<\/code> and <code>foldRight1<\/code>","terminals":[{"name":"value","input":"text"},{"name":"array","input":"text"},{"name":"index","input":"text"},{"name":"foldFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.unzipExamples","name":"unzipExamples","type":"CalCollectionsArrayunzipExamples","ui":"<b>Cal.Collections.Array.unzipExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.unzip","name":"unzip","type":"CalCollectionsArrayunzip","ui":"<b>Cal.Collections.Array.unzip<\/b><br\/>[CALDoc] Transforms an array of pairs into a pair of arrays.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.elemIndicesExamples","name":"elemIndicesExamples","type":"CalCollectionsArrayelemIndicesExamples","ui":"<b>Cal.Collections.Array.elemIndicesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.fromList","name":"fromList","type":"CalCollectionsArrayfromList","ui":"<b>Cal.Collections.Array.fromList<\/b><br\/>[CALDoc] Builds an array from a list. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.fromNonEmptyListInternal","name":"fromNonEmptyListInternal","type":"CalCollectionsArrayfromNonEmptyListInternal","ui":"<b>Cal.Collections.Array.fromNonEmptyListInternal<\/b><br\/>[CALDoc] ","terminals":[{"name":"elementType","input":"text"},{"name":"nonEmptyList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.elemIndices","name":"elemIndices","type":"CalCollectionsArrayelemIndices","ui":"<b>Cal.Collections.Array.elemIndices<\/b><br\/>[CALDoc] Returns the indices of all elements of the specified array equal to the\nspecified value, in ascending order.","terminals":[{"name":"x","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.update","name":"update","type":"CalCollectionsArrayupdate","ui":"<b>Cal.Collections.Array.update<\/b><br\/>[CALDoc] Destructive array update function. ","terminals":[{"name":"value","input":"text"},{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.makeDefaultInternal","name":"makeDefaultInternal","type":"CalCollectionsArraymakeDefaultInternal","ui":"<b>Cal.Collections.Array.makeDefaultInternal<\/b><br\/>[CALDoc] Creates a default array of the given size. ","terminals":[{"name":"size","input":"text"},{"name":"elementType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.binarySearch","name":"binarySearch","type":"CalCollectionsArraybinarySearch","ui":"<b>Cal.Collections.Array.binarySearch<\/b><br\/>[CALDoc] Searches the array for the specified value using the binary search algorithm. ","terminals":[{"name":"value","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.binarySearchBy","name":"binarySearchBy","type":"CalCollectionsArraybinarySearchBy","ui":"<b>Cal.Collections.Array.binarySearchBy<\/b><br\/>[CALDoc] Searches the array for the specified value using the binary search algorithm. ","terminals":[{"name":"value","input":"text"},{"name":"array","input":"text"},{"name":"comparisonFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.lastIndexOfFrom","name":"lastIndexOfFrom","type":"CalCollectionsArraylastIndexOfFrom","ui":"<b>Cal.Collections.Array.lastIndexOfFrom<\/b><br\/>[CALDoc] Finds the index of the last occurrence at index less than or equal to <code>fromIndex<\/code> of <code>valueToFind<\/code>\nin <code>array<\/code> or -1 if the value does not occur from <code>fromIndex<\/code> and earlier.","terminals":[{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"valueToFind","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.insertArrayAt","name":"insertArrayAt","type":"CalCollectionsArrayinsertArrayAt","ui":"<b>Cal.Collections.Array.insertArrayAt<\/b><br\/>[CALDoc] Inserts values into a array at the specified index.","terminals":[{"name":"index","input":"text"},{"name":"valuesToInsert","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.length","name":"length","type":"CalCollectionsArraylength","ui":"<b>Cal.Collections.Array.length<\/b><br\/>[CALDoc] Returns the length of the specified array. ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.subArray","name":"subArray","type":"CalCollectionsArraysubArray","ui":"<b>Cal.Collections.Array.subArray<\/b><br\/>[CALDoc] Extracts a portion of the argument array as a new array.","terminals":[{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.concatArray","name":"concatArray","type":"CalCollectionsArrayconcatArray","ui":"<b>Cal.Collections.Array.concatArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"listOfArrays","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.elementType_fromNonEmptyArray","name":"elementType_fromNonEmptyArray","type":"CalCollectionsArrayelementType_fromNonEmptyArray","ui":"<b>Cal.Collections.Array.elementType_fromNonEmptyArray<\/b><br\/>[CALDoc] Returns the element type for the underlying value type of the first (internal) value in\na non-empty array.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.subscript","name":"subscript","type":"CalCollectionsArraysubscript","ui":"<b>Cal.Collections.Array.subscript<\/b><br\/>[CALDoc] <code>subscript array index<\/code> returns the nth element of the array where n = <code>index<\/code>. ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.elementType_fromValue","name":"elementType_fromValue","type":"CalCollectionsArrayelementType_fromValue","ui":"<b>Cal.Collections.Array.elementType_fromValue<\/b><br\/>[CALDoc] Returns the element type for the underlying value type of an internal value.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.concatNonEmptyArrayInternal","name":"concatNonEmptyArrayInternal","type":"CalCollectionsArrayconcatNonEmptyArrayInternal","ui":"<b>Cal.Collections.Array.concatNonEmptyArrayInternal<\/b><br\/>[CALDoc] ","terminals":[{"name":"elementType","input":"text"},{"name":"listOfNonEmptyArrays","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.nonEmptyArrayValues","name":"nonEmptyArrayValues","type":"CalCollectionsArraynonEmptyArrayValues","ui":"<b>Cal.Collections.Array.nonEmptyArrayValues<\/b><br\/>[CALDoc] Exposes the primitive array values held by the array argument. ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.jListToJObjectArray","name":"jListToJObjectArray","type":"CalCollectionsArrayjListToJObjectArray","ui":"<b>Cal.Collections.Array.jListToJObjectArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"jList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.isJList","name":"isJList","type":"CalCollectionsArrayisJList","ui":"<b>Cal.Collections.Array.isJList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.system_arraycopy","name":"system_arraycopy","type":"CalCollectionsArraysystem_arraycopy","ui":"<b>Cal.Collections.Array.system_arraycopy<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.jGetElementType","name":"jGetElementType","type":"CalCollectionsArrayjGetElementType","ui":"<b>Cal.Collections.Array.jGetElementType<\/b><br\/>[CALDoc] Returns the integer representation of the enumeration value (of type <code>Array.ElementType<\/code>)\nfor the underlying value type of an internal value.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.CharArray","name":"CharArray","type":"CalCollectionsArrayCharArray","ui":"<b>Cal.Collections.Array.CharArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"char\"   \nsuch as the <code>Prelude.Char<\/code> type. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.BooleanArray","name":"BooleanArray","type":"CalCollectionsArrayBooleanArray","ui":"<b>Cal.Collections.Array.BooleanArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"boolean\".\n","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.ByteArray","name":"ByteArray","type":"CalCollectionsArrayByteArray","ui":"<b>Cal.Collections.Array.ByteArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"byte\"   \nsuch as the <code>Prelude.Byte<\/code> type. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.ShortArray","name":"ShortArray","type":"CalCollectionsArrayShortArray","ui":"<b>Cal.Collections.Array.ShortArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"short\"   \nsuch as the <code>Prelude.Short<\/code> type. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.IntArray","name":"IntArray","type":"CalCollectionsArrayIntArray","ui":"<b>Cal.Collections.Array.IntArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"int\"   \nsuch as the <code>Prelude.Int<\/code> type. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.LongArray","name":"LongArray","type":"CalCollectionsArrayLongArray","ui":"<b>Cal.Collections.Array.LongArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"short\"   \nsuch as the <code>Prelude.Short<\/code> type. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.FloatArray","name":"FloatArray","type":"CalCollectionsArrayFloatArray","ui":"<b>Cal.Collections.Array.FloatArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"float\"   \nsuch as the <code>Prelude.Float<\/code> type. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.DoubleArray","name":"DoubleArray","type":"CalCollectionsArrayDoubleArray","ui":"<b>Cal.Collections.Array.DoubleArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign types having Java implementation type \"double\"   \nsuch as the <code>Prelude.Double<\/code> type. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.ObjectArray","name":"ObjectArray","type":"CalCollectionsArrayObjectArray","ui":"<b>Cal.Collections.Array.ObjectArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL foreign reference types. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.CalValueArray","name":"CalValueArray","type":"CalCollectionsArrayCalValueArray","ui":"<b>Cal.Collections.Array.CalValueArray<\/b><br\/>[CALDoc] Used for arrays of values of CAL types other than the ones above. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.CharType","name":"CharType","type":"CalCollectionsArrayCharType","ui":"<b>Cal.Collections.Array.CharType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.BooleanType","name":"BooleanType","type":"CalCollectionsArrayBooleanType","ui":"<b>Cal.Collections.Array.BooleanType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.ByteType","name":"ByteType","type":"CalCollectionsArrayByteType","ui":"<b>Cal.Collections.Array.ByteType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.ShortType","name":"ShortType","type":"CalCollectionsArrayShortType","ui":"<b>Cal.Collections.Array.ShortType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.IntType","name":"IntType","type":"CalCollectionsArrayIntType","ui":"<b>Cal.Collections.Array.IntType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.LongType","name":"LongType","type":"CalCollectionsArrayLongType","ui":"<b>Cal.Collections.Array.LongType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.FloatType","name":"FloatType","type":"CalCollectionsArrayFloatType","ui":"<b>Cal.Collections.Array.FloatType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.DoubleType","name":"DoubleType","type":"CalCollectionsArrayDoubleType","ui":"<b>Cal.Collections.Array.DoubleType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.ObjectType","name":"ObjectType","type":"CalCollectionsArrayObjectType","ui":"<b>Cal.Collections.Array.ObjectType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.Array.CalValueType","name":"CalValueType","type":"CalCollectionsArrayCalValueType","ui":"<b>Cal.Collections.Array.CalValueType<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Array"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_fromCalValueArray","name":"booleanArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivesbooleanArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Boolean<\/code>s to a Java array of primitive Java booleans.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_toCalValueArray","name":"byteArray_toCalValueArray","type":"CalCollectionsArrayPrimitivesbyteArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java bytes to a Java array of CAL <code>Byte<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_concat","name":"floatArray_concat","type":"CalCollectionsArrayPrimitivesfloatArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_fromCalValueArray","name":"longArray_fromCalValueArray","type":"CalCollectionsArrayPrimitiveslongArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Long<\/code>s to a Java array of primitive Java longs.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_concat","name":"doubleArray_concat","type":"CalCollectionsArrayPrimitivesdoubleArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_fromCalValueArray","name":"calValueArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivescalValueArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_fromCalValueArray<\/b><br\/>[CALDoc] Identity on the container Java array of CAL values.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_isEmpty","name":"calValueArray_isEmpty","type":"CalCollectionsArrayPrimitivescalValueArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_compare","name":"intArray_compare","type":"CalCollectionsArrayPrimitivesintArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_toCalValueArray","name":"intArray_toCalValueArray","type":"CalCollectionsArrayPrimitivesintArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java ints to a Java array of CAL <code>Int<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_compare","name":"shortArray_compare","type":"CalCollectionsArrayPrimitivesshortArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_isEmpty","name":"charArray_isEmpty","type":"CalCollectionsArrayPrimitivescharArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_concat","name":"byteArray_concat","type":"CalCollectionsArrayPrimitivesbyteArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_fromCalValueArray","name":"byteArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivesbyteArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Byte<\/code>s to a Java array of primitive Java bytes.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_fromCalValueArray","name":"charArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivescharArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Char<\/code>s to a Java array of primitive Java chars.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_fromCalValueArray","name":"floatArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivesfloatArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Float<\/code>s to a Java array of primitive Java floats.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_isEmpty","name":"booleanArray_isEmpty","type":"CalCollectionsArrayPrimitivesbooleanArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_compare","name":"floatArray_compare","type":"CalCollectionsArrayPrimitivesfloatArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_concat","name":"booleanArray_concat","type":"CalCollectionsArrayPrimitivesbooleanArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_fromCalValueArray","name":"doubleArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivesdoubleArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Double<\/code>s to a Java array of primitive Java doubles.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_fromCalValueArray","name":"intArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivesintArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Int<\/code>s to a Java array of primitive Java ints.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_toCalValueArray","name":"doubleArray_toCalValueArray","type":"CalCollectionsArrayPrimitivesdoubleArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java doubles to a Java array of CAL <code>Double<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_toCalValueArray","name":"longArray_toCalValueArray","type":"CalCollectionsArrayPrimitiveslongArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java longs to a Java array of CAL <code>Long<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_isEmpty","name":"intArray_isEmpty","type":"CalCollectionsArrayPrimitivesintArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.emptyArray_subscript","name":"emptyArray_subscript","type":"CalCollectionsArrayPrimitivesemptyArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.emptyArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_isEmpty","name":"objectArray_isEmpty","type":"CalCollectionsArrayPrimitivesobjectArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_concat","name":"objectArray_concat","type":"CalCollectionsArrayPrimitivesobjectArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_concat","name":"charArray_concat","type":"CalCollectionsArrayPrimitivescharArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_isEmpty","name":"doubleArray_isEmpty","type":"CalCollectionsArrayPrimitivesdoubleArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_concat","name":"intArray_concat","type":"CalCollectionsArrayPrimitivesintArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_isEmpty","name":"longArray_isEmpty","type":"CalCollectionsArrayPrimitiveslongArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_compare","name":"byteArray_compare","type":"CalCollectionsArrayPrimitivesbyteArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_compare","name":"longArray_compare","type":"CalCollectionsArrayPrimitiveslongArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_compare","name":"charArray_compare","type":"CalCollectionsArrayPrimitivescharArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_toCalValueArray","name":"floatArray_toCalValueArray","type":"CalCollectionsArrayPrimitivesfloatArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java floats to a Java array of CAL <code>Float<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_compare","name":"doubleArray_compare","type":"CalCollectionsArrayPrimitivesdoubleArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_toCalValueArray","name":"charArray_toCalValueArray","type":"CalCollectionsArrayPrimitivescharArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java chars to a Java array of CAL <code>Char<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_concat","name":"longArray_concat","type":"CalCollectionsArrayPrimitiveslongArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_isEmpty","name":"floatArray_isEmpty","type":"CalCollectionsArrayPrimitivesfloatArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_fromCalValueArray","name":"objectArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivesobjectArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL Objects to a Java array of primitive Java Objects.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_fromCalValueArray","name":"shortArray_fromCalValueArray","type":"CalCollectionsArrayPrimitivesshortArray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_fromCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of CAL <code>Short<\/code>s to a Java array of primitive Java shorts.","terminals":[{"name":"calValueArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_concat","name":"shortArray_concat","type":"CalCollectionsArrayPrimitivesshortArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_isEmpty","name":"byteArray_isEmpty","type":"CalCollectionsArrayPrimitivesbyteArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_concat","name":"calValueArray_concat","type":"CalCollectionsArrayPrimitivescalValueArray_concat","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_concat<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_toCalValueArray","name":"objectArray_toCalValueArray","type":"CalCollectionsArrayPrimitivesobjectArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java Objects to a Java array of CAL Objects.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.emptyArray_update","name":"emptyArray_update","type":"CalCollectionsArrayPrimitivesemptyArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.emptyArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_compare","name":"booleanArray_compare","type":"CalCollectionsArrayPrimitivesbooleanArray_compare","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_compare<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.signumIntToOrdering","name":"signumIntToOrdering","type":"CalCollectionsArrayPrimitivessignumIntToOrdering","ui":"<b>Cal.Collections.ArrayPrimitives.signumIntToOrdering<\/b><br\/>[CALDoc] similar to <code>Prelude.intToOrdering<\/code> but only handles the intValues -1, 0, 1. ","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_isEmpty","name":"shortArray_isEmpty","type":"CalCollectionsArrayPrimitivesshortArray_isEmpty","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_isEmpty<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_toCalValueArray","name":"shortArray_toCalValueArray","type":"CalCollectionsArrayPrimitivesshortArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java shorts to a Java array of CAL <code>Short<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_toCalValueArray","name":"booleanArray_toCalValueArray","type":"CalCollectionsArrayPrimitivesbooleanArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_toCalValueArray<\/b><br\/>[CALDoc] Converts a Java array of primitive Java booleans to a Java array of CAL <code>Boolean<\/code>s.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_toCalValueArray","name":"calValueArray_toCalValueArray","type":"CalCollectionsArrayPrimitivescalValueArray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_toCalValueArray<\/b><br\/>[CALDoc] copies the container Java array of CAL values.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_replicate","name":"calValueArray_replicate","type":"CalCollectionsArrayPrimitivescalValueArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_removeRange","name":"calValueArray_removeRange","type":"CalCollectionsArrayPrimitivescalValueArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_subArray","name":"calValueArray_subArray","type":"CalCollectionsArrayPrimitivescalValueArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_reverse","name":"calValueArray_reverse","type":"CalCollectionsArrayPrimitivescalValueArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_concatList","name":"calValueArray_concatList","type":"CalCollectionsArrayPrimitivescalValueArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_append","name":"calValueArray_append","type":"CalCollectionsArrayPrimitivescalValueArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_arrayToList","name":"calValueArray_arrayToList","type":"CalCollectionsArrayPrimitivescalValueArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_listToArrayWithFirstElement","name":"calValueArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivescalValueArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"firstElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_listToArray","name":"calValueArray_listToArray","type":"CalCollectionsArrayPrimitivescalValueArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_update","name":"calValueArray_update","type":"CalCollectionsArrayPrimitivescalValueArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_subscript","name":"calValueArray_subscript","type":"CalCollectionsArrayPrimitivescalValueArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_cloneReplacingNullArray","name":"calValueArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivescalValueArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_length","name":"calValueArray_length","type":"CalCollectionsArrayPrimitivescalValueArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_array7","name":"calValueArray_array7","type":"CalCollectionsArrayPrimitivescalValueArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value3","input":"text"},{"name":"value5","input":"text"},{"name":"value2","input":"text"},{"name":"value7","input":"text"},{"name":"value6","input":"text"},{"name":"value4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_array6","name":"calValueArray_array6","type":"CalCollectionsArrayPrimitivescalValueArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value5","input":"text"},{"name":"value3","input":"text"},{"name":"value6","input":"text"},{"name":"value4","input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_array5","name":"calValueArray_array5","type":"CalCollectionsArrayPrimitivescalValueArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value4","input":"text"},{"name":"value5","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_array4","name":"calValueArray_array4","type":"CalCollectionsArrayPrimitivescalValueArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_array3","name":"calValueArray_array3","type":"CalCollectionsArrayPrimitivescalValueArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_array2","name":"calValueArray_array2","type":"CalCollectionsArrayPrimitivescalValueArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_array1","name":"calValueArray_array1","type":"CalCollectionsArrayPrimitivescalValueArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_makeDefault","name":"calValueArray_makeDefault","type":"CalCollectionsArrayPrimitivescalValueArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_empty","name":"calValueArray_empty","type":"CalCollectionsArrayPrimitivescalValueArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.calValueArray_toShowString","name":"calValueArray_toShowString","type":"CalCollectionsArrayPrimitivescalValueArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.calValueArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_sort","name":"objectArray_sort","type":"CalCollectionsArrayPrimitivesobjectArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_replicate","name":"objectArray_replicate","type":"CalCollectionsArrayPrimitivesobjectArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_removeRange","name":"objectArray_removeRange","type":"CalCollectionsArrayPrimitivesobjectArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_subArray","name":"objectArray_subArray","type":"CalCollectionsArrayPrimitivesobjectArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_reverse","name":"objectArray_reverse","type":"CalCollectionsArrayPrimitivesobjectArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_concatList","name":"objectArray_concatList","type":"CalCollectionsArrayPrimitivesobjectArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_append","name":"objectArray_append","type":"CalCollectionsArrayPrimitivesobjectArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_arrayToList","name":"objectArray_arrayToList","type":"CalCollectionsArrayPrimitivesobjectArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_listToArrayWithFirstElement","name":"objectArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivesobjectArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"firstElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_listToArray","name":"objectArray_listToArray","type":"CalCollectionsArrayPrimitivesobjectArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_update","name":"objectArray_update","type":"CalCollectionsArrayPrimitivesobjectArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"index","input":"text"},{"name":"newValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_subscript","name":"objectArray_subscript","type":"CalCollectionsArrayPrimitivesobjectArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_cloneReplacingNullArray","name":"objectArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesobjectArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_length","name":"objectArray_length","type":"CalCollectionsArrayPrimitivesobjectArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_array7","name":"objectArray_array7","type":"CalCollectionsArrayPrimitivesobjectArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value7","input":"text"},{"name":"value5","input":"text"},{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value6","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_array6","name":"objectArray_array6","type":"CalCollectionsArrayPrimitivesobjectArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value5","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value3","input":"text"},{"name":"value6","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_array5","name":"objectArray_array5","type":"CalCollectionsArrayPrimitivesobjectArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value5","input":"text"},{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_array4","name":"objectArray_array4","type":"CalCollectionsArrayPrimitivesobjectArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_array3","name":"objectArray_array3","type":"CalCollectionsArrayPrimitivesobjectArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_array2","name":"objectArray_array2","type":"CalCollectionsArrayPrimitivesobjectArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_array1","name":"objectArray_array1","type":"CalCollectionsArrayPrimitivesobjectArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_makeDefault","name":"objectArray_makeDefault","type":"CalCollectionsArrayPrimitivesobjectArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_empty","name":"objectArray_empty","type":"CalCollectionsArrayPrimitivesobjectArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.objectArray_toShowString","name":"objectArray_toShowString","type":"CalCollectionsArrayPrimitivesobjectArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.objectArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_binarySearch","name":"doubleArray_binarySearch","type":"CalCollectionsArrayPrimitivesdoubleArray_binarySearch","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_binarySearch<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_sort","name":"doubleArray_sort","type":"CalCollectionsArrayPrimitivesdoubleArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_replace","name":"doubleArray_replace","type":"CalCollectionsArrayPrimitivesdoubleArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":null,"input":"text"},{"name":"oldElementValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf2","name":"doubleArray_lastIndexOf2","type":"CalCollectionsArrayPrimitivesdoubleArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf","name":"doubleArray_lastIndexOf","type":"CalCollectionsArrayPrimitivesdoubleArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_indexOf2","name":"doubleArray_indexOf2","type":"CalCollectionsArrayPrimitivesdoubleArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_indexOf","name":"doubleArray_indexOf","type":"CalCollectionsArrayPrimitivesdoubleArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_min","name":"doubleArray_min","type":"CalCollectionsArrayPrimitivesdoubleArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_max","name":"doubleArray_max","type":"CalCollectionsArrayPrimitivesdoubleArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_greaterThan","name":"doubleArray_greaterThan","type":"CalCollectionsArrayPrimitivesdoubleArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_greaterThanEquals","name":"doubleArray_greaterThanEquals","type":"CalCollectionsArrayPrimitivesdoubleArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_lessThanEquals","name":"doubleArray_lessThanEquals","type":"CalCollectionsArrayPrimitivesdoubleArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_lessThan","name":"doubleArray_lessThan","type":"CalCollectionsArrayPrimitivesdoubleArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_compareHelper","name":"doubleArray_compareHelper","type":"CalCollectionsArrayPrimitivesdoubleArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_notEquals","name":"doubleArray_notEquals","type":"CalCollectionsArrayPrimitivesdoubleArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_equals","name":"doubleArray_equals","type":"CalCollectionsArrayPrimitivesdoubleArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_replicate","name":"doubleArray_replicate","type":"CalCollectionsArrayPrimitivesdoubleArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_removeRange","name":"doubleArray_removeRange","type":"CalCollectionsArrayPrimitivesdoubleArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_subArray","name":"doubleArray_subArray","type":"CalCollectionsArrayPrimitivesdoubleArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_reverse","name":"doubleArray_reverse","type":"CalCollectionsArrayPrimitivesdoubleArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_concatList","name":"doubleArray_concatList","type":"CalCollectionsArrayPrimitivesdoubleArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_append","name":"doubleArray_append","type":"CalCollectionsArrayPrimitivesdoubleArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_arrayToList","name":"doubleArray_arrayToList","type":"CalCollectionsArrayPrimitivesdoubleArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_listToArrayWithFirstElement","name":"doubleArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivesdoubleArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"firstElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_listToArray","name":"doubleArray_listToArray","type":"CalCollectionsArrayPrimitivesdoubleArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_update","name":"doubleArray_update","type":"CalCollectionsArrayPrimitivesdoubleArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_subscript","name":"doubleArray_subscript","type":"CalCollectionsArrayPrimitivesdoubleArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_cloneReplacingNullArray","name":"doubleArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesdoubleArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_length","name":"doubleArray_length","type":"CalCollectionsArrayPrimitivesdoubleArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_array7","name":"doubleArray_array7","type":"CalCollectionsArrayPrimitivesdoubleArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":null,"input":"text"},{"name":"value3","input":"text"},{"name":"value4","input":"text"},{"name":null,"input":"text"},{"name":"value1","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_array6","name":"doubleArray_array6","type":"CalCollectionsArrayPrimitivesdoubleArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":null,"input":"text"},{"name":"value3","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_array5","name":"doubleArray_array5","type":"CalCollectionsArrayPrimitivesdoubleArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":null,"input":"text"},{"name":"value1","input":"text"},{"name":null,"input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_array4","name":"doubleArray_array4","type":"CalCollectionsArrayPrimitivesdoubleArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_array3","name":"doubleArray_array3","type":"CalCollectionsArrayPrimitivesdoubleArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":null,"input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_array2","name":"doubleArray_array2","type":"CalCollectionsArrayPrimitivesdoubleArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_array1","name":"doubleArray_array1","type":"CalCollectionsArrayPrimitivesdoubleArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_makeDefault","name":"doubleArray_makeDefault","type":"CalCollectionsArrayPrimitivesdoubleArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_empty","name":"doubleArray_empty","type":"CalCollectionsArrayPrimitivesdoubleArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.doubleArray_toShowString","name":"doubleArray_toShowString","type":"CalCollectionsArrayPrimitivesdoubleArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.doubleArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_binarySearch","name":"floatArray_binarySearch","type":"CalCollectionsArrayPrimitivesfloatArray_binarySearch","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_binarySearch<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_sort","name":"floatArray_sort","type":"CalCollectionsArrayPrimitivesfloatArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_replace","name":"floatArray_replace","type":"CalCollectionsArrayPrimitivesfloatArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":"oldElementValue","input":"text"},{"name":"newElementValue","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf2","name":"floatArray_lastIndexOf2","type":"CalCollectionsArrayPrimitivesfloatArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf","name":"floatArray_lastIndexOf","type":"CalCollectionsArrayPrimitivesfloatArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_indexOf2","name":"floatArray_indexOf2","type":"CalCollectionsArrayPrimitivesfloatArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_indexOf","name":"floatArray_indexOf","type":"CalCollectionsArrayPrimitivesfloatArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_min","name":"floatArray_min","type":"CalCollectionsArrayPrimitivesfloatArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_max","name":"floatArray_max","type":"CalCollectionsArrayPrimitivesfloatArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_greaterThan","name":"floatArray_greaterThan","type":"CalCollectionsArrayPrimitivesfloatArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_greaterThanEquals","name":"floatArray_greaterThanEquals","type":"CalCollectionsArrayPrimitivesfloatArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_lessThanEquals","name":"floatArray_lessThanEquals","type":"CalCollectionsArrayPrimitivesfloatArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_lessThan","name":"floatArray_lessThan","type":"CalCollectionsArrayPrimitivesfloatArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_compareHelper","name":"floatArray_compareHelper","type":"CalCollectionsArrayPrimitivesfloatArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_notEquals","name":"floatArray_notEquals","type":"CalCollectionsArrayPrimitivesfloatArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_equals","name":"floatArray_equals","type":"CalCollectionsArrayPrimitivesfloatArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_replicate","name":"floatArray_replicate","type":"CalCollectionsArrayPrimitivesfloatArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_removeRange","name":"floatArray_removeRange","type":"CalCollectionsArrayPrimitivesfloatArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_subArray","name":"floatArray_subArray","type":"CalCollectionsArrayPrimitivesfloatArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_reverse","name":"floatArray_reverse","type":"CalCollectionsArrayPrimitivesfloatArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_concatList","name":"floatArray_concatList","type":"CalCollectionsArrayPrimitivesfloatArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_append","name":"floatArray_append","type":"CalCollectionsArrayPrimitivesfloatArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_arrayToList","name":"floatArray_arrayToList","type":"CalCollectionsArrayPrimitivesfloatArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_listToArrayWithFirstElement","name":"floatArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivesfloatArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"firstElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_listToArray","name":"floatArray_listToArray","type":"CalCollectionsArrayPrimitivesfloatArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_update","name":"floatArray_update","type":"CalCollectionsArrayPrimitivesfloatArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_subscript","name":"floatArray_subscript","type":"CalCollectionsArrayPrimitivesfloatArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_cloneReplacingNullArray","name":"floatArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesfloatArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_length","name":"floatArray_length","type":"CalCollectionsArrayPrimitivesfloatArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_array7","name":"floatArray_array7","type":"CalCollectionsArrayPrimitivesfloatArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value6","input":"text"},{"name":"value2","input":"text"},{"name":"value4","input":"text"},{"name":"value1","input":"text"},{"name":"value7","input":"text"},{"name":"value5","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_array6","name":"floatArray_array6","type":"CalCollectionsArrayPrimitivesfloatArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value6","input":"text"},{"name":"value5","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_array5","name":"floatArray_array5","type":"CalCollectionsArrayPrimitivesfloatArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"value5","input":"text"},{"name":"value4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_array4","name":"floatArray_array4","type":"CalCollectionsArrayPrimitivesfloatArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value4","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_array3","name":"floatArray_array3","type":"CalCollectionsArrayPrimitivesfloatArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_array2","name":"floatArray_array2","type":"CalCollectionsArrayPrimitivesfloatArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_array1","name":"floatArray_array1","type":"CalCollectionsArrayPrimitivesfloatArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_makeDefault","name":"floatArray_makeDefault","type":"CalCollectionsArrayPrimitivesfloatArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_empty","name":"floatArray_empty","type":"CalCollectionsArrayPrimitivesfloatArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.floatArray_toShowString","name":"floatArray_toShowString","type":"CalCollectionsArrayPrimitivesfloatArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.floatArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_binarySearch","name":"longArray_binarySearch","type":"CalCollectionsArrayPrimitiveslongArray_binarySearch","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_binarySearch<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_sort","name":"longArray_sort","type":"CalCollectionsArrayPrimitiveslongArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_replace","name":"longArray_replace","type":"CalCollectionsArrayPrimitiveslongArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"array","input":"text"},{"name":"oldElementValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_lastIndexOf2","name":"longArray_lastIndexOf2","type":"CalCollectionsArrayPrimitiveslongArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":null,"input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_lastIndexOf","name":"longArray_lastIndexOf","type":"CalCollectionsArrayPrimitiveslongArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_indexOf2","name":"longArray_indexOf2","type":"CalCollectionsArrayPrimitiveslongArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":null,"input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_indexOf","name":"longArray_indexOf","type":"CalCollectionsArrayPrimitiveslongArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_min","name":"longArray_min","type":"CalCollectionsArrayPrimitiveslongArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_max","name":"longArray_max","type":"CalCollectionsArrayPrimitiveslongArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_greaterThan","name":"longArray_greaterThan","type":"CalCollectionsArrayPrimitiveslongArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_greaterThanEquals","name":"longArray_greaterThanEquals","type":"CalCollectionsArrayPrimitiveslongArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_lessThanEquals","name":"longArray_lessThanEquals","type":"CalCollectionsArrayPrimitiveslongArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_lessThan","name":"longArray_lessThan","type":"CalCollectionsArrayPrimitiveslongArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_compareHelper","name":"longArray_compareHelper","type":"CalCollectionsArrayPrimitiveslongArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_notEquals","name":"longArray_notEquals","type":"CalCollectionsArrayPrimitiveslongArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_equals","name":"longArray_equals","type":"CalCollectionsArrayPrimitiveslongArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_replicate","name":"longArray_replicate","type":"CalCollectionsArrayPrimitiveslongArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_removeRange","name":"longArray_removeRange","type":"CalCollectionsArrayPrimitiveslongArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_subArray","name":"longArray_subArray","type":"CalCollectionsArrayPrimitiveslongArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_reverse","name":"longArray_reverse","type":"CalCollectionsArrayPrimitiveslongArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_concatList","name":"longArray_concatList","type":"CalCollectionsArrayPrimitiveslongArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_append","name":"longArray_append","type":"CalCollectionsArrayPrimitiveslongArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_arrayToList","name":"longArray_arrayToList","type":"CalCollectionsArrayPrimitiveslongArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_listToArrayWithFirstElement","name":"longArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitiveslongArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"firstElement","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_listToArray","name":"longArray_listToArray","type":"CalCollectionsArrayPrimitiveslongArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_update","name":"longArray_update","type":"CalCollectionsArrayPrimitiveslongArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"newValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_subscript","name":"longArray_subscript","type":"CalCollectionsArrayPrimitiveslongArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_cloneReplacingNullArray","name":"longArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitiveslongArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_length","name":"longArray_length","type":"CalCollectionsArrayPrimitiveslongArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_array7","name":"longArray_array7","type":"CalCollectionsArrayPrimitiveslongArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_array6","name":"longArray_array6","type":"CalCollectionsArrayPrimitiveslongArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"value2","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_array5","name":"longArray_array5","type":"CalCollectionsArrayPrimitiveslongArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"value2","input":"text"},{"name":null,"input":"text"},{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_array4","name":"longArray_array4","type":"CalCollectionsArrayPrimitiveslongArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":null,"input":"text"},{"name":"value2","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_array3","name":"longArray_array3","type":"CalCollectionsArrayPrimitiveslongArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_array2","name":"longArray_array2","type":"CalCollectionsArrayPrimitiveslongArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_array1","name":"longArray_array1","type":"CalCollectionsArrayPrimitiveslongArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_makeDefault","name":"longArray_makeDefault","type":"CalCollectionsArrayPrimitiveslongArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_empty","name":"longArray_empty","type":"CalCollectionsArrayPrimitiveslongArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.longArray_toShowString","name":"longArray_toShowString","type":"CalCollectionsArrayPrimitiveslongArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.longArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_binarySearch","name":"intArray_binarySearch","type":"CalCollectionsArrayPrimitivesintArray_binarySearch","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_binarySearch<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_sort","name":"intArray_sort","type":"CalCollectionsArrayPrimitivesintArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_replace","name":"intArray_replace","type":"CalCollectionsArrayPrimitivesintArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":"newElementValue","input":"text"},{"name":"oldElementValue","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_lastIndexOf2","name":"intArray_lastIndexOf2","type":"CalCollectionsArrayPrimitivesintArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_lastIndexOf","name":"intArray_lastIndexOf","type":"CalCollectionsArrayPrimitivesintArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_indexOf2","name":"intArray_indexOf2","type":"CalCollectionsArrayPrimitivesintArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_indexOf","name":"intArray_indexOf","type":"CalCollectionsArrayPrimitivesintArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_min","name":"intArray_min","type":"CalCollectionsArrayPrimitivesintArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_max","name":"intArray_max","type":"CalCollectionsArrayPrimitivesintArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_greaterThan","name":"intArray_greaterThan","type":"CalCollectionsArrayPrimitivesintArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_greaterThanEquals","name":"intArray_greaterThanEquals","type":"CalCollectionsArrayPrimitivesintArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_lessThanEquals","name":"intArray_lessThanEquals","type":"CalCollectionsArrayPrimitivesintArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_lessThan","name":"intArray_lessThan","type":"CalCollectionsArrayPrimitivesintArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_compareHelper","name":"intArray_compareHelper","type":"CalCollectionsArrayPrimitivesintArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_notEquals","name":"intArray_notEquals","type":"CalCollectionsArrayPrimitivesintArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_equals","name":"intArray_equals","type":"CalCollectionsArrayPrimitivesintArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_replicate","name":"intArray_replicate","type":"CalCollectionsArrayPrimitivesintArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"nCopies","input":"text"},{"name":"valueToReplicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_removeRange","name":"intArray_removeRange","type":"CalCollectionsArrayPrimitivesintArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_subArray","name":"intArray_subArray","type":"CalCollectionsArrayPrimitivesintArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_reverse","name":"intArray_reverse","type":"CalCollectionsArrayPrimitivesintArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_concatList","name":"intArray_concatList","type":"CalCollectionsArrayPrimitivesintArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_append","name":"intArray_append","type":"CalCollectionsArrayPrimitivesintArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_arrayToList","name":"intArray_arrayToList","type":"CalCollectionsArrayPrimitivesintArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_listToArrayWithFirstElement","name":"intArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivesintArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"firstElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_listToArray","name":"intArray_listToArray","type":"CalCollectionsArrayPrimitivesintArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_update","name":"intArray_update","type":"CalCollectionsArrayPrimitivesintArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_subscript","name":"intArray_subscript","type":"CalCollectionsArrayPrimitivesintArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_cloneReplacingNullArray","name":"intArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesintArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_length","name":"intArray_length","type":"CalCollectionsArrayPrimitivesintArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_array7","name":"intArray_array7","type":"CalCollectionsArrayPrimitivesintArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value7","input":"text"},{"name":"value5","input":"text"},{"name":"value6","input":"text"},{"name":"value4","input":"text"},{"name":"value1","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_array6","name":"intArray_array6","type":"CalCollectionsArrayPrimitivesintArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value5","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"value6","input":"text"},{"name":"value4","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_array5","name":"intArray_array5","type":"CalCollectionsArrayPrimitivesintArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"value5","input":"text"},{"name":"value4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_array4","name":"intArray_array4","type":"CalCollectionsArrayPrimitivesintArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value4","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_array3","name":"intArray_array3","type":"CalCollectionsArrayPrimitivesintArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_array2","name":"intArray_array2","type":"CalCollectionsArrayPrimitivesintArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_array1","name":"intArray_array1","type":"CalCollectionsArrayPrimitivesintArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_makeDefault","name":"intArray_makeDefault","type":"CalCollectionsArrayPrimitivesintArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_empty","name":"intArray_empty","type":"CalCollectionsArrayPrimitivesintArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.intArray_toShowString","name":"intArray_toShowString","type":"CalCollectionsArrayPrimitivesintArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.intArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_binarySearch","name":"shortArray_binarySearch","type":"CalCollectionsArrayPrimitivesshortArray_binarySearch","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_binarySearch<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_sort","name":"shortArray_sort","type":"CalCollectionsArrayPrimitivesshortArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_replace","name":"shortArray_replace","type":"CalCollectionsArrayPrimitivesshortArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":"oldElementValue","input":"text"},{"name":"newElementValue","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf2","name":"shortArray_lastIndexOf2","type":"CalCollectionsArrayPrimitivesshortArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf","name":"shortArray_lastIndexOf","type":"CalCollectionsArrayPrimitivesshortArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_indexOf2","name":"shortArray_indexOf2","type":"CalCollectionsArrayPrimitivesshortArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_indexOf","name":"shortArray_indexOf","type":"CalCollectionsArrayPrimitivesshortArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_min","name":"shortArray_min","type":"CalCollectionsArrayPrimitivesshortArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_max","name":"shortArray_max","type":"CalCollectionsArrayPrimitivesshortArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_greaterThan","name":"shortArray_greaterThan","type":"CalCollectionsArrayPrimitivesshortArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_greaterThanEquals","name":"shortArray_greaterThanEquals","type":"CalCollectionsArrayPrimitivesshortArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_lessThanEquals","name":"shortArray_lessThanEquals","type":"CalCollectionsArrayPrimitivesshortArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_lessThan","name":"shortArray_lessThan","type":"CalCollectionsArrayPrimitivesshortArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_compareHelper","name":"shortArray_compareHelper","type":"CalCollectionsArrayPrimitivesshortArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_notEquals","name":"shortArray_notEquals","type":"CalCollectionsArrayPrimitivesshortArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_equals","name":"shortArray_equals","type":"CalCollectionsArrayPrimitivesshortArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_replicate","name":"shortArray_replicate","type":"CalCollectionsArrayPrimitivesshortArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_removeRange","name":"shortArray_removeRange","type":"CalCollectionsArrayPrimitivesshortArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_subArray","name":"shortArray_subArray","type":"CalCollectionsArrayPrimitivesshortArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_reverse","name":"shortArray_reverse","type":"CalCollectionsArrayPrimitivesshortArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_concatList","name":"shortArray_concatList","type":"CalCollectionsArrayPrimitivesshortArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_append","name":"shortArray_append","type":"CalCollectionsArrayPrimitivesshortArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_arrayToList","name":"shortArray_arrayToList","type":"CalCollectionsArrayPrimitivesshortArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_listToArrayWithFirstElement","name":"shortArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivesshortArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"firstElement","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_listToArray","name":"shortArray_listToArray","type":"CalCollectionsArrayPrimitivesshortArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_update","name":"shortArray_update","type":"CalCollectionsArrayPrimitivesshortArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_subscript","name":"shortArray_subscript","type":"CalCollectionsArrayPrimitivesshortArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_cloneReplacingNullArray","name":"shortArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesshortArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_length","name":"shortArray_length","type":"CalCollectionsArrayPrimitivesshortArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_array7","name":"shortArray_array7","type":"CalCollectionsArrayPrimitivesshortArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"value7","input":"text"},{"name":"value5","input":"text"},{"name":"value4","input":"text"},{"name":"value6","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_array6","name":"shortArray_array6","type":"CalCollectionsArrayPrimitivesshortArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value4","input":"text"},{"name":"value5","input":"text"},{"name":"value6","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_array5","name":"shortArray_array5","type":"CalCollectionsArrayPrimitivesshortArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value5","input":"text"},{"name":"value4","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_array4","name":"shortArray_array4","type":"CalCollectionsArrayPrimitivesshortArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_array3","name":"shortArray_array3","type":"CalCollectionsArrayPrimitivesshortArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_array2","name":"shortArray_array2","type":"CalCollectionsArrayPrimitivesshortArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_array1","name":"shortArray_array1","type":"CalCollectionsArrayPrimitivesshortArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_makeDefault","name":"shortArray_makeDefault","type":"CalCollectionsArrayPrimitivesshortArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_empty","name":"shortArray_empty","type":"CalCollectionsArrayPrimitivesshortArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.shortArray_toShowString","name":"shortArray_toShowString","type":"CalCollectionsArrayPrimitivesshortArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.shortArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_binarySearch","name":"byteArray_binarySearch","type":"CalCollectionsArrayPrimitivesbyteArray_binarySearch","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_binarySearch<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_sort","name":"byteArray_sort","type":"CalCollectionsArrayPrimitivesbyteArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_replace","name":"byteArray_replace","type":"CalCollectionsArrayPrimitivesbyteArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"oldElementValue","input":"text"},{"name":"newElementValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf2","name":"byteArray_lastIndexOf2","type":"CalCollectionsArrayPrimitivesbyteArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf","name":"byteArray_lastIndexOf","type":"CalCollectionsArrayPrimitivesbyteArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_indexOf2","name":"byteArray_indexOf2","type":"CalCollectionsArrayPrimitivesbyteArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_indexOf","name":"byteArray_indexOf","type":"CalCollectionsArrayPrimitivesbyteArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_min","name":"byteArray_min","type":"CalCollectionsArrayPrimitivesbyteArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_max","name":"byteArray_max","type":"CalCollectionsArrayPrimitivesbyteArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_greaterThan","name":"byteArray_greaterThan","type":"CalCollectionsArrayPrimitivesbyteArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_greaterThanEquals","name":"byteArray_greaterThanEquals","type":"CalCollectionsArrayPrimitivesbyteArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_lessThanEquals","name":"byteArray_lessThanEquals","type":"CalCollectionsArrayPrimitivesbyteArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_lessThan","name":"byteArray_lessThan","type":"CalCollectionsArrayPrimitivesbyteArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_compareHelper","name":"byteArray_compareHelper","type":"CalCollectionsArrayPrimitivesbyteArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_notEquals","name":"byteArray_notEquals","type":"CalCollectionsArrayPrimitivesbyteArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_equals","name":"byteArray_equals","type":"CalCollectionsArrayPrimitivesbyteArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_decompress","name":"byteArray_decompress","type":"CalCollectionsArrayPrimitivesbyteArray_decompress","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_decompress<\/b><br\/>[CALDoc] ","terminals":[{"name":"byteArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_compress","name":"byteArray_compress","type":"CalCollectionsArrayPrimitivesbyteArray_compress","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_compress<\/b><br\/>[CALDoc] ","terminals":[{"name":"byteArray","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_replicate","name":"byteArray_replicate","type":"CalCollectionsArrayPrimitivesbyteArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_removeRange","name":"byteArray_removeRange","type":"CalCollectionsArrayPrimitivesbyteArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_subArray","name":"byteArray_subArray","type":"CalCollectionsArrayPrimitivesbyteArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_reverse","name":"byteArray_reverse","type":"CalCollectionsArrayPrimitivesbyteArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_concatList","name":"byteArray_concatList","type":"CalCollectionsArrayPrimitivesbyteArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_append","name":"byteArray_append","type":"CalCollectionsArrayPrimitivesbyteArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_arrayToList","name":"byteArray_arrayToList","type":"CalCollectionsArrayPrimitivesbyteArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_listToArrayWithFirstElement","name":"byteArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivesbyteArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"firstElement","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_listToArray","name":"byteArray_listToArray","type":"CalCollectionsArrayPrimitivesbyteArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_update","name":"byteArray_update","type":"CalCollectionsArrayPrimitivesbyteArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_subscript","name":"byteArray_subscript","type":"CalCollectionsArrayPrimitivesbyteArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_cloneReplacingNullArray","name":"byteArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesbyteArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_length","name":"byteArray_length","type":"CalCollectionsArrayPrimitivesbyteArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_array7","name":"byteArray_array7","type":"CalCollectionsArrayPrimitivesbyteArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value6","input":"text"},{"name":"value5","input":"text"},{"name":"value4","input":"text"},{"name":"value7","input":"text"},{"name":"value1","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_array6","name":"byteArray_array6","type":"CalCollectionsArrayPrimitivesbyteArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value3","input":"text"},{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"value6","input":"text"},{"name":"value5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_array5","name":"byteArray_array5","type":"CalCollectionsArrayPrimitivesbyteArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value4","input":"text"},{"name":"value5","input":"text"},{"name":"value1","input":"text"},{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_array4","name":"byteArray_array4","type":"CalCollectionsArrayPrimitivesbyteArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_array3","name":"byteArray_array3","type":"CalCollectionsArrayPrimitivesbyteArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_array2","name":"byteArray_array2","type":"CalCollectionsArrayPrimitivesbyteArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_array1","name":"byteArray_array1","type":"CalCollectionsArrayPrimitivesbyteArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_makeDefault","name":"byteArray_makeDefault","type":"CalCollectionsArrayPrimitivesbyteArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_empty","name":"byteArray_empty","type":"CalCollectionsArrayPrimitivesbyteArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.byteArray_toShowString","name":"byteArray_toShowString","type":"CalCollectionsArrayPrimitivesbyteArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.byteArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_sort","name":"booleanArray_sort","type":"CalCollectionsArrayPrimitivesbooleanArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_replace","name":"booleanArray_replace","type":"CalCollectionsArrayPrimitivesbooleanArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"newElementValue","input":"text"},{"name":"oldElementValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf2","name":"booleanArray_lastIndexOf2","type":"CalCollectionsArrayPrimitivesbooleanArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf","name":"booleanArray_lastIndexOf","type":"CalCollectionsArrayPrimitivesbooleanArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_indexOf2","name":"booleanArray_indexOf2","type":"CalCollectionsArrayPrimitivesbooleanArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_indexOf","name":"booleanArray_indexOf","type":"CalCollectionsArrayPrimitivesbooleanArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_min","name":"booleanArray_min","type":"CalCollectionsArrayPrimitivesbooleanArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_max","name":"booleanArray_max","type":"CalCollectionsArrayPrimitivesbooleanArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_greaterThan","name":"booleanArray_greaterThan","type":"CalCollectionsArrayPrimitivesbooleanArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_greaterThanEquals","name":"booleanArray_greaterThanEquals","type":"CalCollectionsArrayPrimitivesbooleanArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_lessThanEquals","name":"booleanArray_lessThanEquals","type":"CalCollectionsArrayPrimitivesbooleanArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_lessThan","name":"booleanArray_lessThan","type":"CalCollectionsArrayPrimitivesbooleanArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_compareHelper","name":"booleanArray_compareHelper","type":"CalCollectionsArrayPrimitivesbooleanArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_notEquals","name":"booleanArray_notEquals","type":"CalCollectionsArrayPrimitivesbooleanArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_equals","name":"booleanArray_equals","type":"CalCollectionsArrayPrimitivesbooleanArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_replicate","name":"booleanArray_replicate","type":"CalCollectionsArrayPrimitivesbooleanArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"valueToReplicate","input":"text"},{"name":"nCopies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_removeRange","name":"booleanArray_removeRange","type":"CalCollectionsArrayPrimitivesbooleanArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_subArray","name":"booleanArray_subArray","type":"CalCollectionsArrayPrimitivesbooleanArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_reverse","name":"booleanArray_reverse","type":"CalCollectionsArrayPrimitivesbooleanArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_concatList","name":"booleanArray_concatList","type":"CalCollectionsArrayPrimitivesbooleanArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_append","name":"booleanArray_append","type":"CalCollectionsArrayPrimitivesbooleanArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_arrayToList","name":"booleanArray_arrayToList","type":"CalCollectionsArrayPrimitivesbooleanArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_listToArrayWithFirstElement","name":"booleanArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivesbooleanArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"firstElement","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_listToArray","name":"booleanArray_listToArray","type":"CalCollectionsArrayPrimitivesbooleanArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_update","name":"booleanArray_update","type":"CalCollectionsArrayPrimitivesbooleanArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"index","input":"text"},{"name":"newValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_subscript","name":"booleanArray_subscript","type":"CalCollectionsArrayPrimitivesbooleanArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_cloneReplacingNullArray","name":"booleanArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesbooleanArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_length","name":"booleanArray_length","type":"CalCollectionsArrayPrimitivesbooleanArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_array7","name":"booleanArray_array7","type":"CalCollectionsArrayPrimitivesbooleanArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value5","input":"text"},{"name":"value2","input":"text"},{"name":"value4","input":"text"},{"name":"value7","input":"text"},{"name":"value3","input":"text"},{"name":"value6","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_array6","name":"booleanArray_array6","type":"CalCollectionsArrayPrimitivesbooleanArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value6","input":"text"},{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value3","input":"text"},{"name":"value5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_array5","name":"booleanArray_array5","type":"CalCollectionsArrayPrimitivesbooleanArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"value5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_array4","name":"booleanArray_array4","type":"CalCollectionsArrayPrimitivesbooleanArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_array3","name":"booleanArray_array3","type":"CalCollectionsArrayPrimitivesbooleanArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_array2","name":"booleanArray_array2","type":"CalCollectionsArrayPrimitivesbooleanArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_array1","name":"booleanArray_array1","type":"CalCollectionsArrayPrimitivesbooleanArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_makeDefault","name":"booleanArray_makeDefault","type":"CalCollectionsArrayPrimitivesbooleanArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_empty","name":"booleanArray_empty","type":"CalCollectionsArrayPrimitivesbooleanArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.booleanArray_toShowString","name":"booleanArray_toShowString","type":"CalCollectionsArrayPrimitivesbooleanArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.booleanArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_binarySearch","name":"charArray_binarySearch","type":"CalCollectionsArrayPrimitivescharArray_binarySearch","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_binarySearch<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_sort","name":"charArray_sort","type":"CalCollectionsArrayPrimitivescharArray_sort","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_sort<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_replace","name":"charArray_replace","type":"CalCollectionsArrayPrimitivescharArray_replace","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_replace<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"oldElementValue","input":"text"},{"name":"newElementValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_lastIndexOf2","name":"charArray_lastIndexOf2","type":"CalCollectionsArrayPrimitivescharArray_lastIndexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_lastIndexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"fromIndex","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_lastIndexOf","name":"charArray_lastIndexOf","type":"CalCollectionsArrayPrimitivescharArray_lastIndexOf","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_lastIndexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_indexOf2","name":"charArray_indexOf2","type":"CalCollectionsArrayPrimitivescharArray_indexOf2","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_indexOf2<\/b><br\/>[CALDoc] ","terminals":[{"name":"element","input":"text"},{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_indexOf","name":"charArray_indexOf","type":"CalCollectionsArrayPrimitivescharArray_indexOf","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_indexOf<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"element","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_min","name":"charArray_min","type":"CalCollectionsArrayPrimitivescharArray_min","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_min<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_max","name":"charArray_max","type":"CalCollectionsArrayPrimitivescharArray_max","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_max<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_greaterThan","name":"charArray_greaterThan","type":"CalCollectionsArrayPrimitivescharArray_greaterThan","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_greaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_greaterThanEquals","name":"charArray_greaterThanEquals","type":"CalCollectionsArrayPrimitivescharArray_greaterThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_greaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_lessThanEquals","name":"charArray_lessThanEquals","type":"CalCollectionsArrayPrimitivescharArray_lessThanEquals","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_lessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_lessThan","name":"charArray_lessThan","type":"CalCollectionsArrayPrimitivescharArray_lessThan","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_lessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_compareHelper","name":"charArray_compareHelper","type":"CalCollectionsArrayPrimitivescharArray_compareHelper","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_compareHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_notEquals","name":"charArray_notEquals","type":"CalCollectionsArrayPrimitivescharArray_notEquals","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_notEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array2","input":"text"},{"name":"array1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_equals","name":"charArray_equals","type":"CalCollectionsArrayPrimitivescharArray_equals","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_replicate","name":"charArray_replicate","type":"CalCollectionsArrayPrimitivescharArray_replicate","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_replicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"nCopies","input":"text"},{"name":"valueToReplicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_removeRange","name":"charArray_removeRange","type":"CalCollectionsArrayPrimitivescharArray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_subArray","name":"charArray_subArray","type":"CalCollectionsArrayPrimitivescharArray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"array","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_reverse","name":"charArray_reverse","type":"CalCollectionsArrayPrimitivescharArray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_concatList","name":"charArray_concatList","type":"CalCollectionsArrayPrimitivescharArray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_append","name":"charArray_append","type":"CalCollectionsArrayPrimitivescharArray_append","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_append<\/b><br\/>[CALDoc] ","terminals":[{"name":"array1","input":"text"},{"name":"array2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_arrayToList","name":"charArray_arrayToList","type":"CalCollectionsArrayPrimitivescharArray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_listToArrayWithFirstElement","name":"charArray_listToArrayWithFirstElement","type":"CalCollectionsArrayPrimitivescharArray_listToArrayWithFirstElement","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_listToArrayWithFirstElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"firstElement","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_listToArray","name":"charArray_listToArray","type":"CalCollectionsArrayPrimitivescharArray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_update","name":"charArray_update","type":"CalCollectionsArrayPrimitivescharArray_update","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_update<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"newValue","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_subscript","name":"charArray_subscript","type":"CalCollectionsArrayPrimitivescharArray_subscript","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_subscript<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_cloneReplacingNullArray","name":"charArray_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivescharArray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_length","name":"charArray_length","type":"CalCollectionsArrayPrimitivescharArray_length","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_array7","name":"charArray_array7","type":"CalCollectionsArrayPrimitivescharArray_array7","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_array7<\/b><br\/>[CALDoc] ","terminals":[{"name":"value4","input":"text"},{"name":"value7","input":"text"},{"name":"value6","input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"value5","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_array6","name":"charArray_array6","type":"CalCollectionsArrayPrimitivescharArray_array6","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_array6<\/b><br\/>[CALDoc] ","terminals":[{"name":"value6","input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"value5","input":"text"},{"name":"value4","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_array5","name":"charArray_array5","type":"CalCollectionsArrayPrimitivescharArray_array5","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_array5<\/b><br\/>[CALDoc] ","terminals":[{"name":"value5","input":"text"},{"name":"value3","input":"text"},{"name":"value1","input":"text"},{"name":"value4","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_array4","name":"charArray_array4","type":"CalCollectionsArrayPrimitivescharArray_array4","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_array4<\/b><br\/>[CALDoc] ","terminals":[{"name":"value3","input":"text"},{"name":"value4","input":"text"},{"name":"value1","input":"text"},{"name":"value2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_array3","name":"charArray_array3","type":"CalCollectionsArrayPrimitivescharArray_array3","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_array3<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"value3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_array2","name":"charArray_array2","type":"CalCollectionsArrayPrimitivescharArray_array2","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_array2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value2","input":"text"},{"name":"value1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_array1","name":"charArray_array1","type":"CalCollectionsArrayPrimitivescharArray_array1","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_array1<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_makeDefault","name":"charArray_makeDefault","type":"CalCollectionsArrayPrimitivescharArray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_empty","name":"charArray_empty","type":"CalCollectionsArrayPrimitivescharArray_empty","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_empty<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_toShowString","name":"charArray_toShowString","type":"CalCollectionsArrayPrimitivescharArray_toShowString","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_toShowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_toString","name":"charArray_toString","type":"CalCollectionsArrayPrimitivescharArray_toString","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.charArray_fromString","name":"charArray_fromString","type":"CalCollectionsArrayPrimitivescharArray_fromString","ui":"<b>Cal.Collections.ArrayPrimitives.charArray_fromString<\/b><br\/>[CALDoc] ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.emptyArray_isRemoveRangeOK","name":"emptyArray_isRemoveRangeOK","type":"CalCollectionsArrayPrimitivesemptyArray_isRemoveRangeOK","ui":"<b>Cal.Collections.ArrayPrimitives.emptyArray_isRemoveRangeOK<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.emptyArray_isSubArrayOK","name":"emptyArray_isSubArrayOK","type":"CalCollectionsArrayPrimitivesemptyArray_isSubArrayOK","ui":"<b>Cal.Collections.ArrayPrimitives.emptyArray_isSubArrayOK<\/b><br\/>[CALDoc] ","terminals":[{"name":"fromIndex","input":"text"},{"name":"toIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.emptyArray_throwArrayIndexOutOfBoundsException","name":"emptyArray_throwArrayIndexOutOfBoundsException","type":"CalCollectionsArrayPrimitivesemptyArray_throwArrayIndexOutOfBoundsException","ui":"<b>Cal.Collections.ArrayPrimitives.emptyArray_throwArrayIndexOutOfBoundsException<\/b><br\/>[CALDoc] ","terminals":[{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_length","name":"array_length","type":"CalCollectionsArrayPrimitivesarray_length","ui":"<b>Cal.Collections.ArrayPrimitives.array_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_makeDefault","name":"array_makeDefault","type":"CalCollectionsArrayPrimitivesarray_makeDefault","ui":"<b>Cal.Collections.ArrayPrimitives.array_makeDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_cloneReplacingNullArray","name":"array_cloneReplacingNullArray","type":"CalCollectionsArrayPrimitivesarray_cloneReplacingNullArray","ui":"<b>Cal.Collections.ArrayPrimitives.array_cloneReplacingNullArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_listToArray","name":"array_listToArray","type":"CalCollectionsArrayPrimitivesarray_listToArray","ui":"<b>Cal.Collections.ArrayPrimitives.array_listToArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_arrayToList","name":"array_arrayToList","type":"CalCollectionsArrayPrimitivesarray_arrayToList","ui":"<b>Cal.Collections.ArrayPrimitives.array_arrayToList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_concatList","name":"array_concatList","type":"CalCollectionsArrayPrimitivesarray_concatList","ui":"<b>Cal.Collections.ArrayPrimitives.array_concatList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_reverse","name":"array_reverse","type":"CalCollectionsArrayPrimitivesarray_reverse","ui":"<b>Cal.Collections.ArrayPrimitives.array_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_subArray","name":"array_subArray","type":"CalCollectionsArrayPrimitivesarray_subArray","ui":"<b>Cal.Collections.ArrayPrimitives.array_subArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_removeRange","name":"array_removeRange","type":"CalCollectionsArrayPrimitivesarray_removeRange","ui":"<b>Cal.Collections.ArrayPrimitives.array_removeRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_toCalValueArray","name":"array_toCalValueArray","type":"CalCollectionsArrayPrimitivesarray_toCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.array_toCalValueArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Collections.ArrayPrimitives.array_fromCalValueArray","name":"array_fromCalValueArray","type":"CalCollectionsArrayPrimitivesarray_fromCalValueArray","ui":"<b>Cal.Collections.ArrayPrimitives.array_fromCalValueArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.ArrayPrimitives"]},{"description":"Cal.Core.Bits.highestBitMaskLong","name":"highestBitMaskLong","type":"CalCoreBitshighestBitMaskLong","ui":"<b>Cal.Core.Bits.highestBitMaskLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.highestBitMaskInt","name":"highestBitMaskInt","type":"CalCoreBitshighestBitMaskInt","ui":"<b>Cal.Core.Bits.highestBitMaskInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftRUnsignedLong","name":"shiftRUnsignedLong","type":"CalCoreBitsshiftRUnsignedLong","ui":"<b>Cal.Core.Bits.shiftRUnsignedLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftRLong","name":"shiftRLong","type":"CalCoreBitsshiftRLong","ui":"<b>Cal.Core.Bits.shiftRLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftLLong","name":"shiftLLong","type":"CalCoreBitsshiftLLong","ui":"<b>Cal.Core.Bits.shiftLLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.complementLong","name":"complementLong","type":"CalCoreBitscomplementLong","ui":"<b>Cal.Core.Bits.complementLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseXorLong","name":"bitwiseXorLong","type":"CalCoreBitsbitwiseXorLong","ui":"<b>Cal.Core.Bits.bitwiseXorLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseOrLong","name":"bitwiseOrLong","type":"CalCoreBitsbitwiseOrLong","ui":"<b>Cal.Core.Bits.bitwiseOrLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseAndLong","name":"bitwiseAndLong","type":"CalCoreBitsbitwiseAndLong","ui":"<b>Cal.Core.Bits.bitwiseAndLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftRUnsignedInt","name":"shiftRUnsignedInt","type":"CalCoreBitsshiftRUnsignedInt","ui":"<b>Cal.Core.Bits.shiftRUnsignedInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftRInt","name":"shiftRInt","type":"CalCoreBitsshiftRInt","ui":"<b>Cal.Core.Bits.shiftRInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftLInt","name":"shiftLInt","type":"CalCoreBitsshiftLInt","ui":"<b>Cal.Core.Bits.shiftLInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.complementInt","name":"complementInt","type":"CalCoreBitscomplementInt","ui":"<b>Cal.Core.Bits.complementInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseXorInt","name":"bitwiseXorInt","type":"CalCoreBitsbitwiseXorInt","ui":"<b>Cal.Core.Bits.bitwiseXorInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseOrInt","name":"bitwiseOrInt","type":"CalCoreBitsbitwiseOrInt","ui":"<b>Cal.Core.Bits.bitwiseOrInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseAndInt","name":"bitwiseAndInt","type":"CalCoreBitsbitwiseAndInt","ui":"<b>Cal.Core.Bits.bitwiseAndInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseAnd","name":"bitwiseAnd","type":"CalCoreBitsbitwiseAnd","ui":"<b>Cal.Core.Bits.bitwiseAnd<\/b><br\/>[CALDoc] Combines its two arguments by performing a boolean AND operation on\ntheir individual bits. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseOr","name":"bitwiseOr","type":"CalCoreBitsbitwiseOr","ui":"<b>Cal.Core.Bits.bitwiseOr<\/b><br\/>[CALDoc] Combines its two arguments by performing a boolean OR operation on their \nindividual bits. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.bitwiseXor","name":"bitwiseXor","type":"CalCoreBitsbitwiseXor","ui":"<b>Cal.Core.Bits.bitwiseXor<\/b><br\/>[CALDoc] Combines its two arguments by performing a boolean XOR operation on their\nindividual bits. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.complement","name":"complement","type":"CalCoreBitscomplement","ui":"<b>Cal.Core.Bits.complement<\/b><br\/>[CALDoc] Inverts each bit of its input, converting ones to zeros and zeros to ones.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.highestBitMask","name":"highestBitMask","type":"CalCoreBitshighestBitMask","ui":"<b>Cal.Core.Bits.highestBitMask<\/b><br\/>[CALDoc] Clears all but the highest 1-bit of the input.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftL","name":"shiftL","type":"CalCoreBitsshiftL","ui":"<b>Cal.Core.Bits.shiftL<\/b><br\/>[CALDoc] Shifts the bits of the first argument left by the number of places specified\nby the second argument. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftR","name":"shiftR","type":"CalCoreBitsshiftR","ui":"<b>Cal.Core.Bits.shiftR<\/b><br\/>[CALDoc] Shifts the bits of the first argument to the right by the number of places\nspecified by the second argument. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Bits.shiftRUnsigned","name":"shiftRUnsigned","type":"CalCoreBitsshiftRUnsigned","ui":"<b>Cal.Core.Bits.shiftRUnsigned<\/b><br\/>[CALDoc] Works like <code>shiftR<\/code>, but always shifts zeros into the high-order bits of\nthe result, regardless of the sign of the first argument.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Bits"]},{"description":"Cal.Core.Char.inputDirectionality","name":"inputDirectionality","type":"CalCoreCharinputDirectionality","ui":"<b>Cal.Core.Char.inputDirectionality<\/b><br\/>[CALDoc] ","terminals":[{"name":"objectValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.intToDigit","name":"intToDigit","type":"CalCoreCharintToDigit","ui":"<b>Cal.Core.Char.intToDigit<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> to a <code>Char<\/code> representing that <code>Int<\/code> as a hexadecimal digit.","terminals":[{"name":"i","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.testModule","name":"testModule","type":"CalCoreChartestModule","ui":"<b>Cal.Core.Char.testModule<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.typeExamples","name":"typeExamples","type":"CalCoreChartypeExamples","ui":"<b>Cal.Core.Char.typeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.outputDirectionality","name":"outputDirectionality","type":"CalCoreCharoutputDirectionality","ui":"<b>Cal.Core.Char.outputDirectionality<\/b><br\/>[CALDoc] ","terminals":[{"name":"directionalityValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.directionalityExamples","name":"directionalityExamples","type":"CalCoreChardirectionalityExamples","ui":"<b>Cal.Core.Char.directionalityExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.directionality","name":"directionality","type":"CalCoreChardirectionality","ui":"<b>Cal.Core.Char.directionality<\/b><br\/>[CALDoc] Returns: a <code>Directionality<\/code> value that represents the directionality of charValue.","terminals":[{"name":"charValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.type","name":"type","type":"CalCoreChartype","ui":"<b>Cal.Core.Char.type<\/b><br\/>[CALDoc] Returns: a <code>Type<\/code> value representing the type of the provided <code>Char<\/code>","terminals":[{"name":"charValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.digitToInt","name":"digitToInt","type":"CalCoreChardigitToInt","ui":"<b>Cal.Core.Char.digitToInt<\/b><br\/>[CALDoc] Converts a <code>Char<\/code> representing a hexadecimal digit to an <code>Int<\/code>.","terminals":[{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.byteToDirectionality","name":"byteToDirectionality","type":"CalCoreCharbyteToDirectionality","ui":"<b>Cal.Core.Char.byteToDirectionality<\/b><br\/>[CALDoc] ","terminals":[{"name":"byteValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.outputType","name":"outputType","type":"CalCoreCharoutputType","ui":"<b>Cal.Core.Char.outputType<\/b><br\/>[CALDoc] ","terminals":[{"name":"typeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.inputType","name":"inputType","type":"CalCoreCharinputType","ui":"<b>Cal.Core.Char.inputType<\/b><br\/>[CALDoc] ","terminals":[{"name":"objectValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.intToType","name":"intToType","type":"CalCoreCharintToType","ui":"<b>Cal.Core.Char.intToType<\/b><br\/>[CALDoc] ","terminals":[{"name":"intValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDirectionality","name":"jDirectionality","type":"CalCoreCharjDirectionality","ui":"<b>Cal.Core.Char.jDirectionality<\/b><br\/>[CALDoc] Returns: a <code>Byte<\/code> value that can be translated to a <code>Directionality<\/code> value\nusing <code>byteToDirectionality<\/code>.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_POP_DIRECTIONAL_FORMAT","name":"jDIRECTIONALITY_POP_DIRECTIONAL_FORMAT","type":"CalCoreCharjDIRECTIONALITY_POP_DIRECTIONAL_FORMAT","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_POP_DIRECTIONAL_FORMAT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE","name":"jDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE","type":"CalCoreCharjDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING","name":"jDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING","type":"CalCoreCharjDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE","name":"jDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE","type":"CalCoreCharjDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING","name":"jDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING","type":"CalCoreCharjDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_OTHER_NEUTRALS","name":"jDIRECTIONALITY_OTHER_NEUTRALS","type":"CalCoreCharjDIRECTIONALITY_OTHER_NEUTRALS","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_OTHER_NEUTRALS<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_WHITESPACE","name":"jDIRECTIONALITY_WHITESPACE","type":"CalCoreCharjDIRECTIONALITY_WHITESPACE","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_WHITESPACE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_SEGMENT_SEPARATOR","name":"jDIRECTIONALITY_SEGMENT_SEPARATOR","type":"CalCoreCharjDIRECTIONALITY_SEGMENT_SEPARATOR","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_SEGMENT_SEPARATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_PARAGRAPH_SEPARATOR","name":"jDIRECTIONALITY_PARAGRAPH_SEPARATOR","type":"CalCoreCharjDIRECTIONALITY_PARAGRAPH_SEPARATOR","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_PARAGRAPH_SEPARATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_BOUNDARY_NEUTRAL","name":"jDIRECTIONALITY_BOUNDARY_NEUTRAL","type":"CalCoreCharjDIRECTIONALITY_BOUNDARY_NEUTRAL","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_BOUNDARY_NEUTRAL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_NONSPACING_MARK","name":"jDIRECTIONALITY_NONSPACING_MARK","type":"CalCoreCharjDIRECTIONALITY_NONSPACING_MARK","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_NONSPACING_MARK<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_COMMON_NUMBER_SEPARATOR","name":"jDIRECTIONALITY_COMMON_NUMBER_SEPARATOR","type":"CalCoreCharjDIRECTIONALITY_COMMON_NUMBER_SEPARATOR","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_COMMON_NUMBER_SEPARATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_ARABIC_NUMBER","name":"jDIRECTIONALITY_ARABIC_NUMBER","type":"CalCoreCharjDIRECTIONALITY_ARABIC_NUMBER","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_ARABIC_NUMBER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR","name":"jDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR","type":"CalCoreCharjDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR","name":"jDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR","type":"CalCoreCharjDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER","name":"jDIRECTIONALITY_EUROPEAN_NUMBER","type":"CalCoreCharjDIRECTIONALITY_EUROPEAN_NUMBER","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_EUROPEAN_NUMBER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC","name":"jDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC","type":"CalCoreCharjDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT","name":"jDIRECTIONALITY_RIGHT_TO_LEFT","type":"CalCoreCharjDIRECTIONALITY_RIGHT_TO_LEFT","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_RIGHT_TO_LEFT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT","name":"jDIRECTIONALITY_LEFT_TO_RIGHT","type":"CalCoreCharjDIRECTIONALITY_LEFT_TO_RIGHT","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_LEFT_TO_RIGHT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jDIRECTIONALITY_UNDEFINED","name":"jDIRECTIONALITY_UNDEFINED","type":"CalCoreCharjDIRECTIONALITY_UNDEFINED","ui":"<b>Cal.Core.Char.jDIRECTIONALITY_UNDEFINED<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jType","name":"jType","type":"CalCoreCharjType","ui":"<b>Cal.Core.Char.jType<\/b><br\/>[CALDoc] Returns: an Int value that can be translated to a Type value by <code>intToType<\/code>","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_FINAL_QUOTE_PUNCTUATION","name":"jTYPE_FINAL_QUOTE_PUNCTUATION","type":"CalCoreCharjTYPE_FINAL_QUOTE_PUNCTUATION","ui":"<b>Cal.Core.Char.jTYPE_FINAL_QUOTE_PUNCTUATION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_INITIAL_QUOTE_PUNCTUATION","name":"jTYPE_INITIAL_QUOTE_PUNCTUATION","type":"CalCoreCharjTYPE_INITIAL_QUOTE_PUNCTUATION","ui":"<b>Cal.Core.Char.jTYPE_INITIAL_QUOTE_PUNCTUATION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_OTHER_SYMBOL","name":"jTYPE_OTHER_SYMBOL","type":"CalCoreCharjTYPE_OTHER_SYMBOL","ui":"<b>Cal.Core.Char.jTYPE_OTHER_SYMBOL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_MODIFIER_SYMBOL","name":"jTYPE_MODIFIER_SYMBOL","type":"CalCoreCharjTYPE_MODIFIER_SYMBOL","ui":"<b>Cal.Core.Char.jTYPE_MODIFIER_SYMBOL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_CURRENCY_SYMBOL","name":"jTYPE_CURRENCY_SYMBOL","type":"CalCoreCharjTYPE_CURRENCY_SYMBOL","ui":"<b>Cal.Core.Char.jTYPE_CURRENCY_SYMBOL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_MATH_SYMBOL","name":"jTYPE_MATH_SYMBOL","type":"CalCoreCharjTYPE_MATH_SYMBOL","ui":"<b>Cal.Core.Char.jTYPE_MATH_SYMBOL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_OTHER_PUNCTUATION","name":"jTYPE_OTHER_PUNCTUATION","type":"CalCoreCharjTYPE_OTHER_PUNCTUATION","ui":"<b>Cal.Core.Char.jTYPE_OTHER_PUNCTUATION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_CONNECTOR_PUNCTUATION","name":"jTYPE_CONNECTOR_PUNCTUATION","type":"CalCoreCharjTYPE_CONNECTOR_PUNCTUATION","ui":"<b>Cal.Core.Char.jTYPE_CONNECTOR_PUNCTUATION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_END_PUNCTUATION","name":"jTYPE_END_PUNCTUATION","type":"CalCoreCharjTYPE_END_PUNCTUATION","ui":"<b>Cal.Core.Char.jTYPE_END_PUNCTUATION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_START_PUNCTUATION","name":"jTYPE_START_PUNCTUATION","type":"CalCoreCharjTYPE_START_PUNCTUATION","ui":"<b>Cal.Core.Char.jTYPE_START_PUNCTUATION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_DASH_PUNCTUATION","name":"jTYPE_DASH_PUNCTUATION","type":"CalCoreCharjTYPE_DASH_PUNCTUATION","ui":"<b>Cal.Core.Char.jTYPE_DASH_PUNCTUATION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_SURROGATE","name":"jTYPE_SURROGATE","type":"CalCoreCharjTYPE_SURROGATE","ui":"<b>Cal.Core.Char.jTYPE_SURROGATE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_PRIVATE_USE","name":"jTYPE_PRIVATE_USE","type":"CalCoreCharjTYPE_PRIVATE_USE","ui":"<b>Cal.Core.Char.jTYPE_PRIVATE_USE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_FORMAT","name":"jTYPE_FORMAT","type":"CalCoreCharjTYPE_FORMAT","ui":"<b>Cal.Core.Char.jTYPE_FORMAT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_CONTROL","name":"jTYPE_CONTROL","type":"CalCoreCharjTYPE_CONTROL","ui":"<b>Cal.Core.Char.jTYPE_CONTROL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_PARAGRAPH_SEPARATOR","name":"jTYPE_PARAGRAPH_SEPARATOR","type":"CalCoreCharjTYPE_PARAGRAPH_SEPARATOR","ui":"<b>Cal.Core.Char.jTYPE_PARAGRAPH_SEPARATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_LINE_SEPARATOR","name":"jTYPE_LINE_SEPARATOR","type":"CalCoreCharjTYPE_LINE_SEPARATOR","ui":"<b>Cal.Core.Char.jTYPE_LINE_SEPARATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_SPACE_SEPARATOR","name":"jTYPE_SPACE_SEPARATOR","type":"CalCoreCharjTYPE_SPACE_SEPARATOR","ui":"<b>Cal.Core.Char.jTYPE_SPACE_SEPARATOR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_OTHER_NUMBER","name":"jTYPE_OTHER_NUMBER","type":"CalCoreCharjTYPE_OTHER_NUMBER","ui":"<b>Cal.Core.Char.jTYPE_OTHER_NUMBER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_LETTER_NUMBER","name":"jTYPE_LETTER_NUMBER","type":"CalCoreCharjTYPE_LETTER_NUMBER","ui":"<b>Cal.Core.Char.jTYPE_LETTER_NUMBER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_DECIMAL_DIGIT_NUMBER","name":"jTYPE_DECIMAL_DIGIT_NUMBER","type":"CalCoreCharjTYPE_DECIMAL_DIGIT_NUMBER","ui":"<b>Cal.Core.Char.jTYPE_DECIMAL_DIGIT_NUMBER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_COMBINING_SPACING_MARK","name":"jTYPE_COMBINING_SPACING_MARK","type":"CalCoreCharjTYPE_COMBINING_SPACING_MARK","ui":"<b>Cal.Core.Char.jTYPE_COMBINING_SPACING_MARK<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_ENCLOSING_MARK","name":"jTYPE_ENCLOSING_MARK","type":"CalCoreCharjTYPE_ENCLOSING_MARK","ui":"<b>Cal.Core.Char.jTYPE_ENCLOSING_MARK<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_NON_SPACING_MARK","name":"jTYPE_NON_SPACING_MARK","type":"CalCoreCharjTYPE_NON_SPACING_MARK","ui":"<b>Cal.Core.Char.jTYPE_NON_SPACING_MARK<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_OTHER_LETTER","name":"jTYPE_OTHER_LETTER","type":"CalCoreCharjTYPE_OTHER_LETTER","ui":"<b>Cal.Core.Char.jTYPE_OTHER_LETTER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_MODIFIER_LETTER","name":"jTYPE_MODIFIER_LETTER","type":"CalCoreCharjTYPE_MODIFIER_LETTER","ui":"<b>Cal.Core.Char.jTYPE_MODIFIER_LETTER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_TITLECASE_LETTER","name":"jTYPE_TITLECASE_LETTER","type":"CalCoreCharjTYPE_TITLECASE_LETTER","ui":"<b>Cal.Core.Char.jTYPE_TITLECASE_LETTER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_LOWERCASE_LETTER","name":"jTYPE_LOWERCASE_LETTER","type":"CalCoreCharjTYPE_LOWERCASE_LETTER","ui":"<b>Cal.Core.Char.jTYPE_LOWERCASE_LETTER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_UPPERCASE_LETTER","name":"jTYPE_UPPERCASE_LETTER","type":"CalCoreCharjTYPE_UPPERCASE_LETTER","ui":"<b>Cal.Core.Char.jTYPE_UPPERCASE_LETTER<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.jTYPE_UNASSIGNED","name":"jTYPE_UNASSIGNED","type":"CalCoreCharjTYPE_UNASSIGNED","ui":"<b>Cal.Core.Char.jTYPE_UNASSIGNED<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.toLowerCase","name":"toLowerCase","type":"CalCoreChartoLowerCase","ui":"<b>Cal.Core.Char.toLowerCase<\/b><br\/>[CALDoc] Converts the character argument to lowercase using case mapping information\nfrom the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.toUpperCase","name":"toUpperCase","type":"CalCoreChartoUpperCase","ui":"<b>Cal.Core.Char.toUpperCase<\/b><br\/>[CALDoc] Converts the character argument to uppercase using case mapping information\nfrom the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.isLetterOrDigit","name":"isLetterOrDigit","type":"CalCoreCharisLetterOrDigit","ui":"<b>Cal.Core.Char.isLetterOrDigit<\/b><br\/>[CALDoc] Determines if the specified character is a letter or digit according to the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.isDigit","name":"isDigit","type":"CalCoreCharisDigit","ui":"<b>Cal.Core.Char.isDigit<\/b><br\/>[CALDoc] Determines if the specified character is a digit according to the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.isLetter","name":"isLetter","type":"CalCoreCharisLetter","ui":"<b>Cal.Core.Char.isLetter<\/b><br\/>[CALDoc] Determines if the specified character is a letter according to the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.isLowerCase","name":"isLowerCase","type":"CalCoreCharisLowerCase","ui":"<b>Cal.Core.Char.isLowerCase<\/b><br\/>[CALDoc] Determines if the specified character is a lowercase character according to the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.isUpperCase","name":"isUpperCase","type":"CalCoreCharisUpperCase","ui":"<b>Cal.Core.Char.isUpperCase<\/b><br\/>[CALDoc] Determines if the specified character is an uppercase character according to the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.isWhitespace","name":"isWhitespace","type":"CalCoreCharisWhitespace","ui":"<b>Cal.Core.Char.isWhitespace<\/b><br\/>[CALDoc] Determines if the specified character is white space according to Java. ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.isSpaceChar","name":"isSpaceChar","type":"CalCoreCharisSpaceChar","ui":"<b>Cal.Core.Char.isSpaceChar<\/b><br\/>[CALDoc] Determines if the specified character is a space character according to the Unicode Standard.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.fromInt","name":"fromInt","type":"CalCoreCharfromInt","ui":"<b>Cal.Core.Char.fromInt<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> value to a <code>Char<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.toInt","name":"toInt","type":"CalCoreChartoInt","ui":"<b>Cal.Core.Char.toInt<\/b><br\/>[CALDoc] Converts a <code>Char<\/code> value to an <code>Int<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_UNASSIGNED","name":"TYPE_UNASSIGNED","type":"CalCoreCharTYPE_UNASSIGNED","ui":"<b>Cal.Core.Char.TYPE_UNASSIGNED<\/b><br\/>[CALDoc] General category \"Cn\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_UPPERCASE_LETTER","name":"TYPE_UPPERCASE_LETTER","type":"CalCoreCharTYPE_UPPERCASE_LETTER","ui":"<b>Cal.Core.Char.TYPE_UPPERCASE_LETTER<\/b><br\/>[CALDoc] General category \"Lu\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_LOWERCASE_LETTER","name":"TYPE_LOWERCASE_LETTER","type":"CalCoreCharTYPE_LOWERCASE_LETTER","ui":"<b>Cal.Core.Char.TYPE_LOWERCASE_LETTER<\/b><br\/>[CALDoc] General category \"Ll\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_TITLECASE_LETTER","name":"TYPE_TITLECASE_LETTER","type":"CalCoreCharTYPE_TITLECASE_LETTER","ui":"<b>Cal.Core.Char.TYPE_TITLECASE_LETTER<\/b><br\/>[CALDoc] General category \"Lt\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_MODIFIER_LETTER","name":"TYPE_MODIFIER_LETTER","type":"CalCoreCharTYPE_MODIFIER_LETTER","ui":"<b>Cal.Core.Char.TYPE_MODIFIER_LETTER<\/b><br\/>[CALDoc] General category \"Lm\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_OTHER_LETTER","name":"TYPE_OTHER_LETTER","type":"CalCoreCharTYPE_OTHER_LETTER","ui":"<b>Cal.Core.Char.TYPE_OTHER_LETTER<\/b><br\/>[CALDoc] General category \"Lo\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_NON_SPACING_MARK","name":"TYPE_NON_SPACING_MARK","type":"CalCoreCharTYPE_NON_SPACING_MARK","ui":"<b>Cal.Core.Char.TYPE_NON_SPACING_MARK<\/b><br\/>[CALDoc] General category \"Mn\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_ENCLOSING_MARK","name":"TYPE_ENCLOSING_MARK","type":"CalCoreCharTYPE_ENCLOSING_MARK","ui":"<b>Cal.Core.Char.TYPE_ENCLOSING_MARK<\/b><br\/>[CALDoc] General category \"Me\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_COMBINING_SPACING_MARK","name":"TYPE_COMBINING_SPACING_MARK","type":"CalCoreCharTYPE_COMBINING_SPACING_MARK","ui":"<b>Cal.Core.Char.TYPE_COMBINING_SPACING_MARK<\/b><br\/>[CALDoc] General category \"Mc\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_DECIMAL_DIGIT_NUMBER","name":"TYPE_DECIMAL_DIGIT_NUMBER","type":"CalCoreCharTYPE_DECIMAL_DIGIT_NUMBER","ui":"<b>Cal.Core.Char.TYPE_DECIMAL_DIGIT_NUMBER<\/b><br\/>[CALDoc] General category \"Nd\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_LETTER_NUMBER","name":"TYPE_LETTER_NUMBER","type":"CalCoreCharTYPE_LETTER_NUMBER","ui":"<b>Cal.Core.Char.TYPE_LETTER_NUMBER<\/b><br\/>[CALDoc] General category \"Nl\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_OTHER_NUMBER","name":"TYPE_OTHER_NUMBER","type":"CalCoreCharTYPE_OTHER_NUMBER","ui":"<b>Cal.Core.Char.TYPE_OTHER_NUMBER<\/b><br\/>[CALDoc] General category \"No\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_SPACE_SEPARATOR","name":"TYPE_SPACE_SEPARATOR","type":"CalCoreCharTYPE_SPACE_SEPARATOR","ui":"<b>Cal.Core.Char.TYPE_SPACE_SEPARATOR<\/b><br\/>[CALDoc] General category \"Zs\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_LINE_SEPARATOR","name":"TYPE_LINE_SEPARATOR","type":"CalCoreCharTYPE_LINE_SEPARATOR","ui":"<b>Cal.Core.Char.TYPE_LINE_SEPARATOR<\/b><br\/>[CALDoc] General category \"Zl\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_PARAGRAPH_SEPARATOR","name":"TYPE_PARAGRAPH_SEPARATOR","type":"CalCoreCharTYPE_PARAGRAPH_SEPARATOR","ui":"<b>Cal.Core.Char.TYPE_PARAGRAPH_SEPARATOR<\/b><br\/>[CALDoc] General category \"Zp\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_CONTROL","name":"TYPE_CONTROL","type":"CalCoreCharTYPE_CONTROL","ui":"<b>Cal.Core.Char.TYPE_CONTROL<\/b><br\/>[CALDoc] General category \"Cc\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_FORMAT","name":"TYPE_FORMAT","type":"CalCoreCharTYPE_FORMAT","ui":"<b>Cal.Core.Char.TYPE_FORMAT<\/b><br\/>[CALDoc] General category \"Cf\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_PRIVATE_USE","name":"TYPE_PRIVATE_USE","type":"CalCoreCharTYPE_PRIVATE_USE","ui":"<b>Cal.Core.Char.TYPE_PRIVATE_USE<\/b><br\/>[CALDoc] General category \"Co\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_SURROGATE","name":"TYPE_SURROGATE","type":"CalCoreCharTYPE_SURROGATE","ui":"<b>Cal.Core.Char.TYPE_SURROGATE<\/b><br\/>[CALDoc] General category \"Cs\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_DASH_PUNCTUATION","name":"TYPE_DASH_PUNCTUATION","type":"CalCoreCharTYPE_DASH_PUNCTUATION","ui":"<b>Cal.Core.Char.TYPE_DASH_PUNCTUATION<\/b><br\/>[CALDoc] General category \"Pd\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_START_PUNCTUATION","name":"TYPE_START_PUNCTUATION","type":"CalCoreCharTYPE_START_PUNCTUATION","ui":"<b>Cal.Core.Char.TYPE_START_PUNCTUATION<\/b><br\/>[CALDoc] General category \"Ps\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_END_PUNCTUATION","name":"TYPE_END_PUNCTUATION","type":"CalCoreCharTYPE_END_PUNCTUATION","ui":"<b>Cal.Core.Char.TYPE_END_PUNCTUATION<\/b><br\/>[CALDoc] General category \"Pe\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_CONNECTOR_PUNCTUATION","name":"TYPE_CONNECTOR_PUNCTUATION","type":"CalCoreCharTYPE_CONNECTOR_PUNCTUATION","ui":"<b>Cal.Core.Char.TYPE_CONNECTOR_PUNCTUATION<\/b><br\/>[CALDoc] General category \"Pc\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_OTHER_PUNCTUATION","name":"TYPE_OTHER_PUNCTUATION","type":"CalCoreCharTYPE_OTHER_PUNCTUATION","ui":"<b>Cal.Core.Char.TYPE_OTHER_PUNCTUATION<\/b><br\/>[CALDoc] General category \"Po\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_MATH_SYMBOL","name":"TYPE_MATH_SYMBOL","type":"CalCoreCharTYPE_MATH_SYMBOL","ui":"<b>Cal.Core.Char.TYPE_MATH_SYMBOL<\/b><br\/>[CALDoc] General category \"Sm\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_CURRENCY_SYMBOL","name":"TYPE_CURRENCY_SYMBOL","type":"CalCoreCharTYPE_CURRENCY_SYMBOL","ui":"<b>Cal.Core.Char.TYPE_CURRENCY_SYMBOL<\/b><br\/>[CALDoc] General category \"Sc\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_MODIFIER_SYMBOL","name":"TYPE_MODIFIER_SYMBOL","type":"CalCoreCharTYPE_MODIFIER_SYMBOL","ui":"<b>Cal.Core.Char.TYPE_MODIFIER_SYMBOL<\/b><br\/>[CALDoc] General category \"Sk\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_OTHER_SYMBOL","name":"TYPE_OTHER_SYMBOL","type":"CalCoreCharTYPE_OTHER_SYMBOL","ui":"<b>Cal.Core.Char.TYPE_OTHER_SYMBOL<\/b><br\/>[CALDoc] General category \"So\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_INITIAL_QUOTE_PUNCTUATION","name":"TYPE_INITIAL_QUOTE_PUNCTUATION","type":"CalCoreCharTYPE_INITIAL_QUOTE_PUNCTUATION","ui":"<b>Cal.Core.Char.TYPE_INITIAL_QUOTE_PUNCTUATION<\/b><br\/>[CALDoc] General category \"Pi\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.TYPE_FINAL_QUOTE_PUNCTUATION","name":"TYPE_FINAL_QUOTE_PUNCTUATION","type":"CalCoreCharTYPE_FINAL_QUOTE_PUNCTUATION","ui":"<b>Cal.Core.Char.TYPE_FINAL_QUOTE_PUNCTUATION<\/b><br\/>[CALDoc] General category \"Pf\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_UNDEFINED","name":"DIRECTIONALITY_UNDEFINED","type":"CalCoreCharDIRECTIONALITY_UNDEFINED","ui":"<b>Cal.Core.Char.DIRECTIONALITY_UNDEFINED<\/b><br\/>[CALDoc] Undefined bidirectional character type.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT","name":"DIRECTIONALITY_LEFT_TO_RIGHT","type":"CalCoreCharDIRECTIONALITY_LEFT_TO_RIGHT","ui":"<b>Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT<\/b><br\/>[CALDoc] Strong bidirectional character type \"L\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT","name":"DIRECTIONALITY_RIGHT_TO_LEFT","type":"CalCoreCharDIRECTIONALITY_RIGHT_TO_LEFT","ui":"<b>Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT<\/b><br\/>[CALDoc] Strong bidirectional character type \"R\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC","name":"DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC","type":"CalCoreCharDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC","ui":"<b>Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC<\/b><br\/>[CALDoc] Strong bidirectional character type \"AL\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER","name":"DIRECTIONALITY_EUROPEAN_NUMBER","type":"CalCoreCharDIRECTIONALITY_EUROPEAN_NUMBER","ui":"<b>Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER<\/b><br\/>[CALDoc] Weak bidirectional character type \"EN\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR","name":"DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR","type":"CalCoreCharDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR","ui":"<b>Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR<\/b><br\/>[CALDoc] Weak bidirectional character type \"ES\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR","name":"DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR","type":"CalCoreCharDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR","ui":"<b>Cal.Core.Char.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR<\/b><br\/>[CALDoc] Weak bidirectional character type \"ET\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_ARABIC_NUMBER","name":"DIRECTIONALITY_ARABIC_NUMBER","type":"CalCoreCharDIRECTIONALITY_ARABIC_NUMBER","ui":"<b>Cal.Core.Char.DIRECTIONALITY_ARABIC_NUMBER<\/b><br\/>[CALDoc] Weak bidirectional character type \"AN\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR","name":"DIRECTIONALITY_COMMON_NUMBER_SEPARATOR","type":"CalCoreCharDIRECTIONALITY_COMMON_NUMBER_SEPARATOR","ui":"<b>Cal.Core.Char.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR<\/b><br\/>[CALDoc] Weak bidirectional character type \"CS\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_NONSPACING_MARK","name":"DIRECTIONALITY_NONSPACING_MARK","type":"CalCoreCharDIRECTIONALITY_NONSPACING_MARK","ui":"<b>Cal.Core.Char.DIRECTIONALITY_NONSPACING_MARK<\/b><br\/>[CALDoc] Weak bidirectional character type \"NSM\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_BOUNDARY_NEUTRAL","name":"DIRECTIONALITY_BOUNDARY_NEUTRAL","type":"CalCoreCharDIRECTIONALITY_BOUNDARY_NEUTRAL","ui":"<b>Cal.Core.Char.DIRECTIONALITY_BOUNDARY_NEUTRAL<\/b><br\/>[CALDoc] Weak bidirectional character type \"BN\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_PARAGRAPH_SEPARATOR","name":"DIRECTIONALITY_PARAGRAPH_SEPARATOR","type":"CalCoreCharDIRECTIONALITY_PARAGRAPH_SEPARATOR","ui":"<b>Cal.Core.Char.DIRECTIONALITY_PARAGRAPH_SEPARATOR<\/b><br\/>[CALDoc] Neutral bidirectional character type \"B\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_SEGMENT_SEPARATOR","name":"DIRECTIONALITY_SEGMENT_SEPARATOR","type":"CalCoreCharDIRECTIONALITY_SEGMENT_SEPARATOR","ui":"<b>Cal.Core.Char.DIRECTIONALITY_SEGMENT_SEPARATOR<\/b><br\/>[CALDoc] Neutral bidirectional character type \"S\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_WHITESPACE","name":"DIRECTIONALITY_WHITESPACE","type":"CalCoreCharDIRECTIONALITY_WHITESPACE","ui":"<b>Cal.Core.Char.DIRECTIONALITY_WHITESPACE<\/b><br\/>[CALDoc] Neutral bidirectional character type \"WS\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_OTHER_NEUTRALS","name":"DIRECTIONALITY_OTHER_NEUTRALS","type":"CalCoreCharDIRECTIONALITY_OTHER_NEUTRALS","ui":"<b>Cal.Core.Char.DIRECTIONALITY_OTHER_NEUTRALS<\/b><br\/>[CALDoc] Neutral bidirectional character type \"ON\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING","name":"DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING","type":"CalCoreCharDIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING","ui":"<b>Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING<\/b><br\/>[CALDoc] Strong bidirectional character type \"LRE\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE","name":"DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE","type":"CalCoreCharDIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE","ui":"<b>Cal.Core.Char.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE<\/b><br\/>[CALDoc] Strong bidirectional character type \"LRO\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING","name":"DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING","type":"CalCoreCharDIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING","ui":"<b>Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING<\/b><br\/>[CALDoc] Strong bidirectional character type \"RLE\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE","name":"DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE","type":"CalCoreCharDIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE","ui":"<b>Cal.Core.Char.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE<\/b><br\/>[CALDoc] Strong bidirectional character type \"RLO\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Char.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT","name":"DIRECTIONALITY_POP_DIRECTIONAL_FORMAT","type":"CalCoreCharDIRECTIONALITY_POP_DIRECTIONAL_FORMAT","ui":"<b>Cal.Core.Char.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT<\/b><br\/>[CALDoc] Weak bidirectional character type \"PDF\" in the Unicode specification.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Char"]},{"description":"Cal.Core.Debug.showInteger","name":"showInteger","type":"CalCoreDebugshowInteger","ui":"<b>Cal.Core.Debug.showInteger<\/b><br\/>[CALDoc] handles the case where the Integer object is null","terminals":[{"name":"integerValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.outputMachineTypeToJObject","name":"outputMachineTypeToJObject","type":"CalCoreDebugoutputMachineTypeToJObject","ui":"<b>Cal.Core.Debug.outputMachineTypeToJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"machineType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.traceTransformationDifferences","name":"traceTransformationDifferences","type":"CalCoreDebugtraceTransformationDifferences","ui":"<b>Cal.Core.Debug.traceTransformationDifferences<\/b><br\/>[CALDoc] Modifies the specified transformation function to trace the input value and the result value when evaluated.\n","terminals":[{"name":"message","input":"text"},{"name":"transformFn","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showMaybe","name":"showMaybe","type":"CalCoreDebugshowMaybe","ui":"<b>Cal.Core.Debug.showMaybe<\/b><br\/>[CALDoc] ","terminals":[{"name":"maybe","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.internalValueStats","name":"internalValueStats","type":"CalCoreDebuginternalValueStats","ui":"<b>Cal.Core.Debug.internalValueStats<\/b><br\/>[CALDoc] Calculates various statistics concerning the internal machine representation of the argument value. ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showList","name":"showList","type":"CalCoreDebugshowList","ui":"<b>Cal.Core.Debug.showList<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showBoolean","name":"showBoolean","type":"CalCoreDebugshowBoolean","ui":"<b>Cal.Core.Debug.showBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.getTraceEnabledFunctions","name":"getTraceEnabledFunctions","type":"CalCoreDebuggetTraceEnabledFunctions","ui":"<b>Cal.Core.Debug.getTraceEnabledFunctions<\/b><br\/>[CALDoc] Returns a list of the function names for which tracing is enabled. \n","terminals":[{"name":"ignored","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showJMap","name":"showJMap","type":"CalCoreDebugshowJMap","ui":"<b>Cal.Core.Debug.showJMap<\/b><br\/>[CALDoc] handles the case where the JMap object is null","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showDefault","name":"showDefault","type":"CalCoreDebugshowDefault","ui":"<b>Cal.Core.Debug.showDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.machineType","name":"machineType","type":"CalCoreDebugmachineType","ui":"<b>Cal.Core.Debug.machineType<\/b><br\/>[CALDoc] The currently executing machine type. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showOrdering","name":"showOrdering","type":"CalCoreDebugshowOrdering","ui":"<b>Cal.Core.Debug.showOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.setTraceShowsFunctionArgs","name":"setTraceShowsFunctionArgs","type":"CalCoreDebugsetTraceShowsFunctionArgs","ui":"<b>Cal.Core.Debug.setTraceShowsFunctionArgs<\/b><br\/>[CALDoc] Enables function tracing to also display the values of the function arguments as part of the trace.\n","terminals":[{"name":"traceShowsFunctionArgs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.setTraceShowsThreadName","name":"setTraceShowsThreadName","type":"CalCoreDebugsetTraceShowsThreadName","ui":"<b>Cal.Core.Debug.setTraceShowsThreadName<\/b><br\/>[CALDoc] Enables function tracing to also display the name of the thread that is executing the particular function call \nas part of the trace.","terminals":[{"name":"traceShowsThreadName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showInternal","name":"showInternal","type":"CalCoreDebugshowInternal","ui":"<b>Cal.Core.Debug.showInternal<\/b><br\/>[CALDoc] Displays the internal representation of a value. ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.inputMachineTypeFromJObject","name":"inputMachineTypeFromJObject","type":"CalCoreDebuginputMachineTypeFromJObject","ui":"<b>Cal.Core.Debug.inputMachineTypeFromJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMachineType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.inputMachineType","name":"inputMachineType","type":"CalCoreDebuginputMachineType","ui":"<b>Cal.Core.Debug.inputMachineType<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMachineType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.traceOnStdOut","name":"traceOnStdOut","type":"CalCoreDebugtraceOnStdOut","ui":"<b>Cal.Core.Debug.traceOnStdOut<\/b><br\/>[CALDoc] Prints its first argument to the standard output stream, and then returns its second argument.","terminals":[{"name":"message","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.traceShowable","name":"traceShowable","type":"CalCoreDebugtraceShowable","ui":"<b>Cal.Core.Debug.traceShowable<\/b><br\/>[CALDoc] Traces the specified showable value and returns its original value.","terminals":[{"name":"message","input":"text"},{"name":"val","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.traceShowsThreadName","name":"traceShowsThreadName","type":"CalCoreDebugtraceShowsThreadName","ui":"<b>Cal.Core.Debug.traceShowsThreadName<\/b><br\/>[CALDoc] Returns true if function tracing will also display the name of the thread that is executing the particular function\ncall as part of the trace.","terminals":[{"name":"ignored","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.sameEvalTimes","name":"sameEvalTimes","type":"CalCoreDebugsameEvalTimes","ui":"<b>Cal.Core.Debug.sameEvalTimes<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the evaluate times of the two expressions (<code>f1<\/code> and <code>f2<\/code>) are withing the \ngiven percent margin.  ","terminals":[{"name":"f2","input":"text"},{"name":"margin","input":"text"},{"name":"f1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.traceShowsFunctionArgs","name":"traceShowsFunctionArgs","type":"CalCoreDebugtraceShowsFunctionArgs","ui":"<b>Cal.Core.Debug.traceShowsFunctionArgs<\/b><br\/>[CALDoc] Returns true if function tracing will also display the values of the function arguments as part of the trace.\n","terminals":[{"name":"ignored","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showDecimal","name":"showDecimal","type":"CalCoreDebugshowDecimal","ui":"<b>Cal.Core.Debug.showDecimal<\/b><br\/>[CALDoc] handles the case where the Decimal object is null","terminals":[{"name":"decimalValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showJCollection","name":"showJCollection","type":"CalCoreDebugshowJCollection","ui":"<b>Cal.Core.Debug.showJCollection<\/b><br\/>[CALDoc] handles the case where the JCollection object is null","terminals":[{"name":"collection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showEither","name":"showEither","type":"CalCoreDebugshowEither","ui":"<b>Cal.Core.Debug.showEither<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showJList","name":"showJList","type":"CalCoreDebugshowJList","ui":"<b>Cal.Core.Debug.showJList<\/b><br\/>[CALDoc] handles the case where the JList object is null","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.sleep","name":"sleep","type":"CalCoreDebugsleep","ui":"<b>Cal.Core.Debug.sleep<\/b><br\/>[CALDoc] <code>sleep<\/code> for a specified number of milliseconds and then return.\n","terminals":[{"name":"millis","input":"text"},{"name":"valueToReturn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.isTracingEnabled","name":"isTracingEnabled","type":"CalCoreDebugisTracingEnabled","ui":"<b>Cal.Core.Debug.isTracingEnabled<\/b><br\/>[CALDoc] Returns true if tracing is currently enabled.","terminals":[{"name":"ignored","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showInternalGraph","name":"showInternalGraph","type":"CalCoreDebugshowInternalGraph","ui":"<b>Cal.Core.Debug.showInternalGraph<\/b><br\/>[CALDoc] Displays the internal representation of a value, including information about shared nodes and indirection nodes.\n","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.setTracingEnabled","name":"setTracingEnabled","type":"CalCoreDebugsetTracingEnabled","ui":"<b>Cal.Core.Debug.setTracingEnabled<\/b><br\/>[CALDoc] Enables tracing to occur for subsequent function calls.","terminals":[{"name":"tracingEnabled","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.traceListMemberAccess","name":"traceListMemberAccess","type":"CalCoreDebugtraceListMemberAccess","ui":"<b>Cal.Core.Debug.traceListMemberAccess<\/b><br\/>[CALDoc] Augments a list of values such that a trace message will be displayed when members at a specified interval are accessed.\n","terminals":[{"name":"interval","input":"text"},{"name":"lst","input":"text"},{"name":"message","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showUnit","name":"showUnit","type":"CalCoreDebugshowUnit","ui":"<b>Cal.Core.Debug.showUnit<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.sameEvalTimesTrace","name":"sameEvalTimesTrace","type":"CalCoreDebugsameEvalTimesTrace","ui":"<b>Cal.Core.Debug.sameEvalTimesTrace<\/b><br\/>[CALDoc] Performs the same as <code>sameEvalTimes<\/code> but traces the result of <code>compareEvalTimes<\/code>.","terminals":[{"name":"margin","input":"text"},{"name":"f1","input":"text"},{"name":"f2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.compareEvalTimes","name":"compareEvalTimes","type":"CalCoreDebugcompareEvalTimes","ui":"<b>Cal.Core.Debug.compareEvalTimes<\/b><br\/>[CALDoc] Evaluates the given expressions (<code>f1<\/code> and <code>f2<\/code>) to WHNF and returns a record containing\nthe time to evalute each expression and the difference expressed as an absolute and a percentage of the\nfirst time.","terminals":[{"name":"f1","input":"text"},{"name":"f2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.percentDif","name":"percentDif","type":"CalCoreDebugpercentDif","ui":"<b>Cal.Core.Debug.percentDif<\/b><br\/>[CALDoc] Calculates the difference between two values as a percentage of the first value\nand rounds the result to two decimal places.","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.evalTime","name":"evalTime","type":"CalCoreDebugevalTime","ui":"<b>Cal.Core.Debug.evalTime<\/b><br\/>[CALDoc] Evaluates the given expression <code>f<\/code> to WHNF and returns the time taken to evaluate it.","terminals":[{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.traceTransformation","name":"traceTransformation","type":"CalCoreDebugtraceTransformation","ui":"<b>Cal.Core.Debug.traceTransformation<\/b><br\/>[CALDoc] Modifies the specified transformation function to trace the input value and the result value when evaluated.","terminals":[{"name":"_INPUT","input":"text"},{"name":"transformFn","input":"text"},{"name":"message","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.trace","name":"trace","type":"CalCoreDebugtrace","ui":"<b>Cal.Core.Debug.trace<\/b><br\/>[CALDoc] Prints its first argument to the standard error stream, and then returns its second argument.","terminals":[{"name":"message","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.setTracingEnabledFor","name":"setTracingEnabledFor","type":"CalCoreDebugsetTracingEnabledFor","ui":"<b>Cal.Core.Debug.setTracingEnabledFor<\/b><br\/>[CALDoc] Enables\/disables tracing to occur for subsequent calls to the named function.\n","terminals":[{"name":"tracingEnabled","input":"text"},{"name":"functionName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_removeTracedFunction","name":"executionContext_removeTracedFunction","type":"CalCoreDebugexecutionContext_removeTracedFunction","ui":"<b>Cal.Core.Debug.executionContext_removeTracedFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"executionContext","input":"text"},{"name":"tracedFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_addTracedFunction","name":"executionContext_addTracedFunction","type":"CalCoreDebugexecutionContext_addTracedFunction","ui":"<b>Cal.Core.Debug.executionContext_addTracedFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"executionContext","input":"text"},{"name":"tracedFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_getTracedFunctions","name":"executionContext_getTracedFunctions","type":"CalCoreDebugexecutionContext_getTracedFunctions","ui":"<b>Cal.Core.Debug.executionContext_getTracedFunctions<\/b><br\/>[CALDoc] ","terminals":[{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_setTraceShowsFunctionArgs","name":"executionContext_setTraceShowsFunctionArgs","type":"CalCoreDebugexecutionContext_setTraceShowsFunctionArgs","ui":"<b>Cal.Core.Debug.executionContext_setTraceShowsFunctionArgs<\/b><br\/>[CALDoc] ","terminals":[{"name":"traceShowsFunctionArgs","input":"text"},{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_traceShowsFunctionArgs","name":"executionContext_traceShowsFunctionArgs","type":"CalCoreDebugexecutionContext_traceShowsFunctionArgs","ui":"<b>Cal.Core.Debug.executionContext_traceShowsFunctionArgs<\/b><br\/>[CALDoc] ","terminals":[{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_setTraceShowsThreadName","name":"executionContext_setTraceShowsThreadName","type":"CalCoreDebugexecutionContext_setTraceShowsThreadName","ui":"<b>Cal.Core.Debug.executionContext_setTraceShowsThreadName<\/b><br\/>[CALDoc] ","terminals":[{"name":"traceShowsThreadName","input":"text"},{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_traceShowsThreadName","name":"executionContext_traceShowsThreadName","type":"CalCoreDebugexecutionContext_traceShowsThreadName","ui":"<b>Cal.Core.Debug.executionContext_traceShowsThreadName<\/b><br\/>[CALDoc] ","terminals":[{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_setTracingEnabled","name":"executionContext_setTracingEnabled","type":"CalCoreDebugexecutionContext_setTracingEnabled","ui":"<b>Cal.Core.Debug.executionContext_setTracingEnabled<\/b><br\/>[CALDoc] ","terminals":[{"name":"tracingEnabled","input":"text"},{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.executionContext_isTracingEnabled","name":"executionContext_isTracingEnabled","type":"CalCoreDebugexecutionContext_isTracingEnabled","ui":"<b>Cal.Core.Debug.executionContext_isTracingEnabled<\/b><br\/>[CALDoc] ","terminals":[{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.debug_getMachineType","name":"debug_getMachineType","type":"CalCoreDebugdebug_getMachineType","ui":"<b>Cal.Core.Debug.debug_getMachineType<\/b><br\/>[CALDoc] ","terminals":[{"name":"calValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.jMachineType_G","name":"jMachineType_G","type":"CalCoreDebugjMachineType_G","ui":"<b>Cal.Core.Debug.jMachineType_G<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.jMachineType_Lecc","name":"jMachineType_Lecc","type":"CalCoreDebugjMachineType_Lecc","ui":"<b>Cal.Core.Debug.jMachineType_Lecc<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.thread_sleep","name":"thread_sleep","type":"CalCoreDebugthread_sleep","ui":"<b>Cal.Core.Debug.thread_sleep<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.getSystemTime","name":"getSystemTime","type":"CalCoreDebuggetSystemTime","ui":"<b>Cal.Core.Debug.getSystemTime<\/b><br\/>[CALDoc] Returns: retrieve the current system time in milliseconds.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.sharedNodeCount","name":"sharedNodeCount","type":"CalCoreDebugsharedNodeCount","ui":"<b>Cal.Core.Debug.sharedNodeCount<\/b><br\/>[CALDoc] Returns the number of shared nodes in the internal graph representing the value that created <code>InternalValueStats<\/code>.\n","terminals":[{"name":"internalValueStats","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.distinctIndirectionNodeCount","name":"distinctIndirectionNodeCount","type":"CalCoreDebugdistinctIndirectionNodeCount","ui":"<b>Cal.Core.Debug.distinctIndirectionNodeCount<\/b><br\/>[CALDoc] Returns the number of distinct indirection nodes in the internal graph representing the value that created <code>InternalValueStats<\/code>.\n","terminals":[{"name":"internalValueStats","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.distinctNodeCount","name":"distinctNodeCount","type":"CalCoreDebugdistinctNodeCount","ui":"<b>Cal.Core.Debug.distinctNodeCount<\/b><br\/>[CALDoc] Returns the number of distinct nodes in the internal graph representing the value that created <code>InternalValueStats<\/code>. \n","terminals":[{"name":"internalValueStats","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.internalValueStatsHelper","name":"internalValueStatsHelper","type":"CalCoreDebuginternalValueStatsHelper","ui":"<b>Cal.Core.Debug.internalValueStatsHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"calValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showInternalValueGraph","name":"showInternalValueGraph","type":"CalCoreDebugshowInternalValueGraph","ui":"<b>Cal.Core.Debug.showInternalValueGraph<\/b><br\/>[CALDoc] ","terminals":[{"name":"calValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showInternalValue","name":"showInternalValue","type":"CalCoreDebugshowInternalValue","ui":"<b>Cal.Core.Debug.showInternalValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"calValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showJObject","name":"showJObject","type":"CalCoreDebugshowJObject","ui":"<b>Cal.Core.Debug.showJObject<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with an object implementation type.\nnote: we want to handle the null object values here without terminating in an error\nand thus don't implement as java.lang.Object.toString().","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showString","name":"showString","type":"CalCoreDebugshowString","ui":"<b>Cal.Core.Debug.showString<\/b><br\/>[CALDoc] Returns: the String value, surrounded by double quotes if not null, and \"null\" otherwise","terminals":[{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showDouble","name":"showDouble","type":"CalCoreDebugshowDouble","ui":"<b>Cal.Core.Debug.showDouble<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type double.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showFloat","name":"showFloat","type":"CalCoreDebugshowFloat","ui":"<b>Cal.Core.Debug.showFloat<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type float.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showLong","name":"showLong","type":"CalCoreDebugshowLong","ui":"<b>Cal.Core.Debug.showLong<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type long.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showInt","name":"showInt","type":"CalCoreDebugshowInt","ui":"<b>Cal.Core.Debug.showInt<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type int.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showShort","name":"showShort","type":"CalCoreDebugshowShort","ui":"<b>Cal.Core.Debug.showShort<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type short.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showByte","name":"showByte","type":"CalCoreDebugshowByte","ui":"<b>Cal.Core.Debug.showByte<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type byte.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showForeignChar","name":"showForeignChar","type":"CalCoreDebugshowForeignChar","ui":"<b>Cal.Core.Debug.showForeignChar<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type char.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showChar","name":"showChar","type":"CalCoreDebugshowChar","ui":"<b>Cal.Core.Debug.showChar<\/b><br\/>[CALDoc] Returns: the Char value, surrounded by single quotes.","terminals":[{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showForeignBoolean","name":"showForeignBoolean","type":"CalCoreDebugshowForeignBoolean","ui":"<b>Cal.Core.Debug.showForeignBoolean<\/b><br\/>[CALDoc] Used for derived Show instances for foreign types with implementation type boolean.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.jPrintToStandardError","name":"jPrintToStandardError","type":"CalCoreDebugjPrintToStandardError","ui":"<b>Cal.Core.Debug.jPrintToStandardError<\/b><br\/>[CALDoc] ","terminals":[{"name":"message","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.jPrintToStandardOut","name":"jPrintToStandardOut","type":"CalCoreDebugjPrintToStandardOut","ui":"<b>Cal.Core.Debug.jPrintToStandardOut<\/b><br\/>[CALDoc] ","terminals":[{"name":"message","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.showRecord","name":"showRecord","type":"CalCoreDebugshowRecord","ui":"<b>Cal.Core.Debug.showRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.MachineType_Lecc","name":"MachineType_Lecc","type":"CalCoreDebugMachineType_Lecc","ui":"<b>Cal.Core.Debug.MachineType_Lecc<\/b><br\/>[CALDoc] The Lazily Evaluating CAL Compiler (formerly Luke's Experimental CAL Compiler) machine type.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.MachineType_G","name":"MachineType_G","type":"CalCoreDebugMachineType_G","ui":"<b>Cal.Core.Debug.MachineType_G<\/b><br\/>[CALDoc] The g machine type. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Core.Debug.show","name":"show","type":"CalCoreDebugshow","ui":"<b>Cal.Core.Debug.show<\/b><br\/>[CALDoc] Constructs a string representation of the argument, which is a value of the instance type.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Debug"]},{"description":"Cal.Utilities.Decimal.inputRoundingMode","name":"inputRoundingMode","type":"CalUtilitiesDecimalinputRoundingMode","ui":"<b>Cal.Utilities.Decimal.inputRoundingMode<\/b><br\/>[CALDoc] ","terminals":[{"name":"objectValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.outputRoundingMode","name":"outputRoundingMode","type":"CalUtilitiesDecimaloutputRoundingMode","ui":"<b>Cal.Utilities.Decimal.outputRoundingMode<\/b><br\/>[CALDoc] ","terminals":[{"name":"roundingMode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.testModule","name":"testModule","type":"CalUtilitiesDecimaltestModule","ui":"<b>Cal.Utilities.Decimal.testModule<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.setScaleWithRoundingExamples","name":"setScaleWithRoundingExamples","type":"CalUtilitiesDecimalsetScaleWithRoundingExamples","ui":"<b>Cal.Utilities.Decimal.setScaleWithRoundingExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.setScaleWithRounding","name":"setScaleWithRounding","type":"CalUtilitiesDecimalsetScaleWithRounding","ui":"<b>Cal.Utilities.Decimal.setScaleWithRounding<\/b><br\/>[CALDoc] Returns a new <code>Decimal<\/code> value with the specified scale.","terminals":[{"name":"newScale","input":"text"},{"name":"roundingMode","input":"text"},{"name":"decimalValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.scaleExamples","name":"scaleExamples","type":"CalUtilitiesDecimalscaleExamples","ui":"<b>Cal.Utilities.Decimal.scaleExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.divideWithScaleAndRoundingExamples","name":"divideWithScaleAndRoundingExamples","type":"CalUtilitiesDecimaldivideWithScaleAndRoundingExamples","ui":"<b>Cal.Utilities.Decimal.divideWithScaleAndRoundingExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.divideWithScaleAndRounding","name":"divideWithScaleAndRounding","type":"CalUtilitiesDecimaldivideWithScaleAndRounding","ui":"<b>Cal.Utilities.Decimal.divideWithScaleAndRounding<\/b><br\/>[CALDoc] A version of divide that allows the user to specify the scale of the result\nand the rounding mode to use if rounding is necessary.","terminals":[{"name":"roundingMode","input":"text"},{"name":"decimalValue1","input":"text"},{"name":"decimalValue2","input":"text"},{"name":"scale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.divideWithRoundingExamples","name":"divideWithRoundingExamples","type":"CalUtilitiesDecimaldivideWithRoundingExamples","ui":"<b>Cal.Utilities.Decimal.divideWithRoundingExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.roundingModeExamples","name":"roundingModeExamples","type":"CalUtilitiesDecimalroundingModeExamples","ui":"<b>Cal.Utilities.Decimal.roundingModeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.divideWithRounding","name":"divideWithRounding","type":"CalUtilitiesDecimaldivideWithRounding","ui":"<b>Cal.Utilities.Decimal.divideWithRounding<\/b><br\/>[CALDoc] A version of divide that allows the user to specify the rounding mode to\nuse if rounding is required.","terminals":[{"name":"decimalValue2","input":"text"},{"name":"roundingMode","input":"text"},{"name":"decimalValue1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.jDivideWithRounding","name":"jDivideWithRounding","type":"CalUtilitiesDecimaljDivideWithRounding","ui":"<b>Cal.Utilities.Decimal.jDivideWithRounding<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.jDivideWithScaleAndRounding","name":"jDivideWithScaleAndRounding","type":"CalUtilitiesDecimaljDivideWithScaleAndRounding","ui":"<b>Cal.Utilities.Decimal.jDivideWithScaleAndRounding<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.scale","name":"scale","type":"CalUtilitiesDecimalscale","ui":"<b>Cal.Utilities.Decimal.scale<\/b><br\/>[CALDoc] Returns: the scale (ie, number of digits after the decimal point) of the\nspecified decimal value.","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.fromDouble","name":"fromDouble","type":"CalUtilitiesDecimalfromDouble","ui":"<b>Cal.Utilities.Decimal.fromDouble<\/b><br\/>[CALDoc] Converts a <code>Double<\/code> value to the equivalent <code>Decimal<\/code> value.\n","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.toString","name":"toString","type":"CalUtilitiesDecimaltoString","ui":"<b>Cal.Utilities.Decimal.toString<\/b><br\/>[CALDoc] Converts a <code>Decimal<\/code> value to a string representation.","terminals":[{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.fromString","name":"fromString","type":"CalUtilitiesDecimalfromString","ui":"<b>Cal.Utilities.Decimal.fromString<\/b><br\/>[CALDoc] Parses a string (eg. <code>\"34.33\"<\/code>, <code>\"1.0e50000\"<\/code>) into a <code>Decimal<\/code>.\n","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.jSetScaleWithRounding","name":"jSetScaleWithRounding","type":"CalUtilitiesDecimaljSetScaleWithRounding","ui":"<b>Cal.Utilities.Decimal.jSetScaleWithRounding<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"decimal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_UP","name":"ROUND_UP","type":"CalUtilitiesDecimalROUND_UP","ui":"<b>Cal.Utilities.Decimal.ROUND_UP<\/b><br\/>[CALDoc] Always round up (away from zero)","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_DOWN","name":"ROUND_DOWN","type":"CalUtilitiesDecimalROUND_DOWN","ui":"<b>Cal.Utilities.Decimal.ROUND_DOWN<\/b><br\/>[CALDoc] Always round down (toward zero)","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_CEILING","name":"ROUND_CEILING","type":"CalUtilitiesDecimalROUND_CEILING","ui":"<b>Cal.Utilities.Decimal.ROUND_CEILING<\/b><br\/>[CALDoc] Round towards positive infinity","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_FLOOR","name":"ROUND_FLOOR","type":"CalUtilitiesDecimalROUND_FLOOR","ui":"<b>Cal.Utilities.Decimal.ROUND_FLOOR<\/b><br\/>[CALDoc] Round toward negative infinity","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_HALF_UP","name":"ROUND_HALF_UP","type":"CalUtilitiesDecimalROUND_HALF_UP","ui":"<b>Cal.Utilities.Decimal.ROUND_HALF_UP<\/b><br\/>[CALDoc] Round towards \"nearest neighbor\" unless both neighbors are equidistant, \nin which case round up.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_HALF_DOWN","name":"ROUND_HALF_DOWN","type":"CalUtilitiesDecimalROUND_HALF_DOWN","ui":"<b>Cal.Utilities.Decimal.ROUND_HALF_DOWN<\/b><br\/>[CALDoc] Round towards \"nearest neighbor\" unless both neighbors are equidistant, \nin which case round down.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_HALF_EVEN","name":"ROUND_HALF_EVEN","type":"CalUtilitiesDecimalROUND_HALF_EVEN","ui":"<b>Cal.Utilities.Decimal.ROUND_HALF_EVEN<\/b><br\/>[CALDoc] Round towards the \"nearest neighbor\" unless both neighbors are equidistant, \nin which case, round towards the even neighbor.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Utilities.Decimal.ROUND_UNNECESSARY","name":"ROUND_UNNECESSARY","type":"CalUtilitiesDecimalROUND_UNNECESSARY","ui":"<b>Cal.Utilities.Decimal.ROUND_UNNECESSARY<\/b><br\/>[CALDoc] Indicate that rounding is unnecessary.  ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Decimal"]},{"description":"Cal.Core.Dynamic.dynamicRecordHasField","name":"dynamicRecordHasField","type":"CalCoreDynamicdynamicRecordHasField","ui":"<b>Cal.Core.Dynamic.dynamicRecordHasField<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if <code>dynamicValue<\/code> is a dynamic record with the given field name and false otherwise.","terminals":[{"name":"fieldName","input":"text"},{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.showDynamic","name":"showDynamic","type":"CalCoreDynamicshowDynamic","ui":"<b>Cal.Core.Dynamic.showDynamic<\/b><br\/>[CALDoc] ","terminals":[{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicUnderlyingType","name":"dynamicUnderlyingType","type":"CalCoreDynamicdynamicUnderlyingType","ui":"<b>Cal.Core.Dynamic.dynamicUnderlyingType<\/b><br\/>[CALDoc] Returns the <code>TypeRep<\/code> value representing the type of the underlying value of a\n<code>Dynamic<\/code> value.","terminals":[{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.isEmptyDynamicRecord","name":"isEmptyDynamicRecord","type":"CalCoreDynamicisEmptyDynamicRecord","ui":"<b>Cal.Core.Dynamic.isEmptyDynamicRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"dynamicRecord","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.testModule","name":"testModule","type":"CalCoreDynamictestModule","ui":"<b>Cal.Core.Dynamic.testModule<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if the testing predicates in this module all run successfully.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.isOrdinalFieldNameExamples","name":"isOrdinalFieldNameExamples","type":"CalCoreDynamicisOrdinalFieldNameExamples","ui":"<b>Cal.Core.Dynamic.isOrdinalFieldNameExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertDynamicRecordDynamicFieldExamples","name":"insertDynamicRecordDynamicFieldExamples","type":"CalCoreDynamicinsertDynamicRecordDynamicFieldExamples","ui":"<b>Cal.Core.Dynamic.insertDynamicRecordDynamicFieldExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertDynamicRecordDynamicField","name":"insertDynamicRecordDynamicField","type":"CalCoreDynamicinsertDynamicRecordDynamicField","ui":"<b>Cal.Core.Dynamic.insertDynamicRecordDynamicField<\/b><br\/>[CALDoc] Takes a <code>Dynamic<\/code> value containing a record, a field name, and a dynamic value, and returns a\n<code>Dynamic<\/code> value containing a new record that extends the old record with a field of the\nspecified name having the specified value.  ","terminals":[{"name":"dynamicRecordValue","input":"text"},{"name":"dynamicFieldValue","input":"text"},{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fieldOrdinalExamples","name":"fieldOrdinalExamples","type":"CalCoreDynamicfieldOrdinalExamples","ui":"<b>Cal.Core.Dynamic.fieldOrdinalExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicRecordFieldValueExamples","name":"dynamicRecordFieldValueExamples","type":"CalCoreDynamicdynamicRecordFieldValueExamples","ui":"<b>Cal.Core.Dynamic.dynamicRecordFieldValueExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicApplyExamples","name":"dynamicApplyExamples","type":"CalCoreDynamicdynamicApplyExamples","ui":"<b>Cal.Core.Dynamic.dynamicApplyExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicApply","name":"dynamicApply","type":"CalCoreDynamicdynamicApply","ui":"<b>Cal.Core.Dynamic.dynamicApply<\/b><br\/>[CALDoc] Takes a function wrapped in a <code>Dynamic<\/code> value and attempts to apply it to an argument\nwrapped in a <code>Dynamic<\/code> value.","terminals":[{"name":"dynamicFunction","input":"text"},{"name":"arg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.appendDynamicRecordExamples","name":"appendDynamicRecordExamples","type":"CalCoreDynamicappendDynamicRecordExamples","ui":"<b>Cal.Core.Dynamic.appendDynamicRecordExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.appendRecordExamples","name":"appendRecordExamples","type":"CalCoreDynamicappendRecordExamples","ui":"<b>Cal.Core.Dynamic.appendRecordExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.appendRecord","name":"appendRecord","type":"CalCoreDynamicappendRecord","ui":"<b>Cal.Core.Dynamic.appendRecord<\/b><br\/>[CALDoc] Combine two records into a single record containing the fields of both.","terminals":[{"name":"record1","input":"text"},{"name":"record2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicAppExamples","name":"dynamicAppExamples","type":"CalCoreDynamicdynamicAppExamples","ui":"<b>Cal.Core.Dynamic.dynamicAppExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fromDynamicListExamples","name":"fromDynamicListExamples","type":"CalCoreDynamicfromDynamicListExamples","ui":"<b>Cal.Core.Dynamic.fromDynamicListExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fromDynamicWithDefault","name":"fromDynamicWithDefault","type":"CalCoreDynamicfromDynamicWithDefault","ui":"<b>Cal.Core.Dynamic.fromDynamicWithDefault<\/b><br\/>[CALDoc] One of the ways to extract a value from a <code>Dynamic<\/code> value.\n","terminals":[{"name":"defaultValue","input":"text"},{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fromDynamicList","name":"fromDynamicList","type":"CalCoreDynamicfromDynamicList","ui":"<b>Cal.Core.Dynamic.fromDynamicList<\/b><br\/>[CALDoc] If <code>dynamicValue<\/code> is actually a list, then it return <code>Just<\/code> (the list, with elements wrapped in a Dynamic value)\notherwise, the function returns <code>Nothing<\/code>.","terminals":[{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicApp","name":"dynamicApp","type":"CalCoreDynamicdynamicApp","ui":"<b>Cal.Core.Dynamic.dynamicApp<\/b><br\/>[CALDoc] Takes a function wrapped in a <code>Dynamic<\/code> value and applies it to an argument\nwrapped in a <code>Dynamic<\/code> value.  ","terminals":[{"name":"arg","input":"text"},{"name":"dynamicFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.concatDynamicRecord","name":"concatDynamicRecord","type":"CalCoreDynamicconcatDynamicRecord","ui":"<b>Cal.Core.Dynamic.concatDynamicRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"recordList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.emptyDynamicRecord","name":"emptyDynamicRecord","type":"CalCoreDynamicemptyDynamicRecord","ui":"<b>Cal.Core.Dynamic.emptyDynamicRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.appendDynamicRecord","name":"appendDynamicRecord","type":"CalCoreDynamicappendDynamicRecord","ui":"<b>Cal.Core.Dynamic.appendDynamicRecord<\/b><br\/>[CALDoc] Combine two records contained by <code>Dynamic<\/code>s into a single record containing the fields of both.\n","terminals":[{"name":"dynamicRecord1","input":"text"},{"name":"dynamicRecord2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicRecordFieldValuesExamples","name":"dynamicRecordFieldValuesExamples","type":"CalCoreDynamicdynamicRecordFieldValuesExamples","ui":"<b>Cal.Core.Dynamic.dynamicRecordFieldValuesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicRecordFieldValues","name":"dynamicRecordFieldValues","type":"CalCoreDynamicdynamicRecordFieldValues","ui":"<b>Cal.Core.Dynamic.dynamicRecordFieldValues<\/b><br\/>[CALDoc] If <code>dynamicValue<\/code> is actually a record, then return <code>Just<\/code> the list of field values of the record, wrapped in\n<code>Dynamic<\/code> values. ","terminals":[{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fieldValues","name":"fieldValues","type":"CalCoreDynamicfieldValues","ui":"<b>Cal.Core.Dynamic.fieldValues<\/b><br\/>[CALDoc] <code>fieldValues<\/code> returns the list of field values of a record, ordered by field-name order.\n","terminals":[{"name":"recordValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertDynamicRecordFieldExamples","name":"insertDynamicRecordFieldExamples","type":"CalCoreDynamicinsertDynamicRecordFieldExamples","ui":"<b>Cal.Core.Dynamic.insertDynamicRecordFieldExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicRecordFieldValue","name":"dynamicRecordFieldValue","type":"CalCoreDynamicdynamicRecordFieldValue","ui":"<b>Cal.Core.Dynamic.dynamicRecordFieldValue<\/b><br\/>[CALDoc] Accepts a <code>Dynamic<\/code> value that contains a record and the name of a field,\nand returns a <code>Dynamic<\/code> value that represents the value of the specified\nfield of the record.  ","terminals":[{"name":"dynamicRecord","input":"text"},{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.showExamples","name":"showExamples","type":"CalCoreDynamicshowExamples","ui":"<b>Cal.Core.Dynamic.showExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertDynamicRecordField","name":"insertDynamicRecordField","type":"CalCoreDynamicinsertDynamicRecordField","ui":"<b>Cal.Core.Dynamic.insertDynamicRecordField<\/b><br\/>[CALDoc] Takes a <code>Dynamic<\/code> value containing a record, a field name, and a value, and returns a\n<code>Dynamic<\/code> value containing a new record that extends the old record with a field of the\nspecified name having the specified value.  ","terminals":[{"name":"dynamicRecordValue","input":"text"},{"name":"fieldValue","input":"text"},{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertRecordFieldExamples","name":"insertRecordFieldExamples","type":"CalCoreDynamicinsertRecordFieldExamples","ui":"<b>Cal.Core.Dynamic.insertRecordFieldExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertRecordField","name":"insertRecordField","type":"CalCoreDynamicinsertRecordField","ui":"<b>Cal.Core.Dynamic.insertRecordField<\/b><br\/>[CALDoc] Takes a record, a field name, and a value, and returns a <code>Dynamic<\/code> value containing\na new record that extends the old record with a field of the specified name having\nthe specified value.","terminals":[{"name":"fieldName","input":"text"},{"name":"fieldValue","input":"text"},{"name":"recordValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertRecordFieldHelper","name":"insertRecordFieldHelper","type":"CalCoreDynamicinsertRecordFieldHelper","ui":"<b>Cal.Core.Dynamic.insertRecordFieldHelper<\/b><br\/>[CALDoc] Helper for <code>insertRecordField<\/code> and <code>insertDynamicRecordField<\/code>.  ","terminals":[{"name":"recordValue","input":"text"},{"name":"fieldType","input":"text"},{"name":"fieldName","input":"text"},{"name":"recordType","input":"text"},{"name":"fieldValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fieldOrdinal","name":"fieldOrdinal","type":"CalCoreDynamicfieldOrdinal","ui":"<b>Cal.Core.Dynamic.fieldOrdinal<\/b><br\/>[CALDoc] Converts an ordinal field name to a corresponding <code>Int<\/code> value.\n","terminals":[{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.appendRecordTypeRep","name":"appendRecordTypeRep","type":"CalCoreDynamicappendRecordTypeRep","ui":"<b>Cal.Core.Dynamic.appendRecordTypeRep<\/b><br\/>[CALDoc] Helper for <code>appendRecord<\/code> and <code>appendDynamicRecord<\/code>.  ","terminals":[{"name":"typeRep1","input":"text"},{"name":"typeRep2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicRecordFieldNamesExamples","name":"dynamicRecordFieldNamesExamples","type":"CalCoreDynamicdynamicRecordFieldNamesExamples","ui":"<b>Cal.Core.Dynamic.dynamicRecordFieldNamesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.toDynamic","name":"toDynamic","type":"CalCoreDynamictoDynamic","ui":"<b>Cal.Core.Dynamic.toDynamic<\/b><br\/>[CALDoc] Creates a <code>Dynamic<\/code> value.","terminals":[{"name":"v","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.dynamicRecordFieldNames","name":"dynamicRecordFieldNames","type":"CalCoreDynamicdynamicRecordFieldNames","ui":"<b>Cal.Core.Dynamic.dynamicRecordFieldNames<\/b><br\/>[CALDoc] If <code>dynamicValue<\/code> is actually a record, then return <code>Just<\/code> the list of field names of the record.\n","terminals":[{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.recordFieldValueExamples","name":"recordFieldValueExamples","type":"CalCoreDynamicrecordFieldValueExamples","ui":"<b>Cal.Core.Dynamic.recordFieldValueExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.recordFieldValue","name":"recordFieldValue","type":"CalCoreDynamicrecordFieldValue","ui":"<b>Cal.Core.Dynamic.recordFieldValue<\/b><br\/>[CALDoc] Given a record value and a field name, returns a <code>Dynamic<\/code> value representing the\nspecified field in the record.  ","terminals":[{"name":"recordValue","input":"text"},{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fromDynamic","name":"fromDynamic","type":"CalCoreDynamicfromDynamic","ui":"<b>Cal.Core.Dynamic.fromDynamic<\/b><br\/>[CALDoc] One of the ways to extract a value from a <code>Dynamic<\/code> value.\n","terminals":[{"name":"dynamicValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.isOrdinalFieldName","name":"isOrdinalFieldName","type":"CalCoreDynamicisOrdinalFieldName","ui":"<b>Cal.Core.Dynamic.isOrdinalFieldName<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if the provided string represents an ordinal field name, or <code>False<\/code> otherwise.","terminals":[{"name":"ordinalFieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.recordType_insertRecordTypeField","name":"recordType_insertRecordTypeField","type":"CalCoreDynamicrecordType_insertRecordTypeField","ui":"<b>Cal.Core.Dynamic.recordType_insertRecordTypeField<\/b><br\/>[CALDoc] Returns: A new <code>RecordType<\/code> containing all the fields of the <code>RecordType<\/code> argument, plus a new\nfield whose name and value are specified by the <code>String<\/code> and <code>JObject<\/code> arguments\nrespectively.\nIf the <code>RecordType<\/code> argument already contains the field specified by the string argument, the new\n<code>RecordType<\/code> will contain the value specified by the <code>JObject<\/code> argument rather than the value from\nthe <code>RecordType<\/code> argument.","terminals":[{"name":null,"input":"text"},{"name":"recordType","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.recordType_appendRecordType","name":"recordType_appendRecordType","type":"CalCoreDynamicrecordType_appendRecordType","ui":"<b>Cal.Core.Dynamic.recordType_appendRecordType<\/b><br\/>[CALDoc] Returns: A new <code>RecordType<\/code> containing the union of the fields of the two argument <code>RecordType<\/code>s.\nIf both <code>RecordType<\/code> arguments contain the same field, the first <code>RecordType<\/code> argument\nis given precedence.  (This is the same rule as for <code>appendRecord<\/code>)","terminals":[{"name":"recordType","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.recordFieldTypePrimitive","name":"recordFieldTypePrimitive","type":"CalCoreDynamicrecordFieldTypePrimitive","ui":"<b>Cal.Core.Dynamic.recordFieldTypePrimitive<\/b><br\/>[CALDoc] WARNING- this function must not be public.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.recordFieldValuePrimitive","name":"recordFieldValuePrimitive","type":"CalCoreDynamicrecordFieldValuePrimitive","ui":"<b>Cal.Core.Dynamic.recordFieldValuePrimitive<\/b><br\/>[CALDoc] WARNING- this function must not be public.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.recordFieldIndex","name":"recordFieldIndex","type":"CalCoreDynamicrecordFieldIndex","ui":"<b>Cal.Core.Dynamic.recordFieldIndex<\/b><br\/>[CALDoc] WARNING- this function must not be public.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.fieldValuesPrimitive","name":"fieldValuesPrimitive","type":"CalCoreDynamicfieldValuesPrimitive","ui":"<b>Cal.Core.Dynamic.fieldValuesPrimitive<\/b><br\/>[CALDoc] <code>fieldNamesPrimitive<\/code> takes a record, and returns a <code>JList<\/code> that is actually a \n<code>java.util.List<\/code> of <code>Prelude.CalValue<\/code> objects representing the field values of the record\nin field-name order.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.appendRecordPrimitive","name":"appendRecordPrimitive","type":"CalCoreDynamicappendRecordPrimitive","ui":"<b>Cal.Core.Dynamic.appendRecordPrimitive<\/b><br\/>[CALDoc] Primitive function for appending two records together, yielding a single\nrecord whose fields are a union of the field names of the two records.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertOrdinalRecordFieldPrimitive","name":"insertOrdinalRecordFieldPrimitive","type":"CalCoreDynamicinsertOrdinalRecordFieldPrimitive","ui":"<b>Cal.Core.Dynamic.insertOrdinalRecordFieldPrimitive<\/b><br\/>[CALDoc] Primitive function for adding an ordinally-named field to a record.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.insertTextualRecordFieldPrimitive","name":"insertTextualRecordFieldPrimitive","type":"CalCoreDynamicinsertTextualRecordFieldPrimitive","ui":"<b>Cal.Core.Dynamic.insertTextualRecordFieldPrimitive<\/b><br\/>[CALDoc] Primitive function for adding a textually-named field to a record.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Dynamic.Dynamic","name":"Dynamic","type":"CalCoreDynamicDynamic","ui":"<b>Cal.Core.Dynamic.Dynamic<\/b><br\/>[CALDoc] ","terminals":[{"name":"untypedValue","input":"text"},{"name":"type","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Dynamic"]},{"description":"Cal.Core.Exception.try","name":"try","type":"CalCoreExceptiontry","ui":"<b>Cal.Core.Exception.try<\/b><br\/>[CALDoc] Returns: <code>Right expr<\/code> if no exception was raised while evaluating <code>expr<\/code>, otherwise, <code>Left (the exception raised)<\/code>","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.catch","name":"catch","type":"CalCoreExceptioncatch","ui":"<b>Cal.Core.Exception.catch<\/b><br\/>[CALDoc] Core function for catching and handling exceptions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"expr","input":"text"},{"name":"handler","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.bracket","name":"bracket","type":"CalCoreExceptionbracket","ui":"<b>Cal.Core.Exception.bracket<\/b><br\/>[CALDoc] <code>bracket<\/code> is used to acquire a resource, do some work with it, and then release the resource even\nif an exception is raised while doing the work with the resource.","terminals":[{"name":"initializer","input":"text"},{"name":"exprFunction","input":"text"},{"name":"_INPUT","input":"text"},{"name":"finalizingFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.finally","name":"finally","type":"CalCoreExceptionfinally","ui":"<b>Cal.Core.Exception.finally<\/b><br\/>[CALDoc] <code>finally<\/code> evaluates the argument <code>expr<\/code> to weak-head normal form.\n","terminals":[{"name":"expr","input":"text"},{"name":"finalizer","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.throw","name":"throw","type":"CalCoreExceptionthrow","ui":"<b>Cal.Core.Exception.throw<\/b><br\/>[CALDoc] Raise a CAL user-defined exception i.e. one that has a specific CAL type that is a member of the <code>Exception<\/code>\ntype class. ","terminals":[{"name":"exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.toJThrowable","name":"toJThrowable","type":"CalCoreExceptiontoJThrowable","ui":"<b>Cal.Core.Exception.toJThrowable<\/b><br\/>[CALDoc] ","terminals":[{"name":"exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.fromJThrowable","name":"fromJThrowable","type":"CalCoreExceptionfromJThrowable","ui":"<b>Cal.Core.Exception.fromJThrowable<\/b><br\/>[CALDoc] ","terminals":[{"name":"throwable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.calException_getCALValue","name":"calException_getCALValue","type":"CalCoreExceptioncalException_getCALValue","ui":"<b>Cal.Core.Exception.calException_getCALValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.calException_make","name":"calException_make","type":"CalCoreExceptioncalException_make","ui":"<b>Cal.Core.Exception.calException_make<\/b><br\/>[CALDoc] ","terminals":[{"name":"calValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isCalException","name":"isCalException","type":"CalCoreExceptionisCalException","ui":"<b>Cal.Core.Exception.isCalException<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isJavaArithmeticException","name":"isJavaArithmeticException","type":"CalCoreExceptionisJavaArithmeticException","ui":"<b>Cal.Core.Exception.isJavaArithmeticException<\/b><br\/>[CALDoc] Returns: true if exception is actually of the java.lang.ArithmeticException subtype.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isJavaIllegalArgumentException","name":"isJavaIllegalArgumentException","type":"CalCoreExceptionisJavaIllegalArgumentException","ui":"<b>Cal.Core.Exception.isJavaIllegalArgumentException<\/b><br\/>[CALDoc] Returns: true if exception is actually of the java.lang.IllegalArgumentException subtype.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isJavaIllegalStateException","name":"isJavaIllegalStateException","type":"CalCoreExceptionisJavaIllegalStateException","ui":"<b>Cal.Core.Exception.isJavaIllegalStateException<\/b><br\/>[CALDoc] Returns: true if exception is actually of the java.lang.IllegalStateException subtype.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isJavaNullPointerException","name":"isJavaNullPointerException","type":"CalCoreExceptionisJavaNullPointerException","ui":"<b>Cal.Core.Exception.isJavaNullPointerException<\/b><br\/>[CALDoc] Returns: true if exception is actually of the java.lang.NullPointerException subtype.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isJavaRuntimeException","name":"isJavaRuntimeException","type":"CalCoreExceptionisJavaRuntimeException","ui":"<b>Cal.Core.Exception.isJavaRuntimeException<\/b><br\/>[CALDoc] Returns: true if exception is actually of the java.lang.RuntimeException subtype.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isJavaException","name":"isJavaException","type":"CalCoreExceptionisJavaException","ui":"<b>Cal.Core.Exception.isJavaException<\/b><br\/>[CALDoc] Returns: true if exception is actually of the java.lang.Exception subtype.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isJavaError","name":"isJavaError","type":"CalCoreExceptionisJavaError","ui":"<b>Cal.Core.Exception.isJavaError<\/b><br\/>[CALDoc] Returns: true if exception is actually of the java.lang.Error subtype.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isPatternMatchingFailure","name":"isPatternMatchingFailure","type":"CalCoreExceptionisPatternMatchingFailure","ui":"<b>Cal.Core.Exception.isPatternMatchingFailure<\/b><br\/>[CALDoc] Pattern matching failures arise via an unhandled case alternative e.g.\n<code>(case Just 'a' of Nothing -&gt; True;)<\/code> or a data constructor field selection failure e.g.\n<code>(Left 'a' :: Either Char Char).Right.value)<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.isError","name":"isError","type":"CalCoreExceptionisError","ui":"<b>Cal.Core.Exception.isError<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if throwable was raised through a call to the <code>Prelude.error<\/code> function.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.class_isAssignableFrom","name":"class_isAssignableFrom","type":"CalCoreExceptionclass_isAssignableFrom","ui":"<b>Cal.Core.Exception.class_isAssignableFrom<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jClass","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.throwable_getClass","name":"throwable_getClass","type":"CalCoreExceptionthrowable_getClass","ui":"<b>Cal.Core.Exception.throwable_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jThrowable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.primCatch","name":"primCatch","type":"CalCoreExceptionprimCatch","ui":"<b>Cal.Core.Exception.primCatch<\/b><br\/>[CALDoc] Primitive function for catching and handling exceptions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Core.Exception.primThrow","name":"primThrow","type":"CalCoreExceptionprimThrow","ui":"<b>Cal.Core.Exception.primThrow<\/b><br\/>[CALDoc] Primitive for raising an exception. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Exception"]},{"description":"Cal.Collections.IntMap.isProperSubmap","name":"isProperSubmap","type":"CalCollectionsIntMapisProperSubmap","ui":"<b>Cal.Collections.IntMap.isProperSubmap<\/b><br\/>[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).","terminals":[{"name":"m1","input":"text"},{"name":"m2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.isEmpty","name":"isEmpty","type":"CalCollectionsIntMapisEmpty","ui":"<b>Cal.Collections.IntMap.isEmpty<\/b><br\/>[CALDoc] Returns whether the map is empty.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.updateLookupWithKey","name":"updateLookupWithKey","type":"CalCollectionsIntMapupdateLookupWithKey","ui":"<b>Cal.Collections.IntMap.updateLookupWithKey<\/b><br\/>[CALDoc] Simultaneously looks up and updates the map at a specific key.","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.arbitraryIntMap","name":"arbitraryIntMap","type":"CalCollectionsIntMaparbitraryIntMap","ui":"<b>Cal.Collections.IntMap.arbitraryIntMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fold","name":"fold","type":"CalCollectionsIntMapfold","ui":"<b>Cal.Collections.IntMap.fold<\/b><br\/>[CALDoc] Folds over the values in the map in an unspecified order.","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"z","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.find","name":"find","type":"CalCollectionsIntMapfind","ui":"<b>Cal.Collections.IntMap.find<\/b><br\/>[CALDoc] Finds the value of a key. ","terminals":[{"name":"k","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.elems","name":"elems","type":"CalCollectionsIntMapelems","ui":"<b>Cal.Collections.IntMap.elems<\/b><br\/>[CALDoc] Returns all elements of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mapKeys","name":"mapKeys","type":"CalCollectionsIntMapmapKeys","ui":"<b>Cal.Collections.IntMap.mapKeys<\/b><br\/>[CALDoc] <code>mapKeys f s<\/code> is the map obtained by applying <code>f<\/code> to each key of <code>s<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.splitLookup","name":"splitLookup","type":"CalCollectionsIntMapsplitLookup","ui":"<b>Cal.Collections.IntMap.splitLookup<\/b><br\/>[CALDoc] <code>splitLookup key map<\/code> splits a map just like <code>split<\/code> but also returns <code>lookup key map<\/code>.","terminals":[{"name":"key","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.insertLookupWithKey","name":"insertLookupWithKey","type":"CalCollectionsIntMapinsertLookupWithKey","ui":"<b>Cal.Collections.IntMap.insertLookupWithKey<\/b><br\/>[CALDoc] <code>insertLookupWithKey f k x map<\/code> is a pair where the first element is equal to\n<code>lookup k map<\/code> and the second element equal to <code>insertWithKey f k x map<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"k","input":"text"},{"name":"x","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.unionsWithKey","name":"unionsWithKey","type":"CalCollectionsIntMapunionsWithKey","ui":"<b>Cal.Collections.IntMap.unionsWithKey<\/b><br\/>[CALDoc] Returns the union of a list of maps, with a combining operation.","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.unions","name":"unions","type":"CalCollectionsIntMapunions","ui":"<b>Cal.Collections.IntMap.unions<\/b><br\/>[CALDoc] Returns the union of a list of maps.","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.showIntMap","name":"showIntMap","type":"CalCollectionsIntMapshowIntMap","ui":"<b>Cal.Collections.IntMap.showIntMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.intersection","name":"intersection","type":"CalCollectionsIntMapintersection","ui":"<b>Cal.Collections.IntMap.intersection<\/b><br\/>[CALDoc] Returns the (left-biased) intersection of two maps (based on keys). ","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.isSubmap","name":"isSubmap","type":"CalCollectionsIntMapisSubmap","ui":"<b>Cal.Collections.IntMap.isSubmap<\/b><br\/>[CALDoc] Returns whether the first map is a submap of the second map.","terminals":[{"name":"m2","input":"text"},{"name":"m1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.isSubmapBy","name":"isSubmapBy","type":"CalCollectionsIntMapisSubmapBy","ui":"<b>Cal.Collections.IntMap.isSubmapBy<\/b><br\/>[CALDoc] Returns whether the first map is a submap of the second map.","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"pred","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.keySet","name":"keySet","type":"CalCollectionsIntMapkeySet","ui":"<b>Cal.Collections.IntMap.keySet<\/b><br\/>[CALDoc] Returns a set of all keys of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.keys","name":"keys","type":"CalCollectionsIntMapkeys","ui":"<b>Cal.Collections.IntMap.keys<\/b><br\/>[CALDoc] Returns all keys of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fromDistinctAscList","name":"fromDistinctAscList","type":"CalCollectionsIntMapfromDistinctAscList","ui":"<b>Cal.Collections.IntMap.fromDistinctAscList<\/b><br\/>[CALDoc] Builds a map from an ascending list of distinct elements in linear time.\n","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.match","name":"match","type":"CalCollectionsIntMapmatch","ui":"<b>Cal.Collections.IntMap.match<\/b><br\/>[CALDoc] ","terminals":[{"name":"p","input":"text"},{"name":"m","input":"text"},{"name":"i","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fromAscList","name":"fromAscList","type":"CalCollectionsIntMapfromAscList","ui":"<b>Cal.Collections.IntMap.fromAscList<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time. ","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.partition","name":"partition","type":"CalCollectionsIntMappartition","ui":"<b>Cal.Collections.IntMap.partition<\/b><br\/>[CALDoc] Partitions the map according to a predicate. ","terminals":[{"name":"p","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.partitionWithKey","name":"partitionWithKey","type":"CalCollectionsIntMappartitionWithKey","ui":"<b>Cal.Collections.IntMap.partitionWithKey<\/b><br\/>[CALDoc] Partitions the map according to a predicate. ","terminals":[{"name":"pred","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mapKeysWith","name":"mapKeysWith","type":"CalCollectionsIntMapmapKeysWith","ui":"<b>Cal.Collections.IntMap.mapKeysWith<\/b><br\/>[CALDoc] <code>mapKeysWith c f s<\/code> is the map obtained by applying <code>f<\/code> to each key of <code>s<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"c","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.coarbitraryIntMap","name":"coarbitraryIntMap","type":"CalCollectionsIntMapcoarbitraryIntMap","ui":"<b>Cal.Collections.IntMap.coarbitraryIntMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"map","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.size","name":"size","type":"CalCollectionsIntMapsize","ui":"<b>Cal.Collections.IntMap.size<\/b><br\/>[CALDoc] Returns the number of elements in the map.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mapAccumR","name":"mapAccumR","type":"CalCollectionsIntMapmapAccumR","ui":"<b>Cal.Collections.IntMap.mapAccumR<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"a","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.single","name":"single","type":"CalCollectionsIntMapsingle","ui":"<b>Cal.Collections.IntMap.single<\/b><br\/>[CALDoc] Creates a map with a single element.","terminals":[{"name":"k","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.inputIntMap","name":"inputIntMap","type":"CalCollectionsIntMapinputIntMap","ui":"<b>Cal.Collections.IntMap.inputIntMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.unionsWith","name":"unionsWith","type":"CalCollectionsIntMapunionsWith","ui":"<b>Cal.Collections.IntMap.unionsWith<\/b><br\/>[CALDoc] Returns the union of a list of maps, with a combining operation.","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.unionWith","name":"unionWith","type":"CalCollectionsIntMapunionWith","ui":"<b>Cal.Collections.IntMap.unionWith<\/b><br\/>[CALDoc] Returns the left-biased union of two maps, with a combining function.","terminals":[{"name":"m2","input":"text"},{"name":"m1","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.update","name":"update","type":"CalCollectionsIntMapupdate","ui":"<b>Cal.Collections.IntMap.update<\/b><br\/>[CALDoc] <code>update f k map<\/code> updates the value <code>x<\/code> at <code>k<\/code> (if it is in the map). ","terminals":[{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.toAscList","name":"toAscList","type":"CalCollectionsIntMaptoAscList","ui":"<b>Cal.Collections.IntMap.toAscList<\/b><br\/>[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.lookupWithDefault","name":"lookupWithDefault","type":"CalCollectionsIntMaplookupWithDefault","ui":"<b>Cal.Collections.IntMap.lookupWithDefault<\/b><br\/>[CALDoc] <code>lookupWithDefault key map defaultValue<\/code> returns the value at the given key or <code>defaultValue<\/code>\nwhen the key is not in the map.","terminals":[{"name":"defaultValue","input":"text"},{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.isProperSubmapBy","name":"isProperSubmapBy","type":"CalCollectionsIntMapisProperSubmapBy","ui":"<b>Cal.Collections.IntMap.isProperSubmapBy<\/b><br\/>[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).","terminals":[{"name":"pred","input":"text"},{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.assocs","name":"assocs","type":"CalCollectionsIntMapassocs","ui":"<b>Cal.Collections.IntMap.assocs<\/b><br\/>[CALDoc] Returns an association list of all key-value pairs in the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.submapCmp","name":"submapCmp","type":"CalCollectionsIntMapsubmapCmp","ui":"<b>Cal.Collections.IntMap.submapCmp<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"pred","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.map","name":"map","type":"CalCollectionsIntMapmap","ui":"<b>Cal.Collections.IntMap.map<\/b><br\/>[CALDoc] Maps a function over all values in the map.","terminals":[{"name":"m","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mapWithKey","name":"mapWithKey","type":"CalCollectionsIntMapmapWithKey","ui":"<b>Cal.Collections.IntMap.mapWithKey<\/b><br\/>[CALDoc] Maps a function over all values in the map.","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.split","name":"split","type":"CalCollectionsIntMapsplit","ui":"<b>Cal.Collections.IntMap.split<\/b><br\/>[CALDoc] <code>split k map<\/code> returns a pair <code>(map1,map2)<\/code> where the keys in <code>map1<\/code> are smaller\nthan <code>k<\/code> and the keys in <code>map2<\/code> larger than <code>k<\/code>. ","terminals":[{"name":"t","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.union","name":"union","type":"CalCollectionsIntMapunion","ui":"<b>Cal.Collections.IntMap.union<\/b><br\/>[CALDoc] <code>union t1 t2<\/code> takes the left-biased union of <code>t1<\/code> and <code>t2<\/code>. ","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.insertWith","name":"insertWith","type":"CalCollectionsIntMapinsertWith","ui":"<b>Cal.Collections.IntMap.insertWith<\/b><br\/>[CALDoc] Inserts a new key and value in the map with a combining function.","terminals":[{"name":"x","input":"text"},{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.unionWithKey","name":"unionWithKey","type":"CalCollectionsIntMapunionWithKey","ui":"<b>Cal.Collections.IntMap.unionWithKey<\/b><br\/>[CALDoc] Returns the left-biased union of two maps, with a combining function.","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.difference","name":"difference","type":"CalCollectionsIntMapdifference","ui":"<b>Cal.Collections.IntMap.difference<\/b><br\/>[CALDoc] Returns the difference of two maps (based on keys).","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.member","name":"member","type":"CalCollectionsIntMapmember","ui":"<b>Cal.Collections.IntMap.member<\/b><br\/>[CALDoc] Returns whether the key is a member of the map.","terminals":[{"name":"m","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fromAscListWithKey","name":"fromAscListWithKey","type":"CalCollectionsIntMapfromAscListWithKey","ui":"<b>Cal.Collections.IntMap.fromAscListWithKey<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.intersectionWith","name":"intersectionWith","type":"CalCollectionsIntMapintersectionWith","ui":"<b>Cal.Collections.IntMap.intersectionWith<\/b><br\/>[CALDoc] Returns the intersection of two maps, with a combining function.","terminals":[{"name":"m2","input":"text"},{"name":"m1","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.intersectionWithKey","name":"intersectionWithKey","type":"CalCollectionsIntMapintersectionWithKey","ui":"<b>Cal.Collections.IntMap.intersectionWithKey<\/b><br\/>[CALDoc] Returns the intersection of two maps, with a combining function.","terminals":[{"name":"t1","input":"text"},{"name":"f","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.outputIntMap","name":"outputIntMap","type":"CalCollectionsIntMapoutputIntMap","ui":"<b>Cal.Collections.IntMap.outputIntMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.toList","name":"toList","type":"CalCollectionsIntMaptoList","ui":"<b>Cal.Collections.IntMap.toList<\/b><br\/>[CALDoc] Converts to a list of key-value pairs with the keys.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.foldWithKey","name":"foldWithKey","type":"CalCollectionsIntMapfoldWithKey","ui":"<b>Cal.Collections.IntMap.foldWithKey<\/b><br\/>[CALDoc] Folds over the keys and values in the map in an unspecified order.","terminals":[{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"z","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.foldR","name":"foldR","type":"CalCollectionsIntMapfoldR","ui":"<b>Cal.Collections.IntMap.foldR<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"z","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fromList","name":"fromList","type":"CalCollectionsIntMapfromList","ui":"<b>Cal.Collections.IntMap.fromList<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs.","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.insert","name":"insert","type":"CalCollectionsIntMapinsert","ui":"<b>Cal.Collections.IntMap.insert<\/b><br\/>[CALDoc] Inserts a new key\/value pair in the map. ","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fromAscListWith","name":"fromAscListWith","type":"CalCollectionsIntMapfromAscListWith","ui":"<b>Cal.Collections.IntMap.fromAscListWith<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fromListWith","name":"fromListWith","type":"CalCollectionsIntMapfromListWith","ui":"<b>Cal.Collections.IntMap.fromListWith<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs with a combining function.","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.fromListWithKey","name":"fromListWithKey","type":"CalCollectionsIntMapfromListWithKey","ui":"<b>Cal.Collections.IntMap.fromListWithKey<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs with a combining function.","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.insertWithKey","name":"insertWithKey","type":"CalCollectionsIntMapinsertWithKey","ui":"<b>Cal.Collections.IntMap.insertWithKey<\/b><br\/>[CALDoc] Inserts a new key and value in the map with a combining function.","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"x","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.join","name":"join","type":"CalCollectionsIntMapjoin","ui":"<b>Cal.Collections.IntMap.join<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"p2","input":"text"},{"name":"p1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.branchMask","name":"branchMask","type":"CalCollectionsIntMapbranchMask","ui":"<b>Cal.Collections.IntMap.branchMask<\/b><br\/>[CALDoc] ","terminals":[{"name":"p2","input":"text"},{"name":"p1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mapAccum","name":"mapAccum","type":"CalCollectionsIntMapmapAccum","ui":"<b>Cal.Collections.IntMap.mapAccum<\/b><br\/>[CALDoc] Threads an accumulating argument through the map in an unspecified order.","terminals":[{"name":"f","input":"text"},{"name":"a","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mapAccumWithKey","name":"mapAccumWithKey","type":"CalCollectionsIntMapmapAccumWithKey","ui":"<b>Cal.Collections.IntMap.mapAccumWithKey<\/b><br\/>[CALDoc] Threads an accumulating argument through the map in an unspecified order.","terminals":[{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mapAccumL","name":"mapAccumL","type":"CalCollectionsIntMapmapAccumL","ui":"<b>Cal.Collections.IntMap.mapAccumL<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"a","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.delete","name":"delete","type":"CalCollectionsIntMapdelete","ui":"<b>Cal.Collections.IntMap.delete<\/b><br\/>[CALDoc] Deletes a key and its value from the map. ","terminals":[{"name":"k","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.differenceWith","name":"differenceWith","type":"CalCollectionsIntMapdifferenceWith","ui":"<b>Cal.Collections.IntMap.differenceWith<\/b><br\/>[CALDoc] Returns the difference of two maps, with a combining function.","terminals":[{"name":"m1","input":"text"},{"name":"m2","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.differenceWithKey","name":"differenceWithKey","type":"CalCollectionsIntMapdifferenceWithKey","ui":"<b>Cal.Collections.IntMap.differenceWithKey<\/b><br\/>[CALDoc] Returns the difference of two maps, with a combining function. ","terminals":[{"name":"t2","input":"text"},{"name":"f","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.shorter","name":"shorter","type":"CalCollectionsIntMapshorter","ui":"<b>Cal.Collections.IntMap.shorter<\/b><br\/>[CALDoc] ","terminals":[{"name":"m2","input":"text"},{"name":"m1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.lookup","name":"lookup","type":"CalCollectionsIntMaplookup","ui":"<b>Cal.Collections.IntMap.lookup<\/b><br\/>[CALDoc] Looks up the value at a key in the map.","terminals":[{"name":"k","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.adjust","name":"adjust","type":"CalCollectionsIntMapadjust","ui":"<b>Cal.Collections.IntMap.adjust<\/b><br\/>[CALDoc] Adjusts a value at a specific key. ","terminals":[{"name":"m","input":"text"},{"name":"k","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.filter","name":"filter","type":"CalCollectionsIntMapfilter","ui":"<b>Cal.Collections.IntMap.filter<\/b><br\/>[CALDoc] Filters all values that satisfy the predicate.","terminals":[{"name":"p","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.filterWithKey","name":"filterWithKey","type":"CalCollectionsIntMapfilterWithKey","ui":"<b>Cal.Collections.IntMap.filterWithKey<\/b><br\/>[CALDoc] Filters all keys\/values that satisfy the predicate.","terminals":[{"name":"t","input":"text"},{"name":"pred","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.adjustWithKey","name":"adjustWithKey","type":"CalCollectionsIntMapadjustWithKey","ui":"<b>Cal.Collections.IntMap.adjustWithKey<\/b><br\/>[CALDoc] Adjusts a value at a specific key. ","terminals":[{"name":"k","input":"text"},{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.updateWithKey","name":"updateWithKey","type":"CalCollectionsIntMapupdateWithKey","ui":"<b>Cal.Collections.IntMap.updateWithKey<\/b><br\/>[CALDoc] <code>updateWithKey f k map<\/code> updates the value <code>x<\/code> at <code>k<\/code> (if it is in the map). ","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.Bin","name":"Bin","type":"CalCollectionsIntMapBin","ui":"<b>Cal.Collections.IntMap.Bin<\/b><br\/>[CALDoc] ","terminals":[{"name":"rightMap","input":"text"},{"name":"prefix","input":"text"},{"name":"mask","input":"text"},{"name":"leftMap","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.zero","name":"zero","type":"CalCollectionsIntMapzero","ui":"<b>Cal.Collections.IntMap.zero<\/b><br\/>[CALDoc] ","terminals":[{"name":"i","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.nomatch","name":"nomatch","type":"CalCollectionsIntMapnomatch","ui":"<b>Cal.Collections.IntMap.nomatch<\/b><br\/>[CALDoc] ","terminals":[{"name":"p","input":"text"},{"name":"i","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.mask","name":"mask","type":"CalCollectionsIntMapmask","ui":"<b>Cal.Collections.IntMap.mask<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"i","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.empty","name":"empty","type":"CalCollectionsIntMapempty","ui":"<b>Cal.Collections.IntMap.empty<\/b><br\/>[CALDoc] The empty map.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.Nil","name":"Nil","type":"CalCollectionsIntMapNil","ui":"<b>Cal.Collections.IntMap.Nil<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.IntMap.Tip","name":"Tip","type":"CalCollectionsIntMapTip","ui":"<b>Cal.Collections.IntMap.Tip<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.IntMap"]},{"description":"Cal.Collections.List.unzip6","name":"unzip6","type":"CalCollectionsListunzip6","ui":"<b>Cal.Collections.List.unzip6<\/b><br\/>[CALDoc] Transforms a list of 6-tuples into a 6-tuple of lists.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list4","name":"list4","type":"CalCollectionsListlist4","ui":"<b>Cal.Collections.List.list4<\/b><br\/>[CALDoc] Constructs a list of four items.","terminals":[{"name":"item2","input":"text"},{"name":"item4","input":"text"},{"name":"item3","input":"text"},{"name":"item1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.splitAt","name":"splitAt","type":"CalCollectionsListsplitAt","ui":"<b>Cal.Collections.List.splitAt<\/b><br\/>[CALDoc] <code>split nElemsToSplit list<\/code> returns a pair of lists. ","terminals":[{"name":"list","input":"text"},{"name":"nElemsToSplit","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zip5","name":"zip5","type":"CalCollectionsListzip5","ui":"<b>Cal.Collections.List.zip5<\/b><br\/>[CALDoc] Converts five lists into a list of corresponding 5-tuples.\n","terminals":[{"name":"list2","input":"text"},{"name":"list4","input":"text"},{"name":"list3","input":"text"},{"name":"list1","input":"text"},{"name":"list5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.elemIndex","name":"elemIndex","type":"CalCollectionsListelemIndex","ui":"<b>Cal.Collections.List.elemIndex<\/b><br\/>[CALDoc] Returns the index of the first element in the given list which is equal to\nthe specified value, or <code>Nothing<\/code> if there is no such element.","terminals":[{"name":"_INPUT","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.alternate","name":"alternate","type":"CalCollectionsListalternate","ui":"<b>Cal.Collections.List.alternate<\/b><br\/>[CALDoc] Alternate items from the 2 lists.\n","terminals":[{"name":"list2","input":"text"},{"name":"list1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.fromJIterator","name":"fromJIterator","type":"CalCollectionsListfromJIterator","ui":"<b>Cal.Collections.List.fromJIterator<\/b><br\/>[CALDoc] Converts a Java iterator to a CAL list.","terminals":[{"name":"iterator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.seqList","name":"seqList","type":"CalCollectionsListseqList","ui":"<b>Cal.Collections.List.seqList<\/b><br\/>[CALDoc] <code>seqList<\/code> simply returns its input list. However, if this returned list is subsequently traversed by other clients,\neach element of the list is evaluated to weak-head normal form prior to visiting the next element.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.concatMap","name":"concatMap","type":"CalCollectionsListconcatMap","ui":"<b>Cal.Collections.List.concatMap<\/b><br\/>[CALDoc] <code>concatMap mapFunction list<\/code> applies <code>mapFunction<\/code> to each element of list and then concatenates the\nresulting list. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zipWith7","name":"zipWith7","type":"CalCollectionsListzipWith7","ui":"<b>Cal.Collections.List.zipWith7<\/b><br\/>[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of seven lists.","terminals":[{"name":"list7","input":"text"},{"name":"zipFunction","input":"text"},{"name":"list2","input":"text"},{"name":"list3","input":"text"},{"name":"list4","input":"text"},{"name":"list6","input":"text"},{"name":"list1","input":"text"},{"name":"list5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zip3","name":"zip3","type":"CalCollectionsListzip3","ui":"<b>Cal.Collections.List.zip3<\/b><br\/>[CALDoc] Converts three lists into a list of corresponding triples.\n","terminals":[{"name":"list1","input":"text"},{"name":"list2","input":"text"},{"name":"list3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list2","name":"list2","type":"CalCollectionsListlist2","ui":"<b>Cal.Collections.List.list2<\/b><br\/>[CALDoc] Constructs a list of two items.","terminals":[{"name":"item1","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unzip4","name":"unzip4","type":"CalCollectionsListunzip4","ui":"<b>Cal.Collections.List.unzip4<\/b><br\/>[CALDoc] Transforms a list of 4-tuples into a 4-tuple of lists.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.deleteFirstsBy","name":"deleteFirstsBy","type":"CalCollectionsListdeleteFirstsBy","ui":"<b>Cal.Collections.List.deleteFirstsBy<\/b><br\/>[CALDoc] This function takes a predicate and two lists and returns the first list with\nthe first occurrence of each element of the second list removed.","terminals":[{"name":"_INPUT","input":"text"},{"name":"eq","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list6","name":"list6","type":"CalCollectionsListlist6","ui":"<b>Cal.Collections.List.list6<\/b><br\/>[CALDoc] Constructs a list of six items.","terminals":[{"name":"item6","input":"text"},{"name":"item4","input":"text"},{"name":"item1","input":"text"},{"name":"item3","input":"text"},{"name":"item5","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list0","name":"list0","type":"CalCollectionsListlist0","ui":"<b>Cal.Collections.List.list0<\/b><br\/>[CALDoc] Constructs an empty list.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.breakAfter","name":"breakAfter","type":"CalCollectionsListbreakAfter","ui":"<b>Cal.Collections.List.breakAfter<\/b><br\/>[CALDoc] <code>breakAfter predicate list<\/code> breaks up list into a pair of lists. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zipWith5","name":"zipWith5","type":"CalCollectionsListzipWith5","ui":"<b>Cal.Collections.List.zipWith5<\/b><br\/>[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of five lists.","terminals":[{"name":"list2","input":"text"},{"name":"zipFunction","input":"text"},{"name":"list1","input":"text"},{"name":"list5","input":"text"},{"name":"list3","input":"text"},{"name":"list4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unfoldRight","name":"unfoldRight","type":"CalCollectionsListunfoldRight","ui":"<b>Cal.Collections.List.unfoldRight<\/b><br\/>[CALDoc] The <code>unfoldRight<\/code> function is a \"dual\" to <code>foldRight<\/code>: while <code>foldRight<\/code> reduces a\nlist to a summary value, <code>unfoldRight<\/code> builds a list from a seed value. ","terminals":[{"name":"b","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.minimumBy","name":"minimumBy","type":"CalCollectionsListminimumBy","ui":"<b>Cal.Collections.List.minimumBy<\/b><br\/>[CALDoc] This function takes a comparison function and a list and returns the least\nelement of the list by the comparison function. ","terminals":[{"name":"list","input":"text"},{"name":"comparisonFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.join","name":"join","type":"CalCollectionsListjoin","ui":"<b>Cal.Collections.List.join<\/b><br\/>[CALDoc] This function intersperses a separator between each pair of elements in a list\nand then concatenates the list elements together.","terminals":[{"name":"separator","input":"text"},{"name":"elements","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.maximumBy","name":"maximumBy","type":"CalCollectionsListmaximumBy","ui":"<b>Cal.Collections.List.maximumBy<\/b><br\/>[CALDoc] This function takes a comparison function and a list and returns the greatest\nelement of the list by the comparison function. ","terminals":[{"name":"list","input":"text"},{"name":"comparisonFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sum","name":"sum","type":"CalCollectionsListsum","ui":"<b>Cal.Collections.List.sum<\/b><br\/>[CALDoc] <code>sum list<\/code> returns the sum of all the elements of <code>list<\/code>, adding from left to right. sum applied to an\nempty list is 0.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.spanInclusive","name":"spanInclusive","type":"CalCollectionsListspanInclusive","ui":"<b>Cal.Collections.List.spanInclusive<\/b><br\/>[CALDoc] <code>spanInclusive predicate list<\/code> breaks up list into a pair of lists. ","terminals":[{"name":"list","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.foldRight1","name":"foldRight1","type":"CalCollectionsListfoldRight1","ui":"<b>Cal.Collections.List.foldRight1<\/b><br\/>[CALDoc] Similar to <code>foldLeft1<\/code>, except that the folding process on the list is started with its rightmost element.\n","terminals":[{"name":"foldFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.partition","name":"partition","type":"CalCollectionsListpartition","ui":"<b>Cal.Collections.List.partition<\/b><br\/>[CALDoc] This function takes a predicate and a list and returns the pair of lists of\nelements which respectively do and do not satisfy the predicate.","terminals":[{"name":"predicate","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.cycle","name":"cycle","type":"CalCollectionsListcycle","ui":"<b>Cal.Collections.List.cycle<\/b><br\/>[CALDoc] <code>cycle list<\/code> is the infinite repetition of the list. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.minimum","name":"minimum","type":"CalCollectionsListminimum","ui":"<b>Cal.Collections.List.minimum<\/b><br\/>[CALDoc] Returns the minimum value in the specified list.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.fromJIteratorWith","name":"fromJIteratorWith","type":"CalCollectionsListfromJIteratorWith","ui":"<b>Cal.Collections.List.fromJIteratorWith<\/b><br\/>[CALDoc] Converts a Java iterator to a CAL list using the element mapping function <code>f<\/code> of \ntype <code>JObject -&gt; a<\/code> to convert iteration elements.","terminals":[{"name":"elementMappingFunction","input":"text"},{"name":"_INPUT","input":"text"},{"name":"iterator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zip6","name":"zip6","type":"CalCollectionsListzip6","ui":"<b>Cal.Collections.List.zip6<\/b><br\/>[CALDoc] Converts six lists into a list of corresponding 6-tuples.\n","terminals":[{"name":"list1","input":"text"},{"name":"list5","input":"text"},{"name":"list6","input":"text"},{"name":"list4","input":"text"},{"name":"list3","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.isElem","name":"isElem","type":"CalCollectionsListisElem","ui":"<b>Cal.Collections.List.isElem<\/b><br\/>[CALDoc] <code>isElem elementValue list<\/code> returns <code>True<\/code> if <code>elementValue<\/code> is an element of the list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.product","name":"product","type":"CalCollectionsListproduct","ui":"<b>Cal.Collections.List.product<\/b><br\/>[CALDoc] <code>product list<\/code> return the product of all the elements of <code>list<\/code>, multiplying from left to right. product\napplied to an empty list is 1.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unzip3","name":"unzip3","type":"CalCollectionsListunzip3","ui":"<b>Cal.Collections.List.unzip3<\/b><br\/>[CALDoc] Transforms a list of triples into a triple of lists.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list7","name":"list7","type":"CalCollectionsListlist7","ui":"<b>Cal.Collections.List.list7<\/b><br\/>[CALDoc] Constructs a list of seven items.","terminals":[{"name":"item7","input":"text"},{"name":"item1","input":"text"},{"name":"item4","input":"text"},{"name":"item5","input":"text"},{"name":"item3","input":"text"},{"name":"item6","input":"text"},{"name":"item2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.subscript","name":"subscript","type":"CalCollectionsListsubscript","ui":"<b>Cal.Collections.List.subscript<\/b><br\/>[CALDoc] <code>subscript list index<\/code> returns the nth element of the list where n = <code>index<\/code>. ","terminals":[{"name":"list","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.deleteFirsts","name":"deleteFirsts","type":"CalCollectionsListdeleteFirsts","ui":"<b>Cal.Collections.List.deleteFirsts<\/b><br\/>[CALDoc] This function takes two lists and returns the first list with\nthe first occurrence of each element of the second list removed.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.intersect","name":"intersect","type":"CalCollectionsListintersect","ui":"<b>Cal.Collections.List.intersect<\/b><br\/>[CALDoc] Takes the intersection of two lists.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list3","name":"list3","type":"CalCollectionsListlist3","ui":"<b>Cal.Collections.List.list3<\/b><br\/>[CALDoc] Constructs a list of three items.","terminals":[{"name":"item2","input":"text"},{"name":"item3","input":"text"},{"name":"item1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.toJIterator","name":"toJIterator","type":"CalCollectionsListtoJIterator","ui":"<b>Cal.Collections.List.toJIterator<\/b><br\/>[CALDoc] Provides a view of a CAL list as a Java iterator. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.toJIteratorWith","name":"toJIteratorWith","type":"CalCollectionsListtoJIteratorWith","ui":"<b>Cal.Collections.List.toJIteratorWith<\/b><br\/>[CALDoc] Provides a view of a CAL list as a Java iterator. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.deleteAt","name":"deleteAt","type":"CalCollectionsListdeleteAt","ui":"<b>Cal.Collections.List.deleteAt<\/b><br\/>[CALDoc] Removes the list item at the specified index.","terminals":[{"name":"index","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.strictList","name":"strictList","type":"CalCollectionsListstrictList","ui":"<b>Cal.Collections.List.strictList<\/b><br\/>[CALDoc] Evaluates each element of the list (to weak-head normal form) prior to returning the list itself.\n<code>strictList list<\/code> is equivalent to <code>List.foldRight Prelude.seq list list<\/code>, however, it\nwill be faster.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapAccumulateRight","name":"mapAccumulateRight","type":"CalCollectionsListmapAccumulateRight","ui":"<b>Cal.Collections.List.mapAccumulateRight<\/b><br\/>[CALDoc] This function behaves like a combination of <code>map<\/code> and <code>foldRight<\/code>. ","terminals":[{"name":"list","input":"text"},{"name":"initialAccumulator","input":"text"},{"name":"accumulatorFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unzip7","name":"unzip7","type":"CalCollectionsListunzip7","ui":"<b>Cal.Collections.List.unzip7<\/b><br\/>[CALDoc] Transforms a list of 7-tuples into a 7-tuple of lists.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zip4","name":"zip4","type":"CalCollectionsListzip4","ui":"<b>Cal.Collections.List.zip4<\/b><br\/>[CALDoc] Converts four lists into a list of corresponding 4-tuples.\n","terminals":[{"name":"list4","input":"text"},{"name":"list2","input":"text"},{"name":"list3","input":"text"},{"name":"list1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unzip5","name":"unzip5","type":"CalCollectionsListunzip5","ui":"<b>Cal.Collections.List.unzip5<\/b><br\/>[CALDoc] Transforms a list of 5-tuples into a 5-tuple of lists.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.testModule","name":"testModule","type":"CalCollectionsListtestModule","ui":"<b>Cal.Collections.List.testModule<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.compareByExamples","name":"compareByExamples","type":"CalCollectionsListcompareByExamples","ui":"<b>Cal.Collections.List.compareByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.compareBy","name":"compareBy","type":"CalCollectionsListcompareBy","ui":"<b>Cal.Collections.List.compareBy<\/b><br\/>[CALDoc] Compares two lists lexicographically using a comparator function. \n","terminals":[{"name":"list1","input":"text"},{"name":"comparator","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.breakAllExamples","name":"breakAllExamples","type":"CalCollectionsListbreakAllExamples","ui":"<b>Cal.Collections.List.breakAllExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.breakAll","name":"breakAll","type":"CalCollectionsListbreakAll","ui":"<b>Cal.Collections.List.breakAll<\/b><br\/>[CALDoc] <code>breakAll predicate list<\/code> returns a list of lists, formed by splitting the original list before\neach element for which the predicate returns True.","terminals":[{"name":"predicate","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.break","name":"break","type":"CalCollectionsListbreak","ui":"<b>Cal.Collections.List.break<\/b><br\/>[CALDoc] <code>break predicate list<\/code> breaks up list into a pair of lists. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.combinationsExamples","name":"combinationsExamples","type":"CalCollectionsListcombinationsExamples","ui":"<b>Cal.Collections.List.combinationsExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.combinations","name":"combinations","type":"CalCollectionsListcombinations","ui":"<b>Cal.Collections.List.combinations<\/b><br\/>[CALDoc] Returns a list of all the combinations of the items in the specified lists.\n","terminals":[{"name":"firstIsFastestChanging","input":"text"},{"name":"valuesLists","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unionExamples","name":"unionExamples","type":"CalCollectionsListunionExamples","ui":"<b>Cal.Collections.List.unionExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.union","name":"union","type":"CalCollectionsListunion","ui":"<b>Cal.Collections.List.union<\/b><br\/>[CALDoc] <code>union list1 list2<\/code> returns <code>list1<\/code> concatenated with the nonduplicate elements of <code>list2<\/code>\nthat do not occur in <code>list1<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.transposeExamples","name":"transposeExamples","type":"CalCollectionsListtransposeExamples","ui":"<b>Cal.Collections.List.transposeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.subListExamples","name":"subListExamples","type":"CalCollectionsListsubListExamples","ui":"<b>Cal.Collections.List.subListExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.subList","name":"subList","type":"CalCollectionsListsubList","ui":"<b>Cal.Collections.List.subList<\/b><br\/>[CALDoc] Returns a portion of the argument list as a new list.","terminals":[{"name":"list","input":"text"},{"name":"toIndex","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.startsWithExamples","name":"startsWithExamples","type":"CalCollectionsListstartsWithExamples","ui":"<b>Cal.Collections.List.startsWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sortExternalExamples","name":"sortExternalExamples","type":"CalCollectionsListsortExternalExamples","ui":"<b>Cal.Collections.List.sortExternalExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sortExternal","name":"sortExternal","type":"CalCollectionsListsortExternal","ui":"<b>Cal.Collections.List.sortExternal<\/b><br\/>[CALDoc] <code>sortExternal<\/code> is an alternative to <code>sort<\/code>. It is a stable sort (does not reorder equivalent elements).","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sortExamples","name":"sortExamples","type":"CalCollectionsListsortExamples","ui":"<b>Cal.Collections.List.sortExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sort","name":"sort","type":"CalCollectionsListsort","ui":"<b>Cal.Collections.List.sort<\/b><br\/>[CALDoc] Sorts the specified list. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sortByExternalExamples","name":"sortByExternalExamples","type":"CalCollectionsListsortByExternalExamples","ui":"<b>Cal.Collections.List.sortByExternalExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sortByExternal","name":"sortByExternal","type":"CalCollectionsListsortByExternal","ui":"<b>Cal.Collections.List.sortByExternal<\/b><br\/>[CALDoc] <code>sortByExternal<\/code> is an alternative to <code>sortBy<\/code>.\nIt is a stable sort (does not reorder equivalent elements).","terminals":[{"name":"cmp","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.outputList","name":"outputList","type":"CalCollectionsListoutputList","ui":"<b>Cal.Collections.List.outputList<\/b><br\/>[CALDoc] Converts a CAL list to a Java list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateRightExamples","name":"accumulateRightExamples","type":"CalCollectionsListaccumulateRightExamples","ui":"<b>Cal.Collections.List.accumulateRightExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateRight","name":"accumulateRight","type":"CalCollectionsListaccumulateRight","ui":"<b>Cal.Collections.List.accumulateRight<\/b><br\/>[CALDoc] <code>accumulateRight<\/code> is similar to <code>accumulateLeft<\/code>, except that the accumulation process\nproceeds from right to left. ","terminals":[{"name":"accumulateFunction","input":"text"},{"name":"list","input":"text"},{"name":"initialValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateLeft1Examples","name":"accumulateLeft1Examples","type":"CalCollectionsListaccumulateLeft1Examples","ui":"<b>Cal.Collections.List.accumulateLeft1Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateLeft1","name":"accumulateLeft1","type":"CalCollectionsListaccumulateLeft1","ui":"<b>Cal.Collections.List.accumulateLeft1<\/b><br\/>[CALDoc] <code>accumulateLeft1<\/code> is similar to <code>accumulateLeft<\/code>, except that it \nuses the first element of the list as the initial value of the accumulation.","terminals":[{"name":"list","input":"text"},{"name":"accumulateFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateLeftExamples","name":"accumulateLeftExamples","type":"CalCollectionsListaccumulateLeftExamples","ui":"<b>Cal.Collections.List.accumulateLeftExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateLeft","name":"accumulateLeft","type":"CalCollectionsListaccumulateLeft","ui":"<b>Cal.Collections.List.accumulateLeft<\/b><br\/>[CALDoc] <code>accumulateLeft<\/code> is similar to <code>foldLeft<\/code>, except that it returns the list of partial folds, instead of the completely\nfolded result. <code>mapAccumulateLeft<\/code> is a generalization. <code>accumulateLeft<\/code> is similar to the Crystal Reports concept of \na running total.","terminals":[{"name":"list","input":"text"},{"name":"accumulateFunction","input":"text"},{"name":"initialValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.replaceAtExamples","name":"replaceAtExamples","type":"CalCollectionsListreplaceAtExamples","ui":"<b>Cal.Collections.List.replaceAtExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.replaceAt","name":"replaceAt","type":"CalCollectionsListreplaceAt","ui":"<b>Cal.Collections.List.replaceAt<\/b><br\/>[CALDoc] Returns the list with the value at a specified offset replaced by a specified value.\n","terminals":[{"name":"index","input":"text"},{"name":"list","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.replaceAllExamples","name":"replaceAllExamples","type":"CalCollectionsListreplaceAllExamples","ui":"<b>Cal.Collections.List.replaceAllExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.replaceAll","name":"replaceAll","type":"CalCollectionsListreplaceAll","ui":"<b>Cal.Collections.List.replaceAll<\/b><br\/>[CALDoc] Applies the predicate to each element and returns the list \nwhere every element for which the predicate evaluated to <code>True<\/code> is replaced by <code>replaceWithValue<\/code>.","terminals":[{"name":"replaceWithValue","input":"text"},{"name":"predicate","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.periodizeExamples","name":"periodizeExamples","type":"CalCollectionsListperiodizeExamples","ui":"<b>Cal.Collections.List.periodizeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.orListExamples","name":"orListExamples","type":"CalCollectionsListorListExamples","ui":"<b>Cal.Collections.List.orListExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.maximumExamples","name":"maximumExamples","type":"CalCollectionsListmaximumExamples","ui":"<b>Cal.Collections.List.maximumExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.maximum","name":"maximum","type":"CalCollectionsListmaximum","ui":"<b>Cal.Collections.List.maximum<\/b><br\/>[CALDoc] Returns the maximum value in the specified list.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.foldLeft1Strict","name":"foldLeft1Strict","type":"CalCollectionsListfoldLeft1Strict","ui":"<b>Cal.Collections.List.foldLeft1Strict<\/b><br\/>[CALDoc] <code>foldLeft1Strict<\/code> is similar to <code>foldLeftStrict<\/code>, except that it uses the first element of the list as\nthe initial value in the folding process. ","terminals":[{"name":"list","input":"text"},{"name":"foldFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapJustExamples","name":"mapJustExamples","type":"CalCollectionsListmapJustExamples","ui":"<b>Cal.Collections.List.mapJustExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapJust","name":"mapJust","type":"CalCollectionsListmapJust","ui":"<b>Cal.Collections.List.mapJust<\/b><br\/>[CALDoc] <code>mapJust mapFunction list<\/code> applies <code>mapFunction<\/code> to each element of list, discarding the <code>Nothing<\/code>\nvalues, and keeping the <em>Just<\/em> values after removing the <code>Just<\/code> constructor.","terminals":[{"name":"list","input":"text"},{"name":"mapFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapIndexedExamples","name":"mapIndexedExamples","type":"CalCollectionsListmapIndexedExamples","ui":"<b>Cal.Collections.List.mapIndexedExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapIndexed","name":"mapIndexed","type":"CalCollectionsListmapIndexed","ui":"<b>Cal.Collections.List.mapIndexed<\/b><br\/>[CALDoc] <code>mapIndexed mapFunction list<\/code> applies the function <code>mapFunction<\/code> to each element of the list, where\n<code>mapFunction<\/code> is passed both the element value, and its zero-based index in the list.","terminals":[{"name":"list","input":"text"},{"name":"mapFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.lookupWithDefaultExamples","name":"lookupWithDefaultExamples","type":"CalCollectionsListlookupWithDefaultExamples","ui":"<b>Cal.Collections.List.lookupWithDefaultExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.lookupWithDefault","name":"lookupWithDefault","type":"CalCollectionsListlookupWithDefault","ui":"<b>Cal.Collections.List.lookupWithDefault<\/b><br\/>[CALDoc] Similar to <code>List.lookup<\/code> except it has a default specified which will be returned when the key can not be found in the\nmap.  ","terminals":[{"name":"key","input":"text"},{"name":"defaultValue","input":"text"},{"name":"keyValuePairs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.groupExamples","name":"groupExamples","type":"CalCollectionsListgroupExamples","ui":"<b>Cal.Collections.List.groupExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.group","name":"group","type":"CalCollectionsListgroup","ui":"<b>Cal.Collections.List.group<\/b><br\/>[CALDoc] Splits the specified list into a list of lists of equal, adjacent elements.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.findIndexExamples","name":"findIndexExamples","type":"CalCollectionsListfindIndexExamples","ui":"<b>Cal.Collections.List.findIndexExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.filterJustExamples","name":"filterJustExamples","type":"CalCollectionsListfilterJustExamples","ui":"<b>Cal.Collections.List.filterJustExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.filterJust","name":"filterJust","type":"CalCollectionsListfilterJust","ui":"<b>Cal.Collections.List.filterJust<\/b><br\/>[CALDoc] <code>filterJust listOfMaybes<\/code> filters <code>listOfMaybes<\/code>, removing the <code>Nothing<\/code> values, and taking the <code>Just<\/code>\noff the <em>Just<\/em> values. ","terminals":[{"name":"listOfMaybes","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.endsWithExamples","name":"endsWithExamples","type":"CalCollectionsListendsWithExamples","ui":"<b>Cal.Collections.List.endsWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.endsWith","name":"endsWith","type":"CalCollectionsListendsWith","ui":"<b>Cal.Collections.List.endsWith<\/b><br\/>[CALDoc] Returns whether <code>listToTest<\/code> ends with the specified suffix.","terminals":[{"name":"listToTest","input":"text"},{"name":"suffix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.composeAllExamples","name":"composeAllExamples","type":"CalCollectionsListcomposeAllExamples","ui":"<b>Cal.Collections.List.composeAllExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.composeAll","name":"composeAll","type":"CalCollectionsListcomposeAll","ui":"<b>Cal.Collections.List.composeAll<\/b><br\/>[CALDoc] <code>composeAll [f1, f2, ... , fn] value<\/code> is the same as <code>f1 (f2 ( ... (fn value)))...)<\/code> which is the\nsame as <code>f1 # f2 # ... # fn $ value<\/code>","terminals":[{"name":"value","input":"text"},{"name":"functionList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.foldRight","name":"foldRight","type":"CalCollectionsListfoldRight","ui":"<b>Cal.Collections.List.foldRight<\/b><br\/>[CALDoc] Similar to <code>foldLeft<\/code>, except that the folding process on the list is started with its rightmost element.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.anyExamples","name":"anyExamples","type":"CalCollectionsListanyExamples","ui":"<b>Cal.Collections.List.anyExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.andListExamples","name":"andListExamples","type":"CalCollectionsListandListExamples","ui":"<b>Cal.Collections.List.andListExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.repeat","name":"repeat","type":"CalCollectionsListrepeat","ui":"<b>Cal.Collections.List.repeat<\/b><br\/>[CALDoc] <code>repeat valueToRepeat<\/code> returns the infinite list <code>[valueToRepeat, valueToRepeat, valueToRepeat, ...]<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.andList","name":"andList","type":"CalCollectionsListandList","ui":"<b>Cal.Collections.List.andList<\/b><br\/>[CALDoc] <code>andList list<\/code> returns <code>True<\/code> if every element of the list is <code>True<\/code> (and the list is finite).","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.allExamples","name":"allExamples","type":"CalCollectionsListallExamples","ui":"<b>Cal.Collections.List.allExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.removeDuplicatesByExamples","name":"removeDuplicatesByExamples","type":"CalCollectionsListremoveDuplicatesByExamples","ui":"<b>Cal.Collections.List.removeDuplicatesByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateRight1Examples","name":"accumulateRight1Examples","type":"CalCollectionsListaccumulateRight1Examples","ui":"<b>Cal.Collections.List.accumulateRight1Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateRight1","name":"accumulateRight1","type":"CalCollectionsListaccumulateRight1","ui":"<b>Cal.Collections.List.accumulateRight1<\/b><br\/>[CALDoc] <code>accumulateRight1<\/code> is similar to <code>accumulateRight<\/code>, except that it \nuses the first element of the list as the initial value of the accumulation.","terminals":[{"name":"list","input":"text"},{"name":"accumulateFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapAccumulateLeftStrict","name":"mapAccumulateLeftStrict","type":"CalCollectionsListmapAccumulateLeftStrict","ui":"<b>Cal.Collections.List.mapAccumulateLeftStrict<\/b><br\/>[CALDoc] This is the strict version of <code>mapAccumulateLeft<\/code>. ","terminals":[{"name":"initialAccumulator","input":"text"},{"name":"list","input":"text"},{"name":"accumulatorFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapAccumulateLeft","name":"mapAccumulateLeft","type":"CalCollectionsListmapAccumulateLeft","ui":"<b>Cal.Collections.List.mapAccumulateLeft<\/b><br\/>[CALDoc] This function behaves like a combination of <code>map<\/code> and <code>foldLeft<\/code>. ","terminals":[{"name":"initialAccumulator","input":"text"},{"name":"accumulatorFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapField1Examples","name":"mapField1Examples","type":"CalCollectionsListmapField1Examples","ui":"<b>Cal.Collections.List.mapField1Examples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapField1","name":"mapField1","type":"CalCollectionsListmapField1","ui":"<b>Cal.Collections.List.mapField1<\/b><br\/>[CALDoc] Applies the function <code>mapFunction<\/code> to each <code>#1<\/code> field in the list or records and returns\nthe resulting list.","terminals":[{"name":"list","input":"text"},{"name":"mapFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.inits","name":"inits","type":"CalCollectionsListinits","ui":"<b>Cal.Collections.List.inits<\/b><br\/>[CALDoc] Returns the list of all initial segments of the specified list, shortest first.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.splitEitherExamples","name":"splitEitherExamples","type":"CalCollectionsListsplitEitherExamples","ui":"<b>Cal.Collections.List.splitEitherExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.splitEither","name":"splitEither","type":"CalCollectionsListsplitEither","ui":"<b>Cal.Collections.List.splitEither<\/b><br\/>[CALDoc] Splits a <code>Prelude.List<\/code> of <code>Either<\/code>s into a pair of <code>Prelude.List<\/code>s with the \nfirst item being the <code>Left<\/code> values and the second the <code>Right<\/code> values.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.lengthAtLeastExamples","name":"lengthAtLeastExamples","type":"CalCollectionsListlengthAtLeastExamples","ui":"<b>Cal.Collections.List.lengthAtLeastExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.inputListWith","name":"inputListWith","type":"CalCollectionsListinputListWith","ui":"<b>Cal.Collections.List.inputListWith<\/b><br\/>[CALDoc] Converts a Java list to a CAL list using the element mapping function <code>f<\/code> of type <code>JObject -&gt; a<\/code> \nto convert elements of the Java list.","terminals":[{"name":"javaList","input":"text"},{"name":"_INPUT","input":"text"},{"name":"elementMappingFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.fromJCollectionWith","name":"fromJCollectionWith","type":"CalCollectionsListfromJCollectionWith","ui":"<b>Cal.Collections.List.fromJCollectionWith<\/b><br\/>[CALDoc] Converts a Java collection to a CAL list using the element mapping function <code>f<\/code> of type <code>JObject -&gt; a<\/code> \nto convert elements of the Java collection (in iterator order).","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.insertExamples","name":"insertExamples","type":"CalCollectionsListinsertExamples","ui":"<b>Cal.Collections.List.insertExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.insert","name":"insert","type":"CalCollectionsListinsert","ui":"<b>Cal.Collections.List.insert<\/b><br\/>[CALDoc] This function takes an element and a list and inserts the element into the\nlist at the last position where it is still less than or equal to the next\nelement. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.insertBy","name":"insertBy","type":"CalCollectionsListinsertBy","ui":"<b>Cal.Collections.List.insertBy<\/b><br\/>[CALDoc] This function takes an element and a list and inserts the element into the\nlist at the last position where it is still less than or equal to the next\nelement. ","terminals":[{"name":"value","input":"text"},{"name":"comparisonFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zipWith4","name":"zipWith4","type":"CalCollectionsListzipWith4","ui":"<b>Cal.Collections.List.zipWith4<\/b><br\/>[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of four lists.","terminals":[{"name":"list3","input":"text"},{"name":"zipFunction","input":"text"},{"name":"list1","input":"text"},{"name":"list4","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.inputList","name":"inputList","type":"CalCollectionsListinputList","ui":"<b>Cal.Collections.List.inputList<\/b><br\/>[CALDoc] Converts a Java list to a CAL list.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.fromJCollection","name":"fromJCollection","type":"CalCollectionsListfromJCollection","ui":"<b>Cal.Collections.List.fromJCollection<\/b><br\/>[CALDoc] Converts a Java collection to a CAL list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.tails","name":"tails","type":"CalCollectionsListtails","ui":"<b>Cal.Collections.List.tails<\/b><br\/>[CALDoc] Returns the list of all final segments of the specified list, longest first.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list5","name":"list5","type":"CalCollectionsListlist5","ui":"<b>Cal.Collections.List.list5<\/b><br\/>[CALDoc] Constructs a list of five items.","terminals":[{"name":"item3","input":"text"},{"name":"item2","input":"text"},{"name":"item1","input":"text"},{"name":"item4","input":"text"},{"name":"item5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sampleExamples","name":"sampleExamples","type":"CalCollectionsListsampleExamples","ui":"<b>Cal.Collections.List.sampleExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sample","name":"sample","type":"CalCollectionsListsample","ui":"<b>Cal.Collections.List.sample<\/b><br\/>[CALDoc] Samples a list at the specified frequency. ","terminals":[{"name":"frequency","input":"text"},{"name":"listToSample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.periodize","name":"periodize","type":"CalCollectionsListperiodize","ui":"<b>Cal.Collections.List.periodize<\/b><br\/>[CALDoc] Periodizes a list at the specified frequency, returning a list of lists, one for each modulo of the frequency.","terminals":[{"name":"listToPeriodize","input":"text"},{"name":"frequency","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.transpose","name":"transpose","type":"CalCollectionsListtranspose","ui":"<b>Cal.Collections.List.transpose<\/b><br\/>[CALDoc] Transposes the rows and columns of the specified list of lists.","terminals":[{"name":"listOfLists","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zip","name":"zip","type":"CalCollectionsListzip","ui":"<b>Cal.Collections.List.zip<\/b><br\/>[CALDoc] Converts two lists into a list of corresponding pairs.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mergeExamples","name":"mergeExamples","type":"CalCollectionsListmergeExamples","ui":"<b>Cal.Collections.List.mergeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.merge","name":"merge","type":"CalCollectionsListmerge","ui":"<b>Cal.Collections.List.merge<\/b><br\/>[CALDoc] Assuming that <code>list1<\/code> and <code>list2<\/code> are sorted, <code>merge list1 list2<\/code> will merge all\nthe elements of the two lists into a single sorted list. ","terminals":[{"name":"list2","input":"text"},{"name":"list1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.iterate","name":"iterate","type":"CalCollectionsListiterate","ui":"<b>Cal.Collections.List.iterate<\/b><br\/>[CALDoc] <code>iterate f x<\/code> returns the infinite list <code>[x, f x, f(f x), f(f(f x)), ...]<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zipWith6","name":"zipWith6","type":"CalCollectionsListzipWith6","ui":"<b>Cal.Collections.List.zipWith6<\/b><br\/>[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of six lists.","terminals":[{"name":"list4","input":"text"},{"name":"zipFunction","input":"text"},{"name":"list6","input":"text"},{"name":"list5","input":"text"},{"name":"list1","input":"text"},{"name":"list3","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateLeft1Strict","name":"accumulateLeft1Strict","type":"CalCollectionsListaccumulateLeft1Strict","ui":"<b>Cal.Collections.List.accumulateLeft1Strict<\/b><br\/>[CALDoc] <code>accumulateLeft1Strict<\/code> is similar to <code>accumulateLeftStrict<\/code>, except that it uses the first element of the list as\nthe initial value in the accumulating process.","terminals":[{"name":"list","input":"text"},{"name":"accumulateFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.accumulateLeftStrict","name":"accumulateLeftStrict","type":"CalCollectionsListaccumulateLeftStrict","ui":"<b>Cal.Collections.List.accumulateLeftStrict<\/b><br\/>[CALDoc] This is the strict version of <code>accumulateLeft<\/code>. ","terminals":[{"name":"list","input":"text"},{"name":"initialValue","input":"text"},{"name":"accumulateFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unzip","name":"unzip","type":"CalCollectionsListunzip","ui":"<b>Cal.Collections.List.unzip<\/b><br\/>[CALDoc] Transforms a list of pairs into a pair of lists.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.findExamples","name":"findExamples","type":"CalCollectionsListfindExamples","ui":"<b>Cal.Collections.List.findExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.find","name":"find","type":"CalCollectionsListfind","ui":"<b>Cal.Collections.List.find<\/b><br\/>[CALDoc] <code>find predicate list<\/code> returns the first value of list for which the predicate function is <code>True<\/code>,\nif there is one, or <code>Nothing<\/code> otherwise.","terminals":[{"name":"predicate","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.reverse","name":"reverse","type":"CalCollectionsListreverse","ui":"<b>Cal.Collections.List.reverse<\/b><br\/>[CALDoc] Reverses the elements of a list. reverse is O(n) time where n is the length of the list.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.filterIndexedExamples","name":"filterIndexedExamples","type":"CalCollectionsListfilterIndexedExamples","ui":"<b>Cal.Collections.List.filterIndexedExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.insertAt","name":"insertAt","type":"CalCollectionsListinsertAt","ui":"<b>Cal.Collections.List.insertAt<\/b><br\/>[CALDoc] Inserts a value into a list at the specified index.","terminals":[{"name":"index","input":"text"},{"name":"list","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.foldLeft1","name":"foldLeft1","type":"CalCollectionsListfoldLeft1","ui":"<b>Cal.Collections.List.foldLeft1<\/b><br\/>[CALDoc] <code>foldLeft1<\/code> is similar to <code>foldLeft<\/code>, except that it uses the first element of the list as the initial value\nin the folding process. ","terminals":[{"name":"foldFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sortByExamples","name":"sortByExamples","type":"CalCollectionsListsortByExamples","ui":"<b>Cal.Collections.List.sortByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.sortBy","name":"sortBy","type":"CalCollectionsListsortBy","ui":"<b>Cal.Collections.List.sortBy<\/b><br\/>[CALDoc] Sorts the specified list according to the specified comparison function. ","terminals":[{"name":"comparisonFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.list1","name":"list1","type":"CalCollectionsListlist1","ui":"<b>Cal.Collections.List.list1<\/b><br\/>[CALDoc] Constructs a list of one item.","terminals":[{"name":"item","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.map","name":"map","type":"CalCollectionsListmap","ui":"<b>Cal.Collections.List.map<\/b><br\/>[CALDoc] <code>map mapFunction list<\/code> applies the function <code>mapFunction<\/code> to each element of the list and returns the\nresulting list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zipWith","name":"zipWith","type":"CalCollectionsListzipWith","ui":"<b>Cal.Collections.List.zipWith<\/b><br\/>[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of two lists.","terminals":[{"name":"zipFunction","input":"text"},{"name":"list1","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.intersectBy","name":"intersectBy","type":"CalCollectionsListintersectBy","ui":"<b>Cal.Collections.List.intersectBy<\/b><br\/>[CALDoc] Takes the intersection of two lists.","terminals":[{"name":"list2","input":"text"},{"name":"eq","input":"text"},{"name":"list1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.lookup","name":"lookup","type":"CalCollectionsListlookup","ui":"<b>Cal.Collections.List.lookup<\/b><br\/>[CALDoc] <code>lookup key map<\/code> returns the value corresponding to key in the map (association list).","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.unionBy","name":"unionBy","type":"CalCollectionsListunionBy","ui":"<b>Cal.Collections.List.unionBy<\/b><br\/>[CALDoc] <code>unionBy eq list1 list2<\/code> returns <code>list1<\/code> concatenated with the nonduplicate elements of <code>list2<\/code>\n(under <code>eq<\/code>) that do not occur in <code>list1<\/code>.","terminals":[{"name":"eq","input":"text"},{"name":"list1","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.foldLeft","name":"foldLeft","type":"CalCollectionsListfoldLeft","ui":"<b>Cal.Collections.List.foldLeft<\/b><br\/>[CALDoc] <code>foldLeft foldFunction initialValue list<\/code> collapses or 'folds' the list down to a single result, starting\nfrom the left of the list. ","terminals":[{"name":"list","input":"text"},{"name":"foldFunction","input":"text"},{"name":"initialValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mapField2","name":"mapField2","type":"CalCollectionsListmapField2","ui":"<b>Cal.Collections.List.mapField2<\/b><br\/>[CALDoc] Applies the function <code>mapFunction<\/code> to each <code>#2<\/code> field in the list or records and returns\nthe resulting list.","terminals":[{"name":"list","input":"text"},{"name":"mapFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.dropWhile","name":"dropWhile","type":"CalCollectionsListdropWhile","ui":"<b>Cal.Collections.List.dropWhile<\/b><br\/>[CALDoc] <code>dropWhile dropWhileTrueFunction list<\/code> drops the longest prefix of the list for which <code>dropWhileTrueFunction<\/code>\nis <code>True<\/code> for each element.","terminals":[{"name":"dropWhileTrueFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.last","name":"last","type":"CalCollectionsListlast","ui":"<b>Cal.Collections.List.last<\/b><br\/>[CALDoc] Returns the last element of the specified list. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.chopExamples","name":"chopExamples","type":"CalCollectionsListchopExamples","ui":"<b>Cal.Collections.List.chopExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.chop","name":"chop","type":"CalCollectionsListchop","ui":"<b>Cal.Collections.List.chop<\/b><br\/>[CALDoc] Chops up a list into equals sublists of length <code>chopLength<\/code>.","terminals":[{"name":"listToChop","input":"text"},{"name":"chopLength","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.take","name":"take","type":"CalCollectionsListtake","ui":"<b>Cal.Collections.List.take<\/b><br\/>[CALDoc] <code>take nElements list<\/code> returns a list consisting of the first <code>nElements<\/code> elements of <code>list<\/code>.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.replicateList","name":"replicateList","type":"CalCollectionsListreplicateList","ui":"<b>Cal.Collections.List.replicateList<\/b><br\/>[CALDoc] Replicates a list for a specified number of times.","terminals":[{"name":"nCopies","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.replicate","name":"replicate","type":"CalCollectionsListreplicate","ui":"<b>Cal.Collections.List.replicate<\/b><br\/>[CALDoc] <code>replicate nCopies valueToReplicate<\/code> is a list of length <code>nCopies<\/code>, with every element equal to\n<code>valueToReplicate<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zipWith3","name":"zipWith3","type":"CalCollectionsListzipWith3","ui":"<b>Cal.Collections.List.zipWith3<\/b><br\/>[CALDoc] Returns a list where each element is the result of applying a function to the\ncorresponding elements of three lists.","terminals":[{"name":"zipFunction","input":"text"},{"name":"list1","input":"text"},{"name":"list2","input":"text"},{"name":"list3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.startsWith","name":"startsWith","type":"CalCollectionsListstartsWith","ui":"<b>Cal.Collections.List.startsWith<\/b><br\/>[CALDoc] Returns whether <code>listToTest<\/code> starts with the specified prefix.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.findIndex","name":"findIndex","type":"CalCollectionsListfindIndex","ui":"<b>Cal.Collections.List.findIndex<\/b><br\/>[CALDoc] <code>findIndex predicate list<\/code> returns the first index of list for which the predicate function is <code>True<\/code>,\nif there is one, or <code>Nothing<\/code> otherwise. ","terminals":[{"name":"list","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.lengthAtLeast","name":"lengthAtLeast","type":"CalCollectionsListlengthAtLeast","ui":"<b>Cal.Collections.List.lengthAtLeast<\/b><br\/>[CALDoc] <code>lengthAtLeast minLength list<\/code> returns <code>True<\/code> if the length of the list is greater than or equal\nto <code>minLength<\/code>.","terminals":[{"name":"minLength","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.removeDuplicatesExamples","name":"removeDuplicatesExamples","type":"CalCollectionsListremoveDuplicatesExamples","ui":"<b>Cal.Collections.List.removeDuplicatesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.removeDuplicates","name":"removeDuplicates","type":"CalCollectionsListremoveDuplicates","ui":"<b>Cal.Collections.List.removeDuplicates<\/b><br\/>[CALDoc] <code>removeDuplicates list<\/code> returns the sublist of list with duplicates removed. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.removeDuplicatesBy","name":"removeDuplicatesBy","type":"CalCollectionsListremoveDuplicatesBy","ui":"<b>Cal.Collections.List.removeDuplicatesBy<\/b><br\/>[CALDoc] <code>removeDuplicatesBy eq list<\/code> returns the sublist of list with duplicates (as determined by <code>eq<\/code>) removed.\n","terminals":[{"name":"list","input":"text"},{"name":"eq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.isElemBy","name":"isElemBy","type":"CalCollectionsListisElemBy","ui":"<b>Cal.Collections.List.isElemBy<\/b><br\/>[CALDoc] Returns whether a value is an element of a list, according to the specified equality comparison function.","terminals":[{"name":"eq","input":"text"},{"name":"list","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.any","name":"any","type":"CalCollectionsListany","ui":"<b>Cal.Collections.List.any<\/b><br\/>[CALDoc] <code>any predicate list<\/code> returns <code>True<\/code> if the predicate function evaluates to <code>True<\/code> on at least\none element of the list.","terminals":[{"name":"list","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.groupBy","name":"groupBy","type":"CalCollectionsListgroupBy","ui":"<b>Cal.Collections.List.groupBy<\/b><br\/>[CALDoc] Splits the specified list into a list of lists of equal, adjacent elements.\n","terminals":[{"name":"equalityFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.span","name":"span","type":"CalCollectionsListspan","ui":"<b>Cal.Collections.List.span<\/b><br\/>[CALDoc] <code>span predicate list<\/code> breaks up <code>list<\/code> into a pair of lists. ","terminals":[{"name":"predicate","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mergeByExamples","name":"mergeByExamples","type":"CalCollectionsListmergeByExamples","ui":"<b>Cal.Collections.List.mergeByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.mergeBy","name":"mergeBy","type":"CalCollectionsListmergeBy","ui":"<b>Cal.Collections.List.mergeBy<\/b><br\/>[CALDoc] Assuming that <code>list1<\/code> and <code>list2<\/code> are sorted according to <code>comparator<\/code>,\n<code>mergeBy comparator list1 list2<\/code> will merge all the elements of the two lists into\na single list sorted according to <code>comparator<\/code>. ","terminals":[{"name":"list1","input":"text"},{"name":"comparator","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.orList","name":"orList","type":"CalCollectionsListorList","ui":"<b>Cal.Collections.List.orList<\/b><br\/>[CALDoc] <code>orList list<\/code> returns <code>True<\/code> if at least one element of the list is <code>True<\/code>.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.takeWhile","name":"takeWhile","type":"CalCollectionsListtakeWhile","ui":"<b>Cal.Collections.List.takeWhile<\/b><br\/>[CALDoc] <code>takeWhile takeWhileTrueFunction list<\/code> returns the longest prefix of the list for which <code>takeWhileTrueFunction<\/code>\nis <code>True<\/code> for each element.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.elemIndices","name":"elemIndices","type":"CalCollectionsListelemIndices","ui":"<b>Cal.Collections.List.elemIndices<\/b><br\/>[CALDoc] Returns the indices of all elements of the specified list equal to the\nspecified value, in ascending order.","terminals":[{"name":"x","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.isSingletonList","name":"isSingletonList","type":"CalCollectionsListisSingletonList","ui":"<b>Cal.Collections.List.isSingletonList<\/b><br\/>[CALDoc] Returns whether a list has exactly 1 element.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.filterIndexed","name":"filterIndexed","type":"CalCollectionsListfilterIndexed","ui":"<b>Cal.Collections.List.filterIndexed<\/b><br\/>[CALDoc] <code>filterIndexed keepIfTrueFunction list<\/code> applies the predicate function <code>keepIfTrueFunction<\/code> to each element\nof the list, and returns the list of elements for which the predicate evaluates to <code>True<\/code>. <code>keepIfTrueFunction<\/code>\nis a function that is passed both the element value, and its zero-based index in the list.","terminals":[{"name":"keepIfTrueFunction","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.inListByExamples","name":"inListByExamples","type":"CalCollectionsListinListByExamples","ui":"<b>Cal.Collections.List.inListByExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.inListBy","name":"inListBy","type":"CalCollectionsListinListBy","ui":"<b>Cal.Collections.List.inListBy<\/b><br\/>[CALDoc] Returns the position of the first occurrence of one list within another. ","terminals":[{"name":"fromIndex","input":"text"},{"name":"searchList","input":"text"},{"name":"equalityComparisonFunction","input":"text"},{"name":"findList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.drop","name":"drop","type":"CalCollectionsListdrop","ui":"<b>Cal.Collections.List.drop<\/b><br\/>[CALDoc] <code>drop nElements list<\/code> drops the first <code>nElements<\/code> elements of the list and returns the remaining elements","terminals":[{"name":"list","input":"text"},{"name":"nElements","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.startsWithBy","name":"startsWithBy","type":"CalCollectionsListstartsWithBy","ui":"<b>Cal.Collections.List.startsWithBy<\/b><br\/>[CALDoc] Returns whether <code>listToTest<\/code> starts with the specified prefix using <code>eq<\/code> as the notion of equality between \nelements of the prefix and elements of the listToTest.","terminals":[{"name":"listToTest","input":"text"},{"name":"prefix","input":"text"},{"name":"eq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.tail","name":"tail","type":"CalCollectionsListtail","ui":"<b>Cal.Collections.List.tail<\/b><br\/>[CALDoc] Returns a list of the elements after the first element of the list. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.head","name":"head","type":"CalCollectionsListhead","ui":"<b>Cal.Collections.List.head<\/b><br\/>[CALDoc] Returns the first element of the specified list. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.rightValuesExamples","name":"rightValuesExamples","type":"CalCollectionsListrightValuesExamples","ui":"<b>Cal.Collections.List.rightValuesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.rightValues","name":"rightValues","type":"CalCollectionsListrightValues","ui":"<b>Cal.Collections.List.rightValues<\/b><br\/>[CALDoc] Returns a <code>Prelude.List<\/code> with only the <code>Right<\/code> values of the <code>Prelude.List<\/code> of \n<code>Either<\/code>s passed in.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.delete","name":"delete","type":"CalCollectionsListdelete","ui":"<b>Cal.Collections.List.delete<\/b><br\/>[CALDoc] <code>delete x list<\/code> returns the list with the first element equivalent to <code>x<\/code> removed.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.deleteBy","name":"deleteBy","type":"CalCollectionsListdeleteBy","ui":"<b>Cal.Collections.List.deleteBy<\/b><br\/>[CALDoc] <code>deleteBy eq x list<\/code> returns the list with the first element equivalent to <code>x<\/code> (under <code>eq<\/code>) removed.","terminals":[{"name":"list","input":"text"},{"name":"x","input":"text"},{"name":"eq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.findIndicesExamples","name":"findIndicesExamples","type":"CalCollectionsListfindIndicesExamples","ui":"<b>Cal.Collections.List.findIndicesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.length","name":"length","type":"CalCollectionsListlength","ui":"<b>Cal.Collections.List.length<\/b><br\/>[CALDoc] Returns the length of the specified list. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.findIndices","name":"findIndices","type":"CalCollectionsListfindIndices","ui":"<b>Cal.Collections.List.findIndices<\/b><br\/>[CALDoc] Returns the indices of all elements satisfying the specified predicate, in ascending order. ","terminals":[{"name":"list","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.insertListAt","name":"insertListAt","type":"CalCollectionsListinsertListAt","ui":"<b>Cal.Collections.List.insertListAt<\/b><br\/>[CALDoc] Inserts values into a list at the specified index.","terminals":[{"name":"list","input":"text"},{"name":"index","input":"text"},{"name":"valuesToInsert","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.isNotElem","name":"isNotElem","type":"CalCollectionsListisNotElem","ui":"<b>Cal.Collections.List.isNotElem<\/b><br\/>[CALDoc] <code>isNotElem elementValue list<\/code> returns <code>True<\/code> if <code>elementValue<\/code> is not an element of the list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.all","name":"all","type":"CalCollectionsListall","ui":"<b>Cal.Collections.List.all<\/b><br\/>[CALDoc] <code>all predicate list<\/code> returns <code>True<\/code> if the predicate function evaluates to <code>True<\/code> on all the\nelements of the list (and the list is finite).","terminals":[{"name":"list","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.filter","name":"filter","type":"CalCollectionsListfilter","ui":"<b>Cal.Collections.List.filter<\/b><br\/>[CALDoc] <code>filter keepIfTrueFunction list<\/code> applies the predicate function to each element of the list, and returns\nthe list of elements for which the predicate evaluates to <code>True<\/code>.","terminals":[{"name":"list","input":"text"},{"name":"keepIfTrueFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.zip7","name":"zip7","type":"CalCollectionsListzip7","ui":"<b>Cal.Collections.List.zip7<\/b><br\/>[CALDoc] Converts seven lists into a list of corresponding 7-tuples.\n","terminals":[{"name":"list6","input":"text"},{"name":"list2","input":"text"},{"name":"list7","input":"text"},{"name":"list4","input":"text"},{"name":"list1","input":"text"},{"name":"list3","input":"text"},{"name":"list5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.init","name":"init","type":"CalCollectionsListinit","ui":"<b>Cal.Collections.List.init<\/b><br\/>[CALDoc] Returns a list of all the elements of the list except the last one. ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.foldLeftStrict","name":"foldLeftStrict","type":"CalCollectionsListfoldLeftStrict","ui":"<b>Cal.Collections.List.foldLeftStrict<\/b><br\/>[CALDoc] This is the strict version of <code>foldLeft<\/code>. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.intersperse","name":"intersperse","type":"CalCollectionsListintersperse","ui":"<b>Cal.Collections.List.intersperse<\/b><br\/>[CALDoc] This function takes an element and a list and \"intersperses\" that element\nbetween the elements of the list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.outputListWith","name":"outputListWith","type":"CalCollectionsListoutputListWith","ui":"<b>Cal.Collections.List.outputListWith<\/b><br\/>[CALDoc] Converts a CAL list to a Java list using the element mapping function <code>f<\/code> of type <code>a -&gt; JObject<\/code> \nto convert elements of the CAL list.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.leftValuesExamples","name":"leftValuesExamples","type":"CalCollectionsListleftValuesExamples","ui":"<b>Cal.Collections.List.leftValuesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.leftValues","name":"leftValues","type":"CalCollectionsListleftValues","ui":"<b>Cal.Collections.List.leftValues<\/b><br\/>[CALDoc] Returns a <code>Prelude.List<\/code> with only the <code>Left<\/code> values of the <code>Prelude.List<\/code> of \n<code>Either<\/code>s passed in.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.jIteratorToJEnumeration","name":"jIteratorToJEnumeration","type":"CalCollectionsListjIteratorToJEnumeration","ui":"<b>Cal.Collections.List.jIteratorToJEnumeration<\/b><br\/>[CALDoc] Converts a Java iterator to a Java enumeration in a lazy fashion.","terminals":[{"name":"it","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.jEnumerationToJIterator","name":"jEnumerationToJIterator","type":"CalCollectionsListjEnumerationToJIterator","ui":"<b>Cal.Collections.List.jEnumerationToJIterator<\/b><br\/>[CALDoc] Converts a Java enumeration to a Java iterator in a lazy fashion.","terminals":[{"name":"e","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.jListToJCollection","name":"jListToJCollection","type":"CalCollectionsListjListToJCollection","ui":"<b>Cal.Collections.List.jListToJCollection<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.jSortBy","name":"jSortBy","type":"CalCollectionsListjSortBy","ui":"<b>Cal.Collections.List.jSortBy<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.toLowerCaseString","name":"toLowerCaseString","type":"CalCollectionsListtoLowerCaseString","ui":"<b>Cal.Collections.List.toLowerCaseString<\/b><br\/>[CALDoc] DO NOT MAKE PUBLIC.\n","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.toLowerCase","name":"toLowerCase","type":"CalCollectionsListtoLowerCase","ui":"<b>Cal.Collections.List.toLowerCase<\/b><br\/>[CALDoc] Must remain private. ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.toUpperCase","name":"toUpperCase","type":"CalCollectionsListtoUpperCase","ui":"<b>Cal.Collections.List.toUpperCase<\/b><br\/>[CALDoc] Must remain private. ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.List.makeIterator","name":"makeIterator","type":"CalCollectionsListmakeIterator","ui":"<b>Cal.Collections.List.makeIterator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.List"]},{"description":"Cal.Collections.LongMap.isProperSubmap","name":"isProperSubmap","type":"CalCollectionsLongMapisProperSubmap","ui":"<b>Cal.Collections.LongMap.isProperSubmap<\/b><br\/>[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).","terminals":[{"name":"m1","input":"text"},{"name":"m2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.outputLongMap","name":"outputLongMap","type":"CalCollectionsLongMapoutputLongMap","ui":"<b>Cal.Collections.LongMap.outputLongMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.isEmpty","name":"isEmpty","type":"CalCollectionsLongMapisEmpty","ui":"<b>Cal.Collections.LongMap.isEmpty<\/b><br\/>[CALDoc] Returns whether the map is empty.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.updateLookupWithKey","name":"updateLookupWithKey","type":"CalCollectionsLongMapupdateLookupWithKey","ui":"<b>Cal.Collections.LongMap.updateLookupWithKey<\/b><br\/>[CALDoc] Simultaneously looks up and updates the map at a specific key.","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fold","name":"fold","type":"CalCollectionsLongMapfold","ui":"<b>Cal.Collections.LongMap.fold<\/b><br\/>[CALDoc] Folds over the values in the map in an unspecified order.","terminals":[{"name":"z","input":"text"},{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.inputLongMap","name":"inputLongMap","type":"CalCollectionsLongMapinputLongMap","ui":"<b>Cal.Collections.LongMap.inputLongMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.find","name":"find","type":"CalCollectionsLongMapfind","ui":"<b>Cal.Collections.LongMap.find<\/b><br\/>[CALDoc] Finds the value of a key. ","terminals":[{"name":"m","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.elems","name":"elems","type":"CalCollectionsLongMapelems","ui":"<b>Cal.Collections.LongMap.elems<\/b><br\/>[CALDoc] Returns all elements of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mapKeys","name":"mapKeys","type":"CalCollectionsLongMapmapKeys","ui":"<b>Cal.Collections.LongMap.mapKeys<\/b><br\/>[CALDoc] <code>mapKeys f s<\/code> is the map obtained by applying <code>f<\/code> to each key of <code>s<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.splitLookup","name":"splitLookup","type":"CalCollectionsLongMapsplitLookup","ui":"<b>Cal.Collections.LongMap.splitLookup<\/b><br\/>[CALDoc] <code>splitLookup key map<\/code> splits a map just like <code>split<\/code> but also returns <code>lookup key map<\/code>.","terminals":[{"name":"key","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.insertLookupWithKey","name":"insertLookupWithKey","type":"CalCollectionsLongMapinsertLookupWithKey","ui":"<b>Cal.Collections.LongMap.insertLookupWithKey<\/b><br\/>[CALDoc] <code>insertLookupWithKey f k x map<\/code> is a pair where the first element is equal to\n<code>lookup k map<\/code> and the second element equal to <code>insertWithKey f k x map<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"x","input":"text"},{"name":"t","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.unionsWithKey","name":"unionsWithKey","type":"CalCollectionsLongMapunionsWithKey","ui":"<b>Cal.Collections.LongMap.unionsWithKey<\/b><br\/>[CALDoc] Returns the union of a list of maps, with a combining operation.","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.showLongMap","name":"showLongMap","type":"CalCollectionsLongMapshowLongMap","ui":"<b>Cal.Collections.LongMap.showLongMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.unions","name":"unions","type":"CalCollectionsLongMapunions","ui":"<b>Cal.Collections.LongMap.unions<\/b><br\/>[CALDoc] Returns the union of a list of maps.","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.intersection","name":"intersection","type":"CalCollectionsLongMapintersection","ui":"<b>Cal.Collections.LongMap.intersection<\/b><br\/>[CALDoc] Returns the (left-biased) intersection of two maps (based on keys). ","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.isSubmap","name":"isSubmap","type":"CalCollectionsLongMapisSubmap","ui":"<b>Cal.Collections.LongMap.isSubmap<\/b><br\/>[CALDoc] Returns whether the first map is a submap of the second map.","terminals":[{"name":"m1","input":"text"},{"name":"m2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.isSubmapBy","name":"isSubmapBy","type":"CalCollectionsLongMapisSubmapBy","ui":"<b>Cal.Collections.LongMap.isSubmapBy<\/b><br\/>[CALDoc] Returns whether the first map is a submap of the second map.","terminals":[{"name":"t2","input":"text"},{"name":"pred","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.keySet","name":"keySet","type":"CalCollectionsLongMapkeySet","ui":"<b>Cal.Collections.LongMap.keySet<\/b><br\/>[CALDoc] Returns a set of all keys of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.keys","name":"keys","type":"CalCollectionsLongMapkeys","ui":"<b>Cal.Collections.LongMap.keys<\/b><br\/>[CALDoc] Returns all keys of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fromDistinctAscList","name":"fromDistinctAscList","type":"CalCollectionsLongMapfromDistinctAscList","ui":"<b>Cal.Collections.LongMap.fromDistinctAscList<\/b><br\/>[CALDoc] Builds a map from an ascending list of distinct elements in linear time.\n","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.match","name":"match","type":"CalCollectionsLongMapmatch","ui":"<b>Cal.Collections.LongMap.match<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"p","input":"text"},{"name":"i","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fromAscList","name":"fromAscList","type":"CalCollectionsLongMapfromAscList","ui":"<b>Cal.Collections.LongMap.fromAscList<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time. ","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.partition","name":"partition","type":"CalCollectionsLongMappartition","ui":"<b>Cal.Collections.LongMap.partition<\/b><br\/>[CALDoc] Partitions the map according to a predicate. ","terminals":[{"name":"p","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.partitionWithKey","name":"partitionWithKey","type":"CalCollectionsLongMappartitionWithKey","ui":"<b>Cal.Collections.LongMap.partitionWithKey<\/b><br\/>[CALDoc] Partitions the map according to a predicate. ","terminals":[{"name":"pred","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mapKeysWith","name":"mapKeysWith","type":"CalCollectionsLongMapmapKeysWith","ui":"<b>Cal.Collections.LongMap.mapKeysWith<\/b><br\/>[CALDoc] <code>mapKeysWith c f s<\/code> is the map obtained by applying <code>f<\/code> to each key of <code>s<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.size","name":"size","type":"CalCollectionsLongMapsize","ui":"<b>Cal.Collections.LongMap.size<\/b><br\/>[CALDoc] Returns the number of elements in the map.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mapAccumR","name":"mapAccumR","type":"CalCollectionsLongMapmapAccumR","ui":"<b>Cal.Collections.LongMap.mapAccumR<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.single","name":"single","type":"CalCollectionsLongMapsingle","ui":"<b>Cal.Collections.LongMap.single<\/b><br\/>[CALDoc] Creates a map with a single element.","terminals":[{"name":"x","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.unionsWith","name":"unionsWith","type":"CalCollectionsLongMapunionsWith","ui":"<b>Cal.Collections.LongMap.unionsWith<\/b><br\/>[CALDoc] Returns the union of a list of maps, with a combining operation.","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.unionWith","name":"unionWith","type":"CalCollectionsLongMapunionWith","ui":"<b>Cal.Collections.LongMap.unionWith<\/b><br\/>[CALDoc] Returns the left-biased union of two maps, with a combining function.","terminals":[{"name":"m2","input":"text"},{"name":"f","input":"text"},{"name":"m1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.update","name":"update","type":"CalCollectionsLongMapupdate","ui":"<b>Cal.Collections.LongMap.update<\/b><br\/>[CALDoc] <code>update f k map<\/code> updates the value <code>x<\/code> at <code>k<\/code> (if it is in the map). ","terminals":[{"name":"m","input":"text"},{"name":"f","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.toAscList","name":"toAscList","type":"CalCollectionsLongMaptoAscList","ui":"<b>Cal.Collections.LongMap.toAscList<\/b><br\/>[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.lookupWithDefault","name":"lookupWithDefault","type":"CalCollectionsLongMaplookupWithDefault","ui":"<b>Cal.Collections.LongMap.lookupWithDefault<\/b><br\/>[CALDoc] <code>lookupWithDefault key map defaultValue<\/code> returns the value at the given key or <code>defaultValue<\/code>\nwhen the key is not in the map.","terminals":[{"name":"defaultValue","input":"text"},{"name":"key","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.isProperSubmapBy","name":"isProperSubmapBy","type":"CalCollectionsLongMapisProperSubmapBy","ui":"<b>Cal.Collections.LongMap.isProperSubmapBy<\/b><br\/>[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).","terminals":[{"name":"pred","input":"text"},{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.assocs","name":"assocs","type":"CalCollectionsLongMapassocs","ui":"<b>Cal.Collections.LongMap.assocs<\/b><br\/>[CALDoc] Returns an association list of all key-value pairs in the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.submapCmp","name":"submapCmp","type":"CalCollectionsLongMapsubmapCmp","ui":"<b>Cal.Collections.LongMap.submapCmp<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"pred","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.map","name":"map","type":"CalCollectionsLongMapmap","ui":"<b>Cal.Collections.LongMap.map<\/b><br\/>[CALDoc] Maps a function over all values in the map.","terminals":[{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mapWithKey","name":"mapWithKey","type":"CalCollectionsLongMapmapWithKey","ui":"<b>Cal.Collections.LongMap.mapWithKey<\/b><br\/>[CALDoc] Maps a function over all values in the map.","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.split","name":"split","type":"CalCollectionsLongMapsplit","ui":"<b>Cal.Collections.LongMap.split<\/b><br\/>[CALDoc] <code>split k map<\/code> returns a pair <code>(map1,map2)<\/code> where the keys in <code>map1<\/code> are smaller\nthan <code>k<\/code> and the keys in <code>map2<\/code> larger than <code>k<\/code>. ","terminals":[{"name":"k","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.union","name":"union","type":"CalCollectionsLongMapunion","ui":"<b>Cal.Collections.LongMap.union<\/b><br\/>[CALDoc] <code>union t1 t2<\/code> takes the left-biased union of <code>t1<\/code> and <code>t2<\/code>. ","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.insertWith","name":"insertWith","type":"CalCollectionsLongMapinsertWith","ui":"<b>Cal.Collections.LongMap.insertWith<\/b><br\/>[CALDoc] Inserts a new key and value in the map with a combining function.","terminals":[{"name":"x","input":"text"},{"name":"k","input":"text"},{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.unionWithKey","name":"unionWithKey","type":"CalCollectionsLongMapunionWithKey","ui":"<b>Cal.Collections.LongMap.unionWithKey<\/b><br\/>[CALDoc] Returns the left-biased union of two maps, with a combining function.","terminals":[{"name":"t2","input":"text"},{"name":"f","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.difference","name":"difference","type":"CalCollectionsLongMapdifference","ui":"<b>Cal.Collections.LongMap.difference<\/b><br\/>[CALDoc] Returns the difference of two maps (based on keys).","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.member","name":"member","type":"CalCollectionsLongMapmember","ui":"<b>Cal.Collections.LongMap.member<\/b><br\/>[CALDoc] Returns whether the key is a member of the map.","terminals":[{"name":"k","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.arbitraryLongMap","name":"arbitraryLongMap","type":"CalCollectionsLongMaparbitraryLongMap","ui":"<b>Cal.Collections.LongMap.arbitraryLongMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fromAscListWithKey","name":"fromAscListWithKey","type":"CalCollectionsLongMapfromAscListWithKey","ui":"<b>Cal.Collections.LongMap.fromAscListWithKey<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.intersectionWith","name":"intersectionWith","type":"CalCollectionsLongMapintersectionWith","ui":"<b>Cal.Collections.LongMap.intersectionWith<\/b><br\/>[CALDoc] Returns the intersection of two maps, with a combining function.","terminals":[{"name":"m1","input":"text"},{"name":"m2","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.intersectionWithKey","name":"intersectionWithKey","type":"CalCollectionsLongMapintersectionWithKey","ui":"<b>Cal.Collections.LongMap.intersectionWithKey<\/b><br\/>[CALDoc] Returns the intersection of two maps, with a combining function.","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.coarbitraryLongMap","name":"coarbitraryLongMap","type":"CalCollectionsLongMapcoarbitraryLongMap","ui":"<b>Cal.Collections.LongMap.coarbitraryLongMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"map","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.toList","name":"toList","type":"CalCollectionsLongMaptoList","ui":"<b>Cal.Collections.LongMap.toList<\/b><br\/>[CALDoc] Converts to a list of key-value pairs with the keys.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.foldWithKey","name":"foldWithKey","type":"CalCollectionsLongMapfoldWithKey","ui":"<b>Cal.Collections.LongMap.foldWithKey<\/b><br\/>[CALDoc] Folds over the keys and values in the map in an unspecified order.","terminals":[{"name":"f","input":"text"},{"name":"z","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.foldR","name":"foldR","type":"CalCollectionsLongMapfoldR","ui":"<b>Cal.Collections.LongMap.foldR<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"z","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fromList","name":"fromList","type":"CalCollectionsLongMapfromList","ui":"<b>Cal.Collections.LongMap.fromList<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs.","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.insert","name":"insert","type":"CalCollectionsLongMapinsert","ui":"<b>Cal.Collections.LongMap.insert<\/b><br\/>[CALDoc] Inserts a new key\/value pair in the map. ","terminals":[{"name":"k","input":"text"},{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fromAscListWith","name":"fromAscListWith","type":"CalCollectionsLongMapfromAscListWith","ui":"<b>Cal.Collections.LongMap.fromAscListWith<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fromListWith","name":"fromListWith","type":"CalCollectionsLongMapfromListWith","ui":"<b>Cal.Collections.LongMap.fromListWith<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs with a combining function.","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.fromListWithKey","name":"fromListWithKey","type":"CalCollectionsLongMapfromListWithKey","ui":"<b>Cal.Collections.LongMap.fromListWithKey<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs with a combining function.","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.insertWithKey","name":"insertWithKey","type":"CalCollectionsLongMapinsertWithKey","ui":"<b>Cal.Collections.LongMap.insertWithKey<\/b><br\/>[CALDoc] Inserts a new key and value in the map with a combining function.","terminals":[{"name":"x","input":"text"},{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.join","name":"join","type":"CalCollectionsLongMapjoin","ui":"<b>Cal.Collections.LongMap.join<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"p2","input":"text"},{"name":"p1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.branchMask","name":"branchMask","type":"CalCollectionsLongMapbranchMask","ui":"<b>Cal.Collections.LongMap.branchMask<\/b><br\/>[CALDoc] ","terminals":[{"name":"p1","input":"text"},{"name":"p2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mapAccum","name":"mapAccum","type":"CalCollectionsLongMapmapAccum","ui":"<b>Cal.Collections.LongMap.mapAccum<\/b><br\/>[CALDoc] Threads an accumulating argument through the map in an unspecified order.","terminals":[{"name":"f","input":"text"},{"name":"a","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mapAccumWithKey","name":"mapAccumWithKey","type":"CalCollectionsLongMapmapAccumWithKey","ui":"<b>Cal.Collections.LongMap.mapAccumWithKey<\/b><br\/>[CALDoc] Threads an accumulating argument through the map in an unspecified order.","terminals":[{"name":"t","input":"text"},{"name":"a","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mapAccumL","name":"mapAccumL","type":"CalCollectionsLongMapmapAccumL","ui":"<b>Cal.Collections.LongMap.mapAccumL<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.delete","name":"delete","type":"CalCollectionsLongMapdelete","ui":"<b>Cal.Collections.LongMap.delete<\/b><br\/>[CALDoc] Deletes a key and its value from the map. ","terminals":[{"name":"k","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.differenceWith","name":"differenceWith","type":"CalCollectionsLongMapdifferenceWith","ui":"<b>Cal.Collections.LongMap.differenceWith<\/b><br\/>[CALDoc] Returns the difference of two maps, with a combining function.","terminals":[{"name":"m2","input":"text"},{"name":"f","input":"text"},{"name":"m1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.differenceWithKey","name":"differenceWithKey","type":"CalCollectionsLongMapdifferenceWithKey","ui":"<b>Cal.Collections.LongMap.differenceWithKey<\/b><br\/>[CALDoc] Returns the difference of two maps, with a combining function. ","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.shorter","name":"shorter","type":"CalCollectionsLongMapshorter","ui":"<b>Cal.Collections.LongMap.shorter<\/b><br\/>[CALDoc] ","terminals":[{"name":"m2","input":"text"},{"name":"m1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.lookup","name":"lookup","type":"CalCollectionsLongMaplookup","ui":"<b>Cal.Collections.LongMap.lookup<\/b><br\/>[CALDoc] Looks up the value at a key in the map.","terminals":[{"name":"t","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.adjust","name":"adjust","type":"CalCollectionsLongMapadjust","ui":"<b>Cal.Collections.LongMap.adjust<\/b><br\/>[CALDoc] Adjusts a value at a specific key. ","terminals":[{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.filter","name":"filter","type":"CalCollectionsLongMapfilter","ui":"<b>Cal.Collections.LongMap.filter<\/b><br\/>[CALDoc] Filters all values that satisfy the predicate.","terminals":[{"name":"p","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.filterWithKey","name":"filterWithKey","type":"CalCollectionsLongMapfilterWithKey","ui":"<b>Cal.Collections.LongMap.filterWithKey<\/b><br\/>[CALDoc] Filters all keys\/values that satisfy the predicate.","terminals":[{"name":"t","input":"text"},{"name":"pred","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.adjustWithKey","name":"adjustWithKey","type":"CalCollectionsLongMapadjustWithKey","ui":"<b>Cal.Collections.LongMap.adjustWithKey<\/b><br\/>[CALDoc] Adjusts a value at a specific key. ","terminals":[{"name":"f","input":"text"},{"name":"k","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.updateWithKey","name":"updateWithKey","type":"CalCollectionsLongMapupdateWithKey","ui":"<b>Cal.Collections.LongMap.updateWithKey<\/b><br\/>[CALDoc] <code>updateWithKey f k map<\/code> updates the value <code>x<\/code> at <code>k<\/code> (if it is in the map). ","terminals":[{"name":"t","input":"text"},{"name":"k","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.Bin","name":"Bin","type":"CalCollectionsLongMapBin","ui":"<b>Cal.Collections.LongMap.Bin<\/b><br\/>[CALDoc] ","terminals":[{"name":"rightMap","input":"text"},{"name":"mask","input":"text"},{"name":"prefix","input":"text"},{"name":"leftMap","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.zero","name":"zero","type":"CalCollectionsLongMapzero","ui":"<b>Cal.Collections.LongMap.zero<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"i","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.nomatch","name":"nomatch","type":"CalCollectionsLongMapnomatch","ui":"<b>Cal.Collections.LongMap.nomatch<\/b><br\/>[CALDoc] ","terminals":[{"name":"p","input":"text"},{"name":"i","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.mask","name":"mask","type":"CalCollectionsLongMapmask","ui":"<b>Cal.Collections.LongMap.mask<\/b><br\/>[CALDoc] ","terminals":[{"name":"i","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.empty","name":"empty","type":"CalCollectionsLongMapempty","ui":"<b>Cal.Collections.LongMap.empty<\/b><br\/>[CALDoc] The empty map.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.Nil","name":"Nil","type":"CalCollectionsLongMapNil","ui":"<b>Cal.Collections.LongMap.Nil<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Collections.LongMap.Tip","name":"Tip","type":"CalCollectionsLongMapTip","ui":"<b>Cal.Collections.LongMap.Tip<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.LongMap"]},{"description":"Cal.Utilities.Math.asinh","name":"asinh","type":"CalUtilitiesMathasinh","ui":"<b>Cal.Utilities.Math.asinh<\/b><br\/>[CALDoc] Returns the inverse hyperbolic sine of the specified <code>Double<\/code> value.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.roundToNPlaces","name":"roundToNPlaces","type":"CalUtilitiesMathroundToNPlaces","ui":"<b>Cal.Utilities.Math.roundToNPlaces<\/b><br\/>[CALDoc] Rounds a number to N decimal places.","terminals":[{"name":"val","input":"text"},{"name":"nDecimalPlaces","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.acosh","name":"acosh","type":"CalUtilitiesMathacosh","ui":"<b>Cal.Utilities.Math.acosh<\/b><br\/>[CALDoc] Returns the inverse hyperbolic cosine of the specified <code>Double<\/code> value.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.logBase","name":"logBase","type":"CalUtilitiesMathlogBase","ui":"<b>Cal.Utilities.Math.logBase<\/b><br\/>[CALDoc] Returns the logarithm of the first argument in the base of the second argument.","terminals":[{"name":"base","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.atanh","name":"atanh","type":"CalUtilitiesMathatanh","ui":"<b>Cal.Utilities.Math.atanh<\/b><br\/>[CALDoc] Returns the inverse hyperbolic tangent of the specified <code>Double<\/code> value.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.fractionalPart","name":"fractionalPart","type":"CalUtilitiesMathfractionalPart","ui":"<b>Cal.Utilities.Math.fractionalPart<\/b><br\/>[CALDoc] Computes the fractional part of a <code>Double<\/code> value.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.truncate","name":"truncate","type":"CalUtilitiesMathtruncate","ui":"<b>Cal.Utilities.Math.truncate<\/b><br\/>[CALDoc] Truncates the <code>Double<\/code> value towards zero, dropping the fractional part.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.ieeeRemainder","name":"ieeeRemainder","type":"CalUtilitiesMathieeeRemainder","ui":"<b>Cal.Utilities.Math.ieeeRemainder<\/b><br\/>[CALDoc] Computes the remainder from a rounding division as prescribed by the IEEE 754 standard.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.roundFloatToInt","name":"roundFloatToInt","type":"CalUtilitiesMathroundFloatToInt","ui":"<b>Cal.Utilities.Math.roundFloatToInt<\/b><br\/>[CALDoc] Returns the <code>Int<\/code> value that is closest in value to the argument, calculated as <em>floor(x + 0.5)<\/em>.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.roundDoubleToLong","name":"roundDoubleToLong","type":"CalUtilitiesMathroundDoubleToLong","ui":"<b>Cal.Utilities.Math.roundDoubleToLong<\/b><br\/>[CALDoc] Returns the <code>Long<\/code> value that is closest in value to the argument, calculated as <em>floor(x + 0.5)<\/em>.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.round","name":"round","type":"CalUtilitiesMathround","ui":"<b>Cal.Utilities.Math.round<\/b><br\/>[CALDoc] Returns the integral value that is closest in value to the argument. ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.ceiling","name":"ceiling","type":"CalUtilitiesMathceiling","ui":"<b>Cal.Utilities.Math.ceiling<\/b><br\/>[CALDoc] Returns the smallest integral value that is greater than or equal to the argument.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.floor","name":"floor","type":"CalUtilitiesMathfloor","ui":"<b>Cal.Utilities.Math.floor<\/b><br\/>[CALDoc] Returns the largest integral value that is less than or equal to the argument.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.tanh","name":"tanh","type":"CalUtilitiesMathtanh","ui":"<b>Cal.Utilities.Math.tanh<\/b><br\/>[CALDoc] Returns the hyperbolic tangent of the specified <code>Double<\/code> value. ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.cosh","name":"cosh","type":"CalUtilitiesMathcosh","ui":"<b>Cal.Utilities.Math.cosh<\/b><br\/>[CALDoc] Returns the hyperbolic cosine of the specified <code>Double<\/code> value. ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.sinh","name":"sinh","type":"CalUtilitiesMathsinh","ui":"<b>Cal.Utilities.Math.sinh<\/b><br\/>[CALDoc] Returns the hyperbolic sine of the specified <code>Double<\/code> value. ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.atan2","name":"atan2","type":"CalUtilitiesMathatan2","ui":"<b>Cal.Utilities.Math.atan2<\/b><br\/>[CALDoc] Converts rectangular coordinates (x, y) to polar (r, theta). ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.atan","name":"atan","type":"CalUtilitiesMathatan","ui":"<b>Cal.Utilities.Math.atan<\/b><br\/>[CALDoc] Returns the arc tangent of an angle, in the range of <em>-pi\/2<\/em> through <em>pi\/2<\/em>.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.acos","name":"acos","type":"CalUtilitiesMathacos","ui":"<b>Cal.Utilities.Math.acos<\/b><br\/>[CALDoc] Returns the arc cosine of an angle, in the range of 0.0 through <em>pi<\/em>.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.asin","name":"asin","type":"CalUtilitiesMathasin","ui":"<b>Cal.Utilities.Math.asin<\/b><br\/>[CALDoc] Returns the arc sine of an angle, in the range of <em>-pi\/2<\/em> through <em>pi\/2<\/em>.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.tan","name":"tan","type":"CalUtilitiesMathtan","ui":"<b>Cal.Utilities.Math.tan<\/b><br\/>[CALDoc] Returns the trigonometric tangent of an angle.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.cos","name":"cos","type":"CalUtilitiesMathcos","ui":"<b>Cal.Utilities.Math.cos<\/b><br\/>[CALDoc] Returns the trigonometric cosine of an angle.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.sin","name":"sin","type":"CalUtilitiesMathsin","ui":"<b>Cal.Utilities.Math.sin<\/b><br\/>[CALDoc] Returns the trigonometric sine of an angle.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.degreesToRadians","name":"degreesToRadians","type":"CalUtilitiesMathdegreesToRadians","ui":"<b>Cal.Utilities.Math.degreesToRadians<\/b><br\/>[CALDoc] Converts an angle measure in degrees to an angle measure in radians.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.radiansToDegrees","name":"radiansToDegrees","type":"CalUtilitiesMathradiansToDegrees","ui":"<b>Cal.Utilities.Math.radiansToDegrees<\/b><br\/>[CALDoc] Converts an angle measure in radians to an angle measure in degrees.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.power","name":"power","type":"CalUtilitiesMathpower","ui":"<b>Cal.Utilities.Math.power<\/b><br\/>[CALDoc] Returns the result of raising the first argument to the power specified by the second argument.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.sqrt","name":"sqrt","type":"CalUtilitiesMathsqrt","ui":"<b>Cal.Utilities.Math.sqrt<\/b><br\/>[CALDoc] Returns the positive square root of the specified <code>Double<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.log10","name":"log10","type":"CalUtilitiesMathlog10","ui":"<b>Cal.Utilities.Math.log10<\/b><br\/>[CALDoc] Returns the base 10 logarithm of the specified <code>Double<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.log","name":"log","type":"CalUtilitiesMathlog","ui":"<b>Cal.Utilities.Math.log<\/b><br\/>[CALDoc] Returns the natural logarithm (base <em>e<\/em>) of the specified <code>Double<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.exp","name":"exp","type":"CalUtilitiesMathexp","ui":"<b>Cal.Utilities.Math.exp<\/b><br\/>[CALDoc] Returns Euler's number <em>e<\/em> raised to the power of the specified <code>Double<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.e","name":"e","type":"CalUtilitiesMathe","ui":"<b>Cal.Utilities.Math.e<\/b><br\/>[CALDoc] The <code>Double<\/code> value that is closer than any other to <em>e<\/em>, the base of the natural\nlogarithm.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Utilities.Math.pi","name":"pi","type":"CalUtilitiesMathpi","ui":"<b>Cal.Utilities.Math.pi<\/b><br\/>[CALDoc] The <code>Double<\/code> value that is closer than any other to <em>pi<\/em>, the mathematical constant\nrepresenting the ratio of a circle's circumference to its diameter.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Math"]},{"description":"Cal.Collections.Map.toDescList","name":"toDescList","type":"CalCollectionsMaptoDescList","ui":"<b>Cal.Collections.Map.toDescList<\/b><br\/>[CALDoc] Converts to a list of key-value pairs with the keys in descending order.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.findMin","name":"findMin","type":"CalCollectionsMapfindMin","ui":"<b>Cal.Collections.Map.findMin<\/b><br\/>[CALDoc] Finds the minimal key of the map.","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.isProperSubmap","name":"isProperSubmap","type":"CalCollectionsMapisProperSubmap","ui":"<b>Cal.Collections.Map.isProperSubmap<\/b><br\/>[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).","terminals":[{"name":"map1","input":"text"},{"name":"map2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.updateLookupWithKey","name":"updateLookupWithKey","type":"CalCollectionsMapupdateLookupWithKey","ui":"<b>Cal.Collections.Map.updateLookupWithKey<\/b><br\/>[CALDoc] Simultaneously looks up and updates the map at a specific key.","terminals":[{"name":"f","input":"text"},{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.deleteMin","name":"deleteMin","type":"CalCollectionsMapdeleteMin","ui":"<b>Cal.Collections.Map.deleteMin<\/b><br\/>[CALDoc] Deletes the minimal key of the map.","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fold","name":"fold","type":"CalCollectionsMapfold","ui":"<b>Cal.Collections.Map.fold<\/b><br\/>[CALDoc] Folds over the values in the map in an unspecified order. (= descending post-order)","terminals":[{"name":"f","input":"text"},{"name":"z","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.member","name":"member","type":"CalCollectionsMapmember","ui":"<b>Cal.Collections.Map.member<\/b><br\/>[CALDoc] Returns whether the key is a member of the map.","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.find","name":"find","type":"CalCollectionsMapfind","ui":"<b>Cal.Collections.Map.find<\/b><br\/>[CALDoc] Finds the value of a key. ","terminals":[{"name":"key","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.elems","name":"elems","type":"CalCollectionsMapelems","ui":"<b>Cal.Collections.Map.elems<\/b><br\/>[CALDoc] Returns all elements of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.foldL","name":"foldL","type":"CalCollectionsMapfoldL","ui":"<b>Cal.Collections.Map.foldL<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"z","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.inputMap","name":"inputMap","type":"CalCollectionsMapinputMap","ui":"<b>Cal.Collections.Map.inputMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.elemAt","name":"elemAt","type":"CalCollectionsMapelemAt","ui":"<b>Cal.Collections.Map.elemAt<\/b><br\/>[CALDoc] Retrieves an element by index. ","terminals":[{"name":"map","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.mapKeys","name":"mapKeys","type":"CalCollectionsMapmapKeys","ui":"<b>Cal.Collections.Map.mapKeys<\/b><br\/>[CALDoc] <code>mapKeys f map<\/code> is the map obtained by applying <code>f<\/code> to each key of <code>map<\/code>.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.insertLookupWithKey","name":"insertLookupWithKey","type":"CalCollectionsMapinsertLookupWithKey","ui":"<b>Cal.Collections.Map.insertLookupWithKey<\/b><br\/>[CALDoc] <code>insertLookupWithKey f key value map<\/code> is a pair where the first element is equal to\n<code>lookup key map<\/code> and the second element equal to <code>insertWithKey f key value map<\/code>.","terminals":[{"name":"map","input":"text"},{"name":"f","input":"text"},{"name":"value","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.unionsWithKey","name":"unionsWithKey","type":"CalCollectionsMapunionsWithKey","ui":"<b>Cal.Collections.Map.unionsWithKey<\/b><br\/>[CALDoc] Returns the union of a list of maps, with a combining operation.","terminals":[{"name":"maps","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.unions","name":"unions","type":"CalCollectionsMapunions","ui":"<b>Cal.Collections.Map.unions<\/b><br\/>[CALDoc] Returns the union of a list of maps.","terminals":[{"name":"maps","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.intersection","name":"intersection","type":"CalCollectionsMapintersection","ui":"<b>Cal.Collections.Map.intersection<\/b><br\/>[CALDoc] Returns the intersection of two maps. ","terminals":[{"name":"map2","input":"text"},{"name":"map1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.isSubmap","name":"isSubmap","type":"CalCollectionsMapisSubmap","ui":"<b>Cal.Collections.Map.isSubmap<\/b><br\/>[CALDoc] Returns whether the first map is a submap of the second map.","terminals":[{"name":"map2","input":"text"},{"name":"map1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.isSubmapBy","name":"isSubmapBy","type":"CalCollectionsMapisSubmapBy","ui":"<b>Cal.Collections.Map.isSubmapBy<\/b><br\/>[CALDoc] Returns whether the first map is a submap of the second map.","terminals":[{"name":"map1","input":"text"},{"name":"map2","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.keySet","name":"keySet","type":"CalCollectionsMapkeySet","ui":"<b>Cal.Collections.Map.keySet<\/b><br\/>[CALDoc] Returns a set of all keys of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.keys","name":"keys","type":"CalCollectionsMapkeys","ui":"<b>Cal.Collections.Map.keys<\/b><br\/>[CALDoc] Returns all keys of the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fromAscList","name":"fromAscList","type":"CalCollectionsMapfromAscList","ui":"<b>Cal.Collections.Map.fromAscList<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time. ","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.partition","name":"partition","type":"CalCollectionsMappartition","ui":"<b>Cal.Collections.Map.partition<\/b><br\/>[CALDoc] Partitions the map according to a predicate. ","terminals":[{"name":"p","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.partitionWithKey","name":"partitionWithKey","type":"CalCollectionsMappartitionWithKey","ui":"<b>Cal.Collections.Map.partitionWithKey<\/b><br\/>[CALDoc] Partitions the map according to a predicate. ","terminals":[{"name":"m","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.mapKeysWith","name":"mapKeysWith","type":"CalCollectionsMapmapKeysWith","ui":"<b>Cal.Collections.Map.mapKeysWith<\/b><br\/>[CALDoc] <code>mapKeysWith c f s<\/code> is the map obtained by applying <code>f<\/code> to each key of <code>s<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fromListWith","name":"fromListWith","type":"CalCollectionsMapfromListWith","ui":"<b>Cal.Collections.Map.fromListWith<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs with a combining function.","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.updateMin","name":"updateMin","type":"CalCollectionsMapupdateMin","ui":"<b>Cal.Collections.Map.updateMin<\/b><br\/>[CALDoc] Updates the minimal key of the map.","terminals":[{"name":"map","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.insertWith","name":"insertWith","type":"CalCollectionsMapinsertWith","ui":"<b>Cal.Collections.Map.insertWith<\/b><br\/>[CALDoc] Inserts a new key and value in the map with a combining function.","terminals":[{"name":"key","input":"text"},{"name":"value","input":"text"},{"name":"map","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.unionsWith","name":"unionsWith","type":"CalCollectionsMapunionsWith","ui":"<b>Cal.Collections.Map.unionsWith<\/b><br\/>[CALDoc] Returns the union of a list of maps, with a combining operation.","terminals":[{"name":"maps","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.unionWith","name":"unionWith","type":"CalCollectionsMapunionWith","ui":"<b>Cal.Collections.Map.unionWith<\/b><br\/>[CALDoc] Returns the left-biased union of two maps, with a combining function. ","terminals":[{"name":"map1","input":"text"},{"name":"map2","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.update","name":"update","type":"CalCollectionsMapupdate","ui":"<b>Cal.Collections.Map.update<\/b><br\/>[CALDoc] <code>update f key map<\/code> updates the value <code>x<\/code> at <code>key<\/code> (if it is in the map). ","terminals":[{"name":"key","input":"text"},{"name":"f","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.isEmptySpecialized","name":"isEmptySpecialized","type":"CalCollectionsMapisEmptySpecialized","ui":"<b>Cal.Collections.Map.isEmptySpecialized<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.findMax","name":"findMax","type":"CalCollectionsMapfindMax","ui":"<b>Cal.Collections.Map.findMax<\/b><br\/>[CALDoc] Finds the maximal key of the map.","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.deepEquals","name":"deepEquals","type":"CalCollectionsMapdeepEquals","ui":"<b>Cal.Collections.Map.deepEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.lookupWithDefault","name":"lookupWithDefault","type":"CalCollectionsMaplookupWithDefault","ui":"<b>Cal.Collections.Map.lookupWithDefault<\/b><br\/>[CALDoc] <code>lookupWithDefault key map defaultValue<\/code> returns the value at the given key or <code>defaultValue<\/code>\nwhen the key is not in the map.","terminals":[{"name":"defaultValue","input":"text"},{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.isProperSubmapBy","name":"isProperSubmapBy","type":"CalCollectionsMapisProperSubmapBy","ui":"<b>Cal.Collections.Map.isProperSubmapBy<\/b><br\/>[CALDoc] Returns whether the first map is a proper submap of the second map (ie. a submap but not equal).","terminals":[{"name":"f","input":"text"},{"name":"map1","input":"text"},{"name":"map2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.union","name":"union","type":"CalCollectionsMapunion","ui":"<b>Cal.Collections.Map.union<\/b><br\/>[CALDoc] <code>union map1 map2<\/code> takes the left-biased union of <code>map1<\/code> and <code>map2<\/code>. ","terminals":[{"name":"map1","input":"text"},{"name":"map2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.hedgeUnionR","name":"hedgeUnionR","type":"CalCollectionsMaphedgeUnionR","ui":"<b>Cal.Collections.Map.hedgeUnionR<\/b><br\/>[CALDoc] ","terminals":[{"name":"t2","input":"text"},{"name":"cmphi","input":"text"},{"name":"t1","input":"text"},{"name":"cmplo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.assocs","name":"assocs","type":"CalCollectionsMapassocs","ui":"<b>Cal.Collections.Map.assocs<\/b><br\/>[CALDoc] Returns an association list of all key-value pairs in the map.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.updateMinWithKey","name":"updateMinWithKey","type":"CalCollectionsMapupdateMinWithKey","ui":"<b>Cal.Collections.Map.updateMinWithKey<\/b><br\/>[CALDoc] Updates the minimal key of the map.","terminals":[{"name":"f","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.deleteAt","name":"deleteAt","type":"CalCollectionsMapdeleteAt","ui":"<b>Cal.Collections.Map.deleteAt<\/b><br\/>[CALDoc] Deletes the element at index.","terminals":[{"name":"map","input":"text"},{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.map","name":"map","type":"CalCollectionsMapmap","ui":"<b>Cal.Collections.Map.map<\/b><br\/>[CALDoc] Maps a function over all values in the map.","terminals":[{"name":"m","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.mapWithKey","name":"mapWithKey","type":"CalCollectionsMapmapWithKey","ui":"<b>Cal.Collections.Map.mapWithKey<\/b><br\/>[CALDoc] Maps a function over all values in the map.","terminals":[{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.updateMax","name":"updateMax","type":"CalCollectionsMapupdateMax","ui":"<b>Cal.Collections.Map.updateMax<\/b><br\/>[CALDoc] Updates the maximal key of the map.","terminals":[{"name":"f","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.updateMaxWithKey","name":"updateMaxWithKey","type":"CalCollectionsMapupdateMaxWithKey","ui":"<b>Cal.Collections.Map.updateMaxWithKey<\/b><br\/>[CALDoc] Updates the maximal key of the map.","terminals":[{"name":"f","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.split","name":"split","type":"CalCollectionsMapsplit","ui":"<b>Cal.Collections.Map.split<\/b><br\/>[CALDoc] <code>split k map<\/code> returns a pair <code>(map1,map2)<\/code> where the keys in <code>map1<\/code> are smaller\nthan <code>k<\/code> and the keys in <code>map2<\/code> larger than <code>k<\/code>. ","terminals":[{"name":"k","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.valid","name":"valid","type":"CalCollectionsMapvalid","ui":"<b>Cal.Collections.Map.valid<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.validsize","name":"validsize","type":"CalCollectionsMapvalidsize","ui":"<b>Cal.Collections.Map.validsize<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.unionWithKey","name":"unionWithKey","type":"CalCollectionsMapunionWithKey","ui":"<b>Cal.Collections.Map.unionWithKey<\/b><br\/>[CALDoc] Returns the left-biased union of two maps, with a combining function. ","terminals":[{"name":"map2","input":"text"},{"name":"map1","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.hedgeUnionWithKey","name":"hedgeUnionWithKey","type":"CalCollectionsMaphedgeUnionWithKey","ui":"<b>Cal.Collections.Map.hedgeUnionWithKey<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"cmplo","input":"text"},{"name":"t1","input":"text"},{"name":"cmphi","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.difference","name":"difference","type":"CalCollectionsMapdifference","ui":"<b>Cal.Collections.Map.difference<\/b><br\/>[CALDoc] Returns the difference of two maps.","terminals":[{"name":"map2","input":"text"},{"name":"map1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.hedgeDiff","name":"hedgeDiff","type":"CalCollectionsMaphedgeDiff","ui":"<b>Cal.Collections.Map.hedgeDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"cmplo","input":"text"},{"name":"m","input":"text"},{"name":"cmphi","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.foldWithKey","name":"foldWithKey","type":"CalCollectionsMapfoldWithKey","ui":"<b>Cal.Collections.Map.foldWithKey<\/b><br\/>[CALDoc] Folds over the keys and values in the map in an unspecified order. (= descending post-order)","terminals":[{"name":"z","input":"text"},{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fromListWithKey","name":"fromListWithKey","type":"CalCollectionsMapfromListWithKey","ui":"<b>Cal.Collections.Map.fromListWithKey<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs with a combining function.","terminals":[{"name":"xs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.insertWithKey","name":"insertWithKey","type":"CalCollectionsMapinsertWithKey","ui":"<b>Cal.Collections.Map.insertWithKey<\/b><br\/>[CALDoc] Inserts a new key and value in the map with a combining function.","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"f","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.deleteMax","name":"deleteMax","type":"CalCollectionsMapdeleteMax","ui":"<b>Cal.Collections.Map.deleteMax<\/b><br\/>[CALDoc] Deletes the maximal key of the map.","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.showMap","name":"showMap","type":"CalCollectionsMapshowMap","ui":"<b>Cal.Collections.Map.showMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.emptySpecialized","name":"emptySpecialized","type":"CalCollectionsMapemptySpecialized","ui":"<b>Cal.Collections.Map.emptySpecialized<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.ordered","name":"ordered","type":"CalCollectionsMapordered","ui":"<b>Cal.Collections.Map.ordered<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.updateAt","name":"updateAt","type":"CalCollectionsMapupdateAt","ui":"<b>Cal.Collections.Map.updateAt<\/b><br\/>[CALDoc] Updates the element at index. ","terminals":[{"name":"index","input":"text"},{"name":"map","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.notEqualsMap","name":"notEqualsMap","type":"CalCollectionsMapnotEqualsMap","ui":"<b>Cal.Collections.Map.notEqualsMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m1","input":"text"},{"name":"m2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.equalsMap","name":"equalsMap","type":"CalCollectionsMapequalsMap","ui":"<b>Cal.Collections.Map.equalsMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m2","input":"text"},{"name":"m1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.foldI","name":"foldI","type":"CalCollectionsMapfoldI","ui":"<b>Cal.Collections.Map.foldI<\/b><br\/>[CALDoc] ","terminals":[{"name":"z","input":"text"},{"name":"m","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.intersectionWith","name":"intersectionWith","type":"CalCollectionsMapintersectionWith","ui":"<b>Cal.Collections.Map.intersectionWith<\/b><br\/>[CALDoc] Returns the intersection of two maps, with a combining function.","terminals":[{"name":"map2","input":"text"},{"name":"f","input":"text"},{"name":"map1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.intersectionWithKey","name":"intersectionWithKey","type":"CalCollectionsMapintersectionWithKey","ui":"<b>Cal.Collections.Map.intersectionWithKey<\/b><br\/>[CALDoc] Returns the intersection of two maps, with a combining function.","terminals":[{"name":"f","input":"text"},{"name":"map1","input":"text"},{"name":"map2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.hedgeUnionL","name":"hedgeUnionL","type":"CalCollectionsMaphedgeUnionL","ui":"<b>Cal.Collections.Map.hedgeUnionL<\/b><br\/>[CALDoc] ","terminals":[{"name":"cmphi","input":"text"},{"name":"t1","input":"text"},{"name":"cmplo","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fromList","name":"fromList","type":"CalCollectionsMapfromList","ui":"<b>Cal.Collections.Map.fromList<\/b><br\/>[CALDoc] Builds a map from a list of key-value pairs.","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.insert","name":"insert","type":"CalCollectionsMapinsert","ui":"<b>Cal.Collections.Map.insert<\/b><br\/>[CALDoc] Inserts a new key and value in the map.","terminals":[{"name":"key","input":"text"},{"name":"map","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.findIndex","name":"findIndex","type":"CalCollectionsMapfindIndex","ui":"<b>Cal.Collections.Map.findIndex<\/b><br\/>[CALDoc] Returns the index of a key. ","terminals":[{"name":"key","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.lookupIndex","name":"lookupIndex","type":"CalCollectionsMaplookupIndex","ui":"<b>Cal.Collections.Map.lookupIndex<\/b><br\/>[CALDoc] Looks up the index of a key. ","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.balanced","name":"balanced","type":"CalCollectionsMapbalanced","ui":"<b>Cal.Collections.Map.balanced<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.isSubmapHelper","name":"isSubmapHelper","type":"CalCollectionsMapisSubmapHelper","ui":"<b>Cal.Collections.Map.isSubmapHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fromAscListWith","name":"fromAscListWith","type":"CalCollectionsMapfromAscListWith","ui":"<b>Cal.Collections.Map.fromAscListWith<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fromAscListWithKey","name":"fromAscListWithKey","type":"CalCollectionsMapfromAscListWithKey","ui":"<b>Cal.Collections.Map.fromAscListWithKey<\/b><br\/>[CALDoc] Builds a map from an ascending list in linear time with a combining function\nfor equal keys. ","terminals":[{"name":"f","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.fromDistinctAscList","name":"fromDistinctAscList","type":"CalCollectionsMapfromDistinctAscList","ui":"<b>Cal.Collections.Map.fromDistinctAscList<\/b><br\/>[CALDoc] Builds a map from an ascending list of distinct elements in linear time.\n","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.directBuild","name":"directBuild","type":"CalCollectionsMapdirectBuild","ui":"<b>Cal.Collections.Map.directBuild<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.intersectWithKey","name":"intersectWithKey","type":"CalCollectionsMapintersectWithKey","ui":"<b>Cal.Collections.Map.intersectWithKey<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"f","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.splitLookup","name":"splitLookup","type":"CalCollectionsMapsplitLookup","ui":"<b>Cal.Collections.Map.splitLookup<\/b><br\/>[CALDoc] <code>splitLookup k map<\/code> splits a map just like <code>split<\/code> but also returns <code>lookup k map<\/code>.","terminals":[{"name":"m","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.mapAccum","name":"mapAccum","type":"CalCollectionsMapmapAccum","ui":"<b>Cal.Collections.Map.mapAccum<\/b><br\/>[CALDoc] Threads an accumulating argument through the map in an unspecified order. (= ascending pre-order)","terminals":[{"name":"m","input":"text"},{"name":"f","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.mapAccumWithKey","name":"mapAccumWithKey","type":"CalCollectionsMapmapAccumWithKey","ui":"<b>Cal.Collections.Map.mapAccumWithKey<\/b><br\/>[CALDoc] Threads an accumulating argument through the map in an unspecified order. (= ascending pre-order)","terminals":[{"name":"t","input":"text"},{"name":"f","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.mapAccumL","name":"mapAccumL","type":"CalCollectionsMapmapAccumL","ui":"<b>Cal.Collections.Map.mapAccumL<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"t","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.delete","name":"delete","type":"CalCollectionsMapdelete","ui":"<b>Cal.Collections.Map.delete<\/b><br\/>[CALDoc] Deletes a key and its value from the map. ","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.differenceWith","name":"differenceWith","type":"CalCollectionsMapdifferenceWith","ui":"<b>Cal.Collections.Map.differenceWith<\/b><br\/>[CALDoc] Returns the difference of two maps, with a combining function.","terminals":[{"name":"f","input":"text"},{"name":"map1","input":"text"},{"name":"map2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.differenceWithKey","name":"differenceWithKey","type":"CalCollectionsMapdifferenceWithKey","ui":"<b>Cal.Collections.Map.differenceWithKey<\/b><br\/>[CALDoc] Returns the difference of two maps, with a combining function. ","terminals":[{"name":"f","input":"text"},{"name":"map2","input":"text"},{"name":"map1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.hedgeDiffWithKey","name":"hedgeDiffWithKey","type":"CalCollectionsMaphedgeDiffWithKey","ui":"<b>Cal.Collections.Map.hedgeDiffWithKey<\/b><br\/>[CALDoc] ","terminals":[{"name":"map2","input":"text"},{"name":"map1","input":"text"},{"name":"cmphi","input":"text"},{"name":"f","input":"text"},{"name":"cmplo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.trimLookupLo","name":"trimLookupLo","type":"CalCollectionsMaptrimLookupLo","ui":"<b>Cal.Collections.Map.trimLookupLo<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"lo","input":"text"},{"name":"cmphi","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.lookup","name":"lookup","type":"CalCollectionsMaplookup","ui":"<b>Cal.Collections.Map.lookup<\/b><br\/>[CALDoc] Looks up the value at a key in the map.","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.filterLt","name":"filterLt","type":"CalCollectionsMapfilterLt","ui":"<b>Cal.Collections.Map.filterLt<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"cmp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.filterGt","name":"filterGt","type":"CalCollectionsMapfilterGt","ui":"<b>Cal.Collections.Map.filterGt<\/b><br\/>[CALDoc] ","terminals":[{"name":"cmp","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.adjust","name":"adjust","type":"CalCollectionsMapadjust","ui":"<b>Cal.Collections.Map.adjust<\/b><br\/>[CALDoc] Adjusts a value at a specific key. ","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.filter","name":"filter","type":"CalCollectionsMapfilter","ui":"<b>Cal.Collections.Map.filter<\/b><br\/>[CALDoc] Filters all values that satisfy the predicate.","terminals":[{"name":"map","input":"text"},{"name":"predicate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.filterWithKey","name":"filterWithKey","type":"CalCollectionsMapfilterWithKey","ui":"<b>Cal.Collections.Map.filterWithKey<\/b><br\/>[CALDoc] Filters all keys\/values that satisfy the predicate.","terminals":[{"name":"p","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.merge","name":"merge","type":"CalCollectionsMapmerge","ui":"<b>Cal.Collections.Map.merge<\/b><br\/>[CALDoc] ","terminals":[{"name":"l","input":"text"},{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.join","name":"join","type":"CalCollectionsMapjoin","ui":"<b>Cal.Collections.Map.join<\/b><br\/>[CALDoc] ","terminals":[{"name":"kx","input":"text"},{"name":"l","input":"text"},{"name":"x","input":"text"},{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.insertMax","name":"insertMax","type":"CalCollectionsMapinsertMax","ui":"<b>Cal.Collections.Map.insertMax<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"kx","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.insertMin","name":"insertMin","type":"CalCollectionsMapinsertMin","ui":"<b>Cal.Collections.Map.insertMin<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"kx","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.single","name":"single","type":"CalCollectionsMapsingle","ui":"<b>Cal.Collections.Map.single<\/b><br\/>[CALDoc] Creates a map with a single element.","terminals":[{"name":"key","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.adjustWithKey","name":"adjustWithKey","type":"CalCollectionsMapadjustWithKey","ui":"<b>Cal.Collections.Map.adjustWithKey<\/b><br\/>[CALDoc] Adjusts a value at a specific key. ","terminals":[{"name":"f","input":"text"},{"name":"key","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.updateWithKey","name":"updateWithKey","type":"CalCollectionsMapupdateWithKey","ui":"<b>Cal.Collections.Map.updateWithKey<\/b><br\/>[CALDoc] <code>updateWithKey f key map<\/code> updates the value <code>x<\/code> at <code>key<\/code> (if it is in the map). ","terminals":[{"name":"map","input":"text"},{"name":"key","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.glue","name":"glue","type":"CalCollectionsMapglue","ui":"<b>Cal.Collections.Map.glue<\/b><br\/>[CALDoc] ","terminals":[{"name":"l","input":"text"},{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.deleteFindMin","name":"deleteFindMin","type":"CalCollectionsMapdeleteFindMin","ui":"<b>Cal.Collections.Map.deleteFindMin<\/b><br\/>[CALDoc] Deletes and finds the minimal element.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.deleteFindMax","name":"deleteFindMax","type":"CalCollectionsMapdeleteFindMax","ui":"<b>Cal.Collections.Map.deleteFindMax<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.isEmpty","name":"isEmpty","type":"CalCollectionsMapisEmpty","ui":"<b>Cal.Collections.Map.isEmpty<\/b><br\/>[CALDoc] Returns whether the map is empty.","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.balance","name":"balance","type":"CalCollectionsMapbalance","ui":"<b>Cal.Collections.Map.balance<\/b><br\/>[CALDoc] ","terminals":[{"name":"l","input":"text"},{"name":"k","input":"text"},{"name":"r","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.rotateR","name":"rotateR","type":"CalCollectionsMaprotateR","ui":"<b>Cal.Collections.Map.rotateR<\/b><br\/>[CALDoc] ","terminals":[{"name":"l","input":"text"},{"name":"r","input":"text"},{"name":"x","input":"text"},{"name":"k","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.doubleR","name":"doubleR","type":"CalCollectionsMapdoubleR","ui":"<b>Cal.Collections.Map.doubleR<\/b><br\/>[CALDoc] ","terminals":[{"name":"x1","input":"text"},{"name":"k1","input":"text"},{"name":"t4","input":"text"},{"name":"t5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.singleR","name":"singleR","type":"CalCollectionsMapsingleR","ui":"<b>Cal.Collections.Map.singleR<\/b><br\/>[CALDoc] ","terminals":[{"name":"k1","input":"text"},{"name":"t4","input":"text"},{"name":"t3","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.rotateL","name":"rotateL","type":"CalCollectionsMaprotateL","ui":"<b>Cal.Collections.Map.rotateL<\/b><br\/>[CALDoc] ","terminals":[{"name":"k","input":"text"},{"name":"l","input":"text"},{"name":"r","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.doubleL","name":"doubleL","type":"CalCollectionsMapdoubleL","ui":"<b>Cal.Collections.Map.doubleL<\/b><br\/>[CALDoc] ","terminals":[{"name":"k1","input":"text"},{"name":"t5","input":"text"},{"name":"x1","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.singleL","name":"singleL","type":"CalCollectionsMapsingleL","ui":"<b>Cal.Collections.Map.singleL<\/b><br\/>[CALDoc] ","terminals":[{"name":"x1","input":"text"},{"name":"k1","input":"text"},{"name":"t1","input":"text"},{"name":"t4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.Bin","name":"Bin","type":"CalCollectionsMapBin","ui":"<b>Cal.Collections.Map.Bin<\/b><br\/>[CALDoc] ","terminals":[{"name":"key","input":"text"},{"name":"size","input":"text"},{"name":"rightMap","input":"text"},{"name":"leftMap","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.ratio","name":"ratio","type":"CalCollectionsMapratio","ui":"<b>Cal.Collections.Map.ratio<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.delta","name":"delta","type":"CalCollectionsMapdelta","ui":"<b>Cal.Collections.Map.delta<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.size","name":"size","type":"CalCollectionsMapsize","ui":"<b>Cal.Collections.Map.size<\/b><br\/>[CALDoc] Returns the number of elements in the map.","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.trim","name":"trim","type":"CalCollectionsMaptrim","ui":"<b>Cal.Collections.Map.trim<\/b><br\/>[CALDoc] ","terminals":[{"name":"cmphi","input":"text"},{"name":"cmplo","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.outputMap","name":"outputMap","type":"CalCollectionsMapoutputMap","ui":"<b>Cal.Collections.Map.outputMap<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.toList","name":"toList","type":"CalCollectionsMaptoList","ui":"<b>Cal.Collections.Map.toList<\/b><br\/>[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.","terminals":[{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.toAscList","name":"toAscList","type":"CalCollectionsMaptoAscList","ui":"<b>Cal.Collections.Map.toAscList<\/b><br\/>[CALDoc] Converts to a list of key-value pairs with the keys in ascending order.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.foldR","name":"foldR","type":"CalCollectionsMapfoldR","ui":"<b>Cal.Collections.Map.foldR<\/b><br\/>[CALDoc] ","terminals":[{"name":"z","input":"text"},{"name":"f","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.empty","name":"empty","type":"CalCollectionsMapempty","ui":"<b>Cal.Collections.Map.empty<\/b><br\/>[CALDoc] The empty map.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Collections.Map.Tip","name":"Tip","type":"CalCollectionsMapTip","ui":"<b>Cal.Collections.Map.Tip<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Map"]},{"description":"Cal.Core.Memoize.memo","name":"memo","type":"CalCoreMemoizememo","ui":"<b>Cal.Core.Memoize.memo<\/b><br\/>[CALDoc] Creates a memoizing version of a function.\n","terminals":[{"name":"f","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Memoize"]},{"description":"Cal.Core.Memoize.access","name":"access","type":"CalCoreMemoizeaccess","ui":"<b>Cal.Core.Memoize.access<\/b><br\/>[CALDoc] Access the cache using the argument value.\n","terminals":[{"name":"functionCachePair","input":"text"},{"name":"argument","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Memoize"]},{"description":"Cal.Core.Memoize.memoCache_setMap","name":"memoCache_setMap","type":"CalCoreMemoizememoCache_setMap","ui":"<b>Cal.Core.Memoize.memoCache_setMap<\/b><br\/>[CALDoc] Set the current result map into the <code>MemoCache<\/code>.","terminals":[{"name":"memoCache","input":"text"},{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Memoize"]},{"description":"Cal.Core.Memoize.memoCache_getMap","name":"memoCache_getMap","type":"CalCoreMemoizememoCache_getMap","ui":"<b>Cal.Core.Memoize.memoCache_getMap<\/b><br\/>[CALDoc] Retrieve the current result map from the <code>MemoCache<\/code>.","terminals":[{"name":"memoCache","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Memoize"]},{"description":"Cal.Core.Memoize.newMemoCache","name":"newMemoCache","type":"CalCoreMemoizenewMemoCache","ui":"<b>Cal.Core.Memoize.newMemoCache<\/b><br\/>[CALDoc] Constructor for the foreign type <code>MemoCache<\/code>.  ","terminals":[{"name":"map","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Memoize"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryShort","name":"coarbitraryShort","type":"CalUtilitiesQuickCheckcoarbitraryShort","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.testResult","name":"testResult","type":"CalUtilitiesQuickChecktestResult","ui":"<b>Cal.Utilities.QuickCheck.testResult<\/b><br\/>[CALDoc] ","terminals":[{"name":"genParams","input":"text"},{"name":"res","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryFunction","name":"coarbitraryFunction","type":"CalUtilitiesQuickCheckcoarbitraryFunction","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"gen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.zipWithGen","name":"zipWithGen","type":"CalUtilitiesQuickCheckzipWithGen","ui":"<b>Cal.Utilities.QuickCheck.zipWithGen<\/b><br\/>[CALDoc] Zips two generators with a combining function to create a new generator","terminals":[{"name":"func","input":"text"},{"name":"gen1","input":"text"},{"name":"gen2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryChar","name":"coarbitraryChar","type":"CalUtilitiesQuickCheckcoarbitraryChar","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"c","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeBoundedIntGen","name":"makeBoundedIntGen","type":"CalUtilitiesQuickCheckmakeBoundedIntGen","ui":"<b>Cal.Utilities.QuickCheck.makeBoundedIntGen<\/b><br\/>[CALDoc] Creates a generator that returns bounded integers","terminals":[{"name":"low","input":"text"},{"name":"highExclusive","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.summarize","name":"summarize","type":"CalUtilitiesQuickChecksummarize","ui":"<b>Cal.Utilities.QuickCheck.summarize<\/b><br\/>[CALDoc] Summarizes results. ","terminals":[{"name":"results","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryDouble","name":"arbitraryDouble","type":"CalUtilitiesQuickCheckarbitraryDouble","ui":"<b>Cal.Utilities.QuickCheck.arbitraryDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryDouble","name":"coarbitraryDouble","type":"CalUtilitiesQuickCheckcoarbitraryDouble","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryUnit","name":"coarbitraryUnit","type":"CalUtilitiesQuickCheckcoarbitraryUnit","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryUnit<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.quickCheck","name":"quickCheck","type":"CalUtilitiesQuickCheckquickCheck","ui":"<b>Cal.Utilities.QuickCheck.quickCheck<\/b><br\/>[CALDoc] Verifies a property using default configuration.","terminals":[{"name":"testItem","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryFloat","name":"coarbitraryFloat","type":"CalUtilitiesQuickCheckcoarbitraryFloat","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryString","name":"coarbitraryString","type":"CalUtilitiesQuickCheckcoarbitraryString","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryString<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryRecord","name":"arbitraryRecord","type":"CalUtilitiesQuickCheckarbitraryRecord","ui":"<b>Cal.Utilities.QuickCheck.arbitraryRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.showResults","name":"showResults","type":"CalUtilitiesQuickCheckshowResults","ui":"<b>Cal.Utilities.QuickCheck.showResults<\/b><br\/>[CALDoc] This tests a property using the default configuration and returns\na string suitable for display that described the parameters\nused for each test and the result.","terminals":[{"name":"testItem","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryRecord","name":"coarbitraryRecord","type":"CalUtilitiesQuickCheckcoarbitraryRecord","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"gen","input":"text"},{"name":"record","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.testFunction","name":"testFunction","type":"CalUtilitiesQuickChecktestFunction","ui":"<b>Cal.Utilities.QuickCheck.testFunction<\/b><br\/>[CALDoc] Tests a function using the default domain generator","terminals":[{"name":"func","input":"text"},{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.getBoundedDouble","name":"getBoundedDouble","type":"CalUtilitiesQuickCheckgetBoundedDouble","ui":"<b>Cal.Utilities.QuickCheck.getBoundedDouble<\/b><br\/>[CALDoc] Used to extract a pseudo random bounded double from <code>GenParams<\/code>","terminals":[{"name":"genParams","input":"text"},{"name":"highExclusive","input":"text"},{"name":"low","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.getLabels","name":"getLabels","type":"CalUtilitiesQuickCheckgetLabels","ui":"<b>Cal.Utilities.QuickCheck.getLabels<\/b><br\/>[CALDoc] ","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.testProperty","name":"testProperty","type":"CalUtilitiesQuickChecktestProperty","ui":"<b>Cal.Utilities.QuickCheck.testProperty<\/b><br\/>[CALDoc] ","terminals":[{"name":"property","input":"text"},{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryLong","name":"arbitraryLong","type":"CalUtilitiesQuickCheckarbitraryLong","ui":"<b>Cal.Utilities.QuickCheck.arbitraryLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.getNthBoundedInt","name":"getNthBoundedInt","type":"CalUtilitiesQuickCheckgetNthBoundedInt","ui":"<b>Cal.Utilities.QuickCheck.getNthBoundedInt<\/b><br\/>[CALDoc] Used to extract the nth pseudo random bounded integer from <code>GenParams<\/code>","terminals":[{"name":"low","input":"text"},{"name":"genParams","input":"text"},{"name":"nth","input":"text"},{"name":"highExclusive","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeConfig","name":"makeConfig","type":"CalUtilitiesQuickCheckmakeConfig","ui":"<b>Cal.Utilities.QuickCheck.makeConfig<\/b><br\/>[CALDoc] make a test configuration","terminals":[{"name":"numTests","input":"text"},{"name":"genParams","input":"text"},{"name":"resizing","input":"text"},{"name":"maxTries","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryMaybe","name":"coarbitraryMaybe","type":"CalUtilitiesQuickCheckcoarbitraryMaybe","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryMaybe<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.generateNInstances","name":"generateNInstances","type":"CalUtilitiesQuickCheckgenerateNInstances","ui":"<b>Cal.Utilities.QuickCheck.generateNInstances<\/b><br\/>[CALDoc] Creates a string showing n items created using a generator.\n","terminals":[{"name":"numItems","input":"text"},{"name":"gen","input":"text"},{"name":"gp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.testBoolean","name":"testBoolean","type":"CalUtilitiesQuickChecktestBoolean","ui":"<b>Cal.Utilities.QuickCheck.testBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryMaybe","name":"arbitraryMaybe","type":"CalUtilitiesQuickCheckarbitraryMaybe","ui":"<b>Cal.Utilities.QuickCheck.arbitraryMaybe<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.generateInstanceDefault","name":"generateInstanceDefault","type":"CalUtilitiesQuickCheckgenerateInstanceDefault","ui":"<b>Cal.Utilities.QuickCheck.generateInstanceDefault<\/b><br\/>[CALDoc] ","terminals":[{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryInt","name":"arbitraryInt","type":"CalUtilitiesQuickCheckarbitraryInt","ui":"<b>Cal.Utilities.QuickCheck.arbitraryInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryBoolean","name":"arbitraryBoolean","type":"CalUtilitiesQuickCheckarbitraryBoolean","ui":"<b>Cal.Utilities.QuickCheck.arbitraryBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeChooseOneOfGen","name":"makeChooseOneOfGen","type":"CalUtilitiesQuickCheckmakeChooseOneOfGen","ui":"<b>Cal.Utilities.QuickCheck.makeChooseOneOfGen<\/b><br\/>[CALDoc] Creates a generator that will return an item from the input list.","terminals":[{"name":"listOfItems","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.forAll","name":"forAll","type":"CalUtilitiesQuickCheckforAll","ui":"<b>Cal.Utilities.QuickCheck.forAll<\/b><br\/>[CALDoc] Allows a function to be tested using a specific generator. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"func","input":"text"},{"name":"gen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.testFunctionGen","name":"testFunctionGen","type":"CalUtilitiesQuickChecktestFunctionGen","ui":"<b>Cal.Utilities.QuickCheck.testFunctionGen<\/b><br\/>[CALDoc] Tests a function using a supplied domain generator","terminals":[{"name":"func","input":"text"},{"name":"genParams","input":"text"},{"name":"gen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.addArg","name":"addArg","type":"CalUtilitiesQuickCheckaddArg","ui":"<b>Cal.Utilities.QuickCheck.addArg<\/b><br\/>[CALDoc] Adds an argument into a result","terminals":[{"name":"result","input":"text"},{"name":"arg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryFunction","name":"arbitraryFunction","type":"CalUtilitiesQuickCheckarbitraryFunction","ui":"<b>Cal.Utilities.QuickCheck.arbitraryFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.promote","name":"promote","type":"CalUtilitiesQuickCheckpromote","ui":"<b>Cal.Utilities.QuickCheck.promote<\/b><br\/>[CALDoc] Given a function f that creates a generator of b, returns\na new generator that generates functions a-&gt;b","terminals":[{"name":"_INPUT","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.verboseCheck","name":"verboseCheck","type":"CalUtilitiesQuickCheckverboseCheck","ui":"<b>Cal.Utilities.QuickCheck.verboseCheck<\/b><br\/>[CALDoc] Tests a property and returns the list of results, or the first failing test.","terminals":[{"name":"testItem","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.defaultConfig","name":"defaultConfig","type":"CalUtilitiesQuickCheckdefaultConfig","ui":"<b>Cal.Utilities.QuickCheck.defaultConfig<\/b><br\/>[CALDoc] the default configuration used to run tests","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.defaultNumTests","name":"defaultNumTests","type":"CalUtilitiesQuickCheckdefaultNumTests","ui":"<b>Cal.Utilities.QuickCheck.defaultNumTests<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryList","name":"arbitraryList","type":"CalUtilitiesQuickCheckarbitraryList","ui":"<b>Cal.Utilities.QuickCheck.arbitraryList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.size","name":"size","type":"CalUtilitiesQuickChecksize","ui":"<b>Cal.Utilities.QuickCheck.size<\/b><br\/>[CALDoc] Returns the sizing parameter associated with genParams\nThis should be used to control the size of the generated test data, e.g. it is used to limit the maximum size of \narbitrary lists.","terminals":[{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryLong","name":"coarbitraryLong","type":"CalUtilitiesQuickCheckcoarbitraryLong","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryExamples","name":"arbitraryExamples","type":"CalUtilitiesQuickCheckarbitraryExamples","ui":"<b>Cal.Utilities.QuickCheck.arbitraryExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryShort","name":"arbitraryShort","type":"CalUtilitiesQuickCheckarbitraryShort","ui":"<b>Cal.Utilities.QuickCheck.arbitraryShort<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryEither","name":"coarbitraryEither","type":"CalUtilitiesQuickCheckcoarbitraryEither","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryEither<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"m","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryInt","name":"coarbitraryInt","type":"CalUtilitiesQuickCheckcoarbitraryInt","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryString","name":"arbitraryString","type":"CalUtilitiesQuickCheckarbitraryString","ui":"<b>Cal.Utilities.QuickCheck.arbitraryString<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryList","name":"coarbitraryList","type":"CalUtilitiesQuickCheckcoarbitraryList","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryList<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"b","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryFloat","name":"arbitraryFloat","type":"CalUtilitiesQuickCheckarbitraryFloat","ui":"<b>Cal.Utilities.QuickCheck.arbitraryFloat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryByte","name":"arbitraryByte","type":"CalUtilitiesQuickCheckarbitraryByte","ui":"<b>Cal.Utilities.QuickCheck.arbitraryByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryByte","name":"coarbitraryByte","type":"CalUtilitiesQuickCheckcoarbitraryByte","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryByte<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.implies","name":"implies","type":"CalUtilitiesQuickCheckimplies","ui":"<b>Cal.Utilities.QuickCheck.implies<\/b><br\/>[CALDoc] creates a Property with a precondition.\n","terminals":[{"name":"precondition","input":"text"},{"name":"testItem","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.nothing","name":"nothing","type":"CalUtilitiesQuickChecknothing","ui":"<b>Cal.Utilities.QuickCheck.nothing<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.check","name":"check","type":"CalUtilitiesQuickCheckcheck","ui":"<b>Cal.Utilities.QuickCheck.check<\/b><br\/>[CALDoc] Verifies a property using supplied configuration.","terminals":[{"name":"config","input":"text"},{"name":"testItem","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.testResults","name":"testResults","type":"CalUtilitiesQuickChecktestResults","ui":"<b>Cal.Utilities.QuickCheck.testResults<\/b><br\/>[CALDoc] Runs tests according to config and returns a list of results, or the \nfirst failing result. ","terminals":[{"name":"testItem","input":"text"},{"name":"config","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.runTests","name":"runTests","type":"CalUtilitiesQuickCheckrunTests","ui":"<b>Cal.Utilities.QuickCheck.runTests<\/b><br\/>[CALDoc] Tests testItem the specified number of times and return a list of results. ","terminals":[{"name":"testItem","input":"text"},{"name":"config","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.resize","name":"resize","type":"CalUtilitiesQuickCheckresize","ui":"<b>Cal.Utilities.QuickCheck.resize<\/b><br\/>[CALDoc] Create a new GenParams with updated sizing parameter","terminals":[{"name":"genParams","input":"text"},{"name":"newSize","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.allTestsPass","name":"allTestsPass","type":"CalUtilitiesQuickCheckallTestsPass","ui":"<b>Cal.Utilities.QuickCheck.allTestsPass<\/b><br\/>[CALDoc] Checks a list of results and returns true iff test outcomes are true\nand that there is the expected number of test results","terminals":[{"name":"res","input":"text"},{"name":"num","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryChar","name":"arbitraryChar","type":"CalUtilitiesQuickCheckarbitraryChar","ui":"<b>Cal.Utilities.QuickCheck.arbitraryChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryBoolean","name":"coarbitraryBoolean","type":"CalUtilitiesQuickCheckcoarbitraryBoolean","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"b","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeListGen","name":"makeListGen","type":"CalUtilitiesQuickCheckmakeListGen","ui":"<b>Cal.Utilities.QuickCheck.makeListGen<\/b><br\/>[CALDoc] creates a list generator","terminals":[{"name":"lengthGen","input":"text"},{"name":"itemGen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.appendGenToListGen","name":"appendGenToListGen","type":"CalUtilitiesQuickCheckappendGenToListGen","ui":"<b>Cal.Utilities.QuickCheck.appendGenToListGen<\/b><br\/>[CALDoc] adds another generator to the head of a list generator\nso that if the input generator returns list of length n\nthe output generator will create list of length n+1","terminals":[{"name":"listGen","input":"text"},{"name":"gen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryDecimal","name":"arbitraryDecimal","type":"CalUtilitiesQuickCheckarbitraryDecimal","ui":"<b>Cal.Utilities.QuickCheck.arbitraryDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.mapGen","name":"mapGen","type":"CalUtilitiesQuickCheckmapGen","ui":"<b>Cal.Utilities.QuickCheck.mapGen<\/b><br\/>[CALDoc] Creates a new generator by applying a mapping to the output of an existing generator","terminals":[{"name":"func","input":"text"},{"name":"gen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryDecimal","name":"coarbitraryDecimal","type":"CalUtilitiesQuickCheckcoarbitraryDecimal","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.variant","name":"variant","type":"CalUtilitiesQuickCheckvariant","ui":"<b>Cal.Utilities.QuickCheck.variant<\/b><br\/>[CALDoc] Creates an alternative generator from an input generator by applying a mapping to the genParams","terminals":[{"name":"gen","input":"text"},{"name":"v","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryEither","name":"arbitraryEither","type":"CalUtilitiesQuickCheckarbitraryEither","ui":"<b>Cal.Utilities.QuickCheck.arbitraryEither<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.rightGenParams","name":"rightGenParams","type":"CalUtilitiesQuickCheckrightGenParams","ui":"<b>Cal.Utilities.QuickCheck.rightGenParams<\/b><br\/>[CALDoc] returns a set of gen params which will create randoms independent of leftGenParams","terminals":[{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.leftGenParams","name":"leftGenParams","type":"CalUtilitiesQuickCheckleftGenParams","ui":"<b>Cal.Utilities.QuickCheck.leftGenParams<\/b><br\/>[CALDoc] returns a set of gen params which will create randoms independent of rightGenParams","terminals":[{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.nthGenParams","name":"nthGenParams","type":"CalUtilitiesQuickChecknthGenParams","ui":"<b>Cal.Utilities.QuickCheck.nthGenParams<\/b><br\/>[CALDoc] Used to split a genParams into different independent streams that can be used\nfor creating independent arbitrary instances.","terminals":[{"name":"nth","input":"text"},{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeGen","name":"makeGen","type":"CalUtilitiesQuickCheckmakeGen","ui":"<b>Cal.Utilities.QuickCheck.makeGen<\/b><br\/>[CALDoc] Constructs a generator from a generator function","terminals":[{"name":"genFunction","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.chooseOneOf","name":"chooseOneOf","type":"CalUtilitiesQuickCheckchooseOneOf","ui":"<b>Cal.Utilities.QuickCheck.chooseOneOf<\/b><br\/>[CALDoc] creates a generator that will return items from the input generators","terminals":[{"name":"listOfGenerators","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.chooseOneOfWithFreq","name":"chooseOneOfWithFreq","type":"CalUtilitiesQuickCheckchooseOneOfWithFreq","ui":"<b>Cal.Utilities.QuickCheck.chooseOneOfWithFreq<\/b><br\/>[CALDoc] creates a generator that will return items from the input generators with the\nspecified frequencies.","terminals":[{"name":"freqList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.getBoundedInt","name":"getBoundedInt","type":"CalUtilitiesQuickCheckgetBoundedInt","ui":"<b>Cal.Utilities.QuickCheck.getBoundedInt<\/b><br\/>[CALDoc] Used to extract a pseudo random bounded integer from <code>GenParams<\/code>","terminals":[{"name":"low","input":"text"},{"name":"genParams","input":"text"},{"name":"highExclusive","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.generate","name":"generate","type":"CalUtilitiesQuickCheckgenerate","ui":"<b>Cal.Utilities.QuickCheck.generate<\/b><br\/>[CALDoc] Creates an item using a generator","terminals":[{"name":"gen","input":"text"},{"name":"genParams","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.genFunc","name":"genFunc","type":"CalUtilitiesQuickCheckgenFunc","ui":"<b>Cal.Utilities.QuickCheck.genFunc<\/b><br\/>[CALDoc] Extracts the generating function from a generator","terminals":[{"name":"gen","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeConfigWithMaxTests","name":"makeConfigWithMaxTests","type":"CalUtilitiesQuickCheckmakeConfigWithMaxTests","ui":"<b>Cal.Utilities.QuickCheck.makeConfigWithMaxTests<\/b><br\/>[CALDoc] make a configuration which will run the specified number of tests","terminals":[{"name":"numTests","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeDefaultGenParams","name":"makeDefaultGenParams","type":"CalUtilitiesQuickCheckmakeDefaultGenParams","ui":"<b>Cal.Utilities.QuickCheck.makeDefaultGenParams<\/b><br\/>[CALDoc] A default set of generator parameters","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.defaultResizing","name":"defaultResizing","type":"CalUtilitiesQuickCheckdefaultResizing","ui":"<b>Cal.Utilities.QuickCheck.defaultResizing<\/b><br\/>[CALDoc] This is the default sizing function for testing -\nas test are performed the sizing gradually approaches a limit.","terminals":[{"name":"testIteration","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.formatResults","name":"formatResults","type":"CalUtilitiesQuickCheckformatResults","ui":"<b>Cal.Utilities.QuickCheck.formatResults<\/b><br\/>[CALDoc] Converts a list of results to a string in which the parameters used\nin each test are shown on a seperate line. ","terminals":[{"name":"results","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryUnit","name":"arbitraryUnit","type":"CalUtilitiesQuickCheckarbitraryUnit","ui":"<b>Cal.Utilities.QuickCheck.arbitraryUnit<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.makeConstGen","name":"makeConstGen","type":"CalUtilitiesQuickCheckmakeConstGen","ui":"<b>Cal.Utilities.QuickCheck.makeConstGen<\/b><br\/>[CALDoc] Creates a constant generator that will always return the specified item","terminals":[{"name":"item","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.classify","name":"classify","type":"CalUtilitiesQuickCheckclassify","ui":"<b>Cal.Utilities.QuickCheck.classify<\/b><br\/>[CALDoc] creates a property which classifys the results for a test\nwhenever the condition is met. ","terminals":[{"name":"name","input":"text"},{"name":"condition","input":"text"},{"name":"testItem","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.labelResult","name":"labelResult","type":"CalUtilitiesQuickChecklabelResult","ui":"<b>Cal.Utilities.QuickCheck.labelResult<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"res","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.roundFloatToInt","name":"roundFloatToInt","type":"CalUtilitiesQuickCheckroundFloatToInt","ui":"<b>Cal.Utilities.QuickCheck.roundFloatToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.roundDoubleToLong","name":"roundDoubleToLong","type":"CalUtilitiesQuickCheckroundDoubleToLong","ui":"<b>Cal.Utilities.QuickCheck.roundDoubleToLong<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.charFromInt","name":"charFromInt","type":"CalUtilitiesQuickCheckcharFromInt","ui":"<b>Cal.Utilities.QuickCheck.charFromInt<\/b><br\/>[CALDoc] Converts an <code>Int<\/code> value to a <code>Char<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.decimalFromDouble","name":"decimalFromDouble","type":"CalUtilitiesQuickCheckdecimalFromDouble","ui":"<b>Cal.Utilities.QuickCheck.decimalFromDouble<\/b><br\/>[CALDoc] Converts a <code>Double<\/code> value to the equivalent <code>Decimal<\/code> value.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.charToInt","name":"charToInt","type":"CalUtilitiesQuickCheckcharToInt","ui":"<b>Cal.Utilities.QuickCheck.charToInt<\/b><br\/>[CALDoc] Converts a <code>Char<\/code> value to an <code>Int<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitraryRecordPrimitive","name":"coarbitraryRecordPrimitive","type":"CalUtilitiesQuickCheckcoarbitraryRecordPrimitive","ui":"<b>Cal.Utilities.QuickCheck.coarbitraryRecordPrimitive<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitraryRecordPrimitive","name":"arbitraryRecordPrimitive","type":"CalUtilitiesQuickCheckarbitraryRecordPrimitive","ui":"<b>Cal.Utilities.QuickCheck.arbitraryRecordPrimitive<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.GenParams","name":"GenParams","type":"CalUtilitiesQuickCheckGenParams","ui":"<b>Cal.Utilities.QuickCheck.GenParams<\/b><br\/>[CALDoc] A data constructor for controlling generation of Arbitrary types.","terminals":[{"name":"longs","input":"text"},{"name":"size","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.Gen","name":"Gen","type":"CalUtilitiesQuickCheckGen","ui":"<b>Cal.Utilities.QuickCheck.Gen<\/b><br\/>[CALDoc] ","terminals":[{"name":"f","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.Result","name":"Result","type":"CalUtilitiesQuickCheckResult","ui":"<b>Cal.Utilities.QuickCheck.Result<\/b><br\/>[CALDoc] A data constructor that represents the result of a single test.","terminals":[{"name":"labels","input":"text"},{"name":"args","input":"text"},{"name":"ok","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.Property","name":"Property","type":"CalUtilitiesQuickCheckProperty","ui":"<b>Cal.Utilities.QuickCheck.Property<\/b><br\/>[CALDoc] ","terminals":[{"name":"gen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.Config","name":"Config","type":"CalUtilitiesQuickCheckConfig","ui":"<b>Cal.Utilities.QuickCheck.Config<\/b><br\/>[CALDoc] ","terminals":[{"name":"resizing","input":"text"},{"name":"maxTests","input":"text"},{"name":"genParams","input":"text"},{"name":"numTests","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.arbitrary","name":"arbitrary","type":"CalUtilitiesQuickCheckarbitrary","ui":"<b>Cal.Utilities.QuickCheck.arbitrary<\/b><br\/>[CALDoc] Returns: a generator for the type","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.coarbitrary","name":"coarbitrary","type":"CalUtilitiesQuickCheckcoarbitrary","ui":"<b>Cal.Utilities.QuickCheck.coarbitrary<\/b><br\/>[CALDoc] Modifies a generator based on an instance of this type class.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.generateInstance","name":"generateInstance","type":"CalUtilitiesQuickCheckgenerateInstance","ui":"<b>Cal.Utilities.QuickCheck.generateInstance<\/b><br\/>[CALDoc] This creates a random instance of the type class\nthis method is only used internally in the arbitrary primitive functions","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.QuickCheck.test","name":"test","type":"CalUtilitiesQuickChecktest","ui":"<b>Cal.Utilities.QuickCheck.test<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.QuickCheck"]},{"description":"Cal.Utilities.Random.randomBoundedInts","name":"randomBoundedInts","type":"CalUtilitiesRandomrandomBoundedInts","ui":"<b>Cal.Utilities.Random.randomBoundedInts<\/b><br\/>[CALDoc] Returns: an infinite pseudo-random list of <code>Int<\/code> values uniformly distributed between 0 (inclusive) and maxExclusive (exclusive).","terminals":[{"name":"maxExclusive","input":"text"},{"name":"seed","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.randomDoubles","name":"randomDoubles","type":"CalUtilitiesRandomrandomDoubles","ui":"<b>Cal.Utilities.Random.randomDoubles<\/b><br\/>[CALDoc] Returns: an infinite pseudo-random list of <code>Double<\/code> values uniformly distributed between 0.0 and 1.0.","terminals":[{"name":"seed","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.randomBooleans","name":"randomBooleans","type":"CalUtilitiesRandomrandomBooleans","ui":"<b>Cal.Utilities.Random.randomBooleans<\/b><br\/>[CALDoc] Returns: an infinite pseudo-random list of <code>Boolean<\/code> values uniformly distributed between <code>False<\/code> and <code>True<\/code>.","terminals":[{"name":"seed","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.randomGaussians","name":"randomGaussians","type":"CalUtilitiesRandomrandomGaussians","ui":"<b>Cal.Utilities.Random.randomGaussians<\/b><br\/>[CALDoc] Returns: an infinite pseudo-random list of <code>Double<\/code> values that are distributed according to the Gaussian (or \"normal\") distribution\nwith mean 0.0 and standard deviation 1.0.","terminals":[{"name":"seed","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.randomFloats","name":"randomFloats","type":"CalUtilitiesRandomrandomFloats","ui":"<b>Cal.Utilities.Random.randomFloats<\/b><br\/>[CALDoc] Returns: an infinite pseudo-random list of <code>Float<\/code> values uniformly distributed between 0.0 and 1.0.","terminals":[{"name":"seed","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.randomInts","name":"randomInts","type":"CalUtilitiesRandomrandomInts","ui":"<b>Cal.Utilities.Random.randomInts<\/b><br\/>[CALDoc] Returns: an infinite pseudo-random list of <code>Int<\/code> values uniformly distributed across all possible Ints.","terminals":[{"name":"seed","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.randomLongs","name":"randomLongs","type":"CalUtilitiesRandomrandomLongs","ui":"<b>Cal.Utilities.Random.randomLongs<\/b><br\/>[CALDoc] Returns: an infinite pseudo-random list of <code>Long<\/code> values uniformly distributed across all possible Longs.","terminals":[{"name":"seed","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.initialSeed","name":"initialSeed","type":"CalUtilitiesRandominitialSeed","ui":"<b>Cal.Utilities.Random.initialSeed<\/b><br\/>[CALDoc] A random system generated seed value that can be used as the initial seed for <code>randomInts<\/code> and \nsimilar functions when repeatable random sequences are not desired. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_nextLong","name":"random_nextLong","type":"CalUtilitiesRandomrandom_nextLong","ui":"<b>Cal.Utilities.Random.random_nextLong<\/b><br\/>[CALDoc] foreign method java.util.Random.nextLong","terminals":[{"name":"jRandom","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_nextInt_Int","name":"random_nextInt_Int","type":"CalUtilitiesRandomrandom_nextInt_Int","ui":"<b>Cal.Utilities.Random.random_nextInt_Int<\/b><br\/>[CALDoc] foreign method java.util.Random.nextInt","terminals":[{"name":"jRandom","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_nextInt","name":"random_nextInt","type":"CalUtilitiesRandomrandom_nextInt","ui":"<b>Cal.Utilities.Random.random_nextInt<\/b><br\/>[CALDoc] foreign method java.util.Random.nextInt","terminals":[{"name":"jRandom","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_nextGaussian","name":"random_nextGaussian","type":"CalUtilitiesRandomrandom_nextGaussian","ui":"<b>Cal.Utilities.Random.random_nextGaussian<\/b><br\/>[CALDoc] foreign method java.util.Random.nextGaussian","terminals":[{"name":"jRandom","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_nextFloat","name":"random_nextFloat","type":"CalUtilitiesRandomrandom_nextFloat","ui":"<b>Cal.Utilities.Random.random_nextFloat<\/b><br\/>[CALDoc] foreign method java.util.Random.nextFloat","terminals":[{"name":"jRandom","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_nextDouble","name":"random_nextDouble","type":"CalUtilitiesRandomrandom_nextDouble","ui":"<b>Cal.Utilities.Random.random_nextDouble<\/b><br\/>[CALDoc] foreign method java.util.Random.nextDouble","terminals":[{"name":"jRandom","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_nextBoolean","name":"random_nextBoolean","type":"CalUtilitiesRandomrandom_nextBoolean","ui":"<b>Cal.Utilities.Random.random_nextBoolean<\/b><br\/>[CALDoc] foreign method java.util.Random.nextBoolean","terminals":[{"name":"jRandom","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Utilities.Random.random_new_Long","name":"random_new_Long","type":"CalUtilitiesRandomrandom_new_Long","ui":"<b>Cal.Utilities.Random.random_new_Long<\/b><br\/>[CALDoc] foreign constructor java.util.Random","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Random"]},{"description":"Cal.Collections.Set.showSet","name":"showSet","type":"CalCollectionsSetshowSet","ui":"<b>Cal.Collections.Set.showSet<\/b><br\/>[CALDoc] ","terminals":[{"name":"set","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.findMin","name":"findMin","type":"CalCollectionsSetfindMin","ui":"<b>Cal.Collections.Set.findMin<\/b><br\/>[CALDoc] Finds the minimal element of the set.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.fromArrayWith","name":"fromArrayWith","type":"CalCollectionsSetfromArrayWith","ui":"<b>Cal.Collections.Set.fromArrayWith<\/b><br\/>[CALDoc] Creates a set from an array of elements, with\neach element being transformed by the provided \nfunction.","terminals":[{"name":"f","input":"text"},{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.deleteMin","name":"deleteMin","type":"CalCollectionsSetdeleteMin","ui":"<b>Cal.Collections.Set.deleteMin<\/b><br\/>[CALDoc] Deletes the minimal element of the set.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.fromListWith","name":"fromListWith","type":"CalCollectionsSetfromListWith","ui":"<b>Cal.Collections.Set.fromListWith<\/b><br\/>[CALDoc] Creates a set from a list of elements with each\nelement in the list being transformed by the provided function.","terminals":[{"name":"func","input":"text"},{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.outputSet","name":"outputSet","type":"CalCollectionsSetoutputSet","ui":"<b>Cal.Collections.Set.outputSet<\/b><br\/>[CALDoc] ","terminals":[{"name":"set","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.intersections","name":"intersections","type":"CalCollectionsSetintersections","ui":"<b>Cal.Collections.Set.intersections<\/b><br\/>[CALDoc] Returns the intersection of a list of sets.","terminals":[{"name":"sets","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.fold","name":"fold","type":"CalCollectionsSetfold","ui":"<b>Cal.Collections.Set.fold<\/b><br\/>[CALDoc] Folds over the elements of a set.","terminals":[{"name":"s","input":"text"},{"name":"f","input":"text"},{"name":"z","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.elems","name":"elems","type":"CalCollectionsSetelems","ui":"<b>Cal.Collections.Set.elems<\/b><br\/>[CALDoc] Returns all elements of a set.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.arbitrarySet","name":"arbitrarySet","type":"CalCollectionsSetarbitrarySet","ui":"<b>Cal.Collections.Set.arbitrarySet<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.unions","name":"unions","type":"CalCollectionsSetunions","ui":"<b>Cal.Collections.Set.unions<\/b><br\/>[CALDoc] Returns the union of a list of sets.","terminals":[{"name":"ts","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.intersection","name":"intersection","type":"CalCollectionsSetintersection","ui":"<b>Cal.Collections.Set.intersection<\/b><br\/>[CALDoc] Returns the intersection of two sets.","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.coarbitrarySet","name":"coarbitrarySet","type":"CalCollectionsSetcoarbitrarySet","ui":"<b>Cal.Collections.Set.coarbitrarySet<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"set","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.fromAscList","name":"fromAscList","type":"CalCollectionsSetfromAscList","ui":"<b>Cal.Collections.Set.fromAscList<\/b><br\/>[CALDoc] Builds a set from an ascending list in linear time. ","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.fromDistinctAscList","name":"fromDistinctAscList","type":"CalCollectionsSetfromDistinctAscList","ui":"<b>Cal.Collections.Set.fromDistinctAscList<\/b><br\/>[CALDoc] Builds a set from an ascending list of distinct elements in linear time.\n","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.directBuild","name":"directBuild","type":"CalCollectionsSetdirectBuild","ui":"<b>Cal.Collections.Set.directBuild<\/b><br\/>[CALDoc] ","terminals":[{"name":"n","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.partition","name":"partition","type":"CalCollectionsSetpartition","ui":"<b>Cal.Collections.Set.partition<\/b><br\/>[CALDoc] Partitions the set into two sets, one with all elements that satisfy the predicate\nand one with all elements that don't satisfy the predicate.","terminals":[{"name":"p","input":"text"},{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.mapJust","name":"mapJust","type":"CalCollectionsSetmapJust","ui":"<b>Cal.Collections.Set.mapJust<\/b><br\/>[CALDoc] <code>mapJust mapFunction set<\/code> applies <code>mapFunction<\/code> to each element of set, discarding the <code>Nothing<\/code>\nvalues, and keeping the <em>Just<\/em> values after removing the <code>Just<\/code> constructor.","terminals":[{"name":"set","input":"text"},{"name":"mapFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.trimMemberLo","name":"trimMemberLo","type":"CalCollectionsSettrimMemberLo","ui":"<b>Cal.Collections.Set.trimMemberLo<\/b><br\/>[CALDoc] ","terminals":[{"name":"lo","input":"text"},{"name":"t","input":"text"},{"name":"cmphi","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.member","name":"member","type":"CalCollectionsSetmember","ui":"<b>Cal.Collections.Set.member<\/b><br\/>[CALDoc] Returns whether the element is in the set.","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.isEmptySpecialized","name":"isEmptySpecialized","type":"CalCollectionsSetisEmptySpecialized","ui":"<b>Cal.Collections.Set.isEmptySpecialized<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.findMax","name":"findMax","type":"CalCollectionsSetfindMax","ui":"<b>Cal.Collections.Set.findMax<\/b><br\/>[CALDoc] Finds the maximal element of the set.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.toArrayWith","name":"toArrayWith","type":"CalCollectionsSettoArrayWith","ui":"<b>Cal.Collections.Set.toArrayWith<\/b><br\/>[CALDoc] Converts a Set to an Array of transformed elements.","terminals":[{"name":"f","input":"text"},{"name":"set","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.union","name":"union","type":"CalCollectionsSetunion","ui":"<b>Cal.Collections.Set.union<\/b><br\/>[CALDoc] Returns the union of two sets. ","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.hedgeUnion","name":"hedgeUnion","type":"CalCollectionsSethedgeUnion","ui":"<b>Cal.Collections.Set.hedgeUnion<\/b><br\/>[CALDoc] ","terminals":[{"name":"cmphi","input":"text"},{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"cmplo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.intersect","name":"intersect","type":"CalCollectionsSetintersect","ui":"<b>Cal.Collections.Set.intersect<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.map","name":"map","type":"CalCollectionsSetmap","ui":"<b>Cal.Collections.Set.map<\/b><br\/>[CALDoc] <code>map f s<\/code> is the set obtained by applying <code>f<\/code> to each element of <code>s<\/code>. ","terminals":[{"name":"set","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.split","name":"split","type":"CalCollectionsSetsplit","ui":"<b>Cal.Collections.Set.split<\/b><br\/>[CALDoc] <code>split x set<\/code> returns a pair <code>(set1,set2)<\/code> where all elements in <code>set1<\/code> are smaller\nthan <code>x<\/code> and all elements in <code>set2<\/code> are larger than <code>x<\/code>. ","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.valid","name":"valid","type":"CalCollectionsSetvalid","ui":"<b>Cal.Collections.Set.valid<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.validsize","name":"validsize","type":"CalCollectionsSetvalidsize","ui":"<b>Cal.Collections.Set.validsize<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.difference","name":"difference","type":"CalCollectionsSetdifference","ui":"<b>Cal.Collections.Set.difference<\/b><br\/>[CALDoc] Returns the difference of two sets.","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.hedgeDiff","name":"hedgeDiff","type":"CalCollectionsSethedgeDiff","ui":"<b>Cal.Collections.Set.hedgeDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"cmplo","input":"text"},{"name":"t2","input":"text"},{"name":"cmphi","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.isProperSubsetOf","name":"isProperSubsetOf","type":"CalCollectionsSetisProperSubsetOf","ui":"<b>Cal.Collections.Set.isProperSubsetOf<\/b><br\/>[CALDoc] Returns whether the first set is a proper subset of the second set (ie. a subset but not equal).","terminals":[{"name":"s2","input":"text"},{"name":"s1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.isSubsetOf","name":"isSubsetOf","type":"CalCollectionsSetisSubsetOf","ui":"<b>Cal.Collections.Set.isSubsetOf<\/b><br\/>[CALDoc] Returns whether the first set is a subset of the second set.","terminals":[{"name":"t2","input":"text"},{"name":"t1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.filterGt","name":"filterGt","type":"CalCollectionsSetfilterGt","ui":"<b>Cal.Collections.Set.filterGt<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"cmp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.inputSet","name":"inputSet","type":"CalCollectionsSetinputSet","ui":"<b>Cal.Collections.Set.inputSet<\/b><br\/>[CALDoc] ","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.toListWith","name":"toListWith","type":"CalCollectionsSettoListWith","ui":"<b>Cal.Collections.Set.toListWith<\/b><br\/>[CALDoc] Converts the set to a list of transformed\nelements.","terminals":[{"name":"f","input":"text"},{"name":"set","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.deleteMax","name":"deleteMax","type":"CalCollectionsSetdeleteMax","ui":"<b>Cal.Collections.Set.deleteMax<\/b><br\/>[CALDoc] Deletes the maximal element of the set.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.filterLt","name":"filterLt","type":"CalCollectionsSetfilterLt","ui":"<b>Cal.Collections.Set.filterLt<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"cmp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.emptySpecialized","name":"emptySpecialized","type":"CalCollectionsSetemptySpecialized","ui":"<b>Cal.Collections.Set.emptySpecialized<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.ordered","name":"ordered","type":"CalCollectionsSetordered","ui":"<b>Cal.Collections.Set.ordered<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.notEqualsSet","name":"notEqualsSet","type":"CalCollectionsSetnotEqualsSet","ui":"<b>Cal.Collections.Set.notEqualsSet<\/b><br\/>[CALDoc] ","terminals":[{"name":"s1","input":"text"},{"name":"s2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.equalsSet","name":"equalsSet","type":"CalCollectionsSetequalsSet","ui":"<b>Cal.Collections.Set.equalsSet<\/b><br\/>[CALDoc] ","terminals":[{"name":"s2","input":"text"},{"name":"s1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.toArray","name":"toArray","type":"CalCollectionsSettoArray","ui":"<b>Cal.Collections.Set.toArray<\/b><br\/>[CALDoc] Converts a Set to an Array of elements.","terminals":[{"name":"set","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.toList","name":"toList","type":"CalCollectionsSettoList","ui":"<b>Cal.Collections.Set.toList<\/b><br\/>[CALDoc] Converts the set to an ascending list of elements.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.toAscList","name":"toAscList","type":"CalCollectionsSettoAscList","ui":"<b>Cal.Collections.Set.toAscList<\/b><br\/>[CALDoc] Converts the set to an ascending list of elements.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.foldR","name":"foldR","type":"CalCollectionsSetfoldR","ui":"<b>Cal.Collections.Set.foldR<\/b><br\/>[CALDoc] ","terminals":[{"name":"s","input":"text"},{"name":"f","input":"text"},{"name":"z","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.fromArray","name":"fromArray","type":"CalCollectionsSetfromArray","ui":"<b>Cal.Collections.Set.fromArray<\/b><br\/>[CALDoc] Creates a set from an array of elements.","terminals":[{"name":"array","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.fromList","name":"fromList","type":"CalCollectionsSetfromList","ui":"<b>Cal.Collections.Set.fromList<\/b><br\/>[CALDoc] Creates a set from a list of elements.","terminals":[{"name":"xs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.insert","name":"insert","type":"CalCollectionsSetinsert","ui":"<b>Cal.Collections.Set.insert<\/b><br\/>[CALDoc] Inserts an element in a set.","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.balanced","name":"balanced","type":"CalCollectionsSetbalanced","ui":"<b>Cal.Collections.Set.balanced<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.isSubsetOfHelper","name":"isSubsetOfHelper","type":"CalCollectionsSetisSubsetOfHelper","ui":"<b>Cal.Collections.Set.isSubsetOfHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"t2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.splitMember","name":"splitMember","type":"CalCollectionsSetsplitMember","ui":"<b>Cal.Collections.Set.splitMember<\/b><br\/>[CALDoc] Performs a split but also returns whether the pivot element was found in the\noriginal set.","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.delete","name":"delete","type":"CalCollectionsSetdelete","ui":"<b>Cal.Collections.Set.delete<\/b><br\/>[CALDoc] Deletes an element from a set.","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.filter","name":"filter","type":"CalCollectionsSetfilter","ui":"<b>Cal.Collections.Set.filter<\/b><br\/>[CALDoc] Filters all elements that satisfy the predicate.","terminals":[{"name":"s","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.merge","name":"merge","type":"CalCollectionsSetmerge","ui":"<b>Cal.Collections.Set.merge<\/b><br\/>[CALDoc] ","terminals":[{"name":"r","input":"text"},{"name":"l","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.glue","name":"glue","type":"CalCollectionsSetglue","ui":"<b>Cal.Collections.Set.glue<\/b><br\/>[CALDoc] ","terminals":[{"name":"r","input":"text"},{"name":"l","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.deleteFindMin","name":"deleteFindMin","type":"CalCollectionsSetdeleteFindMin","ui":"<b>Cal.Collections.Set.deleteFindMin<\/b><br\/>[CALDoc] Deletes and finds the minimal element.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.deleteFindMax","name":"deleteFindMax","type":"CalCollectionsSetdeleteFindMax","ui":"<b>Cal.Collections.Set.deleteFindMax<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.isEmpty","name":"isEmpty","type":"CalCollectionsSetisEmpty","ui":"<b>Cal.Collections.Set.isEmpty<\/b><br\/>[CALDoc] Returns whether the set is empty.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.join","name":"join","type":"CalCollectionsSetjoin","ui":"<b>Cal.Collections.Set.join<\/b><br\/>[CALDoc] ","terminals":[{"name":"r","input":"text"},{"name":"l","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.insertMax","name":"insertMax","type":"CalCollectionsSetinsertMax","ui":"<b>Cal.Collections.Set.insertMax<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.insertMin","name":"insertMin","type":"CalCollectionsSetinsertMin","ui":"<b>Cal.Collections.Set.insertMin<\/b><br\/>[CALDoc] ","terminals":[{"name":"t","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.balance","name":"balance","type":"CalCollectionsSetbalance","ui":"<b>Cal.Collections.Set.balance<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"r","input":"text"},{"name":"l","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.rotateR","name":"rotateR","type":"CalCollectionsSetrotateR","ui":"<b>Cal.Collections.Set.rotateR<\/b><br\/>[CALDoc] ","terminals":[{"name":"l","input":"text"},{"name":"r","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.doubleR","name":"doubleR","type":"CalCollectionsSetdoubleR","ui":"<b>Cal.Collections.Set.doubleR<\/b><br\/>[CALDoc] ","terminals":[{"name":"x1","input":"text"},{"name":"t5","input":"text"},{"name":"t4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.singleR","name":"singleR","type":"CalCollectionsSetsingleR","ui":"<b>Cal.Collections.Set.singleR<\/b><br\/>[CALDoc] ","terminals":[{"name":"t4","input":"text"},{"name":"t3","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.rotateL","name":"rotateL","type":"CalCollectionsSetrotateL","ui":"<b>Cal.Collections.Set.rotateL<\/b><br\/>[CALDoc] ","terminals":[{"name":"r","input":"text"},{"name":"l","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.doubleL","name":"doubleL","type":"CalCollectionsSetdoubleL","ui":"<b>Cal.Collections.Set.doubleL<\/b><br\/>[CALDoc] ","terminals":[{"name":"x1","input":"text"},{"name":"t1","input":"text"},{"name":"t5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.singleL","name":"singleL","type":"CalCollectionsSetsingleL","ui":"<b>Cal.Collections.Set.singleL<\/b><br\/>[CALDoc] ","terminals":[{"name":"t1","input":"text"},{"name":"t4","input":"text"},{"name":"x1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.Bin","name":"Bin","type":"CalCollectionsSetBin","ui":"<b>Cal.Collections.Set.Bin<\/b><br\/>[CALDoc] ","terminals":[{"name":"size","input":"text"},{"name":"leftSet","input":"text"},{"name":"value","input":"text"},{"name":"rightSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.ratio","name":"ratio","type":"CalCollectionsSetratio","ui":"<b>Cal.Collections.Set.ratio<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.delta","name":"delta","type":"CalCollectionsSetdelta","ui":"<b>Cal.Collections.Set.delta<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.size","name":"size","type":"CalCollectionsSetsize","ui":"<b>Cal.Collections.Set.size<\/b><br\/>[CALDoc] Returns the number of elements in the set.","terminals":[{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.single","name":"single","type":"CalCollectionsSetsingle","ui":"<b>Cal.Collections.Set.single<\/b><br\/>[CALDoc] Creates a singleton set.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.trim","name":"trim","type":"CalCollectionsSettrim","ui":"<b>Cal.Collections.Set.trim<\/b><br\/>[CALDoc] ","terminals":[{"name":"cmphi","input":"text"},{"name":"cmplo","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.empty","name":"empty","type":"CalCollectionsSetempty","ui":"<b>Cal.Collections.Set.empty<\/b><br\/>[CALDoc] The empty set.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Collections.Set.Tip","name":"Tip","type":"CalCollectionsSetTip","ui":"<b>Cal.Collections.Set.Tip<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Collections.Set"]},{"description":"Cal.Core.String.trimLeft","name":"trimLeft","type":"CalCoreStringtrimLeft","ui":"<b>Cal.Core.String.trimLeft<\/b><br\/>[CALDoc] Removes leading whitespace from a string. ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.toList","name":"toList","type":"CalCoreStringtoList","ui":"<b>Cal.Core.String.toList<\/b><br\/>[CALDoc] Converts the string to a list of characters.","terminals":[{"name":"stringValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.trimRight","name":"trimRight","type":"CalCoreStringtrimRight","ui":"<b>Cal.Core.String.trimRight<\/b><br\/>[CALDoc] Removes trailing whitespace from a string. ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.testModule","name":"testModule","type":"CalCoreStringtestModule","ui":"<b>Cal.Core.String.testModule<\/b><br\/>[CALDoc] Returns: <code>True<\/code> if the testing predicates in this module all run successfully.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.wordsExamples","name":"wordsExamples","type":"CalCoreStringwordsExamples","ui":"<b>Cal.Core.String.wordsExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.unwordsExamples","name":"unwordsExamples","type":"CalCoreStringunwordsExamples","ui":"<b>Cal.Core.String.unwordsExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.unwords","name":"unwords","type":"CalCoreStringunwords","ui":"<b>Cal.Core.String.unwords<\/b><br\/>[CALDoc] Converts a list of words into a single string, where the original words are separated by spaces (<code>' '<\/code>).","terminals":[{"name":"listOfWords","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.unlinesExamples","name":"unlinesExamples","type":"CalCoreStringunlinesExamples","ui":"<b>Cal.Core.String.unlinesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.toUpperCaseExamples","name":"toUpperCaseExamples","type":"CalCoreStringtoUpperCaseExamples","ui":"<b>Cal.Core.String.toUpperCaseExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.toLowerCaseExamples","name":"toLowerCaseExamples","type":"CalCoreStringtoLowerCaseExamples","ui":"<b>Cal.Core.String.toLowerCaseExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.takeWhileExamples","name":"takeWhileExamples","type":"CalCoreStringtakeWhileExamples","ui":"<b>Cal.Core.String.takeWhileExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.startsWithExamples","name":"startsWithExamples","type":"CalCoreStringstartsWithExamples","ui":"<b>Cal.Core.String.startsWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.reverseExamples","name":"reverseExamples","type":"CalCoreStringreverseExamples","ui":"<b>Cal.Core.String.reverseExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.linesExamples","name":"linesExamples","type":"CalCoreStringlinesExamples","ui":"<b>Cal.Core.String.linesExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.lines","name":"lines","type":"CalCoreStringlines","ui":"<b>Cal.Core.String.lines<\/b><br\/>[CALDoc] Breaks up a string into a list of strings, one for each line. ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.foldLeftStrictExamples","name":"foldLeftStrictExamples","type":"CalCoreStringfoldLeftStrictExamples","ui":"<b>Cal.Core.String.foldLeftStrictExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.findIndexExamples","name":"findIndexExamples","type":"CalCoreStringfindIndexExamples","ui":"<b>Cal.Core.String.findIndexExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.filterExamples","name":"filterExamples","type":"CalCoreStringfilterExamples","ui":"<b>Cal.Core.String.filterExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.endsWithExamples","name":"endsWithExamples","type":"CalCoreStringendsWithExamples","ui":"<b>Cal.Core.String.endsWithExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.dropWhileExamples","name":"dropWhileExamples","type":"CalCoreStringdropWhileExamples","ui":"<b>Cal.Core.String.dropWhileExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.unlines","name":"unlines","type":"CalCoreStringunlines","ui":"<b>Cal.Core.String.unlines<\/b><br\/>[CALDoc] Converts a list of strings into a single string, where the original strings are now separated by newlines (<code>'\\n'<\/code>).","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.findExamples","name":"findExamples","type":"CalCoreStringfindExamples","ui":"<b>Cal.Core.String.findExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.find","name":"find","type":"CalCoreStringfind","ui":"<b>Cal.Core.String.find<\/b><br\/>[CALDoc] <code>find predicate string<\/code> returns the first value of string for which the predicate function is <code>True<\/code>, if there is\none, or <code>Nothing<\/code> otherwise.","terminals":[{"name":"predicate","input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.reverse","name":"reverse","type":"CalCoreStringreverse","ui":"<b>Cal.Core.String.reverse<\/b><br\/>[CALDoc] Reverses the sequence of characters of a string. \n<code>reverse<\/code> is O(n) time where n is the length of the string.","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.words","name":"words","type":"CalCoreStringwords","ui":"<b>Cal.Core.String.words<\/b><br\/>[CALDoc] Breaks up a string into a list of strings, one for each word. ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.multiSplitString","name":"multiSplitString","type":"CalCoreStringmultiSplitString","ui":"<b>Cal.Core.String.multiSplitString<\/b><br\/>[CALDoc] Breaks up the specified string where any of the separators occur.\n","terminals":[{"name":"stringValue","input":"text"},{"name":"separators","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.dropWhile","name":"dropWhile","type":"CalCoreStringdropWhile","ui":"<b>Cal.Core.String.dropWhile<\/b><br\/>[CALDoc] <code>dropWhile dropWhileTrueFunction string<\/code> drops the longest prefix of the string for which <code>dropWhileTrueFunction<\/code>\nis <code>True<\/code> for each element.","terminals":[{"name":"dropWhileTrueFunction","input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.space","name":"space","type":"CalCoreStringspace","ui":"<b>Cal.Core.String.space<\/b><br\/>[CALDoc] Constructs a string of a specified number of spaces.","terminals":[{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.fromList","name":"fromList","type":"CalCoreStringfromList","ui":"<b>Cal.Core.String.fromList<\/b><br\/>[CALDoc] Converts the list of characters to a string.","terminals":[{"name":"listOfChars","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.splitString","name":"splitString","type":"CalCoreStringsplitString","ui":"<b>Cal.Core.String.splitString<\/b><br\/>[CALDoc] Breaks up the specified string where the separator text occurs.\n","terminals":[{"name":"separator","input":"text"},{"name":"stringValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.trimExamples","name":"trimExamples","type":"CalCoreStringtrimExamples","ui":"<b>Cal.Core.String.trimExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.takeWhile","name":"takeWhile","type":"CalCoreStringtakeWhile","ui":"<b>Cal.Core.String.takeWhile<\/b><br\/>[CALDoc] <code>takeWhile takeWhileTrueFunction string<\/code> returns the longest prefix of the string for which <code>takeWhileTrueFunction<\/code>\nis <code>True<\/code> for each element.","terminals":[{"name":"string","input":"text"},{"name":"takeWhileTrueFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.findIndex","name":"findIndex","type":"CalCoreStringfindIndex","ui":"<b>Cal.Core.String.findIndex<\/b><br\/>[CALDoc] <code>findIndex predicate string<\/code> returns the first index of string for which the predicate function is <code>True<\/code>, if\nthere is one, or <code>Nothing<\/code> otherwise. ","terminals":[{"name":"predicate","input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.mapExamples","name":"mapExamples","type":"CalCoreStringmapExamples","ui":"<b>Cal.Core.String.mapExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.map","name":"map","type":"CalCoreStringmap","ui":"<b>Cal.Core.String.map<\/b><br\/>[CALDoc] <code>map mapFunction string<\/code> applies the function <code>mapFunction<\/code> to each character of <code>string<\/code> and returns the\nresulting string.","terminals":[{"name":"mapFunction","input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.normalizeWhitespaceExamples","name":"normalizeWhitespaceExamples","type":"CalCoreStringnormalizeWhitespaceExamples","ui":"<b>Cal.Core.String.normalizeWhitespaceExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.normalizeWhitespace","name":"normalizeWhitespace","type":"CalCoreStringnormalizeWhitespace","ui":"<b>Cal.Core.String.normalizeWhitespace<\/b><br\/>[CALDoc] Replaces any sequence of whitespace characters with a single space. ","terminals":[{"name":"inputString","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.filter","name":"filter","type":"CalCoreStringfilter","ui":"<b>Cal.Core.String.filter<\/b><br\/>[CALDoc] <code>filter keepIfTrueFunction string<\/code> applies the predicate function to each character of the string, and returns\nthe string of characters for which the predicate evaluates to <code>True<\/code>.","terminals":[{"name":"keepIfTrueFunction","input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.compareStringsExamples","name":"compareStringsExamples","type":"CalCoreStringcompareStringsExamples","ui":"<b>Cal.Core.String.compareStringsExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.compareIgnoreCase","name":"compareIgnoreCase","type":"CalCoreStringcompareIgnoreCase","ui":"<b>Cal.Core.String.compareIgnoreCase<\/b><br\/>[CALDoc] Compares two strings lexographically, ignoring case differences.","terminals":[{"name":"stringValue1","input":"text"},{"name":"stringValue2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.foldLeftStrict","name":"foldLeftStrict","type":"CalCoreStringfoldLeftStrict","ui":"<b>Cal.Core.String.foldLeftStrict<\/b><br\/>[CALDoc] This is the strict version of <code>foldLeft<\/code>. ","terminals":[{"name":"string","input":"text"},{"name":"initialValue","input":"text"},{"name":"foldFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.replicateExamples","name":"replicateExamples","type":"CalCoreStringreplicateExamples","ui":"<b>Cal.Core.String.replicateExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.replicate","name":"replicate","type":"CalCoreStringreplicate","ui":"<b>Cal.Core.String.replicate<\/b><br\/>[CALDoc] <code>replicate nCopies charToReplicate<\/code> is a string of length <code>nCopies<\/code>, with every character equal to\n<code>charToReplicate<\/code>.","terminals":[{"name":"n","input":"text"},{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_reverse","name":"stringBuilder_reverse","type":"CalCoreStringstringBuilder_reverse","ui":"<b>Cal.Core.String.stringBuilder_reverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"jStringBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_toString","name":"stringBuilder_toString","type":"CalCoreStringstringBuilder_toString","ui":"<b>Cal.Core.String.stringBuilder_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jStringBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_setCharAt","name":"stringBuilder_setCharAt","type":"CalCoreStringstringBuilder_setCharAt","ui":"<b>Cal.Core.String.stringBuilder_setCharAt<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jStringBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_charAt","name":"stringBuilder_charAt","type":"CalCoreStringstringBuilder_charAt","ui":"<b>Cal.Core.String.stringBuilder_charAt<\/b><br\/>[CALDoc] ","terminals":[{"name":"jStringBuilder","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_appendChar","name":"stringBuilder_appendChar","type":"CalCoreStringstringBuilder_appendChar","ui":"<b>Cal.Core.String.stringBuilder_appendChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"jStringBuilder","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_new2","name":"stringBuilder_new2","type":"CalCoreStringstringBuilder_new2","ui":"<b>Cal.Core.String.stringBuilder_new2<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_new1","name":"stringBuilder_new1","type":"CalCoreStringstringBuilder_new1","ui":"<b>Cal.Core.String.stringBuilder_new1<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.stringBuilder_new0","name":"stringBuilder_new0","type":"CalCoreStringstringBuilder_new0","ui":"<b>Cal.Core.String.stringBuilder_new0<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.length","name":"length","type":"CalCoreStringlength","ui":"<b>Cal.Core.String.length<\/b><br\/>[CALDoc] Returns the length of the string. ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.subscript","name":"subscript","type":"CalCoreStringsubscript","ui":"<b>Cal.Core.String.subscript<\/b><br\/>[CALDoc] Retrieves the character at the specified (0-based) position in the string","terminals":[{"name":"string","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.endsWith","name":"endsWith","type":"CalCoreStringendsWith","ui":"<b>Cal.Core.String.endsWith<\/b><br\/>[CALDoc] Returns whether <code>stringToTest<\/code> ends with the specified suffix.","terminals":[{"name":"stringToTest","input":"text"},{"name":"suffix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.startsWithFrom","name":"startsWithFrom","type":"CalCoreStringstartsWithFrom","ui":"<b>Cal.Core.String.startsWithFrom<\/b><br\/>[CALDoc] Returns whether <code>stringToTest<\/code> starts with the specified prefix beginning at the specified offset index of\n<code>stringToTest<\/code>. ","terminals":[{"name":"stringToTest","input":"text"},{"name":"offsetIndex","input":"text"},{"name":"prefix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.startsWith","name":"startsWith","type":"CalCoreStringstartsWith","ui":"<b>Cal.Core.String.startsWith<\/b><br\/>[CALDoc] Returns whether <code>stringToTest<\/code> starts with the specified prefix.","terminals":[{"name":"stringToTest","input":"text"},{"name":"prefix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.trim","name":"trim","type":"CalCoreStringtrim","ui":"<b>Cal.Core.String.trim<\/b><br\/>[CALDoc] Trims leading and trailing whitespace from the string.","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.lastIndexOfStringFrom","name":"lastIndexOfStringFrom","type":"CalCoreStringlastIndexOfStringFrom","ui":"<b>Cal.Core.String.lastIndexOfStringFrom<\/b><br\/>[CALDoc] Finds the index of the last occurrence at index less than or equal to <code>fromIndex<\/code> of <code>stringToFind<\/code> in\n<code>stringToSearch<\/code> or -1 if <code>stringToFind<\/code> does not occur from <code>fromIndex<\/code> and earlier.","terminals":[{"name":"stringToSearch","input":"text"},{"name":"str","input":"text"},{"name":"fromIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.lastIndexOfString","name":"lastIndexOfString","type":"CalCoreStringlastIndexOfString","ui":"<b>Cal.Core.String.lastIndexOfString<\/b><br\/>[CALDoc] Finds the index of the last occurrence of <code>stringToFind<\/code> in <code>stringToSearch<\/code> or -1 if the <code>stringToFind<\/code>\ndoes not occur.","terminals":[{"name":"stringToSearch","input":"text"},{"name":"str","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.lastIndexOfFrom","name":"lastIndexOfFrom","type":"CalCoreStringlastIndexOfFrom","ui":"<b>Cal.Core.String.lastIndexOfFrom<\/b><br\/>[CALDoc] Finds the index of the last occurrence at index less than or equal to <code>fromIndex<\/code> of <code>charToFind<\/code> in\n<code>stringToSearch<\/code> or -1 if the character does not occur from <code>fromIndex<\/code> and earlier.","terminals":[{"name":"stringToSearch","input":"text"},{"name":"fromIndex","input":"text"},{"name":"ch","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.lastIndexOf","name":"lastIndexOf","type":"CalCoreStringlastIndexOf","ui":"<b>Cal.Core.String.lastIndexOf<\/b><br\/>[CALDoc] Finds the index of the last occurrence of <code>charToFind<\/code> in <code>stringToSearch<\/code> or -1 if the character does not occur.","terminals":[{"name":"stringToSearch","input":"text"},{"name":"ch","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.indexOfStringFrom","name":"indexOfStringFrom","type":"CalCoreStringindexOfStringFrom","ui":"<b>Cal.Core.String.indexOfStringFrom<\/b><br\/>[CALDoc] Finds the index of the first occurrence at index greater than or equal to <code>fromIndex<\/code> of <code>stringToFind<\/code> in\n<code>stringToSearch<\/code> or -1 if <code>stringToFind<\/code> does not occur from <code>fromIndex<\/code> onwards.","terminals":[{"name":"fromIndex","input":"text"},{"name":"stringToSearch","input":"text"},{"name":"str","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.indexOfString","name":"indexOfString","type":"CalCoreStringindexOfString","ui":"<b>Cal.Core.String.indexOfString<\/b><br\/>[CALDoc] Finds the index of the first occurrence of <code>stringToFind<\/code> in <code>stringToSearch<\/code> or -1 if the <code>stringToFind<\/code>\ndoes not occur.","terminals":[{"name":"str","input":"text"},{"name":"stringToSearch","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.indexOfFrom","name":"indexOfFrom","type":"CalCoreStringindexOfFrom","ui":"<b>Cal.Core.String.indexOfFrom<\/b><br\/>[CALDoc] Finds the index of the first occurrence at index greater than or equal to <code>fromIndex<\/code> of <code>charToFind<\/code> in\n<code>stringToSearch<\/code> or -1 if the character does not occur from <code>fromIndex<\/code> onwards.","terminals":[{"name":"fromIndex","input":"text"},{"name":"stringToSearch","input":"text"},{"name":"ch","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.indexOf","name":"indexOf","type":"CalCoreStringindexOf","ui":"<b>Cal.Core.String.indexOf<\/b><br\/>[CALDoc] Finds the index of the first occurrence of <code>charToFind<\/code> in <code>stringToSearch<\/code> or -1 if the character does not occur.","terminals":[{"name":"ch","input":"text"},{"name":"stringToSearch","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.jCompareStringIgnoreCase","name":"jCompareStringIgnoreCase","type":"CalCoreStringjCompareStringIgnoreCase","ui":"<b>Cal.Core.String.jCompareStringIgnoreCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.equalsIgnoreCase","name":"equalsIgnoreCase","type":"CalCoreStringequalsIgnoreCase","ui":"<b>Cal.Core.String.equalsIgnoreCase<\/b><br\/>[CALDoc] Returns whether the strings are lexographically equal, ignoring case differences.\n","terminals":[{"name":null,"input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.replaceAllString","name":"replaceAllString","type":"CalCoreStringreplaceAllString","ui":"<b>Cal.Core.String.replaceAllString<\/b><br\/>[CALDoc] Replaces each substring of the specified string that matches the given regular expression with the given replacement.","terminals":[{"name":"string","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.substring","name":"substring","type":"CalCoreStringsubstring","ui":"<b>Cal.Core.String.substring<\/b><br\/>[CALDoc] Returns a new string that is a substring of the specified string. \n","terminals":[{"name":"string","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.toLowerCaseInLocale","name":"toLowerCaseInLocale","type":"CalCoreStringtoLowerCaseInLocale","ui":"<b>Cal.Core.String.toLowerCaseInLocale<\/b><br\/>[CALDoc] Converts all of the characters in the specified string to lower case using\nthe rules of the specified locale.","terminals":[{"name":null,"input":"text"},{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.toLowerCase","name":"toLowerCase","type":"CalCoreStringtoLowerCase","ui":"<b>Cal.Core.String.toLowerCase<\/b><br\/>[CALDoc] Converts all of the characters in the specified string to lower case using\nthe rules of the default locale <code>Locale.defaultLocale<\/code>.","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.toUpperCaseInLocale","name":"toUpperCaseInLocale","type":"CalCoreStringtoUpperCaseInLocale","ui":"<b>Cal.Core.String.toUpperCaseInLocale<\/b><br\/>[CALDoc] Converts all of the characters in the specified string to upper case using\nthe rules of the specified locale.","terminals":[{"name":"string","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.toUpperCase","name":"toUpperCase","type":"CalCoreStringtoUpperCase","ui":"<b>Cal.Core.String.toUpperCase<\/b><br\/>[CALDoc] Converts all of the characters in the specified string to upper case using\nthe rules of the default locale <code>Locale.defaultLocale<\/code>.","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Core.String.fromChar","name":"fromChar","type":"CalCoreStringfromChar","ui":"<b>Cal.Core.String.fromChar<\/b><br\/>[CALDoc] Converts a single character to a string of length 1 holding that character.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.String"]},{"description":"Cal.Utilities.StringNoCase.greaterThanEqualsStringNoCase","name":"greaterThanEqualsStringNoCase","type":"CalUtilitiesStringNoCasegreaterThanEqualsStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.greaterThanEqualsStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string2","input":"text"},{"name":"string1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.lessThanEqualsStringNoCase","name":"lessThanEqualsStringNoCase","type":"CalUtilitiesStringNoCaselessThanEqualsStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.lessThanEqualsStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string1","input":"text"},{"name":"string2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.notEqualsStringNoCase","name":"notEqualsStringNoCase","type":"CalUtilitiesStringNoCasenotEqualsStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.notEqualsStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string2","input":"text"},{"name":"string1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.lessThanStringNoCase","name":"lessThanStringNoCase","type":"CalUtilitiesStringNoCaselessThanStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.lessThanStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string1","input":"text"},{"name":"string2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.minStringNoCase","name":"minStringNoCase","type":"CalUtilitiesStringNoCaseminStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.minStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string2","input":"text"},{"name":"string1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.maxStringNoCase","name":"maxStringNoCase","type":"CalUtilitiesStringNoCasemaxStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.maxStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string1","input":"text"},{"name":"string2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.compareStringNoCase","name":"compareStringNoCase","type":"CalUtilitiesStringNoCasecompareStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.compareStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string2","input":"text"},{"name":"string1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.isEmptyStringNoCase","name":"isEmptyStringNoCase","type":"CalUtilitiesStringNoCaseisEmptyStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.isEmptyStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.concatStringNoCase","name":"concatStringNoCase","type":"CalUtilitiesStringNoCaseconcatStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.concatStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.emptyStringNoCase","name":"emptyStringNoCase","type":"CalUtilitiesStringNoCaseemptyStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.emptyStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.appendStringNoCase","name":"appendStringNoCase","type":"CalUtilitiesStringNoCaseappendStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.appendStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string1","input":"text"},{"name":"string2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.equalsStringNoCase","name":"equalsStringNoCase","type":"CalUtilitiesStringNoCaseequalsStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.equalsStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string2","input":"text"},{"name":"string1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.greaterThanStringNoCase","name":"greaterThanStringNoCase","type":"CalUtilitiesStringNoCasegreaterThanStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.greaterThanStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"string2","input":"text"},{"name":"string1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.showStringNoCase","name":"showStringNoCase","type":"CalUtilitiesStringNoCaseshowStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.showStringNoCase<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.jCompareStringNoCase","name":"jCompareStringNoCase","type":"CalUtilitiesStringNoCasejCompareStringNoCase","ui":"<b>Cal.Utilities.StringNoCase.jCompareStringNoCase<\/b><br\/>[CALDoc] Returns: -1 for LT, 0 for EQ, 1 for GT","terminals":[{"name":null,"input":"text"},{"name":"stringNoCase","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.toString","name":"toString","type":"CalUtilitiesStringNoCasetoString","ui":"<b>Cal.Utilities.StringNoCase.toString<\/b><br\/>[CALDoc] Converts a <code>StringNoCase<\/code> value to a <code>String<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Utilities.StringNoCase.fromString","name":"fromString","type":"CalUtilitiesStringNoCasefromString","ui":"<b>Cal.Utilities.StringNoCase.fromString<\/b><br\/>[CALDoc] Converts a <code>String<\/code> value to a <code>StringNoCase<\/code> value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringNoCase"]},{"description":"Cal.Core.System.hasProperty","name":"hasProperty","type":"CalCoreSystemhasProperty","ui":"<b>Cal.Core.System.hasProperty<\/b><br\/>[CALDoc] Returns whether the specified system property is defined in the current execution context.","terminals":[{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.getProperty","name":"getProperty","type":"CalCoreSystemgetProperty","ui":"<b>Cal.Core.System.getProperty<\/b><br\/>[CALDoc] Looks up the specified system property of the current execution context.","terminals":[{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.propertyKeys","name":"propertyKeys","type":"CalCoreSystempropertyKeys","ui":"<b>Cal.Core.System.propertyKeys<\/b><br\/>[CALDoc] Returns the keys of the system properties defined in the current execution context.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.registerCleanable","name":"registerCleanable","type":"CalCoreSystemregisterCleanable","ui":"<b>Cal.Core.System.registerCleanable<\/b><br\/>[CALDoc] Registers a cleanup hook to be run whenever the current execution context is cleaned up. ","terminals":[{"name":"cleanable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.showCleanable","name":"showCleanable","type":"CalCoreSystemshowCleanable","ui":"<b>Cal.Core.System.showCleanable<\/b><br\/>[CALDoc] ","terminals":[{"name":"cleanable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.registerCleanableFunction","name":"registerCleanableFunction","type":"CalCoreSystemregisterCleanableFunction","ui":"<b>Cal.Core.System.registerCleanableFunction<\/b><br\/>[CALDoc] Registers a cleanup hook based on a CAL to be run whenever the current execution context is cleaned up. \n","terminals":[{"name":"cleanupFn","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.executionContextProperties","name":"executionContextProperties","type":"CalCoreSystemexecutionContextProperties","ui":"<b>Cal.Core.System.executionContextProperties<\/b><br\/>[CALDoc] Returns the <code>ExecutionContextProperties<\/code> instance encapsulating the set of properties associated with\nthe current execution context.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.concurrentRuntime","name":"concurrentRuntime","type":"CalCoreSystemconcurrentRuntime","ui":"<b>Cal.Core.System.concurrentRuntime<\/b><br\/>[CALDoc] If true, the CAL run-time supports concurrent reduction of CAL programs on a single \nexecution context. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.jRegisterCleanableFunction","name":"jRegisterCleanableFunction","type":"CalCoreSystemjRegisterCleanableFunction","ui":"<b>Cal.Core.System.jRegisterCleanableFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"cleanupFunction","input":"text"},{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.jRegisterCleanable","name":"jRegisterCleanable","type":"CalCoreSystemjRegisterCleanable","ui":"<b>Cal.Core.System.jRegisterCleanable<\/b><br\/>[CALDoc] Registers a cleanup hook to be run whenever the given execution context is cleaned up. ","terminals":[{"name":"cleanable","input":"text"},{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.jGetPropertyKeys","name":"jGetPropertyKeys","type":"CalCoreSystemjGetPropertyKeys","ui":"<b>Cal.Core.System.jGetPropertyKeys<\/b><br\/>[CALDoc] Returns the keys of the properties in the given <code>ExecutionContextProperties<\/code> instance.","terminals":[{"name":"executionContextProperties","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.jHasProperty","name":"jHasProperty","type":"CalCoreSystemjHasProperty","ui":"<b>Cal.Core.System.jHasProperty<\/b><br\/>[CALDoc] Returns whether the specified property is in the given <code>ExecutionContextProperties<\/code> instance.","terminals":[{"name":"executionContextProperties","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.jGetProperty","name":"jGetProperty","type":"CalCoreSystemjGetProperty","ui":"<b>Cal.Core.System.jGetProperty<\/b><br\/>[CALDoc] Looks up the specified property in the given <code>ExecutionContextProperties<\/code> instance.","terminals":[{"name":"executionContextProperties","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.System.jGetProperties","name":"jGetProperties","type":"CalCoreSystemjGetProperties","ui":"<b>Cal.Core.System.jGetProperties<\/b><br\/>[CALDoc] Returns the <code>ExecutionContextProperties<\/code> instance encapsulating the set of properties associated with\nthe given execution context.","terminals":[{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.System"]},{"description":"Cal.Core.Resource.getTextResource","name":"getTextResource","type":"CalCoreResourcegetTextResource","ui":"<b>Cal.Core.Resource.getTextResource<\/b><br\/>[CALDoc] Returns a text user resource as a string, using the ISO-8859-1 (Latin 1) character set.","terminals":[{"name":"name","input":"text"},{"name":"moduleName","input":"text"},{"name":"locale","input":"text"},{"name":"extension","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.getResourceInputStream","name":"getResourceInputStream","type":"CalCoreResourcegetResourceInputStream","ui":"<b>Cal.Core.Resource.getResourceInputStream<\/b><br\/>[CALDoc] Returns a binary user resource as an <code>InputStream<\/code>.","terminals":[{"name":"locale","input":"text"},{"name":"moduleName","input":"text"},{"name":"name","input":"text"},{"name":"extension","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.getBinaryResource","name":"getBinaryResource","type":"CalCoreResourcegetBinaryResource","ui":"<b>Cal.Core.Resource.getBinaryResource<\/b><br\/>[CALDoc] Returns a binary user resource as a byte array.","terminals":[{"name":"moduleName","input":"text"},{"name":"locale","input":"text"},{"name":"extension","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.getTextResourceInCharset","name":"getTextResourceInCharset","type":"CalCoreResourcegetTextResourceInCharset","ui":"<b>Cal.Core.Resource.getTextResourceInCharset<\/b><br\/>[CALDoc] Returns a text user resource as a string, using the specified character set.","terminals":[{"name":"moduleName","input":"text"},{"name":"charset","input":"text"},{"name":"extension","input":"text"},{"name":"name","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.getResourceInputStreamFallbackList","name":"getResourceInputStreamFallbackList","type":"CalCoreResourcegetResourceInputStreamFallbackList","ui":"<b>Cal.Core.Resource.getResourceInputStreamFallbackList<\/b><br\/>[CALDoc] Returns an ordered list of <code>(Locale, InputStream)<\/code> pairs which represents a user resource and its associated fallbacks.\n","terminals":[{"name":"locale","input":"text"},{"name":"moduleName","input":"text"},{"name":"extension","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.isNullString","name":"isNullString","type":"CalCoreResourceisNullString","ui":"<b>Cal.Core.Resource.isNullString<\/b><br\/>[CALDoc] Returns: <code>True<\/code> iff the argument is null.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.readIntoString","name":"readIntoString","type":"CalCoreResourcereadIntoString","ui":"<b>Cal.Core.Resource.readIntoString<\/b><br\/>[CALDoc] Reads the specified <code>InputStream<\/code> into a string using the given character set.\n","terminals":[{"name":"is","input":"text"},{"name":"charsetName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.isNullInputStream","name":"isNullInputStream","type":"CalCoreResourceisNullInputStream","ui":"<b>Cal.Core.Resource.isNullInputStream<\/b><br\/>[CALDoc] Returns: <code>True<\/code> iff the argument is null.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.isNullByteArray","name":"isNullByteArray","type":"CalCoreResourceisNullByteArray","ui":"<b>Cal.Core.Resource.isNullByteArray<\/b><br\/>[CALDoc] Returns: <code>True<\/code> iff the argument is null.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.readIntoByteArray","name":"readIntoByteArray","type":"CalCoreResourcereadIntoByteArray","ui":"<b>Cal.Core.Resource.readIntoByteArray<\/b><br\/>[CALDoc] Reads the specified <code>InputStream<\/code> into a new byte array, and close the stream afterwards.\n","terminals":[{"name":"is","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.getUserResource","name":"getUserResource","type":"CalCoreResourcegetUserResource","ui":"<b>Cal.Core.Resource.getUserResource<\/b><br\/>[CALDoc] Returns an <code>InputStream<\/code> for the named user resource in the specified locale. ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jResourceAccess","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Core.Resource.getResourceAccess","name":"getResourceAccess","type":"CalCoreResourcegetResourceAccess","ui":"<b>Cal.Core.Resource.getResourceAccess<\/b><br\/>[CALDoc] Returns the interface for resource access from an execution context.","terminals":[{"name":"executionContext","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Core.Resource"]},{"description":"Cal.Utilities.Locale.collatorDecompositionMode","name":"collatorDecompositionMode","type":"CalUtilitiesLocalecollatorDecompositionMode","ui":"<b>Cal.Utilities.Locale.collatorDecompositionMode<\/b><br\/>[CALDoc] Returns the decomposition mode of the given collator.","terminals":[{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.currentLocaleCollator","name":"currentLocaleCollator","type":"CalUtilitiesLocalecurrentLocaleCollator","ui":"<b>Cal.Utilities.Locale.currentLocaleCollator<\/b><br\/>[CALDoc] A collator for the current locale.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeCollatorWithStrengthAndDecompositionMode","name":"makeCollatorWithStrengthAndDecompositionMode","type":"CalUtilitiesLocalemakeCollatorWithStrengthAndDecompositionMode","ui":"<b>Cal.Utilities.Locale.makeCollatorWithStrengthAndDecompositionMode<\/b><br\/>[CALDoc] Constructs a collator for the given locale and with the given collator strength and decomposition mode.","terminals":[{"name":"strength","input":"text"},{"name":"locale","input":"text"},{"name":"mode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.fallback","name":"fallback","type":"CalUtilitiesLocalefallback","ui":"<b>Cal.Utilities.Locale.fallback<\/b><br\/>[CALDoc] Returns the <em>fallback<\/em> locale of the given locale.","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.intToCollatorDecompositionMode","name":"intToCollatorDecompositionMode","type":"CalUtilitiesLocaleintToCollatorDecompositionMode","ui":"<b>Cal.Utilities.Locale.intToCollatorDecompositionMode<\/b><br\/>[CALDoc] Converts Java collator decomposition mode constants to <code>CollatorDecompositionMode<\/code> values.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeCollatorWithDecompositionMode","name":"makeCollatorWithDecompositionMode","type":"CalUtilitiesLocalemakeCollatorWithDecompositionMode","ui":"<b>Cal.Utilities.Locale.makeCollatorWithDecompositionMode<\/b><br\/>[CALDoc] Constructs a collator for the given locale and with the given collator decomposition mode.","terminals":[{"name":"locale","input":"text"},{"name":"mode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.collatorDecompositionModeToInt","name":"collatorDecompositionModeToInt","type":"CalUtilitiesLocalecollatorDecompositionModeToInt","ui":"<b>Cal.Utilities.Locale.collatorDecompositionModeToInt<\/b><br\/>[CALDoc] Converts <code>CollatorDecompositionMode<\/code> values to Java collator decomposition mode constants.","terminals":[{"name":"mode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.showLocale","name":"showLocale","type":"CalUtilitiesLocaleshowLocale","ui":"<b>Cal.Utilities.Locale.showLocale<\/b><br\/>[CALDoc] Returns a string representation of the locale for the purpose of debugging.\n","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.availableDisplayLocales","name":"availableDisplayLocales","type":"CalUtilitiesLocaleavailableDisplayLocales","ui":"<b>Cal.Utilities.Locale.availableDisplayLocales<\/b><br\/>[CALDoc] Returns a list of all locales that are supported by the various display name functions.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayCountryInCurrentLocale","name":"displayCountryInCurrentLocale","type":"CalUtilitiesLocaledisplayCountryInCurrentLocale","ui":"<b>Cal.Utilities.Locale.displayCountryInCurrentLocale<\/b><br\/>[CALDoc] Returns a display name for the locale's country\/region, localized in the current locale.","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayNameInCurrentLocale","name":"displayNameInCurrentLocale","type":"CalUtilitiesLocaledisplayNameInCurrentLocale","ui":"<b>Cal.Utilities.Locale.displayNameInCurrentLocale<\/b><br\/>[CALDoc] Returns a display name for the locale, localized in the current locale.","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayVariantInCurrentLocale","name":"displayVariantInCurrentLocale","type":"CalUtilitiesLocaledisplayVariantInCurrentLocale","ui":"<b>Cal.Utilities.Locale.displayVariantInCurrentLocale<\/b><br\/>[CALDoc] Returns a display name for the locale's variant, localized in the current locale.","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.collatorStrength","name":"collatorStrength","type":"CalUtilitiesLocalecollatorStrength","ui":"<b>Cal.Utilities.Locale.collatorStrength<\/b><br\/>[CALDoc] Returns the strength of the given collator.","terminals":[{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayLanguageInCurrentLocale","name":"displayLanguageInCurrentLocale","type":"CalUtilitiesLocaledisplayLanguageInCurrentLocale","ui":"<b>Cal.Utilities.Locale.displayLanguageInCurrentLocale<\/b><br\/>[CALDoc] Returns a display name for the locale's language, localized in the current locale.","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.compareByCollator","name":"compareByCollator","type":"CalUtilitiesLocalecompareByCollator","ui":"<b>Cal.Utilities.Locale.compareByCollator<\/b><br\/>[CALDoc] Compares the relative order of two strings based on the given collator's collation rules.","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeCollatorWithStrength","name":"makeCollatorWithStrength","type":"CalUtilitiesLocalemakeCollatorWithStrength","ui":"<b>Cal.Utilities.Locale.makeCollatorWithStrength<\/b><br\/>[CALDoc] Constructs a collator for the given locale and with the given collator strength.","terminals":[{"name":"locale","input":"text"},{"name":"strength","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.intToCollatorStrength","name":"intToCollatorStrength","type":"CalUtilitiesLocaleintToCollatorStrength","ui":"<b>Cal.Utilities.Locale.intToCollatorStrength<\/b><br\/>[CALDoc] Converts Java collator strength constants to <code>CollatorStrength<\/code> values.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.currentLocale","name":"currentLocale","type":"CalUtilitiesLocalecurrentLocale","ui":"<b>Cal.Utilities.Locale.currentLocale<\/b><br\/>[CALDoc] Returns the locale associated with the current execution context. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.collatorStrengthToInt","name":"collatorStrengthToInt","type":"CalUtilitiesLocalecollatorStrengthToInt","ui":"<b>Cal.Utilities.Locale.collatorStrengthToInt<\/b><br\/>[CALDoc] Converts <code>CollatorStrength<\/code> values to Java collator strength constants.","terminals":[{"name":"strength","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.availableCollatorLocales","name":"availableCollatorLocales","type":"CalUtilitiesLocaleavailableCollatorLocales","ui":"<b>Cal.Utilities.Locale.availableCollatorLocales<\/b><br\/>[CALDoc] Returns a list of all locales that are supported by the various collator functions.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.collationKeySourceString","name":"collationKeySourceString","type":"CalUtilitiesLocalecollationKeySourceString","ui":"<b>Cal.Utilities.Locale.collationKeySourceString<\/b><br\/>[CALDoc] Returns the source string represented by a collation key.","terminals":[{"name":"collationKey","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeCollationKey","name":"makeCollationKey","type":"CalUtilitiesLocalemakeCollationKey","ui":"<b>Cal.Utilities.Locale.makeCollationKey<\/b><br\/>[CALDoc] Constructs a collation key based on a given collator and a given string.","terminals":[{"name":null,"input":"text"},{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jCompareByCollator","name":"jCompareByCollator","type":"CalUtilitiesLocalejCompareByCollator","ui":"<b>Cal.Utilities.Locale.jCompareByCollator<\/b><br\/>[CALDoc] Compares the relative order of two strings based on the given collator's collation rules.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.equalsByCollator","name":"equalsByCollator","type":"CalUtilitiesLocaleequalsByCollator","ui":"<b>Cal.Utilities.Locale.equalsByCollator<\/b><br\/>[CALDoc] Compares the equality of two strings based on the given collator's collation rules.","terminals":[{"name":null,"input":"text"},{"name":"collator","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jGetDecomposition","name":"jGetDecomposition","type":"CalUtilitiesLocalejGetDecomposition","ui":"<b>Cal.Utilities.Locale.jGetDecomposition<\/b><br\/>[CALDoc] Gets the decomposition mode of a collator as a Java constant.","terminals":[{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jSetDecomposition","name":"jSetDecomposition","type":"CalUtilitiesLocalejSetDecomposition","ui":"<b>Cal.Utilities.Locale.jSetDecomposition<\/b><br\/>[CALDoc] Sets the decomposition mode of a collator. ","terminals":[{"name":null,"input":"text"},{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jFullDecomposition","name":"jFullDecomposition","type":"CalUtilitiesLocalejFullDecomposition","ui":"<b>Cal.Utilities.Locale.jFullDecomposition<\/b><br\/>[CALDoc] Java constant for full decomposition.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jCanonicalDecomposition","name":"jCanonicalDecomposition","type":"CalUtilitiesLocalejCanonicalDecomposition","ui":"<b>Cal.Utilities.Locale.jCanonicalDecomposition<\/b><br\/>[CALDoc] Java constant for canonical decomposition.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jNoDecomposition","name":"jNoDecomposition","type":"CalUtilitiesLocalejNoDecomposition","ui":"<b>Cal.Utilities.Locale.jNoDecomposition<\/b><br\/>[CALDoc] Java constant for no decomposition.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jGetStrength","name":"jGetStrength","type":"CalUtilitiesLocalejGetStrength","ui":"<b>Cal.Utilities.Locale.jGetStrength<\/b><br\/>[CALDoc] Gets the strength of a collator as a Java constant.","terminals":[{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jSetStrength","name":"jSetStrength","type":"CalUtilitiesLocalejSetStrength","ui":"<b>Cal.Utilities.Locale.jSetStrength<\/b><br\/>[CALDoc] Sets the strength of a collator. ","terminals":[{"name":null,"input":"text"},{"name":"collator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jCollatorStrengthIdentical","name":"jCollatorStrengthIdentical","type":"CalUtilitiesLocalejCollatorStrengthIdentical","ui":"<b>Cal.Utilities.Locale.jCollatorStrengthIdentical<\/b><br\/>[CALDoc] Java constant for identical collator strength.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jCollatorStrengthTertiary","name":"jCollatorStrengthTertiary","type":"CalUtilitiesLocalejCollatorStrengthTertiary","ui":"<b>Cal.Utilities.Locale.jCollatorStrengthTertiary<\/b><br\/>[CALDoc] Java constant for tertiary collator strength.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jCollatorStrengthSecondary","name":"jCollatorStrengthSecondary","type":"CalUtilitiesLocalejCollatorStrengthSecondary","ui":"<b>Cal.Utilities.Locale.jCollatorStrengthSecondary<\/b><br\/>[CALDoc] Java constant for secondary collator strength.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jCollatorStrengthPrimary","name":"jCollatorStrengthPrimary","type":"CalUtilitiesLocalejCollatorStrengthPrimary","ui":"<b>Cal.Utilities.Locale.jCollatorStrengthPrimary<\/b><br\/>[CALDoc] Java constant for primary collator strength.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jCollatorGetAvailableLocales","name":"jCollatorGetAvailableLocales","type":"CalUtilitiesLocalejCollatorGetAvailableLocales","ui":"<b>Cal.Utilities.Locale.jCollatorGetAvailableLocales<\/b><br\/>[CALDoc] Returns an array of all installed locales for the <code>java.text.Collator<\/code> class.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeCollator","name":"makeCollator","type":"CalUtilitiesLocalemakeCollator","ui":"<b>Cal.Utilities.Locale.makeCollator<\/b><br\/>[CALDoc] Constructs a collator for the given locale.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.canadaFrenchLocale","name":"canadaFrenchLocale","type":"CalUtilitiesLocalecanadaFrenchLocale","ui":"<b>Cal.Utilities.Locale.canadaFrenchLocale<\/b><br\/>[CALDoc] The locale \"fr_CA\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.canadaEnglishLocale","name":"canadaEnglishLocale","type":"CalUtilitiesLocalecanadaEnglishLocale","ui":"<b>Cal.Utilities.Locale.canadaEnglishLocale<\/b><br\/>[CALDoc] The locale \"en_CA\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.usEnglishLocale","name":"usEnglishLocale","type":"CalUtilitiesLocaleusEnglishLocale","ui":"<b>Cal.Utilities.Locale.usEnglishLocale<\/b><br\/>[CALDoc] The locale \"en_US\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.ukEnglishLocale","name":"ukEnglishLocale","type":"CalUtilitiesLocaleukEnglishLocale","ui":"<b>Cal.Utilities.Locale.ukEnglishLocale<\/b><br\/>[CALDoc] The locale \"en_GB\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.taiwanChineseLocale","name":"taiwanChineseLocale","type":"CalUtilitiesLocaletaiwanChineseLocale","ui":"<b>Cal.Utilities.Locale.taiwanChineseLocale<\/b><br\/>[CALDoc] The locale \"zh_TW\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.chinaChineseLocale","name":"chinaChineseLocale","type":"CalUtilitiesLocalechinaChineseLocale","ui":"<b>Cal.Utilities.Locale.chinaChineseLocale<\/b><br\/>[CALDoc] The locale \"zh_CN\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.koreaKoreanLocale","name":"koreaKoreanLocale","type":"CalUtilitiesLocalekoreaKoreanLocale","ui":"<b>Cal.Utilities.Locale.koreaKoreanLocale<\/b><br\/>[CALDoc] The locale \"ko_KR\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.japanJapaneseLocale","name":"japanJapaneseLocale","type":"CalUtilitiesLocalejapanJapaneseLocale","ui":"<b>Cal.Utilities.Locale.japanJapaneseLocale<\/b><br\/>[CALDoc] The locale \"ja_JP\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.italyItalianLocale","name":"italyItalianLocale","type":"CalUtilitiesLocaleitalyItalianLocale","ui":"<b>Cal.Utilities.Locale.italyItalianLocale<\/b><br\/>[CALDoc] The locale \"it_IT\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.germanyGermanLocale","name":"germanyGermanLocale","type":"CalUtilitiesLocalegermanyGermanLocale","ui":"<b>Cal.Utilities.Locale.germanyGermanLocale<\/b><br\/>[CALDoc] The locale \"de_DE\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.franceFrenchLocale","name":"franceFrenchLocale","type":"CalUtilitiesLocalefranceFrenchLocale","ui":"<b>Cal.Utilities.Locale.franceFrenchLocale<\/b><br\/>[CALDoc] The locale \"fr_FR\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.traditionalChineseLocale","name":"traditionalChineseLocale","type":"CalUtilitiesLocaletraditionalChineseLocale","ui":"<b>Cal.Utilities.Locale.traditionalChineseLocale<\/b><br\/>[CALDoc] The locale \"zh_TW\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.simplifiedChineseLocale","name":"simplifiedChineseLocale","type":"CalUtilitiesLocalesimplifiedChineseLocale","ui":"<b>Cal.Utilities.Locale.simplifiedChineseLocale<\/b><br\/>[CALDoc] The locale \"zh_CN\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.chineseLocale","name":"chineseLocale","type":"CalUtilitiesLocalechineseLocale","ui":"<b>Cal.Utilities.Locale.chineseLocale<\/b><br\/>[CALDoc] The locale \"zh\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.koreanLocale","name":"koreanLocale","type":"CalUtilitiesLocalekoreanLocale","ui":"<b>Cal.Utilities.Locale.koreanLocale<\/b><br\/>[CALDoc] The locale \"ko\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.japaneseLocale","name":"japaneseLocale","type":"CalUtilitiesLocalejapaneseLocale","ui":"<b>Cal.Utilities.Locale.japaneseLocale<\/b><br\/>[CALDoc] The locale \"ja\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.italianLocale","name":"italianLocale","type":"CalUtilitiesLocaleitalianLocale","ui":"<b>Cal.Utilities.Locale.italianLocale<\/b><br\/>[CALDoc] The locale \"it\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.germanLocale","name":"germanLocale","type":"CalUtilitiesLocalegermanLocale","ui":"<b>Cal.Utilities.Locale.germanLocale<\/b><br\/>[CALDoc] The locale \"de\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.frenchLocale","name":"frenchLocale","type":"CalUtilitiesLocalefrenchLocale","ui":"<b>Cal.Utilities.Locale.frenchLocale<\/b><br\/>[CALDoc] The locale \"fr\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.englishLocale","name":"englishLocale","type":"CalUtilitiesLocaleenglishLocale","ui":"<b>Cal.Utilities.Locale.englishLocale<\/b><br\/>[CALDoc] The locale \"en\".","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.invariantLocale","name":"invariantLocale","type":"CalUtilitiesLocaleinvariantLocale","ui":"<b>Cal.Utilities.Locale.invariantLocale<\/b><br\/>[CALDoc] The locale constant for the <em>invariant locale<\/em>, which is treated by the CAL platform\nas the final fallback locale for the lookup of localized resources.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.defaultLocale","name":"defaultLocale","type":"CalUtilitiesLocaledefaultLocale","ui":"<b>Cal.Utilities.Locale.defaultLocale<\/b><br\/>[CALDoc] Returns the default locale of the underlying virtual machine. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jGetLocale","name":"jGetLocale","type":"CalUtilitiesLocalejGetLocale","ui":"<b>Cal.Utilities.Locale.jGetLocale<\/b><br\/>[CALDoc] Returns the locale defined in the given set of properties of an execution context.","terminals":[{"name":"executionContextProperties","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jLocaleGetAvailableLocales","name":"jLocaleGetAvailableLocales","type":"CalUtilitiesLocalejLocaleGetAvailableLocales","ui":"<b>Cal.Utilities.Locale.jLocaleGetAvailableLocales<\/b><br\/>[CALDoc] Returns an array of all installed locales for the <code>java.util.Locale<\/code> class.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.jArrayToList","name":"jArrayToList","type":"CalUtilitiesLocalejArrayToList","ui":"<b>Cal.Utilities.Locale.jArrayToList<\/b><br\/>[CALDoc] Converts a <code>JObjectArray<\/code> to a <code>JList<\/code>.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayVariantInLocale","name":"displayVariantInLocale","type":"CalUtilitiesLocaledisplayVariantInLocale","ui":"<b>Cal.Utilities.Locale.displayVariantInLocale<\/b><br\/>[CALDoc] Returns a display name for the locale's variant, localized in the given display locale.","terminals":[{"name":"locale","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayCountryInLocale","name":"displayCountryInLocale","type":"CalUtilitiesLocaledisplayCountryInLocale","ui":"<b>Cal.Utilities.Locale.displayCountryInLocale<\/b><br\/>[CALDoc] Returns a display name for the locale's country\/region, localized in the given display locale.","terminals":[{"name":"locale","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayLanguageInLocale","name":"displayLanguageInLocale","type":"CalUtilitiesLocaledisplayLanguageInLocale","ui":"<b>Cal.Utilities.Locale.displayLanguageInLocale<\/b><br\/>[CALDoc] Returns a display name for the locale's language, localized in the given display locale.","terminals":[{"name":"locale","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.displayNameInLocale","name":"displayNameInLocale","type":"CalUtilitiesLocaledisplayNameInLocale","ui":"<b>Cal.Utilities.Locale.displayNameInLocale<\/b><br\/>[CALDoc] Returns a display name for the locale, localized in the given display locale.","terminals":[{"name":"locale","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.canonicalString","name":"canonicalString","type":"CalUtilitiesLocalecanonicalString","ui":"<b>Cal.Utilities.Locale.canonicalString<\/b><br\/>[CALDoc] Returns the canonical string representation of a given locale: &lt;language&gt;[_&lt;country\/region&gt;[_&lt;variant&gt;]]","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.fromCanonicalString","name":"fromCanonicalString","type":"CalUtilitiesLocalefromCanonicalString","ui":"<b>Cal.Utilities.Locale.fromCanonicalString<\/b><br\/>[CALDoc] Constructs a locale based on its canonical string representation: &lt;language&gt;[_&lt;country\/region&gt;[_&lt;variant&gt;]]","terminals":[{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.iso3Country","name":"iso3Country","type":"CalUtilitiesLocaleiso3Country","ui":"<b>Cal.Utilities.Locale.iso3Country<\/b><br\/>[CALDoc] Returns a three-letter abbreviation for the locale's country\/region. ","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.iso3Language","name":"iso3Language","type":"CalUtilitiesLocaleiso3Language","ui":"<b>Cal.Utilities.Locale.iso3Language<\/b><br\/>[CALDoc] Returns a three-letter abbreviation for the locale's language. ","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.variant","name":"variant","type":"CalUtilitiesLocalevariant","ui":"<b>Cal.Utilities.Locale.variant<\/b><br\/>[CALDoc] Returns the variant for the locale, which can be an empty string if no variant is specified\nby the locale.","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.country","name":"country","type":"CalUtilitiesLocalecountry","ui":"<b>Cal.Utilities.Locale.country<\/b><br\/>[CALDoc] Returns the country\/region code for the locale, which can be an empty string if no country\/region\nis specified by the locale.","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.language","name":"language","type":"CalUtilitiesLocalelanguage","ui":"<b>Cal.Utilities.Locale.language<\/b><br\/>[CALDoc] Returns the language code for the locale, which can be an empty string if no language\nis specified by the locale (for example in the case of the <code>invariantLocale<\/code>).","terminals":[{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeLocaleFromLanguageCountryVariant","name":"makeLocaleFromLanguageCountryVariant","type":"CalUtilitiesLocalemakeLocaleFromLanguageCountryVariant","ui":"<b>Cal.Utilities.Locale.makeLocaleFromLanguageCountryVariant<\/b><br\/>[CALDoc] Constructs a <code>Locale<\/code> from a two-letter ISO 639 language code, a two-letter\nISO 3166 country\/region code, and a variant.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeLocaleFromLanguageCountry","name":"makeLocaleFromLanguageCountry","type":"CalUtilitiesLocalemakeLocaleFromLanguageCountry","ui":"<b>Cal.Utilities.Locale.makeLocaleFromLanguageCountry<\/b><br\/>[CALDoc] Constructs a <code>Locale<\/code> from a two-letter ISO 639 language code and a two-letter\nISO 3166 country\/region code.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.makeLocaleFromLanguage","name":"makeLocaleFromLanguage","type":"CalUtilitiesLocalemakeLocaleFromLanguage","ui":"<b>Cal.Utilities.Locale.makeLocaleFromLanguage<\/b><br\/>[CALDoc] Constructs a <code>Locale<\/code> from a two-letter ISO 639 language code.","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.CollatorStrengthPrimary","name":"CollatorStrengthPrimary","type":"CalUtilitiesLocaleCollatorStrengthPrimary","ui":"<b>Cal.Utilities.Locale.CollatorStrengthPrimary<\/b><br\/>[CALDoc] The weakest collator strength. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.CollatorStrengthSecondary","name":"CollatorStrengthSecondary","type":"CalUtilitiesLocaleCollatorStrengthSecondary","ui":"<b>Cal.Utilities.Locale.CollatorStrengthSecondary<\/b><br\/>[CALDoc] A collator strength that commonly discerns different accented forms, but does not discern case differences.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.CollatorStrengthTertiary","name":"CollatorStrengthTertiary","type":"CalUtilitiesLocaleCollatorStrengthTertiary","ui":"<b>Cal.Utilities.Locale.CollatorStrengthTertiary<\/b><br\/>[CALDoc] A collator strength that commonly discerns case differences. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.CollatorStrengthIdentical","name":"CollatorStrengthIdentical","type":"CalUtilitiesLocaleCollatorStrengthIdentical","ui":"<b>Cal.Utilities.Locale.CollatorStrengthIdentical<\/b><br\/>[CALDoc] The strongest collator strength. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.NoDecomposition","name":"NoDecomposition","type":"CalUtilitiesLocaleNoDecomposition","ui":"<b>Cal.Utilities.Locale.NoDecomposition<\/b><br\/>[CALDoc] In this mode, accented characters will not be decomposed for collation. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.CanonicalDecomposition","name":"CanonicalDecomposition","type":"CalUtilitiesLocaleCanonicalDecomposition","ui":"<b>Cal.Utilities.Locale.CanonicalDecomposition<\/b><br\/>[CALDoc] In this mode, characters that are canonical variants according to the Unicode standard will be decomposed for collation.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.Locale.FullDecomposition","name":"FullDecomposition","type":"CalUtilitiesLocaleFullDecomposition","ui":"<b>Cal.Utilities.Locale.FullDecomposition<\/b><br\/>[CALDoc] In this mode, both Unicode canonical variants and Unicode compatibility variants will be decomposed for collation.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Locale"]},{"description":"Cal.Utilities.TimeZone.currentTimeZone","name":"currentTimeZone","type":"CalUtilitiesTimeZonecurrentTimeZone","ui":"<b>Cal.Utilities.TimeZone.currentTimeZone<\/b><br\/>[CALDoc] Returns the time zone associated with the current execution context. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.fromJavaUtilTimeZone","name":"fromJavaUtilTimeZone","type":"CalUtilitiesTimeZonefromJavaUtilTimeZone","ui":"<b>Cal.Utilities.TimeZone.fromJavaUtilTimeZone<\/b><br\/>[CALDoc] Converts a Java time zone to an immutable time zone.","terminals":[{"name":"javaUtilTimeZone","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.longDisplayName","name":"longDisplayName","type":"CalUtilitiesTimeZonelongDisplayName","ui":"<b>Cal.Utilities.TimeZone.longDisplayName<\/b><br\/>[CALDoc] Returns the long display name of the time zone in the given locale.","terminals":[{"name":"timeZone","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.shortDisplayName","name":"shortDisplayName","type":"CalUtilitiesTimeZoneshortDisplayName","ui":"<b>Cal.Utilities.TimeZone.shortDisplayName<\/b><br\/>[CALDoc] Returns the short display name of the time zone in the given locale.","terminals":[{"name":"locale","input":"text"},{"name":"timeZone","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.timeZoneID","name":"timeZoneID","type":"CalUtilitiesTimeZonetimeZoneID","ui":"<b>Cal.Utilities.TimeZone.timeZoneID<\/b><br\/>[CALDoc] Returns the time zone ID of the given time zone.","terminals":[{"name":"timeZone","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.jGetTimeZone","name":"jGetTimeZone","type":"CalUtilitiesTimeZonejGetTimeZone","ui":"<b>Cal.Utilities.TimeZone.jGetTimeZone<\/b><br\/>[CALDoc] Returns the time zone defined in the given set of properties of an execution context.","terminals":[{"name":"executionContextProperties","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.utcTimeZone","name":"utcTimeZone","type":"CalUtilitiesTimeZoneutcTimeZone","ui":"<b>Cal.Utilities.TimeZone.utcTimeZone<\/b><br\/>[CALDoc] The UTC time zone.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.makeTimeZone","name":"makeTimeZone","type":"CalUtilitiesTimeZonemakeTimeZone","ui":"<b>Cal.Utilities.TimeZone.makeTimeZone<\/b><br\/>[CALDoc] Constructs a time zone from a time zone ID.","terminals":[{"name":"id","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.TimeZone.jGetJavaUtilTimeZoneID","name":"jGetJavaUtilTimeZoneID","type":"CalUtilitiesTimeZonejGetJavaUtilTimeZoneID","ui":"<b>Cal.Utilities.TimeZone.jGetJavaUtilTimeZoneID<\/b><br\/>[CALDoc] Returns the Java time zone's ID.","terminals":[{"name":"javaUtilTimeZone","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.TimeZone"]},{"description":"Cal.Utilities.StringProperties.makeStringProperties","name":"makeStringProperties","type":"CalUtilitiesStringPropertiesmakeStringProperties","ui":"<b>Cal.Utilities.StringProperties.makeStringProperties<\/b><br\/>[CALDoc] Constructs a <code>StringProperties<\/code> by reading in the persisted format from an input stream.","terminals":[{"name":"inputStream","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.bundleStrings","name":"bundleStrings","type":"CalUtilitiesStringPropertiesbundleStrings","ui":"<b>Cal.Utilities.StringProperties.bundleStrings<\/b><br\/>[CALDoc] Returns the <code>StringProperties<\/code> associated with the bundle.","terminals":[{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.bundleActualLocale","name":"bundleActualLocale","type":"CalUtilitiesStringPropertiesbundleActualLocale","ui":"<b>Cal.Utilities.StringProperties.bundleActualLocale<\/b><br\/>[CALDoc] Returns the actual locale for the resource fetched.","terminals":[{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.bundleExtension","name":"bundleExtension","type":"CalUtilitiesStringPropertiesbundleExtension","ui":"<b>Cal.Utilities.StringProperties.bundleExtension<\/b><br\/>[CALDoc] Returns the file extension of the user resource associated with the bundle.","terminals":[{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.bundleName","name":"bundleName","type":"CalUtilitiesStringPropertiesbundleName","ui":"<b>Cal.Utilities.StringProperties.bundleName<\/b><br\/>[CALDoc] Returns the name of the user resource associated with the bundle.","terminals":[{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.showStringProperties","name":"showStringProperties","type":"CalUtilitiesStringPropertiesshowStringProperties","ui":"<b>Cal.Utilities.StringProperties.showStringProperties<\/b><br\/>[CALDoc] ","terminals":[{"name":"stringProperties","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.keys","name":"keys","type":"CalUtilitiesStringPropertieskeys","ui":"<b>Cal.Utilities.StringProperties.keys<\/b><br\/>[CALDoc] Returns a list of all the keys defined in the given <code>StringProperties<\/code> (and\nits chain of defaults instances).","terminals":[{"name":"stringProperties","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.lookupWithDefault","name":"lookupWithDefault","type":"CalUtilitiesStringPropertieslookupWithDefault","ui":"<b>Cal.Utilities.StringProperties.lookupWithDefault<\/b><br\/>[CALDoc] Looks up the named property in the given <code>StringProperties<\/code>, with the provided default.","terminals":[{"name":"stringProperties","input":"text"},{"name":"key","input":"text"},{"name":"defaultValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.lookup","name":"lookup","type":"CalUtilitiesStringPropertieslookup","ui":"<b>Cal.Utilities.StringProperties.lookup<\/b><br\/>[CALDoc] Looks up the named property in the given <code>StringProperties<\/code>.","terminals":[{"name":"stringProperties","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.bundleRequestedLocale","name":"bundleRequestedLocale","type":"CalUtilitiesStringPropertiesbundleRequestedLocale","ui":"<b>Cal.Utilities.StringProperties.bundleRequestedLocale<\/b><br\/>[CALDoc] Returns the locale for which the resource was to be fetched.","terminals":[{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.bundleModuleName","name":"bundleModuleName","type":"CalUtilitiesStringPropertiesbundleModuleName","ui":"<b>Cal.Utilities.StringProperties.bundleModuleName<\/b><br\/>[CALDoc] Returns the name of the module associated with the bundle.","terminals":[{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.makeStringResourceBundle","name":"makeStringResourceBundle","type":"CalUtilitiesStringPropertiesmakeStringResourceBundle","ui":"<b>Cal.Utilities.StringProperties.makeStringResourceBundle<\/b><br\/>[CALDoc] Constructs a string resource bundle by fetching the user resource with the given module name and resource name,\nin the current locale. ","terminals":[{"name":"moduleName","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.makeStringResourceBundleInLocale","name":"makeStringResourceBundleInLocale","type":"CalUtilitiesStringPropertiesmakeStringResourceBundleInLocale","ui":"<b>Cal.Utilities.StringProperties.makeStringResourceBundleInLocale<\/b><br\/>[CALDoc] Constructs a string resource bundle by fetching the user resource with the given module name and resource name, and in the\nspecific locale. ","terminals":[{"name":"name","input":"text"},{"name":"moduleName","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.makeStringResourceBundleWithExtensionInLocale","name":"makeStringResourceBundleWithExtensionInLocale","type":"CalUtilitiesStringPropertiesmakeStringResourceBundleWithExtensionInLocale","ui":"<b>Cal.Utilities.StringProperties.makeStringResourceBundleWithExtensionInLocale<\/b><br\/>[CALDoc] Constructs a string resource bundle by fetching the user resource with the given module name and resource name and extension,\nand in the specific locale.","terminals":[{"name":"locale","input":"text"},{"name":"extension","input":"text"},{"name":"moduleName","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.getPropertyNames","name":"getPropertyNames","type":"CalUtilitiesStringPropertiesgetPropertyNames","ui":"<b>Cal.Utilities.StringProperties.getPropertyNames<\/b><br\/>[CALDoc] Returns a list of the keys defined in the given <code>StringProperties<\/code> instance (and\nits chain of defaults instances).","terminals":[{"name":"properties","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.getPropertyWithDefault","name":"getPropertyWithDefault","type":"CalUtilitiesStringPropertiesgetPropertyWithDefault","ui":"<b>Cal.Utilities.StringProperties.getPropertyWithDefault<\/b><br\/>[CALDoc] Searches for the property with the specified key in the <code>StringProperties<\/code> instance.\n","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"stringProperties","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.isNullString","name":"isNullString","type":"CalUtilitiesStringPropertiesisNullString","ui":"<b>Cal.Utilities.StringProperties.isNullString<\/b><br\/>[CALDoc] Returns: <code>True<\/code> iff the argument is null.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.getProperty","name":"getProperty","type":"CalUtilitiesStringPropertiesgetProperty","ui":"<b>Cal.Utilities.StringProperties.getProperty<\/b><br\/>[CALDoc] Searches for the property with the specified key in the <code>StringProperties<\/code> instance.\n","terminals":[{"name":"stringProperties","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.makeStringPropertiesWithDefaults","name":"makeStringPropertiesWithDefaults","type":"CalUtilitiesStringPropertiesmakeStringPropertiesWithDefaults","ui":"<b>Cal.Utilities.StringProperties.makeStringPropertiesWithDefaults<\/b><br\/>[CALDoc] Constructs a <code>StringProperties<\/code> by reading in the persisted format from an input stream, and\nwith the given defaults.","terminals":[{"name":"defaults","input":"text"},{"name":"inputStream","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.emptyStringProperties","name":"emptyStringProperties","type":"CalUtilitiesStringPropertiesemptyStringProperties","ui":"<b>Cal.Utilities.StringProperties.emptyStringProperties<\/b><br\/>[CALDoc] An empty <code>StringProperties<\/code>.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.isNullProperties","name":"isNullProperties","type":"CalUtilitiesStringPropertiesisNullProperties","ui":"<b>Cal.Utilities.StringProperties.isNullProperties<\/b><br\/>[CALDoc] Returns: <code>True<\/code> iff the argument is null.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.nullProperties","name":"nullProperties","type":"CalUtilitiesStringPropertiesnullProperties","ui":"<b>Cal.Utilities.StringProperties.nullProperties<\/b><br\/>[CALDoc] The null value, which can be used validly as the <em>defaults<\/em> of a <code>StringProperties<\/code>.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.StringProperties.StringResourceBundle","name":"StringResourceBundle","type":"CalUtilitiesStringPropertiesStringResourceBundle","ui":"<b>Cal.Utilities.StringProperties.StringResourceBundle<\/b><br\/>[CALDoc] Represents a <code>StringProperties<\/code> fetched as a user resource,\nwith identification information for the resource: module name, name, file extension,\nand the requested and actual locales of the resource.","terminals":[{"name":"strings","input":"text"},{"name":"requestedLocale","input":"text"},{"name":"name","input":"text"},{"name":"extension","input":"text"},{"name":"moduleName","input":"text"},{"name":"actualLocale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.StringProperties"]},{"description":"Cal.Utilities.MessageFormat.format7","name":"format7","type":"CalUtilitiesMessageFormatformat7","ui":"<b>Cal.Utilities.MessageFormat.format7<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"arg4","input":"text"},{"name":"arg7","input":"text"},{"name":"arg5","input":"text"},{"name":"arg1","input":"text"},{"name":"arg6","input":"text"},{"name":"arg2","input":"text"},{"name":"key","input":"text"},{"name":"bundle","input":"text"},{"name":"arg3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format5","name":"format5","type":"CalUtilitiesMessageFormatformat5","ui":"<b>Cal.Utilities.MessageFormat.format5<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"arg2","input":"text"},{"name":"arg4","input":"text"},{"name":"arg1","input":"text"},{"name":"arg3","input":"text"},{"name":"key","input":"text"},{"name":"arg5","input":"text"},{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatForArgList","name":"formatForArgList","type":"CalUtilitiesMessageFormatformatForArgList","ui":"<b>Cal.Utilities.MessageFormat.formatForArgList<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"args","input":"text"},{"name":"key","input":"text"},{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern5","name":"formatWithPattern5","type":"CalUtilitiesMessageFormatformatWithPattern5","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern5<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"arg1","input":"text"},{"name":"arg2","input":"text"},{"name":"arg4","input":"text"},{"name":"arg3","input":"text"},{"name":"locale","input":"text"},{"name":"pattern","input":"text"},{"name":"arg5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format1","name":"format1","type":"CalUtilitiesMessageFormatformat1","ui":"<b>Cal.Utilities.MessageFormat.format1<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"key","input":"text"},{"name":"arg1","input":"text"},{"name":"bundle","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format3","name":"format3","type":"CalUtilitiesMessageFormatformat3","ui":"<b>Cal.Utilities.MessageFormat.format3<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"arg1","input":"text"},{"name":"arg3","input":"text"},{"name":"arg2","input":"text"},{"name":"bundle","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format4","name":"format4","type":"CalUtilitiesMessageFormatformat4","ui":"<b>Cal.Utilities.MessageFormat.format4<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"arg1","input":"text"},{"name":"arg4","input":"text"},{"name":"bundle","input":"text"},{"name":"arg3","input":"text"},{"name":"arg2","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format6","name":"format6","type":"CalUtilitiesMessageFormatformat6","ui":"<b>Cal.Utilities.MessageFormat.format6<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"arg5","input":"text"},{"name":"arg3","input":"text"},{"name":"bundle","input":"text"},{"name":"arg6","input":"text"},{"name":"arg1","input":"text"},{"name":"key","input":"text"},{"name":"arg4","input":"text"},{"name":"arg2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatNumberWithPattern","name":"formatNumberWithPattern","type":"CalUtilitiesMessageFormatformatNumberWithPattern","ui":"<b>Cal.Utilities.MessageFormat.formatNumberWithPattern<\/b><br\/>[CALDoc] Returns the given number formatted by the specified pattern.","terminals":[{"name":"decimalPattern","input":"text"},{"name":"locale","input":"text"},{"name":"number","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatCurrency","name":"formatCurrency","type":"CalUtilitiesMessageFormatformatCurrency","ui":"<b>Cal.Utilities.MessageFormat.formatCurrency<\/b><br\/>[CALDoc] Returns the given number formatted as a currency value.","terminals":[{"name":"number","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern6","name":"formatWithPattern6","type":"CalUtilitiesMessageFormatformatWithPattern6","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern6<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"arg6","input":"text"},{"name":"locale","input":"text"},{"name":"arg4","input":"text"},{"name":"arg5","input":"text"},{"name":"pattern","input":"text"},{"name":"arg3","input":"text"},{"name":"arg2","input":"text"},{"name":"arg1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatNumber","name":"formatNumber","type":"CalUtilitiesMessageFormatformatNumber","ui":"<b>Cal.Utilities.MessageFormat.formatNumber<\/b><br\/>[CALDoc] Returns a formatted string for the given number.","terminals":[{"name":"number","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern7","name":"formatWithPattern7","type":"CalUtilitiesMessageFormatformatWithPattern7","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern7<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"arg1","input":"text"},{"name":"arg4","input":"text"},{"name":"arg7","input":"text"},{"name":"arg2","input":"text"},{"name":"locale","input":"text"},{"name":"arg5","input":"text"},{"name":"arg3","input":"text"},{"name":"pattern","input":"text"},{"name":"arg6","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format2","name":"format2","type":"CalUtilitiesMessageFormatformat2","ui":"<b>Cal.Utilities.MessageFormat.format2<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"arg1","input":"text"},{"name":"arg2","input":"text"},{"name":"bundle","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern2","name":"formatWithPattern2","type":"CalUtilitiesMessageFormatformatWithPattern2","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern2<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"arg2","input":"text"},{"name":"pattern","input":"text"},{"name":"locale","input":"text"},{"name":"arg1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern4","name":"formatWithPattern4","type":"CalUtilitiesMessageFormatformatWithPattern4","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern4<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"arg4","input":"text"},{"name":"arg2","input":"text"},{"name":"arg1","input":"text"},{"name":"arg3","input":"text"},{"name":"pattern","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern3","name":"formatWithPattern3","type":"CalUtilitiesMessageFormatformatWithPattern3","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern3<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"arg3","input":"text"},{"name":"locale","input":"text"},{"name":"arg1","input":"text"},{"name":"arg2","input":"text"},{"name":"pattern","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format","name":"format","type":"CalUtilitiesMessageFormatformat","ui":"<b>Cal.Utilities.MessageFormat.format<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.\n","terminals":[{"name":"key","input":"text"},{"name":"bundle","input":"text"},{"name":"args","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.format0","name":"format0","type":"CalUtilitiesMessageFormatformat0","ui":"<b>Cal.Utilities.MessageFormat.format0<\/b><br\/>[CALDoc] Returns a string formatted according to the message pattern found in the given bundle using the specified key.","terminals":[{"name":"bundle","input":"text"},{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.missingFormat","name":"missingFormat","type":"CalUtilitiesMessageFormatmissingFormat","ui":"<b>Cal.Utilities.MessageFormat.missingFormat<\/b><br\/>[CALDoc] Returns the placeholder string for a key that cannot be found.","terminals":[{"name":"key","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern","name":"formatWithPattern","type":"CalUtilitiesMessageFormatformatWithPattern","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.\n","terminals":[{"name":"args","input":"text"},{"name":"pattern","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatPercent","name":"formatPercent","type":"CalUtilitiesMessageFormatformatPercent","ui":"<b>Cal.Utilities.MessageFormat.formatPercent<\/b><br\/>[CALDoc] Returns the given number formatted as a percent value.","terminals":[{"name":"number","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPattern1","name":"formatWithPattern1","type":"CalUtilitiesMessageFormatformatWithPattern1","ui":"<b>Cal.Utilities.MessageFormat.formatWithPattern1<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"locale","input":"text"},{"name":"arg1","input":"text"},{"name":"pattern","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.formatWithPatternForArgList","name":"formatWithPatternForArgList","type":"CalUtilitiesMessageFormatformatWithPatternForArgList","ui":"<b>Cal.Utilities.MessageFormat.formatWithPatternForArgList<\/b><br\/>[CALDoc] Returns a string formatted according to the specified message pattern.","terminals":[{"name":"locale","input":"text"},{"name":"pattern","input":"text"},{"name":"args","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.jFormat","name":"jFormat","type":"CalUtilitiesMessageFormatjFormat","ui":"<b>Cal.Utilities.MessageFormat.jFormat<\/b><br\/>[CALDoc] Formats the specified object according to the specified message format to produce a string.","terminals":[{"name":null,"input":"text"},{"name":"jMessageFormat","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.jMakeMessageFormat","name":"jMakeMessageFormat","type":"CalUtilitiesMessageFormatjMakeMessageFormat","ui":"<b>Cal.Utilities.MessageFormat.jMakeMessageFormat<\/b><br\/>[CALDoc] Constructs an instance of <code>JMessageFormat<\/code>.","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.MessageFormat.jListToArray","name":"jListToArray","type":"CalUtilitiesMessageFormatjListToArray","ui":"<b>Cal.Utilities.MessageFormat.jListToArray<\/b><br\/>[CALDoc] Converts a <code>JList<\/code> to a <code>JObjectArray<\/code>.","terminals":[{"name":"jList","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.MessageFormat"]},{"description":"Cal.Utilities.Accumulate.accumulate2Strict","name":"accumulate2Strict","type":"CalUtilitiesAccumulateaccumulate2Strict","ui":"<b>Cal.Utilities.Accumulate.accumulate2Strict<\/b><br\/>[CALDoc] <code>accumulate2Strict<\/code> calculates all accumulated values in a single pass over the data.  \n","terminals":[{"name":"values","input":"text"},{"name":"accumulators","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.Accumulate.accumulate4Strict","name":"accumulate4Strict","type":"CalUtilitiesAccumulateaccumulate4Strict","ui":"<b>Cal.Utilities.Accumulate.accumulate4Strict<\/b><br\/>[CALDoc] <code>accumulate4Strict<\/code> calculates all accumulated values in a single pass over the data.  ","terminals":[{"name":"values","input":"text"},{"name":"accumulators","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.Accumulate.accumulate3","name":"accumulate3","type":"CalUtilitiesAccumulateaccumulate3","ui":"<b>Cal.Utilities.Accumulate.accumulate3<\/b><br\/>[CALDoc] <code>accumulate3<\/code> is lazy in each of the accumulated values.  ","terminals":[{"name":"values","input":"text"},{"name":"accumulators","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.Accumulate.accumulate3Strict","name":"accumulate3Strict","type":"CalUtilitiesAccumulateaccumulate3Strict","ui":"<b>Cal.Utilities.Accumulate.accumulate3Strict<\/b><br\/>[CALDoc] <code>accumulate3Strict<\/code> calculates all accumulated values in a single pass over the data.  ","terminals":[{"name":"accumulators","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.Accumulate.accumulate4","name":"accumulate4","type":"CalUtilitiesAccumulateaccumulate4","ui":"<b>Cal.Utilities.Accumulate.accumulate4<\/b><br\/>[CALDoc] <code>accumulate4<\/code> is lazy in each of the accumulated values.  ","terminals":[{"name":"values","input":"text"},{"name":"accumulators","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.Accumulate.accumulate2","name":"accumulate2","type":"CalUtilitiesAccumulateaccumulate2","ui":"<b>Cal.Utilities.Accumulate.accumulate2<\/b><br\/>[CALDoc] <code>accumulate2<\/code> is lazy in each of the accumulated values.  ","terminals":[{"name":"values","input":"text"},{"name":"accumulators","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.Accumulate.accumulate1","name":"accumulate1","type":"CalUtilitiesAccumulateaccumulate1","ui":"<b>Cal.Utilities.Accumulate.accumulate1<\/b><br\/>[CALDoc] <code>accumulate1<\/code> takes a record describing the accumulator and a set of values to operate on.","terminals":[{"name":"accumulator","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.Accumulate.accumulate","name":"accumulate","type":"CalUtilitiesAccumulateaccumulate","ui":"<b>Cal.Utilities.Accumulate.accumulate<\/b><br\/>[CALDoc] Do an accumulation operation across a data set.","terminals":[{"name":"converter","input":"text"},{"name":"finalizer","input":"text"},{"name":"values","input":"text"},{"name":"accumulator","input":"text"},{"name":"runningValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Accumulate"]},{"description":"Cal.Utilities.RelativeTime.coarbitraryRelativeDate","name":"coarbitraryRelativeDate","type":"CalUtilitiesRelativeTimecoarbitraryRelativeDate","ui":"<b>Cal.Utilities.RelativeTime.coarbitraryRelativeDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.outputRelativeDateTime","name":"outputRelativeDateTime","type":"CalUtilitiesRelativeTimeoutputRelativeDateTime","ui":"<b>Cal.Utilities.RelativeTime.outputRelativeDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.relativeDateTimeToJDate","name":"relativeDateTimeToJDate","type":"CalUtilitiesRelativeTimerelativeDateTimeToJDate","ui":"<b>Cal.Utilities.RelativeTime.relativeDateTimeToJDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.outputRelativeDate","name":"outputRelativeDate","type":"CalUtilitiesRelativeTimeoutputRelativeDate","ui":"<b>Cal.Utilities.RelativeTime.outputRelativeDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showRelativeDate","name":"showRelativeDate","type":"CalUtilitiesRelativeTimeshowRelativeDate","ui":"<b>Cal.Utilities.RelativeTime.showRelativeDate<\/b><br\/>[CALDoc] shows the date using the format yyyy\/MM\/dd.","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.jDateToRelativeDateTime","name":"jDateToRelativeDateTime","type":"CalUtilitiesRelativeTimejDateToRelativeDateTime","ui":"<b>Cal.Utilities.RelativeTime.jDateToRelativeDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"jdate","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.relativeDateToJDate","name":"relativeDateToJDate","type":"CalUtilitiesRelativeTimerelativeDateToJDate","ui":"<b>Cal.Utilities.RelativeTime.relativeDateToJDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.arbitraryRelativeDate","name":"arbitraryRelativeDate","type":"CalUtilitiesRelativeTimearbitraryRelativeDate","ui":"<b>Cal.Utilities.RelativeTime.arbitraryRelativeDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.arbitraryRelativeTime","name":"arbitraryRelativeTime","type":"CalUtilitiesRelativeTimearbitraryRelativeTime","ui":"<b>Cal.Utilities.RelativeTime.arbitraryRelativeTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.inputRelativeDateTime","name":"inputRelativeDateTime","type":"CalUtilitiesRelativeTimeinputRelativeDateTime","ui":"<b>Cal.Utilities.RelativeTime.inputRelativeDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.inputRelativeDate","name":"inputRelativeDate","type":"CalUtilitiesRelativeTimeinputRelativeDate","ui":"<b>Cal.Utilities.RelativeTime.inputRelativeDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.arbitraryRelativeDateTime","name":"arbitraryRelativeDateTime","type":"CalUtilitiesRelativeTimearbitraryRelativeDateTime","ui":"<b>Cal.Utilities.RelativeTime.arbitraryRelativeDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.coarbitraryRelativeTime","name":"coarbitraryRelativeTime","type":"CalUtilitiesRelativeTimecoarbitraryRelativeTime","ui":"<b>Cal.Utilities.RelativeTime.coarbitraryRelativeTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showPaddedYear","name":"showPaddedYear","type":"CalUtilitiesRelativeTimeshowPaddedYear","ui":"<b>Cal.Utilities.RelativeTime.showPaddedYear<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.testModule","name":"testModule","type":"CalUtilitiesRelativeTimetestModule","ui":"<b>Cal.Utilities.RelativeTime.testModule<\/b><br\/>[CALDoc] Predicate function for verifying basic functionality of the RelativeTime module.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.addSecondsToDateTimeExamples","name":"addSecondsToDateTimeExamples","type":"CalUtilitiesRelativeTimeaddSecondsToDateTimeExamples","ui":"<b>Cal.Utilities.RelativeTime.addSecondsToDateTimeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.dateDiffExamples","name":"dateDiffExamples","type":"CalUtilitiesRelativeTimedateDiffExamples","ui":"<b>Cal.Utilities.RelativeTime.dateDiffExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.dateDiff","name":"dateDiff","type":"CalUtilitiesRelativeTimedateDiff","ui":"<b>Cal.Utilities.RelativeTime.dateDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"dateTime2","input":"text"},{"name":"dateTime1","input":"text"},{"name":"dateDiffType","input":"text"},{"name":"maybeFirstDayOfWeek","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.datePartExamples","name":"datePartExamples","type":"CalUtilitiesRelativeTimedatePartExamples","ui":"<b>Cal.Utilities.RelativeTime.datePartExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.addDaysToDateTimeExamples","name":"addDaysToDateTimeExamples","type":"CalUtilitiesRelativeTimeaddDaysToDateTimeExamples","ui":"<b>Cal.Utilities.RelativeTime.addDaysToDateTimeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.addDaysToDateTime","name":"addDaysToDateTime","type":"CalUtilitiesRelativeTimeaddDaysToDateTime","ui":"<b>Cal.Utilities.RelativeTime.addDaysToDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"fractionalDays","input":"text"},{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.yearMonthDayExamples","name":"yearMonthDayExamples","type":"CalUtilitiesRelativeTimeyearMonthDayExamples","ui":"<b>Cal.Utilities.RelativeTime.yearMonthDayExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.addDaysToDateExamples","name":"addDaysToDateExamples","type":"CalUtilitiesRelativeTimeaddDaysToDateExamples","ui":"<b>Cal.Utilities.RelativeTime.addDaysToDateExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.addSecondsToTime","name":"addSecondsToTime","type":"CalUtilitiesRelativeTimeaddSecondsToTime","ui":"<b>Cal.Utilities.RelativeTime.addSecondsToTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"nSeconds","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.normalizeTime","name":"normalizeTime","type":"CalUtilitiesRelativeTimenormalizeTime","ui":"<b>Cal.Utilities.RelativeTime.normalizeTime<\/b><br\/>[CALDoc] Normalizes a time so that its internal representation in seconds satisfies <code>0 &lt;= s &lt; maxNSecondsInDay<\/code>.\n<code>RelativeTime (-1)<\/code> is converted to <code>RelativeTime (maxNSecondsInDay - 1)<\/code>.","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.jDateToRelativeDate","name":"jDateToRelativeDate","type":"CalUtilitiesRelativeTimejDateToRelativeDate","ui":"<b>Cal.Utilities.RelativeTime.jDateToRelativeDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.coarbitraryRelativeDateTime","name":"coarbitraryRelativeDateTime","type":"CalUtilitiesRelativeTimecoarbitraryRelativeDateTime","ui":"<b>Cal.Utilities.RelativeTime.coarbitraryRelativeDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"datetime","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showRelativeTimeExamples","name":"showRelativeTimeExamples","type":"CalUtilitiesRelativeTimeshowRelativeTimeExamples","ui":"<b>Cal.Utilities.RelativeTime.showRelativeTimeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.fractionalDaysToNDaysNSeconds","name":"fractionalDaysToNDaysNSeconds","type":"CalUtilitiesRelativeTimefractionalDaysToNDaysNSeconds","ui":"<b>Cal.Utilities.RelativeTime.fractionalDaysToNDaysNSeconds<\/b><br\/>[CALDoc] ","terminals":[{"name":"fractionalDays","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showRelativeDateTime","name":"showRelativeDateTime","type":"CalUtilitiesRelativeTimeshowRelativeDateTime","ui":"<b>Cal.Utilities.RelativeTime.showRelativeDateTime<\/b><br\/>[CALDoc] Shows the <code>RelativeDateTime<\/code> value using the format yyyy\/MM\/dd.","terminals":[{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.outputRelativeTime","name":"outputRelativeTime","type":"CalUtilitiesRelativeTimeoutputRelativeTime","ui":"<b>Cal.Utilities.RelativeTime.outputRelativeTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showRelativeDateExamples","name":"showRelativeDateExamples","type":"CalUtilitiesRelativeTimeshowRelativeDateExamples","ui":"<b>Cal.Utilities.RelativeTime.showRelativeDateExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.datePart","name":"datePart","type":"CalUtilitiesRelativeTimedatePart","ui":"<b>Cal.Utilities.RelativeTime.datePart<\/b><br\/>[CALDoc] Extracts a specified component of a date. ","terminals":[{"name":"dateTime","input":"text"},{"name":"maybeFirstDayOfWeek","input":"text"},{"name":"maybeFirstWeekOfYear","input":"text"},{"name":"datePartType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.second","name":"second","type":"CalUtilitiesRelativeTimesecond","ui":"<b>Cal.Utilities.RelativeTime.second<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.minute","name":"minute","type":"CalUtilitiesRelativeTimeminute","ui":"<b>Cal.Utilities.RelativeTime.minute<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.hour","name":"hour","type":"CalUtilitiesRelativeTimehour","ui":"<b>Cal.Utilities.RelativeTime.hour<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.day","name":"day","type":"CalUtilitiesRelativeTimeday","ui":"<b>Cal.Utilities.RelativeTime.day<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.month","name":"month","type":"CalUtilitiesRelativeTimemonth","ui":"<b>Cal.Utilities.RelativeTime.month<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.year","name":"year","type":"CalUtilitiesRelativeTimeyear","ui":"<b>Cal.Utilities.RelativeTime.year<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.dayOfWeek","name":"dayOfWeek","type":"CalUtilitiesRelativeTimedayOfWeek","ui":"<b>Cal.Utilities.RelativeTime.dayOfWeek<\/b><br\/>[CALDoc] Returns: the day of week that a date occurs on with Sunday = 1, Monday = 2, ..., Saturday = 7.","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showRelativeDateTimeExamples","name":"showRelativeDateTimeExamples","type":"CalUtilitiesRelativeTimeshowRelativeDateTimeExamples","ui":"<b>Cal.Utilities.RelativeTime.showRelativeDateTimeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.inputRelativeTime","name":"inputRelativeTime","type":"CalUtilitiesRelativeTimeinputRelativeTime","ui":"<b>Cal.Utilities.RelativeTime.inputRelativeTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.fromEnumDayOfWeek","name":"fromEnumDayOfWeek","type":"CalUtilitiesRelativeTimefromEnumDayOfWeek","ui":"<b>Cal.Utilities.RelativeTime.fromEnumDayOfWeek<\/b><br\/>[CALDoc] ","terminals":[{"name":"dayOfWeek","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showRelativeTime","name":"showRelativeTime","type":"CalUtilitiesRelativeTimeshowRelativeTime","ui":"<b>Cal.Utilities.RelativeTime.showRelativeTime<\/b><br\/>[CALDoc] shows the time using the format HH:MM:SS","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.showPadded2","name":"showPadded2","type":"CalUtilitiesRelativeTimeshowPadded2","ui":"<b>Cal.Utilities.RelativeTime.showPadded2<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.timeToHourMinuteSecond","name":"timeToHourMinuteSecond","type":"CalUtilitiesRelativeTimetimeToHourMinuteSecond","ui":"<b>Cal.Utilities.RelativeTime.timeToHourMinuteSecond<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.dateAddExamples","name":"dateAddExamples","type":"CalUtilitiesRelativeTimedateAddExamples","ui":"<b>Cal.Utilities.RelativeTime.dateAddExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.makeRelativeDateTimeValue","name":"makeRelativeDateTimeValue","type":"CalUtilitiesRelativeTimemakeRelativeDateTimeValue","ui":"<b>Cal.Utilities.RelativeTime.makeRelativeDateTimeValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"hour","input":"text"},{"name":"month","input":"text"},{"name":"min","input":"text"},{"name":"day","input":"text"},{"name":"year","input":"text"},{"name":"sec","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.makeRelativeTimeValue","name":"makeRelativeTimeValue","type":"CalUtilitiesRelativeTimemakeRelativeTimeValue","ui":"<b>Cal.Utilities.RelativeTime.makeRelativeTimeValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"min","input":"text"},{"name":"sec","input":"text"},{"name":"hour","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.makeRelativeDateTimeValue2","name":"makeRelativeDateTimeValue2","type":"CalUtilitiesRelativeTimemakeRelativeDateTimeValue2","ui":"<b>Cal.Utilities.RelativeTime.makeRelativeDateTimeValue2<\/b><br\/>[CALDoc] ","terminals":[{"name":"month","input":"text"},{"name":"year","input":"text"},{"name":"day","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.toDateTime","name":"toDateTime","type":"CalUtilitiesRelativeTimetoDateTime","ui":"<b>Cal.Utilities.RelativeTime.toDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.dateAdd","name":"dateAdd","type":"CalUtilitiesRelativeTimedateAdd","ui":"<b>Cal.Utilities.RelativeTime.dateAdd<\/b><br\/>[CALDoc] <code>dateAdd<\/code> is used to add intervals of time to a <code>RelativeDateTime<\/code> value. ","terminals":[{"name":"nIntervals","input":"text"},{"name":"dateTime","input":"text"},{"name":"intervalType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.addSecondsToDateTime","name":"addSecondsToDateTime","type":"CalUtilitiesRelativeTimeaddSecondsToDateTime","ui":"<b>Cal.Utilities.RelativeTime.addSecondsToDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"nSeconds","input":"text"},{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.normalizeDateTime","name":"normalizeDateTime","type":"CalUtilitiesRelativeTimenormalizeDateTime","ui":"<b>Cal.Utilities.RelativeTime.normalizeDateTime<\/b><br\/>[CALDoc] Normalizes a <code>RelativeDateTime<\/code> value so that the internal representation of the time part in seconds satisfies\n<code>0 &lt;= s &lt; maxNSecondsInDay<\/code>, with the date part correspondingly adjusted.","terminals":[{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.maxNSecondsInDay","name":"maxNSecondsInDay","type":"CalUtilitiesRelativeTimemaxNSecondsInDay","ui":"<b>Cal.Utilities.RelativeTime.maxNSecondsInDay<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.divRem","name":"divRem","type":"CalUtilitiesRelativeTimedivRem","ui":"<b>Cal.Utilities.RelativeTime.divRem<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.addDaysToDate","name":"addDaysToDate","type":"CalUtilitiesRelativeTimeaddDaysToDate","ui":"<b>Cal.Utilities.RelativeTime.addDaysToDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"days","input":"text"},{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.div","name":"div","type":"CalUtilitiesRelativeTimediv","ui":"<b>Cal.Utilities.RelativeTime.div<\/b><br\/>[CALDoc] Integer division that rounds to the smallest value. e.g. <code>div (-24) 5 = -5<\/code>","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.rem","name":"rem","type":"CalUtilitiesRelativeTimerem","ui":"<b>Cal.Utilities.RelativeTime.rem<\/b><br\/>[CALDoc] The remainder that corresponds to <code>div<\/code>.","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.makeRelativeDateValue","name":"makeRelativeDateValue","type":"CalUtilitiesRelativeTimemakeRelativeDateValue","ui":"<b>Cal.Utilities.RelativeTime.makeRelativeDateValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"day","input":"text"},{"name":"year","input":"text"},{"name":"month","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.daysInMonth2","name":"daysInMonth2","type":"CalUtilitiesRelativeTimedaysInMonth2","ui":"<b>Cal.Utilities.RelativeTime.daysInMonth2<\/b><br\/>[CALDoc] ","terminals":[{"name":"year","input":"text"},{"name":"month","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.daysInMonth","name":"daysInMonth","type":"CalUtilitiesRelativeTimedaysInMonth","ui":"<b>Cal.Utilities.RelativeTime.daysInMonth<\/b><br\/>[CALDoc] ","terminals":[{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.isLeapYear","name":"isLeapYear","type":"CalUtilitiesRelativeTimeisLeapYear","ui":"<b>Cal.Utilities.RelativeTime.isLeapYear<\/b><br\/>[CALDoc] ","terminals":[{"name":"year","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.dateToYearMonthDay","name":"dateToYearMonthDay","type":"CalUtilitiesRelativeTimedateToYearMonthDay","ui":"<b>Cal.Utilities.RelativeTime.dateToYearMonthDay<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getTimePart","name":"getTimePart","type":"CalUtilitiesRelativeTimegetTimePart","ui":"<b>Cal.Utilities.RelativeTime.getTimePart<\/b><br\/>[CALDoc] ","terminals":[{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getDatePart","name":"getDatePart","type":"CalUtilitiesRelativeTimegetDatePart","ui":"<b>Cal.Utilities.RelativeTime.getDatePart<\/b><br\/>[CALDoc] ","terminals":[{"name":"dateTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getSecond","name":"getSecond","type":"CalUtilitiesRelativeTimegetSecond","ui":"<b>Cal.Utilities.RelativeTime.getSecond<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getMinute","name":"getMinute","type":"CalUtilitiesRelativeTimegetMinute","ui":"<b>Cal.Utilities.RelativeTime.getMinute<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getHour","name":"getHour","type":"CalUtilitiesRelativeTimegetHour","ui":"<b>Cal.Utilities.RelativeTime.getHour<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getDay","name":"getDay","type":"CalUtilitiesRelativeTimegetDay","ui":"<b>Cal.Utilities.RelativeTime.getDay<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getMonth","name":"getMonth","type":"CalUtilitiesRelativeTimegetMonth","ui":"<b>Cal.Utilities.RelativeTime.getMonth<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getYear","name":"getYear","type":"CalUtilitiesRelativeTimegetYear","ui":"<b>Cal.Utilities.RelativeTime.getYear<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.makeJDate","name":"makeJDate","type":"CalUtilitiesRelativeTimemakeJDate","ui":"<b>Cal.Utilities.RelativeTime.makeJDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"second","input":"text"},{"name":"minute","input":"text"},{"name":"month","input":"text"},{"name":"hour","input":"text"},{"name":"day","input":"text"},{"name":"year","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getInternalTime","name":"getInternalTime","type":"CalUtilitiesRelativeTimegetInternalTime","ui":"<b>Cal.Utilities.RelativeTime.getInternalTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.getInternalDate","name":"getInternalDate","type":"CalUtilitiesRelativeTimegetInternalDate","ui":"<b>Cal.Utilities.RelativeTime.getInternalDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.relativeTime","name":"relativeTime","type":"CalUtilitiesRelativeTimerelativeTime","ui":"<b>Cal.Utilities.RelativeTime.relativeTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.relativeDate","name":"relativeDate","type":"CalUtilitiesRelativeTimerelativeDate","ui":"<b>Cal.Utilities.RelativeTime.relativeDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.RelativeDateTime","name":"RelativeDateTime","type":"CalUtilitiesRelativeTimeRelativeDateTime","ui":"<b>Cal.Utilities.RelativeTime.RelativeDateTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"date","input":"text"},{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.Sunday","name":"Sunday","type":"CalUtilitiesRelativeTimeSunday","ui":"<b>Cal.Utilities.RelativeTime.Sunday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.Monday","name":"Monday","type":"CalUtilitiesRelativeTimeMonday","ui":"<b>Cal.Utilities.RelativeTime.Monday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.Tuesday","name":"Tuesday","type":"CalUtilitiesRelativeTimeTuesday","ui":"<b>Cal.Utilities.RelativeTime.Tuesday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.Wednesday","name":"Wednesday","type":"CalUtilitiesRelativeTimeWednesday","ui":"<b>Cal.Utilities.RelativeTime.Wednesday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.Thursday","name":"Thursday","type":"CalUtilitiesRelativeTimeThursday","ui":"<b>Cal.Utilities.RelativeTime.Thursday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.Friday","name":"Friday","type":"CalUtilitiesRelativeTimeFriday","ui":"<b>Cal.Utilities.RelativeTime.Friday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.Saturday","name":"Saturday","type":"CalUtilitiesRelativeTimeSaturday","ui":"<b>Cal.Utilities.RelativeTime.Saturday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.WeekInWhichJan1Occurs","name":"WeekInWhichJan1Occurs","type":"CalUtilitiesRelativeTimeWeekInWhichJan1Occurs","ui":"<b>Cal.Utilities.RelativeTime.WeekInWhichJan1Occurs<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.FirstWeekWithAtLeast4DaysInNewYear","name":"FirstWeekWithAtLeast4DaysInNewYear","type":"CalUtilitiesRelativeTimeFirstWeekWithAtLeast4DaysInNewYear","ui":"<b>Cal.Utilities.RelativeTime.FirstWeekWithAtLeast4DaysInNewYear<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.FirstWeekFullyInNewYear","name":"FirstWeekFullyInNewYear","type":"CalUtilitiesRelativeTimeFirstWeekFullyInNewYear","ui":"<b>Cal.Utilities.RelativeTime.FirstWeekFullyInNewYear<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.YearAdd","name":"YearAdd","type":"CalUtilitiesRelativeTimeYearAdd","ui":"<b>Cal.Utilities.RelativeTime.YearAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.QuarterAdd","name":"QuarterAdd","type":"CalUtilitiesRelativeTimeQuarterAdd","ui":"<b>Cal.Utilities.RelativeTime.QuarterAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.MonthAdd","name":"MonthAdd","type":"CalUtilitiesRelativeTimeMonthAdd","ui":"<b>Cal.Utilities.RelativeTime.MonthAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.DayAdd","name":"DayAdd","type":"CalUtilitiesRelativeTimeDayAdd","ui":"<b>Cal.Utilities.RelativeTime.DayAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.WeekAdd","name":"WeekAdd","type":"CalUtilitiesRelativeTimeWeekAdd","ui":"<b>Cal.Utilities.RelativeTime.WeekAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.HourAdd","name":"HourAdd","type":"CalUtilitiesRelativeTimeHourAdd","ui":"<b>Cal.Utilities.RelativeTime.HourAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.MinuteAdd","name":"MinuteAdd","type":"CalUtilitiesRelativeTimeMinuteAdd","ui":"<b>Cal.Utilities.RelativeTime.MinuteAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.SecondAdd","name":"SecondAdd","type":"CalUtilitiesRelativeTimeSecondAdd","ui":"<b>Cal.Utilities.RelativeTime.SecondAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.YearDiff","name":"YearDiff","type":"CalUtilitiesRelativeTimeYearDiff","ui":"<b>Cal.Utilities.RelativeTime.YearDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.QuarterDiff","name":"QuarterDiff","type":"CalUtilitiesRelativeTimeQuarterDiff","ui":"<b>Cal.Utilities.RelativeTime.QuarterDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.MonthDiff","name":"MonthDiff","type":"CalUtilitiesRelativeTimeMonthDiff","ui":"<b>Cal.Utilities.RelativeTime.MonthDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.DayDiff","name":"DayDiff","type":"CalUtilitiesRelativeTimeDayDiff","ui":"<b>Cal.Utilities.RelativeTime.DayDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.WeekDiff","name":"WeekDiff","type":"CalUtilitiesRelativeTimeWeekDiff","ui":"<b>Cal.Utilities.RelativeTime.WeekDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.FirstDayOfWeekDiff","name":"FirstDayOfWeekDiff","type":"CalUtilitiesRelativeTimeFirstDayOfWeekDiff","ui":"<b>Cal.Utilities.RelativeTime.FirstDayOfWeekDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.HourDiff","name":"HourDiff","type":"CalUtilitiesRelativeTimeHourDiff","ui":"<b>Cal.Utilities.RelativeTime.HourDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.MinuteDiff","name":"MinuteDiff","type":"CalUtilitiesRelativeTimeMinuteDiff","ui":"<b>Cal.Utilities.RelativeTime.MinuteDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.SecondDiff","name":"SecondDiff","type":"CalUtilitiesRelativeTimeSecondDiff","ui":"<b>Cal.Utilities.RelativeTime.SecondDiff<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.YearPart","name":"YearPart","type":"CalUtilitiesRelativeTimeYearPart","ui":"<b>Cal.Utilities.RelativeTime.YearPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.QuarterPart","name":"QuarterPart","type":"CalUtilitiesRelativeTimeQuarterPart","ui":"<b>Cal.Utilities.RelativeTime.QuarterPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.MonthPart","name":"MonthPart","type":"CalUtilitiesRelativeTimeMonthPart","ui":"<b>Cal.Utilities.RelativeTime.MonthPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.DayOfYearPart","name":"DayOfYearPart","type":"CalUtilitiesRelativeTimeDayOfYearPart","ui":"<b>Cal.Utilities.RelativeTime.DayOfYearPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.DayPart","name":"DayPart","type":"CalUtilitiesRelativeTimeDayPart","ui":"<b>Cal.Utilities.RelativeTime.DayPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.DayOfWeekPart","name":"DayOfWeekPart","type":"CalUtilitiesRelativeTimeDayOfWeekPart","ui":"<b>Cal.Utilities.RelativeTime.DayOfWeekPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.WeekOfYearPart","name":"WeekOfYearPart","type":"CalUtilitiesRelativeTimeWeekOfYearPart","ui":"<b>Cal.Utilities.RelativeTime.WeekOfYearPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.HourPart","name":"HourPart","type":"CalUtilitiesRelativeTimeHourPart","ui":"<b>Cal.Utilities.RelativeTime.HourPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.MinutePart","name":"MinutePart","type":"CalUtilitiesRelativeTimeMinutePart","ui":"<b>Cal.Utilities.RelativeTime.MinutePart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Utilities.RelativeTime.SecondPart","name":"SecondPart","type":"CalUtilitiesRelativeTimeSecondPart","ui":"<b>Cal.Utilities.RelativeTime.SecondPart<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.RelativeTime"]},{"description":"Cal.Graphics.Color.rgbToColor","name":"rgbToColor","type":"CalGraphicsColorrgbToColor","ui":"<b>Cal.Graphics.Color.rgbToColor<\/b><br\/>[CALDoc] Constructs a <code>Color<\/code> value from its constituent RGB values, as represented as a triple.","terminals":[{"name":"rgb","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.silver","name":"silver","type":"CalGraphicsColorsilver","ui":"<b>Cal.Graphics.Color.silver<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color silver.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.green","name":"green","type":"CalGraphicsColorgreen","ui":"<b>Cal.Graphics.Color.green<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color green.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.colorToRGB","name":"colorToRGB","type":"CalGraphicsColorcolorToRGB","ui":"<b>Cal.Graphics.Color.colorToRGB<\/b><br\/>[CALDoc] Returns a triple of the constituent RGB values that make up the specified <code>Color<\/code> value.","terminals":[{"name":"colour","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.yellow","name":"yellow","type":"CalGraphicsColoryellow","ui":"<b>Cal.Graphics.Color.yellow<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color yellow.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.gray","name":"gray","type":"CalGraphicsColorgray","ui":"<b>Cal.Graphics.Color.gray<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color gray.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.showColor","name":"showColor","type":"CalGraphicsColorshowColor","ui":"<b>Cal.Graphics.Color.showColor<\/b><br\/>[CALDoc] ","terminals":[{"name":"color","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.colorToRGBA","name":"colorToRGBA","type":"CalGraphicsColorcolorToRGBA","ui":"<b>Cal.Graphics.Color.colorToRGBA<\/b><br\/>[CALDoc] Returns a 4-tuple of the constituent RGB and alpha values that make up the specified <code>Color<\/code> value.","terminals":[{"name":"colour","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.olive","name":"olive","type":"CalGraphicsColorolive","ui":"<b>Cal.Graphics.Color.olive<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color olive.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.white","name":"white","type":"CalGraphicsColorwhite","ui":"<b>Cal.Graphics.Color.white<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color white.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.blue","name":"blue","type":"CalGraphicsColorblue","ui":"<b>Cal.Graphics.Color.blue<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color blue.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.rgbaToColor","name":"rgbaToColor","type":"CalGraphicsColorrgbaToColor","ui":"<b>Cal.Graphics.Color.rgbaToColor<\/b><br\/>[CALDoc] Constructs a <code>Color<\/code> value representing a translucent color from its constituent RGB and alpha values, as represented as a 4-tuple.","terminals":[{"name":"rgba","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.lime","name":"lime","type":"CalGraphicsColorlime","ui":"<b>Cal.Graphics.Color.lime<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color lime.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.outputColourToJObject","name":"outputColourToJObject","type":"CalGraphicsColoroutputColourToJObject","ui":"<b>Cal.Graphics.Color.outputColourToJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"colour","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.outputColor","name":"outputColor","type":"CalGraphicsColoroutputColor","ui":"<b>Cal.Graphics.Color.outputColor<\/b><br\/>[CALDoc] Converts a <code>Color<\/code> value to a <code>JColor<\/code> value.","terminals":[{"name":"colour","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.teal","name":"teal","type":"CalGraphicsColorteal","ui":"<b>Cal.Graphics.Color.teal<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color teal.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.black","name":"black","type":"CalGraphicsColorblack","ui":"<b>Cal.Graphics.Color.black<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color black.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.fuchsia","name":"fuchsia","type":"CalGraphicsColorfuchsia","ui":"<b>Cal.Graphics.Color.fuchsia<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color fuchsia.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.maroon","name":"maroon","type":"CalGraphicsColormaroon","ui":"<b>Cal.Graphics.Color.maroon<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color maroon.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.navy","name":"navy","type":"CalGraphicsColornavy","ui":"<b>Cal.Graphics.Color.navy<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color navy.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.purple","name":"purple","type":"CalGraphicsColorpurple","ui":"<b>Cal.Graphics.Color.purple<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color purple.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.inputColourFromJObject","name":"inputColourFromJObject","type":"CalGraphicsColorinputColourFromJObject","ui":"<b>Cal.Graphics.Color.inputColourFromJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"object","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.inputColor","name":"inputColor","type":"CalGraphicsColorinputColor","ui":"<b>Cal.Graphics.Color.inputColor<\/b><br\/>[CALDoc] Converts a <code>JColor<\/code> value to a <code>Color<\/code> value.","terminals":[{"name":"color","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColor_copy","name":"jColor_copy","type":"CalGraphicsColorjColor_copy","ui":"<b>Cal.Graphics.Color.jColor_copy<\/b><br\/>[CALDoc] ","terminals":[{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.aqua","name":"aqua","type":"CalGraphicsColoraqua","ui":"<b>Cal.Graphics.Color.aqua<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color aqua.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.red","name":"red","type":"CalGraphicsColorred","ui":"<b>Cal.Graphics.Color.red<\/b><br\/>[CALDoc] The <code>Color<\/code> value for the color red.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.makeColor","name":"makeColor","type":"CalGraphicsColormakeColor","ui":"<b>Cal.Graphics.Color.makeColor<\/b><br\/>[CALDoc] Constructs a <code>Color<\/code> value from its constituent RGB values in the range (0 - 255).","terminals":[{"name":"red","input":"text"},{"name":"blue","input":"text"},{"name":"green","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.makeTranslucentColor","name":"makeTranslucentColor","type":"CalGraphicsColormakeTranslucentColor","ui":"<b>Cal.Graphics.Color.makeTranslucentColor<\/b><br\/>[CALDoc] Constructs a <code>Color<\/code> value representing a translucent color from its constituent RGB and alpha values in the range (0 - 255).","terminals":[{"name":"red","input":"text"},{"name":"alpha","input":"text"},{"name":"blue","input":"text"},{"name":"green","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.getAlphaFromColour","name":"getAlphaFromColour","type":"CalGraphicsColorgetAlphaFromColour","ui":"<b>Cal.Graphics.Color.getAlphaFromColour<\/b><br\/>[CALDoc] ","terminals":[{"name":"color","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.getBlueFromColour","name":"getBlueFromColour","type":"CalGraphicsColorgetBlueFromColour","ui":"<b>Cal.Graphics.Color.getBlueFromColour<\/b><br\/>[CALDoc] ","terminals":[{"name":"color","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.getGreenFromColour","name":"getGreenFromColour","type":"CalGraphicsColorgetGreenFromColour","ui":"<b>Cal.Graphics.Color.getGreenFromColour<\/b><br\/>[CALDoc] ","terminals":[{"name":"color","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.getRedFromColour","name":"getRedFromColour","type":"CalGraphicsColorgetRedFromColour","ui":"<b>Cal.Graphics.Color.getRedFromColour<\/b><br\/>[CALDoc] ","terminals":[{"name":"color","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColor_getAlpha","name":"jColor_getAlpha","type":"CalGraphicsColorjColor_getAlpha","ui":"<b>Cal.Graphics.Color.jColor_getAlpha<\/b><br\/>[CALDoc] ","terminals":[{"name":"jColor","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColor_getBlue","name":"jColor_getBlue","type":"CalGraphicsColorjColor_getBlue","ui":"<b>Cal.Graphics.Color.jColor_getBlue<\/b><br\/>[CALDoc] ","terminals":[{"name":"jColor","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColor_getGreen","name":"jColor_getGreen","type":"CalGraphicsColorjColor_getGreen","ui":"<b>Cal.Graphics.Color.jColor_getGreen<\/b><br\/>[CALDoc] ","terminals":[{"name":"jColor","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColor_getRed","name":"jColor_getRed","type":"CalGraphicsColorjColor_getRed","ui":"<b>Cal.Graphics.Color.jColor_getRed<\/b><br\/>[CALDoc] ","terminals":[{"name":"jColor","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.colourToJColor","name":"colourToJColor","type":"CalGraphicsColorcolourToJColor","ui":"<b>Cal.Graphics.Color.colourToJColor<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColorToColour","name":"jColorToColour","type":"CalGraphicsColorjColorToColour","ui":"<b>Cal.Graphics.Color.jColorToColour<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColor_equals","name":"jColor_equals","type":"CalGraphicsColorjColor_equals","ui":"<b>Cal.Graphics.Color.jColor_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jColor","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Graphics.Color.jColor_new","name":"jColor_new","type":"CalGraphicsColorjColor_new","ui":"<b>Cal.Graphics.Color.jColor_new<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Graphics.Color"]},{"description":"Cal.Data.DatabaseMetadata.getTableName","name":"getTableName","type":"CalDataDatabaseMetadatagetTableName","ui":"<b>Cal.Data.DatabaseMetadata.getTableName<\/b><br\/>[CALDoc] A convenience function for getting the table name of the given table","terminals":[{"name":"td","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getDatabaseNameFromReference","name":"getDatabaseNameFromReference","type":"CalDataDatabaseMetadatagetDatabaseNameFromReference","ui":"<b>Cal.Data.DatabaseMetadata.getDatabaseNameFromReference<\/b><br\/>[CALDoc] Returns the database name portion from the reference","terminals":[{"name":"ref","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildTableReferenceFromXmlAttribute","name":"buildTableReferenceFromXmlAttribute","type":"CalDataDatabaseMetadatabuildTableReferenceFromXmlAttribute","ui":"<b>Cal.Data.DatabaseMetadata.buildTableReferenceFromXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.inputConnectionSettings","name":"inputConnectionSettings","type":"CalDataDatabaseMetadatainputConnectionSettings","ui":"<b>Cal.Data.DatabaseMetadata.inputConnectionSettings<\/b><br\/>[CALDoc] ","terminals":[{"name":"settings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getTableKeyFields","name":"getTableKeyFields","type":"CalDataDatabaseMetadatagetTableKeyFields","ui":"<b>Cal.Data.DatabaseMetadata.getTableKeyFields<\/b><br\/>[CALDoc] A convenience function for returning the key fields in the given table","terminals":[{"name":"td","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputTableReference","name":"outputTableReference","type":"CalDataDatabaseMetadataoutputTableReference","ui":"<b>Cal.Data.DatabaseMetadata.outputTableReference<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputTableReferenceXml","name":"outputTableReferenceXml","type":"CalDataDatabaseMetadataoutputTableReferenceXml","ui":"<b>Cal.Data.DatabaseMetadata.outputTableReferenceXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"table","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildTableReferenceFromXml","name":"buildTableReferenceFromXml","type":"CalDataDatabaseMetadatabuildTableReferenceFromXml","ui":"<b>Cal.Data.DatabaseMetadata.buildTableReferenceFromXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.showTableReference","name":"showTableReference","type":"CalDataDatabaseMetadatashowTableReference","ui":"<b>Cal.Data.DatabaseMetadata.showTableReference<\/b><br\/>[CALDoc] Outputs a <code>TableReference<\/code> as a string","terminals":[{"name":"ref","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.businessOrgTableRef","name":"businessOrgTableRef","type":"CalDataDatabaseMetadatabusinessOrgTableRef","ui":"<b>Cal.Data.DatabaseMetadata.businessOrgTableRef<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getFieldComment","name":"getFieldComment","type":"CalDataDatabaseMetadatagetFieldComment","ui":"<b>Cal.Data.DatabaseMetadata.getFieldComment<\/b><br\/>[CALDoc] Returns the comment for a field description.","terminals":[{"name":"fieldDescription","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescriptionWithName","name":"noXmlAttrForFieldDescriptionWithName","type":"CalDataDatabaseMetadatanoXmlAttrForFieldDescriptionWithName","ui":"<b>Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescriptionWithName<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldDescription","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.isForeignKeyConstraint","name":"isForeignKeyConstraint","type":"CalDataDatabaseMetadataisForeignKeyConstraint","ui":"<b>Cal.Data.DatabaseMetadata.isForeignKeyConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"constraint","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.factsTable","name":"factsTable","type":"CalDataDatabaseMetadatafactsTable","ui":"<b>Cal.Data.DatabaseMetadata.factsTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getPrimaryKeyFieldNames","name":"getPrimaryKeyFieldNames","type":"CalDataDatabaseMetadatagetPrimaryKeyFieldNames","ui":"<b>Cal.Data.DatabaseMetadata.getPrimaryKeyFieldNames<\/b><br\/>[CALDoc] ","terminals":[{"name":"constraint","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildXmlForTableReferenceWithName","name":"buildXmlForTableReferenceWithName","type":"CalDataDatabaseMetadatabuildXmlForTableReferenceWithName","ui":"<b>Cal.Data.DatabaseMetadata.buildXmlForTableReferenceWithName<\/b><br\/>[CALDoc] ","terminals":[{"name":"elemName","input":"text"},{"name":"ref","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettingsWithName","name":"buildXmlAttrForConnectionSettingsWithName","type":"CalDataDatabaseMetadatabuildXmlAttrForConnectionSettingsWithName","ui":"<b>Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettingsWithName<\/b><br\/>[CALDoc] ","terminals":[{"name":"attrName","input":"text"},{"name":"cs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.showTableDescription","name":"showTableDescription","type":"CalDataDatabaseMetadatashowTableDescription","ui":"<b>Cal.Data.DatabaseMetadata.showTableDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"td","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.inputTableReferenceXml","name":"inputTableReferenceXml","type":"CalDataDatabaseMetadatainputTableReferenceXml","ui":"<b>Cal.Data.DatabaseMetadata.inputTableReferenceXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"nodeOrAttribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildXmlForConnectionSettingsWithName","name":"buildXmlForConnectionSettingsWithName","type":"CalDataDatabaseMetadatabuildXmlForConnectionSettingsWithName","ui":"<b>Cal.Data.DatabaseMetadata.buildXmlForConnectionSettingsWithName<\/b><br\/>[CALDoc] ","terminals":[{"name":"elemName","input":"text"},{"name":"cs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildFieldDescriptionFromXml","name":"buildFieldDescriptionFromXml","type":"CalDataDatabaseMetadatabuildFieldDescriptionFromXml","ui":"<b>Cal.Data.DatabaseMetadata.buildFieldDescriptionFromXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"xmlNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getTableConstraints","name":"getTableConstraints","type":"CalDataDatabaseMetadatagetTableConstraints","ui":"<b>Cal.Data.DatabaseMetadata.getTableConstraints<\/b><br\/>[CALDoc] Returns the table constraints applied to the given table","terminals":[{"name":"td","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.isFieldNullable","name":"isFieldNullable","type":"CalDataDatabaseMetadataisFieldNullable","ui":"<b>Cal.Data.DatabaseMetadata.isFieldNullable<\/b><br\/>[CALDoc] Returns true if the given field is nullable","terminals":[{"name":"fd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescription","name":"noXmlAttrForFieldDescription","type":"CalDataDatabaseMetadatanoXmlAttrForFieldDescription","ui":"<b>Cal.Data.DatabaseMetadata.noXmlAttrForFieldDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldDescription","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputConnectionSettingsXml","name":"outputConnectionSettingsXml","type":"CalDataDatabaseMetadataoutputConnectionSettingsXml","ui":"<b>Cal.Data.DatabaseMetadata.outputConnectionSettingsXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"cs","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getTableFields","name":"getTableFields","type":"CalDataDatabaseMetadatagetTableFields","ui":"<b>Cal.Data.DatabaseMetadata.getTableFields<\/b><br\/>[CALDoc] Returns the field contained in the given table","terminals":[{"name":"td","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputTableConstraint","name":"outputTableConstraint","type":"CalDataDatabaseMetadataoutputTableConstraint","ui":"<b>Cal.Data.DatabaseMetadata.outputTableConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableConstraint","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildXmlAttrForTableReferenceWithName","name":"buildXmlAttrForTableReferenceWithName","type":"CalDataDatabaseMetadatabuildXmlAttrForTableReferenceWithName","ui":"<b>Cal.Data.DatabaseMetadata.buildXmlAttrForTableReferenceWithName<\/b><br\/>[CALDoc] ","terminals":[{"name":"attrName","input":"text"},{"name":"ref","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputFieldDescription","name":"outputFieldDescription","type":"CalDataDatabaseMetadataoutputFieldDescription","ui":"<b>Cal.Data.DatabaseMetadata.outputFieldDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldDescription","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildXmlAttrForTableReference","name":"buildXmlAttrForTableReference","type":"CalDataDatabaseMetadatabuildXmlAttrForTableReference","ui":"<b>Cal.Data.DatabaseMetadata.buildXmlAttrForTableReference<\/b><br\/>[CALDoc] ","terminals":[{"name":"ref","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getFieldName","name":"getFieldName","type":"CalDataDatabaseMetadatagetFieldName","ui":"<b>Cal.Data.DatabaseMetadata.getFieldName<\/b><br\/>[CALDoc] Returns the name of the given field","terminals":[{"name":"fd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getTableReference","name":"getTableReference","type":"CalDataDatabaseMetadatagetTableReference","ui":"<b>Cal.Data.DatabaseMetadata.getTableReference<\/b><br\/>[CALDoc] Returns the <code>TableReference<\/code> that can be used to reference this table","terminals":[{"name":"td","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.showTableConstraint","name":"showTableConstraint","type":"CalDataDatabaseMetadatashowTableConstraint","ui":"<b>Cal.Data.DatabaseMetadata.showTableConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"constraint","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeDatabaseReference","name":"makeDatabaseReference","type":"CalDataDatabaseMetadatamakeDatabaseReference","ui":"<b>Cal.Data.DatabaseMetadata.makeDatabaseReference<\/b><br\/>[CALDoc] Makes a new database reference","terminals":[{"name":"databaseName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettings","name":"buildXmlAttrForConnectionSettings","type":"CalDataDatabaseMetadatabuildXmlAttrForConnectionSettings","ui":"<b>Cal.Data.DatabaseMetadata.buildXmlAttrForConnectionSettings<\/b><br\/>[CALDoc] ","terminals":[{"name":"cs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getFieldDataType","name":"getFieldDataType","type":"CalDataDatabaseMetadatagetFieldDataType","ui":"<b>Cal.Data.DatabaseMetadata.getFieldDataType<\/b><br\/>[CALDoc] Returns the SQL data type of the given field.","terminals":[{"name":"fieldDescription","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.noFieldDescriptionFromXmlAttribute","name":"noFieldDescriptionFromXmlAttribute","type":"CalDataDatabaseMetadatanoFieldDescriptionFromXmlAttribute","ui":"<b>Cal.Data.DatabaseMetadata.noFieldDescriptionFromXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jConnectionSettingsToConnectionSettings","name":"jConnectionSettingsToConnectionSettings","type":"CalDataDatabaseMetadatajConnectionSettingsToConnectionSettings","ui":"<b>Cal.Data.DatabaseMetadata.jConnectionSettingsToConnectionSettings<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSettings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.factsTableRef","name":"factsTableRef","type":"CalDataDatabaseMetadatafactsTableRef","ui":"<b>Cal.Data.DatabaseMetadata.factsTableRef<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildXmlForFieldDescriptionWithName","name":"buildXmlForFieldDescriptionWithName","type":"CalDataDatabaseMetadatabuildXmlForFieldDescriptionWithName","ui":"<b>Cal.Data.DatabaseMetadata.buildXmlForFieldDescriptionWithName<\/b><br\/>[CALDoc] ","terminals":[{"name":"elementName","input":"text"},{"name":"fieldDescription","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.inputConnectionSettingsXml","name":"inputConnectionSettingsXml","type":"CalDataDatabaseMetadatainputConnectionSettingsXml","ui":"<b>Cal.Data.DatabaseMetadata.inputConnectionSettingsXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"nodeOrAttribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXmlAttribute","name":"buildConnectionSettingsFromXmlAttribute","type":"CalDataDatabaseMetadatabuildConnectionSettingsFromXmlAttribute","ui":"<b>Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeConnectionSettings","name":"makeConnectionSettings","type":"CalDataDatabaseMetadatamakeConnectionSettings","ui":"<b>Cal.Data.DatabaseMetadata.makeConnectionSettings<\/b><br\/>[CALDoc] ","terminals":[{"name":"password","input":"text"},{"name":"port","input":"text"},{"name":"username","input":"text"},{"name":"server","input":"text"},{"name":"database","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.inputFieldDescriptionXml","name":"inputFieldDescriptionXml","type":"CalDataDatabaseMetadatainputFieldDescriptionXml","ui":"<b>Cal.Data.DatabaseMetadata.inputFieldDescriptionXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"nodeOrAttribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputFieldDescriptionXml","name":"outputFieldDescriptionXml","type":"CalDataDatabaseMetadataoutputFieldDescriptionXml","ui":"<b>Cal.Data.DatabaseMetadata.outputFieldDescriptionXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"table","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.factsTableFields","name":"factsTableFields","type":"CalDataDatabaseMetadatafactsTableFields","ui":"<b>Cal.Data.DatabaseMetadata.factsTableFields<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXml","name":"buildConnectionSettingsFromXml","type":"CalDataDatabaseMetadatabuildConnectionSettingsFromXml","ui":"<b>Cal.Data.DatabaseMetadata.buildConnectionSettingsFromXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.isUniqueConstraint","name":"isUniqueConstraint","type":"CalDataDatabaseMetadataisUniqueConstraint","ui":"<b>Cal.Data.DatabaseMetadata.isUniqueConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"constraint","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.elementGrandChildText","name":"elementGrandChildText","type":"CalDataDatabaseMetadataelementGrandChildText","ui":"<b>Cal.Data.DatabaseMetadata.elementGrandChildText<\/b><br\/>[CALDoc] This function attempts to locate a child element under the given XML element\nwhich has the same name as the specified element name.  ","terminals":[{"name":"childElemName","input":"text"},{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputTableDescription","name":"outputTableDescription","type":"CalDataDatabaseMetadataoutputTableDescription","ui":"<b>Cal.Data.DatabaseMetadata.outputTableDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableDescription","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.inputTableReference","name":"inputTableReference","type":"CalDataDatabaseMetadatainputTableReference","ui":"<b>Cal.Data.DatabaseMetadata.inputTableReference<\/b><br\/>[CALDoc] ","terminals":[{"name":"obj","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.isPrimaryKeyConstraint","name":"isPrimaryKeyConstraint","type":"CalDataDatabaseMetadataisPrimaryKeyConstraint","ui":"<b>Cal.Data.DatabaseMetadata.isPrimaryKeyConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"constraint","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.regionTable","name":"regionTable","type":"CalDataDatabaseMetadataregionTable","ui":"<b>Cal.Data.DatabaseMetadata.regionTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.regionTableConstraints","name":"regionTableConstraints","type":"CalDataDatabaseMetadataregionTableConstraints","ui":"<b>Cal.Data.DatabaseMetadata.regionTableConstraints<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.regionTableFields","name":"regionTableFields","type":"CalDataDatabaseMetadataregionTableFields","ui":"<b>Cal.Data.DatabaseMetadata.regionTableFields<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeFieldDescription","name":"makeFieldDescription","type":"CalDataDatabaseMetadatamakeFieldDescription","ui":"<b>Cal.Data.DatabaseMetadata.makeFieldDescription<\/b><br\/>[CALDoc] Constructor function","terminals":[{"name":"dataType","input":"text"},{"name":"nullable","input":"text"},{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeFieldDescriptionWithComment","name":"makeFieldDescriptionWithComment","type":"CalDataDatabaseMetadatamakeFieldDescriptionWithComment","ui":"<b>Cal.Data.DatabaseMetadata.makeFieldDescriptionWithComment<\/b><br\/>[CALDoc] Constructor function","terminals":[{"name":"nullable","input":"text"},{"name":"comment","input":"text"},{"name":"fieldName","input":"text"},{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.regionTableRef","name":"regionTableRef","type":"CalDataDatabaseMetadataregionTableRef","ui":"<b>Cal.Data.DatabaseMetadata.regionTableRef<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeTableReference","name":"makeTableReference","type":"CalDataDatabaseMetadatamakeTableReference","ui":"<b>Cal.Data.DatabaseMetadata.makeTableReference<\/b><br\/>[CALDoc] Makes a new table reference","terminals":[{"name":"tableName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeTableDescription","name":"makeTableDescription","type":"CalDataDatabaseMetadatamakeTableDescription","ui":"<b>Cal.Data.DatabaseMetadata.makeTableDescription<\/b><br\/>[CALDoc] Constructor function","terminals":[{"name":"fields","input":"text"},{"name":"constraints","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.outputConnectionSettings","name":"outputConnectionSettings","type":"CalDataDatabaseMetadataoutputConnectionSettings","ui":"<b>Cal.Data.DatabaseMetadata.outputConnectionSettings<\/b><br\/>[CALDoc] ","terminals":[{"name":"settings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.getTableNameFromReference","name":"getTableNameFromReference","type":"CalDataDatabaseMetadatagetTableNameFromReference","ui":"<b>Cal.Data.DatabaseMetadata.getTableNameFromReference<\/b><br\/>[CALDoc] Returns the table name portion from the reference","terminals":[{"name":"ref","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jConnectionSettings_password","name":"jConnectionSettings_password","type":"CalDataDatabaseMetadatajConnectionSettings_password","ui":"<b>Cal.Data.DatabaseMetadata.jConnectionSettings_password<\/b><br\/>[CALDoc] ","terminals":[{"name":"jConnectionSettings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jConnectionSettings_username","name":"jConnectionSettings_username","type":"CalDataDatabaseMetadatajConnectionSettings_username","ui":"<b>Cal.Data.DatabaseMetadata.jConnectionSettings_username<\/b><br\/>[CALDoc] ","terminals":[{"name":"jConnectionSettings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jConnectionSettings_database","name":"jConnectionSettings_database","type":"CalDataDatabaseMetadatajConnectionSettings_database","ui":"<b>Cal.Data.DatabaseMetadata.jConnectionSettings_database<\/b><br\/>[CALDoc] ","terminals":[{"name":"jConnectionSettings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jConnectionSettings_port","name":"jConnectionSettings_port","type":"CalDataDatabaseMetadatajConnectionSettings_port","ui":"<b>Cal.Data.DatabaseMetadata.jConnectionSettings_port<\/b><br\/>[CALDoc] ","terminals":[{"name":"jConnectionSettings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jConnectionSettings_server","name":"jConnectionSettings_server","type":"CalDataDatabaseMetadatajConnectionSettings_server","ui":"<b>Cal.Data.DatabaseMetadata.jConnectionSettings_server<\/b><br\/>[CALDoc] ","terminals":[{"name":"jConnectionSettings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jConnectionSettings_new","name":"jConnectionSettings_new","type":"CalDataDatabaseMetadatajConnectionSettings_new","ui":"<b>Cal.Data.DatabaseMetadata.jConnectionSettings_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"database","input":"text"},{"name":"username","input":"text"},{"name":"port","input":"text"},{"name":"server","input":"text"},{"name":"password","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeJForeignKeyConstraint","name":"makeJForeignKeyConstraint","type":"CalDataDatabaseMetadatamakeJForeignKeyConstraint","ui":"<b>Cal.Data.DatabaseMetadata.makeJForeignKeyConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"primaryKeyTable","input":"text"},{"name":"foreignKeyTableFieldNames","input":"text"},{"name":"primaryKeyTableFieldNames","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeJUniquenessConstraint","name":"makeJUniquenessConstraint","type":"CalDataDatabaseMetadatamakeJUniquenessConstraint","ui":"<b>Cal.Data.DatabaseMetadata.makeJUniquenessConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"uniqueFieldNames","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeJPrimaryKeyConstraint","name":"makeJPrimaryKeyConstraint","type":"CalDataDatabaseMetadatamakeJPrimaryKeyConstraint","ui":"<b>Cal.Data.DatabaseMetadata.makeJPrimaryKeyConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"keyFieldNames","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeJFieldDescription","name":"makeJFieldDescription","type":"CalDataDatabaseMetadatamakeJFieldDescription","ui":"<b>Cal.Data.DatabaseMetadata.makeJFieldDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"comment","input":"text"},{"name":"dataType","input":"text"},{"name":"isNullable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeJTableDescription","name":"makeJTableDescription","type":"CalDataDatabaseMetadatamakeJTableDescription","ui":"<b>Cal.Data.DatabaseMetadata.makeJTableDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"fields","input":"text"},{"name":"tableRef","input":"text"},{"name":"constraints","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.jGetTableName","name":"jGetTableName","type":"CalDataDatabaseMetadatajGetTableName","ui":"<b>Cal.Data.DatabaseMetadata.jGetTableName<\/b><br\/>[CALDoc] Allow a TableReference to be input from Java.","terminals":[{"name":"jTableReference","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.makeJTableReference","name":"makeJTableReference","type":"CalDataDatabaseMetadatamakeJTableReference","ui":"<b>Cal.Data.DatabaseMetadata.makeJTableReference<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.DatabaseReference","name":"DatabaseReference","type":"CalDataDatabaseMetadataDatabaseReference","ui":"<b>Cal.Data.DatabaseMetadata.DatabaseReference<\/b><br\/>[CALDoc] ","terminals":[{"name":"databaseName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.TableReference","name":"TableReference","type":"CalDataDatabaseMetadataTableReference","ui":"<b>Cal.Data.DatabaseMetadata.TableReference<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.TableDescription","name":"TableDescription","type":"CalDataDatabaseMetadataTableDescription","ui":"<b>Cal.Data.DatabaseMetadata.TableDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableRef","input":"text"},{"name":"fields","input":"text"},{"name":"constraints","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.FieldDescription","name":"FieldDescription","type":"CalDataDatabaseMetadataFieldDescription","ui":"<b>Cal.Data.DatabaseMetadata.FieldDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"dataType","input":"text"},{"name":"nullable","input":"text"},{"name":"comment","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.PrimaryKeyConstraint","name":"PrimaryKeyConstraint","type":"CalDataDatabaseMetadataPrimaryKeyConstraint","ui":"<b>Cal.Data.DatabaseMetadata.PrimaryKeyConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"primaryKeyFieldNames","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.UniqueConstraint","name":"UniqueConstraint","type":"CalDataDatabaseMetadataUniqueConstraint","ui":"<b>Cal.Data.DatabaseMetadata.UniqueConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"uniqueFieldNames","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.ForeignKeyConstraint","name":"ForeignKeyConstraint","type":"CalDataDatabaseMetadataForeignKeyConstraint","ui":"<b>Cal.Data.DatabaseMetadata.ForeignKeyConstraint<\/b><br\/>[CALDoc] ","terminals":[{"name":"referencedFields","input":"text"},{"name":"foreignTableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DatabaseMetadata.ConnectionSettings","name":"ConnectionSettings","type":"CalDataDatabaseMetadataConnectionSettings","ui":"<b>Cal.Data.DatabaseMetadata.ConnectionSettings<\/b><br\/>[CALDoc] ","terminals":[{"name":"username","input":"text"},{"name":"server","input":"text"},{"name":"port","input":"text"},{"name":"password","input":"text"},{"name":"database","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DatabaseMetadata"]},{"description":"Cal.Data.DataGems.resultSetText","name":"resultSetText","type":"CalDataDataGemsresultSetText","ui":"<b>Cal.Data.DataGems.resultSetText<\/b><br\/>[CALDoc] Returns a textual table containing the <code>ResultSet<\/code> values.\n","terminals":[{"name":"resultSet","input":"text"},{"name":"maxDisplayRows","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractLongByName","name":"extractLongByName","type":"CalDataDataGemsextractLongByName","ui":"<b>Cal.Data.DataGems.extractLongByName<\/b><br\/>[CALDoc] Extracts an <code>Long<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnName","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDecimal","name":"extractDecimal","type":"CalDataDataGemsextractDecimal","ui":"<b>Cal.Data.DataGems.extractDecimal<\/b><br\/>[CALDoc] Extracts a <code>Decimal<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractObject","name":"extractObject","type":"CalDataDataGemsextractObject","ui":"<b>Cal.Data.DataGems.extractObject<\/b><br\/>[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTuple3","name":"extractTuple3","type":"CalDataDataGemsextractTuple3","ui":"<b>Cal.Data.DataGems.extractTuple3<\/b><br\/>[CALDoc] Retrieves 3 values from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn1","input":"text"},{"name":"extractFn3","input":"text"},{"name":"resultRow","input":"text"},{"name":"extractFn2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeDecimal","name":"extractMaybeDecimal","type":"CalDataDataGemsextractMaybeDecimal","ui":"<b>Cal.Data.DataGems.extractMaybeDecimal<\/b><br\/>[CALDoc] Extracts a <code>Maybe<\/code> <code>Decimal<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTuple7","name":"extractTuple7","type":"CalDataDataGemsextractTuple7","ui":"<b>Cal.Data.DataGems.extractTuple7<\/b><br\/>[CALDoc] Retrieves 7 values from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn1","input":"text"},{"name":"extractFn6","input":"text"},{"name":"extractFn2","input":"text"},{"name":"extractFn3","input":"text"},{"name":"resultRow","input":"text"},{"name":"extractFn4","input":"text"},{"name":"extractFn7","input":"text"},{"name":"extractFn5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTime","name":"extractTime","type":"CalDataDataGemsextractTime","ui":"<b>Cal.Data.DataGems.extractTime<\/b><br\/>[CALDoc] Extracts a <code>Time<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeBytes","name":"extractMaybeBytes","type":"CalDataDataGemsextractMaybeBytes","ui":"<b>Cal.Data.DataGems.extractMaybeBytes<\/b><br\/>[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeString","name":"extractMaybeString","type":"CalDataDataGemsextractMaybeString","ui":"<b>Cal.Data.DataGems.extractMaybeString<\/b><br\/>[CALDoc] Extracts a <code>Maybe<\/code> <code>String<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractBooleanWithDefault","name":"extractBooleanWithDefault","type":"CalDataDataGemsextractBooleanWithDefault","ui":"<b>Cal.Data.DataGems.extractBooleanWithDefault<\/b><br\/>[CALDoc] Extracts a <code>Boolean<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"defaultValue","input":"text"},{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.bindIntToPreparedStatement","name":"bindIntToPreparedStatement","type":"CalDataDataGemsbindIntToPreparedStatement","ui":"<b>Cal.Data.DataGems.bindIntToPreparedStatement<\/b><br\/>[CALDoc] Binds an <code>Int<\/code> value to the given prepared statement","terminals":[{"name":"stmt","input":"text"},{"name":"parameterIndex","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractStringByName","name":"extractStringByName","type":"CalDataDataGemsextractStringByName","ui":"<b>Cal.Data.DataGems.extractStringByName<\/b><br\/>[CALDoc] Extracts a <code>String<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnName","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTuple5","name":"extractTuple5","type":"CalDataDataGemsextractTuple5","ui":"<b>Cal.Data.DataGems.extractTuple5<\/b><br\/>[CALDoc] Retrieves 5 values from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn1","input":"text"},{"name":"resultRow","input":"text"},{"name":"extractFn5","input":"text"},{"name":"extractFn2","input":"text"},{"name":"extractFn4","input":"text"},{"name":"extractFn3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.tableDescription","name":"tableDescription","type":"CalDataDataGemstableDescription","ui":"<b>Cal.Data.DataGems.tableDescription<\/b><br\/>[CALDoc] Returns the description for the specified table.","terminals":[{"name":"tableRef","input":"text"},{"name":"connection","input":"text"},{"name":"includeConstraintInfo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDecimalWithDefault","name":"extractDecimalWithDefault","type":"CalDataDataGemsextractDecimalWithDefault","ui":"<b>Cal.Data.DataGems.extractDecimalWithDefault<\/b><br\/>[CALDoc] Extracts a <code>Decimal<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"defaultValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetConnectionTableNames","name":"jdbcGetConnectionTableNames","type":"CalDataDataGemsjdbcGetConnectionTableNames","ui":"<b>Cal.Data.DataGems.jdbcGetConnectionTableNames<\/b><br\/>[CALDoc] Retrieves a list of table names from the connection.\n","terminals":[{"name":"connection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.bindStringToPreparedStatement","name":"bindStringToPreparedStatement","type":"CalDataDataGemsbindStringToPreparedStatement","ui":"<b>Cal.Data.DataGems.bindStringToPreparedStatement<\/b><br\/>[CALDoc] Binds a <code>String<\/code> value to the given prepared statement","terminals":[{"name":"parameterIndex","input":"text"},{"name":"value","input":"text"},{"name":"stmt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeLong","name":"extractMaybeLong","type":"CalDataDataGemsextractMaybeLong","ui":"<b>Cal.Data.DataGems.extractMaybeLong<\/b><br\/>[CALDoc] Extracts an <code>Maybe<\/code> <code>Long<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.dynamicDataFromResultSet","name":"dynamicDataFromResultSet","type":"CalDataDataGemsdynamicDataFromResultSet","ui":"<b>Cal.Data.DataGems.dynamicDataFromResultSet<\/b><br\/>[CALDoc] Fetches all the data from a <code>ResultSet<\/code> as <code>Dynamic<\/code> values.","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractObjectWithDefault","name":"extractObjectWithDefault","type":"CalDataDataGemsextractObjectWithDefault","ui":"<b>Cal.Data.DataGems.extractObjectWithDefault<\/b><br\/>[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"defaultValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeObject","name":"extractMaybeObject","type":"CalDataDataGemsextractMaybeObject","ui":"<b>Cal.Data.DataGems.extractMaybeObject<\/b><br\/>[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractBooleanByName","name":"extractBooleanByName","type":"CalDataDataGemsextractBooleanByName","ui":"<b>Cal.Data.DataGems.extractBooleanByName<\/b><br\/>[CALDoc] Extracts a <code>Boolean<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnName","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractArray","name":"extractArray","type":"CalDataDataGemsextractArray","ui":"<b>Cal.Data.DataGems.extractArray<\/b><br\/>[CALDoc] Retrieves an array of values (using the same extractor) from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.intArrayToJIntArray","name":"intArrayToJIntArray","type":"CalDataDataGemsintArrayToJIntArray","ui":"<b>Cal.Data.DataGems.intArrayToJIntArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractBytes","name":"extractBytes","type":"CalDataDataGemsextractBytes","ui":"<b>Cal.Data.DataGems.extractBytes<\/b><br\/>[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeInt","name":"extractMaybeInt","type":"CalDataDataGemsextractMaybeInt","ui":"<b>Cal.Data.DataGems.extractMaybeInt<\/b><br\/>[CALDoc] Extracts an <code>Maybe<\/code> <code>Int<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.resultSetInfo","name":"resultSetInfo","type":"CalDataDataGemsresultSetInfo","ui":"<b>Cal.Data.DataGems.resultSetInfo<\/b><br\/>[CALDoc] Returns the names and value types of the columns in a <code>ResultSet<\/code>.","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractString","name":"extractString","type":"CalDataDataGemsextractString","ui":"<b>Cal.Data.DataGems.extractString<\/b><br\/>[CALDoc] Extracts a <code>String<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.bindBooleanToPreparedStatement","name":"bindBooleanToPreparedStatement","type":"CalDataDataGemsbindBooleanToPreparedStatement","ui":"<b>Cal.Data.DataGems.bindBooleanToPreparedStatement<\/b><br\/>[CALDoc] Binds a <code>Boolean<\/code> value to the given prepared statement","terminals":[{"name":"value","input":"text"},{"name":"parameterIndex","input":"text"},{"name":"stmt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractIntByName","name":"extractIntByName","type":"CalDataDataGemsextractIntByName","ui":"<b>Cal.Data.DataGems.extractIntByName<\/b><br\/>[CALDoc] Extracts an <code>Int<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnName","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractBytesWithDefault","name":"extractBytesWithDefault","type":"CalDataDataGemsextractBytesWithDefault","ui":"<b>Cal.Data.DataGems.extractBytesWithDefault<\/b><br\/>[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"defaultValue","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractPartialArray","name":"extractPartialArray","type":"CalDataDataGemsextractPartialArray","ui":"<b>Cal.Data.DataGems.extractPartialArray<\/b><br\/>[CALDoc] Retrieves an array of some values (using the same extractor) from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"colOrdinals","input":"text"},{"name":"resultRow","input":"text"},{"name":"extractFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatementExecuteBatch","name":"preparedStatementExecuteBatch","type":"CalDataDataGemspreparedStatementExecuteBatch","ui":"<b>Cal.Data.DataGems.preparedStatementExecuteBatch<\/b><br\/>[CALDoc] Executes the given batched prepared statement.","terminals":[{"name":"stmt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractLong","name":"extractLong","type":"CalDataDataGemsextractLong","ui":"<b>Cal.Data.DataGems.extractLong<\/b><br\/>[CALDoc] Extracts an <code>Long<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.bindNullToPreparedStatement","name":"bindNullToPreparedStatement","type":"CalDataDataGemsbindNullToPreparedStatement","ui":"<b>Cal.Data.DataGems.bindNullToPreparedStatement<\/b><br\/>[CALDoc] Binds a null value to the given prepared statement","terminals":[{"name":"parameterIndex","input":"text"},{"name":"valueType","input":"text"},{"name":"stmt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractRelativeDate","name":"extractRelativeDate","type":"CalDataDataGemsextractRelativeDate","ui":"<b>Cal.Data.DataGems.extractRelativeDate<\/b><br\/>[CALDoc] Extracts a <code>RelativeTime.RelativeDate<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDate","name":"extractDate","type":"CalDataDataGemsextractDate","ui":"<b>Cal.Data.DataGems.extractDate<\/b><br\/>[CALDoc] Extracts a <code>RelativeTime.JDate<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.bindDoubleToPreparedStatement","name":"bindDoubleToPreparedStatement","type":"CalDataDataGemsbindDoubleToPreparedStatement","ui":"<b>Cal.Data.DataGems.bindDoubleToPreparedStatement<\/b><br\/>[CALDoc] Binds a <code>Double<\/code> value to the given prepared statement","terminals":[{"name":"value","input":"text"},{"name":"stmt","input":"text"},{"name":"parameterIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.columnNames","name":"columnNames","type":"CalDataDataGemscolumnNames","ui":"<b>Cal.Data.DataGems.columnNames<\/b><br\/>[CALDoc] Returns the names of the <code>ResultSet<\/code> columns.","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDateWithDefault","name":"extractDateWithDefault","type":"CalDataDataGemsextractDateWithDefault","ui":"<b>Cal.Data.DataGems.extractDateWithDefault<\/b><br\/>[CALDoc] Extracts a <code>RelativeTime.JDate<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"defaultValue","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDoubleByName","name":"extractDoubleByName","type":"CalDataDataGemsextractDoubleByName","ui":"<b>Cal.Data.DataGems.extractDoubleByName<\/b><br\/>[CALDoc] Extracts a <code>Double<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnName","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractList","name":"extractList","type":"CalDataDataGemsextractList","ui":"<b>Cal.Data.DataGems.extractList<\/b><br\/>[CALDoc] Retrieves a list of values (using the same extractor) from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDecimalByName","name":"extractDecimalByName","type":"CalDataDataGemsextractDecimalByName","ui":"<b>Cal.Data.DataGems.extractDecimalByName<\/b><br\/>[CALDoc] Extracts a <code>Decimal<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.executeBatch","name":"executeBatch","type":"CalDataDataGemsexecuteBatch","ui":"<b>Cal.Data.DataGems.executeBatch<\/b><br\/>[CALDoc] Executes a batch of operations on the database connection.","terminals":[{"name":"connection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetConnectionTableNamesWithFilters","name":"jdbcGetConnectionTableNamesWithFilters","type":"CalDataDataGemsjdbcGetConnectionTableNamesWithFilters","ui":"<b>Cal.Data.DataGems.jdbcGetConnectionTableNamesWithFilters<\/b><br\/>[CALDoc] Retrieves a list of table names from the connection.\n","terminals":[{"name":"tablePattern","input":"text"},{"name":"schemaPattern","input":"text"},{"name":"catalogName","input":"text"},{"name":"connection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTuple2","name":"extractTuple2","type":"CalDataDataGemsextractTuple2","ui":"<b>Cal.Data.DataGems.extractTuple2<\/b><br\/>[CALDoc] Retrieves 2 values from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"extractFn2","input":"text"},{"name":"extractFn1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractObjectByName","name":"extractObjectByName","type":"CalDataDataGemsextractObjectByName","ui":"<b>Cal.Data.DataGems.extractObjectByName<\/b><br\/>[CALDoc] Extracts an Object value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnName","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.getColumnIndex","name":"getColumnIndex","type":"CalDataDataGemsgetColumnIndex","ui":"<b>Cal.Data.DataGems.getColumnIndex<\/b><br\/>[CALDoc] Returns the (1-based) ordinal of the specified column.\n","terminals":[{"name":"columnName","input":"text"},{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeTime","name":"extractMaybeTime","type":"CalDataDataGemsextractMaybeTime","ui":"<b>Cal.Data.DataGems.extractMaybeTime<\/b><br\/>[CALDoc] Extracts a <code>Maybe<\/code> <code>Time<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTimeByName","name":"extractTimeByName","type":"CalDataDataGemsextractTimeByName","ui":"<b>Cal.Data.DataGems.extractTimeByName<\/b><br\/>[CALDoc] Extracts a <code>Time<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTimeWithDefault","name":"extractTimeWithDefault","type":"CalDataDataGemsextractTimeWithDefault","ui":"<b>Cal.Data.DataGems.extractTimeWithDefault<\/b><br\/>[CALDoc] Extracts a <code>Time<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"defaultValue","input":"text"},{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractRelativeDateByName","name":"extractRelativeDateByName","type":"CalDataDataGemsextractRelativeDateByName","ui":"<b>Cal.Data.DataGems.extractRelativeDateByName<\/b><br\/>[CALDoc] Extracts a <code>RelativeTime.RelativeDate<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDateByName","name":"extractDateByName","type":"CalDataDataGemsextractDateByName","ui":"<b>Cal.Data.DataGems.extractDateByName<\/b><br\/>[CALDoc] Extracts a <code>RelativeTime.JDate<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTuple4","name":"extractTuple4","type":"CalDataDataGemsextractTuple4","ui":"<b>Cal.Data.DataGems.extractTuple4<\/b><br\/>[CALDoc] Retrieves 4 values from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn1","input":"text"},{"name":"resultRow","input":"text"},{"name":"extractFn3","input":"text"},{"name":"extractFn2","input":"text"},{"name":"extractFn4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.byteArrayToJByteArray","name":"byteArrayToJByteArray","type":"CalDataDataGemsbyteArrayToJByteArray","ui":"<b>Cal.Data.DataGems.byteArrayToJByteArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractTuple6","name":"extractTuple6","type":"CalDataDataGemsextractTuple6","ui":"<b>Cal.Data.DataGems.extractTuple6<\/b><br\/>[CALDoc] Retrieves 6 values from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn1","input":"text"},{"name":"extractFn2","input":"text"},{"name":"extractFn5","input":"text"},{"name":"extractFn6","input":"text"},{"name":"extractFn3","input":"text"},{"name":"resultRow","input":"text"},{"name":"extractFn4","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.rowCount","name":"rowCount","type":"CalDataDataGemsrowCount","ui":"<b>Cal.Data.DataGems.rowCount<\/b><br\/>[CALDoc] Returns the number of rows in the <code>ResultSet<\/code>.","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeDouble","name":"extractMaybeDouble","type":"CalDataDataGemsextractMaybeDouble","ui":"<b>Cal.Data.DataGems.extractMaybeDouble<\/b><br\/>[CALDoc] Extracts a <code>Maybe<\/code> <code>Double<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeRelativeDate","name":"extractMaybeRelativeDate","type":"CalDataDataGemsextractMaybeRelativeDate","ui":"<b>Cal.Data.DataGems.extractMaybeRelativeDate<\/b><br\/>[CALDoc] Extracts a <code>Maybe<\/code> <code>RelativeTime.RelativeDate<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeDate","name":"extractMaybeDate","type":"CalDataDataGemsextractMaybeDate","ui":"<b>Cal.Data.DataGems.extractMaybeDate<\/b><br\/>[CALDoc] Extracts a <code>Maybe<\/code> <code>RelativeTime.JDate<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractInt","name":"extractInt","type":"CalDataDataGemsextractInt","ui":"<b>Cal.Data.DataGems.extractInt<\/b><br\/>[CALDoc] Extracts an <code>Int<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractBytesByName","name":"extractBytesByName","type":"CalDataDataGemsextractBytesByName","ui":"<b>Cal.Data.DataGems.extractBytesByName<\/b><br\/>[CALDoc] Extracts a byte array value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnName","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jByteArrayToByteArray","name":"jByteArrayToByteArray","type":"CalDataDataGemsjByteArrayToByteArray","ui":"<b>Cal.Data.DataGems.jByteArrayToByteArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetTableFieldNames","name":"jdbcGetTableFieldNames","type":"CalDataDataGemsjdbcGetTableFieldNames","ui":"<b>Cal.Data.DataGems.jdbcGetTableFieldNames<\/b><br\/>[CALDoc] Retrieves a list of field names for the specified table in the connection.","terminals":[{"name":"tableName","input":"text"},{"name":"connection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.dataMapFromResultSet","name":"dataMapFromResultSet","type":"CalDataDataGemsdataMapFromResultSet","ui":"<b>Cal.Data.DataGems.dataMapFromResultSet<\/b><br\/>[CALDoc] Fetches the data from a <code>ResultSet<\/code> as a <code>Map.Map<\/code>.\n","terminals":[{"name":"resultSet","input":"text"},{"name":"valueExtractFn","input":"text"},{"name":"keyExtractorFn","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDynamics","name":"extractDynamics","type":"CalDataDataGemsextractDynamics","ui":"<b>Cal.Data.DataGems.extractDynamics<\/b><br\/>[CALDoc] Retrieves a list of <code>Dynamic<\/code> values from a row in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDynamicsByType","name":"extractDynamicsByType","type":"CalDataDataGemsextractDynamicsByType","ui":"<b>Cal.Data.DataGems.extractDynamicsByType<\/b><br\/>[CALDoc] Retrieves a list of <code>Dynamic<\/code> values (of the specified types) from a row in the <code>ResultRow<\/code>.","terminals":[{"name":"resultRow","input":"text"},{"name":"colTypes","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDynamic","name":"extractDynamic","type":"CalDataDataGemsextractDynamic","ui":"<b>Cal.Data.DataGems.extractDynamic<\/b><br\/>[CALDoc] Extracts a column value as a <code>Dynamic<\/code> value.\n","terminals":[{"name":"columnN","input":"text"},{"name":"valueType","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.columnType","name":"columnType","type":"CalDataDataGemscolumnType","ui":"<b>Cal.Data.DataGems.columnType<\/b><br\/>[CALDoc] Returns the closest value type for the specified column in the <code>ResultSet<\/code>.","terminals":[{"name":"columnOrdinal","input":"text"},{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDoubleWithDefault","name":"extractDoubleWithDefault","type":"CalDataDataGemsextractDoubleWithDefault","ui":"<b>Cal.Data.DataGems.extractDoubleWithDefault<\/b><br\/>[CALDoc] Extracts a <code>Double<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"defaultValue","input":"text"},{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractPartialList","name":"extractPartialList","type":"CalDataDataGemsextractPartialList","ui":"<b>Cal.Data.DataGems.extractPartialList<\/b><br\/>[CALDoc] Retrieves a list of some values (using the same extractor) from each row in the <code>ResultRow<\/code>.","terminals":[{"name":"extractFn","input":"text"},{"name":"colOrdinals","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.bindTimeToPreparedStatement","name":"bindTimeToPreparedStatement","type":"CalDataDataGemsbindTimeToPreparedStatement","ui":"<b>Cal.Data.DataGems.bindTimeToPreparedStatement<\/b><br\/>[CALDoc] Binds a <code>Time<\/code> value to the given prepared statement","terminals":[{"name":"stmt","input":"text"},{"name":"parameterIndex","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcConnectionWithDriverCheck","name":"jdbcConnectionWithDriverCheck","type":"CalDataDataGemsjdbcConnectionWithDriverCheck","ui":"<b>Cal.Data.DataGems.jdbcConnectionWithDriverCheck<\/b><br\/>[CALDoc] Use this if you don't know the driver is already loaded.","terminals":[{"name":"userName","input":"text"},{"name":"url","input":"text"},{"name":"driverClass","input":"text"},{"name":"password","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.columnSqlType","name":"columnSqlType","type":"CalDataDataGemscolumnSqlType","ui":"<b>Cal.Data.DataGems.columnSqlType<\/b><br\/>[CALDoc] Returns the SQL data type for the specified column in the <code>ResultSet<\/code>.","terminals":[{"name":"resultSet","input":"text"},{"name":"columnOrdinal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jIntArrayToIntArray","name":"jIntArrayToIntArray","type":"CalDataDataGemsjIntArrayToIntArray","ui":"<b>Cal.Data.DataGems.jIntArrayToIntArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractLongWithDefault","name":"extractLongWithDefault","type":"CalDataDataGemsextractLongWithDefault","ui":"<b>Cal.Data.DataGems.extractLongWithDefault<\/b><br\/>[CALDoc] Extracts an <code>Long<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"defaultValue","input":"text"},{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractDouble","name":"extractDouble","type":"CalDataDataGemsextractDouble","ui":"<b>Cal.Data.DataGems.extractDouble<\/b><br\/>[CALDoc] Extracts a <code>Double<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractMaybeBoolean","name":"extractMaybeBoolean","type":"CalDataDataGemsextractMaybeBoolean","ui":"<b>Cal.Data.DataGems.extractMaybeBoolean<\/b><br\/>[CALDoc] Extracts a <code>Maybe<\/code> <code>Boolean<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.foldStrictOverResultSet","name":"foldStrictOverResultSet","type":"CalDataDataGemsfoldStrictOverResultSet","ui":"<b>Cal.Data.DataGems.foldStrictOverResultSet<\/b><br\/>[CALDoc] Folds a function over the rows of the <code>ResultSet<\/code>.","terminals":[{"name":"initValue","input":"text"},{"name":"resultSet","input":"text"},{"name":"foldFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetTableFieldInfo","name":"jdbcGetTableFieldInfo","type":"CalDataDataGemsjdbcGetTableFieldInfo","ui":"<b>Cal.Data.DataGems.jdbcGetTableFieldInfo<\/b><br\/>[CALDoc] Retrieves information about the fields in a database table, including:  the field names, \ntheir value types, and whether the type is a 'long' one.","terminals":[{"name":"tableName","input":"text"},{"name":"connection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.dataFromResultSet","name":"dataFromResultSet","type":"CalDataDataGemsdataFromResultSet","ui":"<b>Cal.Data.DataGems.dataFromResultSet<\/b><br\/>[CALDoc] Fetches the data from a <code>ResultSet<\/code> using the specified extractor function for each row.","terminals":[{"name":"resultSet","input":"text"},{"name":"extractFn","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.dataFromResultSet2","name":"dataFromResultSet2","type":"CalDataDataGemsdataFromResultSet2","ui":"<b>Cal.Data.DataGems.dataFromResultSet2<\/b><br\/>[CALDoc] Fetches the data from a <code>ResultSet<\/code> using the specified extractor function for each row.\n","terminals":[{"name":"closeAfterReading","input":"text"},{"name":"resultSet","input":"text"},{"name":"extractFn","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractIntWithDefault","name":"extractIntWithDefault","type":"CalDataDataGemsextractIntWithDefault","ui":"<b>Cal.Data.DataGems.extractIntWithDefault<\/b><br\/>[CALDoc] Extracts an <code>Int<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"defaultValue","input":"text"},{"name":"resultRow","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractStringWithDefault","name":"extractStringWithDefault","type":"CalDataDataGemsextractStringWithDefault","ui":"<b>Cal.Data.DataGems.extractStringWithDefault<\/b><br\/>[CALDoc] Extracts a <code>String<\/code> value from the specified column in the <code>ResultRow<\/code>.\n","terminals":[{"name":"resultRow","input":"text"},{"name":"defaultValue","input":"text"},{"name":"columnN","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.extractBoolean","name":"extractBoolean","type":"CalDataDataGemsextractBoolean","ui":"<b>Cal.Data.DataGems.extractBoolean<\/b><br\/>[CALDoc] Extracts a <code>Boolean<\/code> value from the specified column in the <code>ResultRow<\/code>.","terminals":[{"name":"columnN","input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowObjectByName","name":"jGetCurrentRowObjectByName","type":"CalDataDataGemsjGetCurrentRowObjectByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowObjectByName<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowBytesByName","name":"jGetCurrentRowBytesByName","type":"CalDataDataGemsjGetCurrentRowBytesByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowBytesByName<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowBooleanByName","name":"jGetCurrentRowBooleanByName","type":"CalDataDataGemsjGetCurrentRowBooleanByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowBooleanByName<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowTimeByName","name":"jGetCurrentRowTimeByName","type":"CalDataDataGemsjGetCurrentRowTimeByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowTimeByName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowDateByName","name":"jGetCurrentRowDateByName","type":"CalDataDataGemsjGetCurrentRowDateByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowDateByName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowDecimalByName","name":"jGetCurrentRowDecimalByName","type":"CalDataDataGemsjGetCurrentRowDecimalByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowDecimalByName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowDoubleByName","name":"jGetCurrentRowDoubleByName","type":"CalDataDataGemsjGetCurrentRowDoubleByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowDoubleByName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowLongByName","name":"jGetCurrentRowLongByName","type":"CalDataDataGemsjGetCurrentRowLongByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowLongByName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowIntByName","name":"jGetCurrentRowIntByName","type":"CalDataDataGemsjGetCurrentRowIntByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowIntByName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowStringByName","name":"jGetCurrentRowStringByName","type":"CalDataDataGemsjGetCurrentRowStringByName","ui":"<b>Cal.Data.DataGems.jGetCurrentRowStringByName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowObject","name":"jGetCurrentRowObject","type":"CalDataDataGemsjGetCurrentRowObject","ui":"<b>Cal.Data.DataGems.jGetCurrentRowObject<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowBytes","name":"jGetCurrentRowBytes","type":"CalDataDataGemsjGetCurrentRowBytes","ui":"<b>Cal.Data.DataGems.jGetCurrentRowBytes<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowBoolean","name":"jGetCurrentRowBoolean","type":"CalDataDataGemsjGetCurrentRowBoolean","ui":"<b>Cal.Data.DataGems.jGetCurrentRowBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowTime","name":"jGetCurrentRowTime","type":"CalDataDataGemsjGetCurrentRowTime","ui":"<b>Cal.Data.DataGems.jGetCurrentRowTime<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowDate","name":"jGetCurrentRowDate","type":"CalDataDataGemsjGetCurrentRowDate","ui":"<b>Cal.Data.DataGems.jGetCurrentRowDate<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowDecimal","name":"jGetCurrentRowDecimal","type":"CalDataDataGemsjGetCurrentRowDecimal","ui":"<b>Cal.Data.DataGems.jGetCurrentRowDecimal<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowDouble","name":"jGetCurrentRowDouble","type":"CalDataDataGemsjGetCurrentRowDouble","ui":"<b>Cal.Data.DataGems.jGetCurrentRowDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowLong","name":"jGetCurrentRowLong","type":"CalDataDataGemsjGetCurrentRowLong","ui":"<b>Cal.Data.DataGems.jGetCurrentRowLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowInt","name":"jGetCurrentRowInt","type":"CalDataDataGemsjGetCurrentRowInt","ui":"<b>Cal.Data.DataGems.jGetCurrentRowInt<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetCurrentRowString","name":"jGetCurrentRowString","type":"CalDataDataGemsjGetCurrentRowString","ui":"<b>Cal.Data.DataGems.jGetCurrentRowString<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.wasLastFetchNull","name":"wasLastFetchNull","type":"CalDataDataGemswasLastFetchNull","ui":"<b>Cal.Data.DataGems.wasLastFetchNull<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultRow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcCloseResultSet","name":"jdbcCloseResultSet","type":"CalDataDataGemsjdbcCloseResultSet","ui":"<b>Cal.Data.DataGems.jdbcCloseResultSet<\/b><br\/>[CALDoc] Close a <code>ResultSet<\/code>.","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jMoveNext","name":"jMoveNext","type":"CalDataDataGemsjMoveNext","ui":"<b>Cal.Data.DataGems.jMoveNext<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jMoveFirst","name":"jMoveFirst","type":"CalDataDataGemsjMoveFirst","ui":"<b>Cal.Data.DataGems.jMoveFirst<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetColumnIndex","name":"jGetColumnIndex","type":"CalDataDataGemsjGetColumnIndex","ui":"<b>Cal.Data.DataGems.jGetColumnIndex<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jGetColumnType","name":"jGetColumnType","type":"CalDataDataGemsjGetColumnType","ui":"<b>Cal.Data.DataGems.jGetColumnType<\/b><br\/>[CALDoc] ","terminals":[{"name":"resultSet","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.columnName","name":"columnName","type":"CalDataDataGemscolumnName","ui":"<b>Cal.Data.DataGems.columnName<\/b><br\/>[CALDoc] Returns the name for the <code>ResultSet<\/code> column at the specified ordinal.","terminals":[{"name":null,"input":"text"},{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.columnLabel","name":"columnLabel","type":"CalDataDataGemscolumnLabel","ui":"<b>Cal.Data.DataGems.columnLabel<\/b><br\/>[CALDoc] Returns the label for the <code>ResultSet<\/code> column at the specified ordinal.","terminals":[{"name":"resultSet","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.columnCount","name":"columnCount","type":"CalDataDataGemscolumnCount","ui":"<b>Cal.Data.DataGems.columnCount<\/b><br\/>[CALDoc] Returns the number of columns in a <code>ResultSet<\/code>.","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcQueryToResultSet","name":"jdbcQueryToResultSet","type":"CalDataDataGemsjdbcQueryToResultSet","ui":"<b>Cal.Data.DataGems.jdbcQueryToResultSet<\/b><br\/>[CALDoc] Execute a SQL SELECT statement against the specified connection to produce a <code>ResultSet<\/code>.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"sqluery","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatement_setNull","name":"preparedStatement_setNull","type":"CalDataDataGemspreparedStatement_setNull","ui":"<b>Cal.Data.DataGems.preparedStatement_setNull<\/b><br\/>[CALDoc] ","terminals":[{"name":"jdbcPreparedStatement","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatement_setTime","name":"preparedStatement_setTime","type":"CalDataDataGemspreparedStatement_setTime","ui":"<b>Cal.Data.DataGems.preparedStatement_setTime<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatement_setString","name":"preparedStatement_setString","type":"CalDataDataGemspreparedStatement_setString","ui":"<b>Cal.Data.DataGems.preparedStatement_setString<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jdbcPreparedStatement","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatement_setDouble","name":"preparedStatement_setDouble","type":"CalDataDataGemspreparedStatement_setDouble","ui":"<b>Cal.Data.DataGems.preparedStatement_setDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatement_setInt","name":"preparedStatement_setInt","type":"CalDataDataGemspreparedStatement_setInt","ui":"<b>Cal.Data.DataGems.preparedStatement_setInt<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jdbcPreparedStatement","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatement_setBoolean","name":"preparedStatement_setBoolean","type":"CalDataDataGemspreparedStatement_setBoolean","ui":"<b>Cal.Data.DataGems.preparedStatement_setBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jdbcPreparedStatement","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatement_executeBatch","name":"preparedStatement_executeBatch","type":"CalDataDataGemspreparedStatement_executeBatch","ui":"<b>Cal.Data.DataGems.preparedStatement_executeBatch<\/b><br\/>[CALDoc] ","terminals":[{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatementGetTotalExecTime","name":"preparedStatementGetTotalExecTime","type":"CalDataDataGemspreparedStatementGetTotalExecTime","ui":"<b>Cal.Data.DataGems.preparedStatementGetTotalExecTime<\/b><br\/>[CALDoc] Retrieves the time taken to execute a prepared statement.","terminals":[{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatementGetSqlStatement","name":"preparedStatementGetSqlStatement","type":"CalDataDataGemspreparedStatementGetSqlStatement","ui":"<b>Cal.Data.DataGems.preparedStatementGetSqlStatement<\/b><br\/>[CALDoc] Retrieves the SQL from a prepared statement.","terminals":[{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatementExecuteUpdate","name":"preparedStatementExecuteUpdate","type":"CalDataDataGemspreparedStatementExecuteUpdate","ui":"<b>Cal.Data.DataGems.preparedStatementExecuteUpdate<\/b><br\/>[CALDoc] Executes a prepared statement which performs an update operation.","terminals":[{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.preparedStatementAddBatch","name":"preparedStatementAddBatch","type":"CalDataDataGemspreparedStatementAddBatch","ui":"<b>Cal.Data.DataGems.preparedStatementAddBatch<\/b><br\/>[CALDoc] Adds a batch with a set of parameters to the prepared statement.","terminals":[{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.closePreparedStatement","name":"closePreparedStatement","type":"CalDataDataGemsclosePreparedStatement","ui":"<b>Cal.Data.DataGems.closePreparedStatement<\/b><br\/>[CALDoc] Closes a prepared statement.","terminals":[{"name":"jdbcPreparedStatement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.createPreparedStatement","name":"createPreparedStatement","type":"CalDataDataGemscreatePreparedStatement","ui":"<b>Cal.Data.DataGems.createPreparedStatement<\/b><br\/>[CALDoc] Creates a prepared statement from a SQL string.","terminals":[{"name":"sql","input":"text"},{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.rollback","name":"rollback","type":"CalDataDataGemsrollback","ui":"<b>Cal.Data.DataGems.rollback<\/b><br\/>[CALDoc] Rollback the changes made through the database connection.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.commit","name":"commit","type":"CalDataDataGemscommit","ui":"<b>Cal.Data.DataGems.commit<\/b><br\/>[CALDoc] Commit the changes made through the database connection.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jExecuteBatch","name":"jExecuteBatch","type":"CalDataDataGemsjExecuteBatch","ui":"<b>Cal.Data.DataGems.jExecuteBatch<\/b><br\/>[CALDoc] ","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.addBatch","name":"addBatch","type":"CalDataDataGemsaddBatch","ui":"<b>Cal.Data.DataGems.addBatch<\/b><br\/>[CALDoc] Adds a batch of operations to the database connection.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"sql","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.executeUpdate","name":"executeUpdate","type":"CalDataDataGemsexecuteUpdate","ui":"<b>Cal.Data.DataGems.executeUpdate<\/b><br\/>[CALDoc] Executes a SQL statement which performs an update operation.","terminals":[{"name":"updateSQL","input":"text"},{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetTableForeignKeyInfo","name":"jdbcGetTableForeignKeyInfo","type":"CalDataDataGemsjdbcGetTableForeignKeyInfo","ui":"<b>Cal.Data.DataGems.jdbcGetTableForeignKeyInfo<\/b><br\/>[CALDoc] Retrieves a <code>ResultSet<\/code> of foreign key info for a table.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"tableName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetTableIndexInfo","name":"jdbcGetTableIndexInfo","type":"CalDataDataGemsjdbcGetTableIndexInfo","ui":"<b>Cal.Data.DataGems.jdbcGetTableIndexInfo<\/b><br\/>[CALDoc] Retrieves a <code>ResultSet<\/code> of index info for a table.","terminals":[{"name":"uniqueOnly","input":"text"},{"name":"tableName","input":"text"},{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetTablePrimaryKeyInfo","name":"jdbcGetTablePrimaryKeyInfo","type":"CalDataDataGemsjdbcGetTablePrimaryKeyInfo","ui":"<b>Cal.Data.DataGems.jdbcGetTablePrimaryKeyInfo<\/b><br\/>[CALDoc] Retrieves a <code>ResultSet<\/code> of primary key columns for a table.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"tableName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetColumnsInfo","name":"jdbcGetColumnsInfo","type":"CalDataDataGemsjdbcGetColumnsInfo","ui":"<b>Cal.Data.DataGems.jdbcGetColumnsInfo<\/b><br\/>[CALDoc] Retrieves a <code>ResultSet<\/code> of table column information from a connection.","terminals":[{"name":"tableName","input":"text"},{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetTablesInfoWithFilters","name":"jdbcGetTablesInfoWithFilters","type":"CalDataDataGemsjdbcGetTablesInfoWithFilters","ui":"<b>Cal.Data.DataGems.jdbcGetTablesInfoWithFilters<\/b><br\/>[CALDoc] Retrieves a <code>ResultSet<\/code> of table information from a connection.","terminals":[{"name":"tableNamePattern","input":"text"},{"name":"schemaPattern","input":"text"},{"name":"jdbcConnection","input":"text"},{"name":"catalogName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetTablesInfo","name":"jdbcGetTablesInfo","type":"CalDataDataGemsjdbcGetTablesInfo","ui":"<b>Cal.Data.DataGems.jdbcGetTablesInfo<\/b><br\/>[CALDoc] Retrieves a <code>ResultSet<\/code> of table information from a connection.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.connectionDatabaseProductName","name":"connectionDatabaseProductName","type":"CalDataDataGemsconnectionDatabaseProductName","ui":"<b>Cal.Data.DataGems.connectionDatabaseProductName<\/b><br\/>[CALDoc] Retrieves the name of the database product to which this connection is connected.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcCloseConnection","name":"jdbcCloseConnection","type":"CalDataDataGemsjdbcCloseConnection","ui":"<b>Cal.Data.DataGems.jdbcCloseConnection<\/b><br\/>[CALDoc] Closes a JDBC connection.\n","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcGetAutoCommit","name":"jdbcGetAutoCommit","type":"CalDataDataGemsjdbcGetAutoCommit","ui":"<b>Cal.Data.DataGems.jdbcGetAutoCommit<\/b><br\/>[CALDoc] Gets the auto-commit flag for a JDBC connection.","terminals":[{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcSetAutoCommit","name":"jdbcSetAutoCommit","type":"CalDataDataGemsjdbcSetAutoCommit","ui":"<b>Cal.Data.DataGems.jdbcSetAutoCommit<\/b><br\/>[CALDoc] Set auto-commit flag for a JDBC connection.\n","terminals":[{"name":"flag","input":"text"},{"name":"jdbcConnection","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcConnection","name":"jdbcConnection","type":"CalDataDataGemsjdbcConnection","ui":"<b>Cal.Data.DataGems.jdbcConnection<\/b><br\/>[CALDoc] Connect to a JDBC database.\n","terminals":[{"name":"url","input":"text"},{"name":"login","input":"text"},{"name":"password","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.jdbcDriverLoad","name":"jdbcDriverLoad","type":"CalDataDataGemsjdbcDriverLoad","ui":"<b>Cal.Data.DataGems.jdbcDriverLoad<\/b><br\/>[CALDoc] Load a JDBC driver.","terminals":[{"name":"driver","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.resultSetFromJDBC","name":"resultSetFromJDBC","type":"CalDataDataGemsresultSetFromJDBC","ui":"<b>Cal.Data.DataGems.resultSetFromJDBC<\/b><br\/>[CALDoc] Exposes a JDBC resultset as a <code>ResultSet<\/code>.","terminals":[{"name":"resultSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.resultSetForRow","name":"resultSetForRow","type":"CalDataDataGemsresultSetForRow","ui":"<b>Cal.Data.DataGems.resultSetForRow<\/b><br\/>[CALDoc] Get the ResultSet to which a row belongs.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Data.DataGems.currentResultSetRow","name":"currentResultSetRow","type":"CalDataDataGemscurrentResultSetRow","ui":"<b>Cal.Data.DataGems.currentResultSetRow<\/b><br\/>[CALDoc] Get a ResultRow representing the current row of the resultset.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.DataGems"]},{"description":"Cal.Utilities.PrettyPrinter.spread","name":"spread","type":"CalUtilitiesPrettyPrinterspread","ui":"<b>Cal.Utilities.PrettyPrinter.spread<\/b><br\/>[CALDoc] ","terminals":[{"name":"docs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.stack","name":"stack","type":"CalUtilitiesPrettyPrinterstack","ui":"<b>Cal.Utilities.PrettyPrinter.stack<\/b><br\/>[CALDoc] ","terminals":[{"name":"docs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.fillwords","name":"fillwords","type":"CalUtilitiesPrettyPrinterfillwords","ui":"<b>Cal.Utilities.PrettyPrinter.fillwords<\/b><br\/>[CALDoc] ","terminals":[{"name":"str","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.spaceOrLineSep","name":"spaceOrLineSep","type":"CalUtilitiesPrettyPrinterspaceOrLineSep","ui":"<b>Cal.Utilities.PrettyPrinter.spaceOrLineSep<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.pretty","name":"pretty","type":"CalUtilitiesPrettyPrinterpretty","ui":"<b>Cal.Utilities.PrettyPrinter.pretty<\/b><br\/>[CALDoc] ","terminals":[{"name":"maxWidth","input":"text"},{"name":"doc","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.layout","name":"layout","type":"CalUtilitiesPrettyPrinterlayout","ui":"<b>Cal.Utilities.PrettyPrinter.layout<\/b><br\/>[CALDoc] Converts a text document to a string.","terminals":[{"name":"doc","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.appendDocs","name":"appendDocs","type":"CalUtilitiesPrettyPrinterappendDocs","ui":"<b>Cal.Utilities.PrettyPrinter.appendDocs<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.concatDocs","name":"concatDocs","type":"CalUtilitiesPrettyPrinterconcatDocs","ui":"<b>Cal.Utilities.PrettyPrinter.concatDocs<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.multilineText","name":"multilineText","type":"CalUtilitiesPrettyPrintermultilineText","ui":"<b>Cal.Utilities.PrettyPrinter.multilineText<\/b><br\/>[CALDoc] Breaks the text into multiple lines (based on the <code>'\\n'<\/code> char) and creates a document item for each line.","terminals":[{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.fillSeparatedList","name":"fillSeparatedList","type":"CalUtilitiesPrettyPrinterfillSeparatedList","ui":"<b>Cal.Utilities.PrettyPrinter.fillSeparatedList<\/b><br\/>[CALDoc] Similar to fill, except that the specified separator text will be inserted between the items.\n","terminals":[{"name":"docs","input":"text"},{"name":"separator","input":"text"},{"name":"trailingSeparator","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.fill","name":"fill","type":"CalUtilitiesPrettyPrinterfill","ui":"<b>Cal.Utilities.PrettyPrinter.fill<\/b><br\/>[CALDoc] ","terminals":[{"name":"docs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.lineSep","name":"lineSep","type":"CalUtilitiesPrettyPrinterlineSep","ui":"<b>Cal.Utilities.PrettyPrinter.lineSep<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.spaceSep","name":"spaceSep","type":"CalUtilitiesPrettyPrinterspaceSep","ui":"<b>Cal.Utilities.PrettyPrinter.spaceSep<\/b><br\/>[CALDoc] ","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.singleSpace","name":"singleSpace","type":"CalUtilitiesPrettyPrintersingleSpace","ui":"<b>Cal.Utilities.PrettyPrinter.singleSpace<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.folddoc","name":"folddoc","type":"CalUtilitiesPrettyPrinterfolddoc","ui":"<b>Cal.Utilities.PrettyPrinter.folddoc<\/b><br\/>[CALDoc] ","terminals":[{"name":"docs","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.bracket","name":"bracket","type":"CalUtilitiesPrettyPrinterbracket","ui":"<b>Cal.Utilities.PrettyPrinter.bracket<\/b><br\/>[CALDoc] ","terminals":[{"name":"l","input":"text"},{"name":"x","input":"text"},{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.Line","name":"Line","type":"CalUtilitiesPrettyPrinterLine","ui":"<b>Cal.Utilities.PrettyPrinter.Line<\/b><br\/>[CALDoc] ","terminals":[{"name":"doc","input":"text"},{"name":"indent","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.NEST","name":"NEST","type":"CalUtilitiesPrettyPrinterNEST","ui":"<b>Cal.Utilities.PrettyPrinter.NEST<\/b><br\/>[CALDoc] ","terminals":[{"name":"doc","input":"text"},{"name":"indent","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.Text","name":"Text","type":"CalUtilitiesPrettyPrinterText","ui":"<b>Cal.Utilities.PrettyPrinter.Text<\/b><br\/>[CALDoc] ","terminals":[{"name":"doc","input":"text"},{"name":"strValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.group","name":"group","type":"CalUtilitiesPrettyPrintergroup","ui":"<b>Cal.Utilities.PrettyPrinter.group<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.flatten","name":"flatten","type":"CalUtilitiesPrettyPrinterflatten","ui":"<b>Cal.Utilities.PrettyPrinter.flatten<\/b><br\/>[CALDoc] ","terminals":[{"name":"doc","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.isEmptyDoc","name":"isEmptyDoc","type":"CalUtilitiesPrettyPrinterisEmptyDoc","ui":"<b>Cal.Utilities.PrettyPrinter.isEmptyDoc<\/b><br\/>[CALDoc] ","terminals":[{"name":"doc","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.best","name":"best","type":"CalUtilitiesPrettyPrinterbest","ui":"<b>Cal.Utilities.PrettyPrinter.best<\/b><br\/>[CALDoc] ","terminals":[{"name":"x","input":"text"},{"name":"k","input":"text"},{"name":"w","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.be","name":"be","type":"CalUtilitiesPrettyPrinterbe","ui":"<b>Cal.Utilities.PrettyPrinter.be<\/b><br\/>[CALDoc] ","terminals":[{"name":"indentDocs","input":"text"},{"name":"k","input":"text"},{"name":"w","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.better","name":"better","type":"CalUtilitiesPrettyPrinterbetter","ui":"<b>Cal.Utilities.PrettyPrinter.better<\/b><br\/>[CALDoc] ","terminals":[{"name":"k","input":"text"},{"name":"w","input":"text"},{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.fits","name":"fits","type":"CalUtilitiesPrettyPrinterfits","ui":"<b>Cal.Utilities.PrettyPrinter.fits<\/b><br\/>[CALDoc] ","terminals":[{"name":"w","input":"text"},{"name":"doc","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.emptyDoc","name":"emptyDoc","type":"CalUtilitiesPrettyPrinteremptyDoc","ui":"<b>Cal.Utilities.PrettyPrinter.emptyDoc<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.Nil","name":"Nil","type":"CalUtilitiesPrettyPrinterNil","ui":"<b>Cal.Utilities.PrettyPrinter.Nil<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.APPEND","name":"APPEND","type":"CalUtilitiesPrettyPrinterAPPEND","ui":"<b>Cal.Utilities.PrettyPrinter.APPEND<\/b><br\/>[CALDoc] ","terminals":[{"name":"doc1","input":"text"},{"name":"doc2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.PrettyPrinter.UNION","name":"UNION","type":"CalUtilitiesPrettyPrinterUNION","ui":"<b>Cal.Utilities.PrettyPrinter.UNION<\/b><br\/>[CALDoc] ","terminals":[{"name":"doc1","input":"text"},{"name":"doc2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.PrettyPrinter"]},{"description":"Cal.Utilities.Range.showRange","name":"showRange","type":"CalUtilitiesRangeshowRange","ui":"<b>Cal.Utilities.Range.showRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"range","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.outputRangeToJObject","name":"outputRangeToJObject","type":"CalUtilitiesRangeoutputRangeToJObject","ui":"<b>Cal.Utilities.Range.outputRangeToJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"range","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.inputRangeFromJObject","name":"inputRangeFromJObject","type":"CalUtilitiesRangeinputRangeFromJObject","ui":"<b>Cal.Utilities.Range.inputRangeFromJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"range","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.inputRange","name":"inputRange","type":"CalUtilitiesRangeinputRange","ui":"<b>Cal.Utilities.Range.inputRange<\/b><br\/>[CALDoc] Converts a <code>JRange<\/code> value into a <code>Range<\/code> value.","terminals":[{"name":"range","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.displayDoubleRangeList","name":"displayDoubleRangeList","type":"CalUtilitiesRangedisplayDoubleRangeList","ui":"<b>Cal.Utilities.Range.displayDoubleRangeList<\/b><br\/>[CALDoc] Displays string version of double lists.","terminals":[{"name":"l","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeRangeFromEndpoints","name":"makeRangeFromEndpoints","type":"CalUtilitiesRangemakeRangeFromEndpoints","ui":"<b>Cal.Utilities.Range.makeRangeFromEndpoints<\/b><br\/>[CALDoc] Constructs a <code>Range<\/code> by describing its endpoints as <code>Maybe<\/code> pairs.\n","terminals":[{"name":"leftEndpoint","input":"text"},{"name":"rightEndpoint","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.intersectRanges","name":"intersectRanges","type":"CalUtilitiesRangeintersectRanges","ui":"<b>Cal.Utilities.Range.intersectRanges<\/b><br\/>[CALDoc] Intersects the ranges in the specified list.","terminals":[{"name":"rl","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.stripRedundantRanges","name":"stripRedundantRanges","type":"CalUtilitiesRangestripRedundantRanges","ui":"<b>Cal.Utilities.Range.stripRedundantRanges<\/b><br\/>[CALDoc] Strips all redundant ranges from the specified list.","terminals":[{"name":"rl","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.inputRangeWith","name":"inputRangeWith","type":"CalUtilitiesRangeinputRangeWith","ui":"<b>Cal.Utilities.Range.inputRangeWith<\/b><br\/>[CALDoc] Converts a <code>JRange<\/code> value into a <code>Range<\/code> value, with an endpoint transformation function.","terminals":[{"name":"arg1Function","input":"text"},{"name":"range","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.mapRanges","name":"mapRanges","type":"CalUtilitiesRangemapRanges","ui":"<b>Cal.Utilities.Range.mapRanges<\/b><br\/>[CALDoc] Applies the specified function to the endpoints of each ranges in the list.","terminals":[{"name":"rl","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.mapRange","name":"mapRange","type":"CalUtilitiesRangemapRange","ui":"<b>Cal.Utilities.Range.mapRange<\/b><br\/>[CALDoc] Applies the specified function to the endpoints of the range.","terminals":[{"name":"r","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.outputRange","name":"outputRange","type":"CalUtilitiesRangeoutputRange","ui":"<b>Cal.Utilities.Range.outputRange<\/b><br\/>[CALDoc] Converts a <code>Range<\/code> value into a <code>JRange<\/code> value.","terminals":[{"name":"range","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.outputRangeWith","name":"outputRangeWith","type":"CalUtilitiesRangeoutputRangeWith","ui":"<b>Cal.Utilities.Range.outputRangeWith<\/b><br\/>[CALDoc] Converts a <code>Range<\/code> value into a <code>JRange<\/code> value, with an endpoint transformation function.","terminals":[{"name":"arg1Function","input":"text"},{"name":"_INPUT","input":"text"},{"name":"range","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.testRangeModule","name":"testRangeModule","type":"CalUtilitiesRangetestRangeModule","ui":"<b>Cal.Utilities.Range.testRangeModule<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.showRangeExamples","name":"showRangeExamples","type":"CalUtilitiesRangeshowRangeExamples","ui":"<b>Cal.Utilities.Range.showRangeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeEntireRange","name":"makeEntireRange","type":"CalUtilitiesRangemakeEntireRange","ui":"<b>Cal.Utilities.Range.makeEntireRange<\/b><br\/>[CALDoc] Constructs a range including the entire space.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.complementRanges","name":"complementRanges","type":"CalUtilitiesRangecomplementRanges","ui":"<b>Cal.Utilities.Range.complementRanges<\/b><br\/>[CALDoc] Complements the specified list of ranges.\n","terminals":[{"name":"rl","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.displayMaybeDoubleRange","name":"displayMaybeDoubleRange","type":"CalUtilitiesRangedisplayMaybeDoubleRange","ui":"<b>Cal.Utilities.Range.displayMaybeDoubleRange<\/b><br\/>[CALDoc] Displays text version of a range of <code>Maybe<\/code>.","terminals":[{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.displayDoubleRange","name":"displayDoubleRange","type":"CalUtilitiesRangedisplayDoubleRange","ui":"<b>Cal.Utilities.Range.displayDoubleRange<\/b><br\/>[CALDoc] Displays text version of a range of <code>Double<\/code>.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.symmetricDifferenceRanges","name":"symmetricDifferenceRanges","type":"CalUtilitiesRangesymmetricDifferenceRanges","ui":"<b>Cal.Utilities.Range.symmetricDifferenceRanges<\/b><br\/>[CALDoc] Computes the symmetric difference between the two range lists.","terminals":[{"name":"rl2","input":"text"},{"name":"rl1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.differenceRanges","name":"differenceRanges","type":"CalUtilitiesRangedifferenceRanges","ui":"<b>Cal.Utilities.Range.differenceRanges<\/b><br\/>[CALDoc] Returns the difference ranges resulting from of subtracting the second range list from the first.","terminals":[{"name":"rl2","input":"text"},{"name":"rl1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.differenceRightRange","name":"differenceRightRange","type":"CalUtilitiesRangedifferenceRightRange","ui":"<b>Cal.Utilities.Range.differenceRightRange<\/b><br\/>[CALDoc] Calculates the range on the left side of the difference between range 1 and the intersection\nof range 1 and range 2","terminals":[{"name":"r1","input":"text"},{"name":"ir2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeIsGreaterThanEqualsRange","name":"makeIsGreaterThanEqualsRange","type":"CalUtilitiesRangemakeIsGreaterThanEqualsRange","ui":"<b>Cal.Utilities.Range.makeIsGreaterThanEqualsRange<\/b><br\/>[CALDoc] Constructs a range strictly greater than <code>x<\/code>.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeIsGreaterThanRange","name":"makeIsGreaterThanRange","type":"CalUtilitiesRangemakeIsGreaterThanRange","ui":"<b>Cal.Utilities.Range.makeIsGreaterThanRange<\/b><br\/>[CALDoc] Constructs a range strictly less than <code>x<\/code>","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.differenceLeftRange","name":"differenceLeftRange","type":"CalUtilitiesRangedifferenceLeftRange","ui":"<b>Cal.Utilities.Range.differenceLeftRange<\/b><br\/>[CALDoc] Calculates range on the left side of the difference between range1 and the intersection\nof range 1 and range 2","terminals":[{"name":"r1","input":"text"},{"name":"ir2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeIsLessThanEqualsRange","name":"makeIsLessThanEqualsRange","type":"CalUtilitiesRangemakeIsLessThanEqualsRange","ui":"<b>Cal.Utilities.Range.makeIsLessThanEqualsRange<\/b><br\/>[CALDoc] Constructs a range less than or equals to <code>x<\/code>.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeIsLessThanRange","name":"makeIsLessThanRange","type":"CalUtilitiesRangemakeIsLessThanRange","ui":"<b>Cal.Utilities.Range.makeIsLessThanRange<\/b><br\/>[CALDoc] Constructs a range strictly less than <code>x<\/code>.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeBetweenIncludingRightEndpointRange","name":"makeBetweenIncludingRightEndpointRange","type":"CalUtilitiesRangemakeBetweenIncludingRightEndpointRange","ui":"<b>Cal.Utilities.Range.makeBetweenIncludingRightEndpointRange<\/b><br\/>[CALDoc] Constructs a range between two endpoings, including the right.","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeBetweenExcludingEndpointsRange","name":"makeBetweenExcludingEndpointsRange","type":"CalUtilitiesRangemakeBetweenExcludingEndpointsRange","ui":"<b>Cal.Utilities.Range.makeBetweenExcludingEndpointsRange<\/b><br\/>[CALDoc] Constructs a range between two endpoings, not including either.","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeBetweenIncludingEndpointsRange","name":"makeBetweenIncludingEndpointsRange","type":"CalUtilitiesRangemakeBetweenIncludingEndpointsRange","ui":"<b>Cal.Utilities.Range.makeBetweenIncludingEndpointsRange<\/b><br\/>[CALDoc] Constructs a range between two endpoints, including both.","terminals":[{"name":"y","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.makeBetweenIncludingLeftEndpointRange","name":"makeBetweenIncludingLeftEndpointRange","type":"CalUtilitiesRangemakeBetweenIncludingLeftEndpointRange","ui":"<b>Cal.Utilities.Range.makeBetweenIncludingLeftEndpointRange<\/b><br\/>[CALDoc] Constructs a range between two endpoints, including the left.","terminals":[{"name":"x","input":"text"},{"name":"y","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.intersectTwoRanges","name":"intersectTwoRanges","type":"CalUtilitiesRangeintersectTwoRanges","ui":"<b>Cal.Utilities.Range.intersectTwoRanges<\/b><br\/>[CALDoc] Intersects two ranges.","terminals":[{"name":"r2","input":"text"},{"name":"r1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.afterRange","name":"afterRange","type":"CalUtilitiesRangeafterRange","ui":"<b>Cal.Utilities.Range.afterRange<\/b><br\/>[CALDoc] Indicates whether the first range succeeds the second.","terminals":[{"name":"r2","input":"text"},{"name":"r1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.beforeRange","name":"beforeRange","type":"CalUtilitiesRangebeforeRange","ui":"<b>Cal.Utilities.Range.beforeRange<\/b><br\/>[CALDoc] Indicates whether the first range preceeds the second.","terminals":[{"name":"r2","input":"text"},{"name":"r1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.includesLeftEndpoint","name":"includesLeftEndpoint","type":"CalUtilitiesRangeincludesLeftEndpoint","ui":"<b>Cal.Utilities.Range.includesLeftEndpoint<\/b><br\/>[CALDoc] Returns whether the range includes its left endpoint.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.includesRightEndpoint","name":"includesRightEndpoint","type":"CalUtilitiesRangeincludesRightEndpoint","ui":"<b>Cal.Utilities.Range.includesRightEndpoint<\/b><br\/>[CALDoc] Returns whether the range includes a right endpoint.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.isRedundantRange","name":"isRedundantRange","type":"CalUtilitiesRangeisRedundantRange","ui":"<b>Cal.Utilities.Range.isRedundantRange<\/b><br\/>[CALDoc] Returns whether the range is algebraically of the sort that it can never\ncontain a data value e.g. <code>BetweenExcludingEndpoints 2 2<\/code>.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.leftEndpoint","name":"leftEndpoint","type":"CalUtilitiesRangeleftEndpoint","ui":"<b>Cal.Utilities.Range.leftEndpoint<\/b><br\/>[CALDoc] Returns the left endpoint of the range.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.rightEndpoint","name":"rightEndpoint","type":"CalUtilitiesRangerightEndpoint","ui":"<b>Cal.Utilities.Range.rightEndpoint<\/b><br\/>[CALDoc] Returns the right endpoint of the range.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.hasLeftEndpoint","name":"hasLeftEndpoint","type":"CalUtilitiesRangehasLeftEndpoint","ui":"<b>Cal.Utilities.Range.hasLeftEndpoint<\/b><br\/>[CALDoc] Returns whether the range has a left endpoint.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.hasRightEndpoint","name":"hasRightEndpoint","type":"CalUtilitiesRangehasRightEndpoint","ui":"<b>Cal.Utilities.Range.hasRightEndpoint<\/b><br\/>[CALDoc] Returns whether the range has a right endpoint.","terminals":[{"name":"r","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.unionRanges","name":"unionRanges","type":"CalUtilitiesRangeunionRanges","ui":"<b>Cal.Utilities.Range.unionRanges<\/b><br\/>[CALDoc] Unifies the two lists of ranges into a single list\nThe returned ranges will be ordered by increasing start time","terminals":[{"name":"rl2","input":"text"},{"name":"rl1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.consolidateRanges","name":"consolidateRanges","type":"CalUtilitiesRangeconsolidateRanges","ui":"<b>Cal.Utilities.Range.consolidateRanges<\/b><br\/>[CALDoc] Consolidate the specified ranges\nThe returned ranges will be ordered by increasing start time","terminals":[{"name":"rl","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.unionSingleRange","name":"unionSingleRange","type":"CalUtilitiesRangeunionSingleRange","ui":"<b>Cal.Utilities.Range.unionSingleRange<\/b><br\/>[CALDoc] Unifies the specified range with all ranges from the range list","terminals":[{"name":"r","input":"text"},{"name":"rl","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.unionTwoRanges","name":"unionTwoRanges","type":"CalUtilitiesRangeunionTwoRanges","ui":"<b>Cal.Utilities.Range.unionTwoRanges<\/b><br\/>[CALDoc] Unifies two ranges.","terminals":[{"name":"r1","input":"text"},{"name":"r2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.inRangeList","name":"inRangeList","type":"CalUtilitiesRangeinRangeList","ui":"<b>Cal.Utilities.Range.inRangeList<\/b><br\/>[CALDoc] Returns whether the specified value is contained in the list of ranges.","terminals":[{"name":"rl","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.inRange","name":"inRange","type":"CalUtilitiesRangeinRange","ui":"<b>Cal.Utilities.Range.inRange<\/b><br\/>[CALDoc] Returns whether the specified value falls within the range.","terminals":[{"name":"r","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_getLeftBound","name":"jRange_getLeftBound","type":"CalUtilitiesRangejRange_getLeftBound","ui":"<b>Cal.Utilities.Range.jRange_getLeftBound<\/b><br\/>[CALDoc] ","terminals":[{"name":"jRange","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_getRightBound","name":"jRange_getRightBound","type":"CalUtilitiesRangejRange_getRightBound","ui":"<b>Cal.Utilities.Range.jRange_getRightBound<\/b><br\/>[CALDoc] ","terminals":[{"name":"jRange","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_includesLeftBound","name":"jRange_includesLeftBound","type":"CalUtilitiesRangejRange_includesLeftBound","ui":"<b>Cal.Utilities.Range.jRange_includesLeftBound<\/b><br\/>[CALDoc] ","terminals":[{"name":"jRange","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_includesRightBound","name":"jRange_includesRightBound","type":"CalUtilitiesRangejRange_includesRightBound","ui":"<b>Cal.Utilities.Range.jRange_includesRightBound<\/b><br\/>[CALDoc] ","terminals":[{"name":"jRange","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_hasRightBound","name":"jRange_hasRightBound","type":"CalUtilitiesRangejRange_hasRightBound","ui":"<b>Cal.Utilities.Range.jRange_hasRightBound<\/b><br\/>[CALDoc] ","terminals":[{"name":"jRange","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_hasLeftBound","name":"jRange_hasLeftBound","type":"CalUtilitiesRangejRange_hasLeftBound","ui":"<b>Cal.Utilities.Range.jRange_hasLeftBound<\/b><br\/>[CALDoc] ","terminals":[{"name":"jRange","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_BetweenExcludingEndpoints","name":"jRange_new_BetweenExcludingEndpoints","type":"CalUtilitiesRangejRange_new_BetweenExcludingEndpoints","ui":"<b>Cal.Utilities.Range.jRange_new_BetweenExcludingEndpoints<\/b><br\/>[CALDoc] ","terminals":[{"name":"right","input":"text"},{"name":"left","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_BetweenIncludingRightEndpoint","name":"jRange_new_BetweenIncludingRightEndpoint","type":"CalUtilitiesRangejRange_new_BetweenIncludingRightEndpoint","ui":"<b>Cal.Utilities.Range.jRange_new_BetweenIncludingRightEndpoint<\/b><br\/>[CALDoc] ","terminals":[{"name":"left","input":"text"},{"name":"right","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_BetweenIncludingLeftEndpoint","name":"jRange_new_BetweenIncludingLeftEndpoint","type":"CalUtilitiesRangejRange_new_BetweenIncludingLeftEndpoint","ui":"<b>Cal.Utilities.Range.jRange_new_BetweenIncludingLeftEndpoint<\/b><br\/>[CALDoc] ","terminals":[{"name":"left","input":"text"},{"name":"right","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_BetweenIncludingEndpoints","name":"jRange_new_BetweenIncludingEndpoints","type":"CalUtilitiesRangejRange_new_BetweenIncludingEndpoints","ui":"<b>Cal.Utilities.Range.jRange_new_BetweenIncludingEndpoints<\/b><br\/>[CALDoc] ","terminals":[{"name":"left","input":"text"},{"name":"right","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_IsGreaterThanEquals","name":"jRange_new_IsGreaterThanEquals","type":"CalUtilitiesRangejRange_new_IsGreaterThanEquals","ui":"<b>Cal.Utilities.Range.jRange_new_IsGreaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"left","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_IsGreaterThan","name":"jRange_new_IsGreaterThan","type":"CalUtilitiesRangejRange_new_IsGreaterThan","ui":"<b>Cal.Utilities.Range.jRange_new_IsGreaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"left","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_IsLessThanEquals","name":"jRange_new_IsLessThanEquals","type":"CalUtilitiesRangejRange_new_IsLessThanEquals","ui":"<b>Cal.Utilities.Range.jRange_new_IsLessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"right","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_IsLessThan","name":"jRange_new_IsLessThan","type":"CalUtilitiesRangejRange_new_IsLessThan","ui":"<b>Cal.Utilities.Range.jRange_new_IsLessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"right","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.jRange_new_EntireRange","name":"jRange_new_EntireRange","type":"CalUtilitiesRangejRange_new_EntireRange","ui":"<b>Cal.Utilities.Range.jRange_new_EntireRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.IsLessThan","name":"IsLessThan","type":"CalUtilitiesRangeIsLessThan","ui":"<b>Cal.Utilities.Range.IsLessThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.IsLessThanEquals","name":"IsLessThanEquals","type":"CalUtilitiesRangeIsLessThanEquals","ui":"<b>Cal.Utilities.Range.IsLessThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.IsGreaterThanEquals","name":"IsGreaterThanEquals","type":"CalUtilitiesRangeIsGreaterThanEquals","ui":"<b>Cal.Utilities.Range.IsGreaterThanEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.IsGreaterThan","name":"IsGreaterThan","type":"CalUtilitiesRangeIsGreaterThan","ui":"<b>Cal.Utilities.Range.IsGreaterThan<\/b><br\/>[CALDoc] ","terminals":[{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.BetweenIncludingEndpoints","name":"BetweenIncludingEndpoints","type":"CalUtilitiesRangeBetweenIncludingEndpoints","ui":"<b>Cal.Utilities.Range.BetweenIncludingEndpoints<\/b><br\/>[CALDoc] ","terminals":[{"name":"u","input":"text"},{"name":"v","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.BetweenIncludingLeftEndpoint","name":"BetweenIncludingLeftEndpoint","type":"CalUtilitiesRangeBetweenIncludingLeftEndpoint","ui":"<b>Cal.Utilities.Range.BetweenIncludingLeftEndpoint<\/b><br\/>[CALDoc] ","terminals":[{"name":"v","input":"text"},{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.BetweenIncludingRightEndpoint","name":"BetweenIncludingRightEndpoint","type":"CalUtilitiesRangeBetweenIncludingRightEndpoint","ui":"<b>Cal.Utilities.Range.BetweenIncludingRightEndpoint<\/b><br\/>[CALDoc] ","terminals":[{"name":"v","input":"text"},{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.BetweenExcludingEndpoints","name":"BetweenExcludingEndpoints","type":"CalUtilitiesRangeBetweenExcludingEndpoints","ui":"<b>Cal.Utilities.Range.BetweenExcludingEndpoints<\/b><br\/>[CALDoc] ","terminals":[{"name":"v","input":"text"},{"name":"u","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Range.EntireRange","name":"EntireRange","type":"CalUtilitiesRangeEntireRange","ui":"<b>Cal.Utilities.Range.EntireRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Range"]},{"description":"Cal.Utilities.Summary.testSummaryModule","name":"testSummaryModule","type":"CalUtilitiesSummarytestSummaryModule","ui":"<b>Cal.Utilities.Summary.testSummaryModule<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.sumIgnoreNaNExamples","name":"sumIgnoreNaNExamples","type":"CalUtilitiesSummarysumIgnoreNaNExamples","ui":"<b>Cal.Utilities.Summary.sumIgnoreNaNExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.sumIgnoreNaN","name":"sumIgnoreNaN","type":"CalUtilitiesSummarysumIgnoreNaN","ui":"<b>Cal.Utilities.Summary.sumIgnoreNaN<\/b><br\/>[CALDoc] A custom version of <code>sum<\/code> that ignores NaN values.  ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.weightedAverageIgnoreNaNExamples","name":"weightedAverageIgnoreNaNExamples","type":"CalUtilitiesSummaryweightedAverageIgnoreNaNExamples","ui":"<b>Cal.Utilities.Summary.weightedAverageIgnoreNaNExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.weightedAverageIgnoreNaN","name":"weightedAverageIgnoreNaN","type":"CalUtilitiesSummaryweightedAverageIgnoreNaN","ui":"<b>Cal.Utilities.Summary.weightedAverageIgnoreNaN<\/b><br\/>[CALDoc] A custom version of <code>weightedAverage<\/code> that ignores NaN values.  ","terminals":[{"name":"weights","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.averageIgnoreNaNExamples","name":"averageIgnoreNaNExamples","type":"CalUtilitiesSummaryaverageIgnoreNaNExamples","ui":"<b>Cal.Utilities.Summary.averageIgnoreNaNExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.averageIgnoreNaN","name":"averageIgnoreNaN","type":"CalUtilitiesSummaryaverageIgnoreNaN","ui":"<b>Cal.Utilities.Summary.averageIgnoreNaN<\/b><br\/>[CALDoc] A custom version of <code>average<\/code> that ignores NaN values.  ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.countIgnoreNaNExamples","name":"countIgnoreNaNExamples","type":"CalUtilitiesSummarycountIgnoreNaNExamples","ui":"<b>Cal.Utilities.Summary.countIgnoreNaNExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.countIgnoreNaN","name":"countIgnoreNaN","type":"CalUtilitiesSummarycountIgnoreNaN","ui":"<b>Cal.Utilities.Summary.countIgnoreNaN<\/b><br\/>[CALDoc] Counts the number of non-NaN values in a list.  ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.maximumIgnoreNaNExamples","name":"maximumIgnoreNaNExamples","type":"CalUtilitiesSummarymaximumIgnoreNaNExamples","ui":"<b>Cal.Utilities.Summary.maximumIgnoreNaNExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.minimumIgnoreNaNExamples","name":"minimumIgnoreNaNExamples","type":"CalUtilitiesSummaryminimumIgnoreNaNExamples","ui":"<b>Cal.Utilities.Summary.minimumIgnoreNaNExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.minimumIgnoreNaN","name":"minimumIgnoreNaN","type":"CalUtilitiesSummaryminimumIgnoreNaN","ui":"<b>Cal.Utilities.Summary.minimumIgnoreNaN<\/b><br\/>[CALDoc] A custom version of <code>minimum<\/code> that ignores NaN values.  ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.covarianceExamples","name":"covarianceExamples","type":"CalUtilitiesSummarycovarianceExamples","ui":"<b>Cal.Utilities.Summary.covarianceExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.covariance","name":"covariance","type":"CalUtilitiesSummarycovariance","ui":"<b>Cal.Utilities.Summary.covariance<\/b><br\/>[CALDoc] Returns the covariance between lists <code>list1<\/code> and <code>list2<\/code>.  ","terminals":[{"name":"list1","input":"text"},{"name":"list2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.distinctCountExamples","name":"distinctCountExamples","type":"CalUtilitiesSummarydistinctCountExamples","ui":"<b>Cal.Utilities.Summary.distinctCountExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.distinctCount","name":"distinctCount","type":"CalUtilitiesSummarydistinctCount","ui":"<b>Cal.Utilities.Summary.distinctCount<\/b><br\/>[CALDoc] Returns the number of distinct values that occur in values.","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.nthMomentExamples","name":"nthMomentExamples","type":"CalUtilitiesSummarynthMomentExamples","ui":"<b>Cal.Utilities.Summary.nthMomentExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.nthMoment","name":"nthMoment","type":"CalUtilitiesSummarynthMoment","ui":"<b>Cal.Utilities.Summary.nthMoment<\/b><br\/>[CALDoc] Calculates the <code>n<\/code>th moment about the mean of values","terminals":[{"name":"n","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.correlationExamples","name":"correlationExamples","type":"CalUtilitiesSummarycorrelationExamples","ui":"<b>Cal.Utilities.Summary.correlationExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.testData2","name":"testData2","type":"CalUtilitiesSummarytestData2","ui":"<b>Cal.Utilities.Summary.testData2<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.testData1","name":"testData1","type":"CalUtilitiesSummarytestData1","ui":"<b>Cal.Utilities.Summary.testData1<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.correlation","name":"correlation","type":"CalUtilitiesSummarycorrelation","ui":"<b>Cal.Utilities.Summary.correlation<\/b><br\/>[CALDoc] Returns the correlation coefficient between lists <code>list1<\/code> and <code>list2<\/code>.  ","terminals":[{"name":"list2","input":"text"},{"name":"list1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.quartileExamples","name":"quartileExamples","type":"CalUtilitiesSummaryquartileExamples","ui":"<b>Cal.Utilities.Summary.quartileExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.medianExamples","name":"medianExamples","type":"CalUtilitiesSummarymedianExamples","ui":"<b>Cal.Utilities.Summary.medianExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.median","name":"median","type":"CalUtilitiesSummarymedian","ui":"<b>Cal.Utilities.Summary.median<\/b><br\/>[CALDoc] Returns the median of values, using interpolation when the number of values\nis even.  ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.percentileExamples","name":"percentileExamples","type":"CalUtilitiesSummarypercentileExamples","ui":"<b>Cal.Utilities.Summary.percentileExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.selectNthRankedElementExamples","name":"selectNthRankedElementExamples","type":"CalUtilitiesSummaryselectNthRankedElementExamples","ui":"<b>Cal.Utilities.Summary.selectNthRankedElementExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.modeExamples","name":"modeExamples","type":"CalUtilitiesSummarymodeExamples","ui":"<b>Cal.Utilities.Summary.modeExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.mode","name":"mode","type":"CalUtilitiesSummarymode","ui":"<b>Cal.Utilities.Summary.mode<\/b><br\/>[CALDoc] Mode returns <code>Just<\/code> (the most-frequently-occurring element) for a list of values,\nor Nothing for the empty list.  <code>mode xs<\/code> and <code>nthMostFrequent xs 1<\/code> are semantically\nequivalent, but mode is more efficient.","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.nthMostFrequentExamples","name":"nthMostFrequentExamples","type":"CalUtilitiesSummarynthMostFrequentExamples","ui":"<b>Cal.Utilities.Summary.nthMostFrequentExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.nthMostFrequent","name":"nthMostFrequent","type":"CalUtilitiesSummarynthMostFrequent","ui":"<b>Cal.Utilities.Summary.nthMostFrequent<\/b><br\/>[CALDoc] Returns <code>Just x<\/code>, where <code>x<\/code> is the value that occurs <code>number<\/code>-th most frequently\nin values.  ","terminals":[{"name":"number","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.sampleStandardDeviationExamples","name":"sampleStandardDeviationExamples","type":"CalUtilitiesSummarysampleStandardDeviationExamples","ui":"<b>Cal.Utilities.Summary.sampleStandardDeviationExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.sampleStandardDeviation","name":"sampleStandardDeviation","type":"CalUtilitiesSummarysampleStandardDeviation","ui":"<b>Cal.Utilities.Summary.sampleStandardDeviation<\/b><br\/>[CALDoc] ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.populationStandardDeviationExamples","name":"populationStandardDeviationExamples","type":"CalUtilitiesSummarypopulationStandardDeviationExamples","ui":"<b>Cal.Utilities.Summary.populationStandardDeviationExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.populationStandardDeviation","name":"populationStandardDeviation","type":"CalUtilitiesSummarypopulationStandardDeviation","ui":"<b>Cal.Utilities.Summary.populationStandardDeviation<\/b><br\/>[CALDoc] Finds the population standard deviation of a list of numbers by first\nconverting each element to a <code>Double<\/code> and then finding the standard deviation\nof the result.  ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.sampleVarianceExamples","name":"sampleVarianceExamples","type":"CalUtilitiesSummarysampleVarianceExamples","ui":"<b>Cal.Utilities.Summary.sampleVarianceExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.sampleVariance","name":"sampleVariance","type":"CalUtilitiesSummarysampleVariance","ui":"<b>Cal.Utilities.Summary.sampleVariance<\/b><br\/>[CALDoc] Calculates the sample variance of a list of numbers by first converting all of the\nelements to <code>Double<\/code>s and then finding the sample variance of the resulting set of values.\n","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.weightedAverageExamples","name":"weightedAverageExamples","type":"CalUtilitiesSummaryweightedAverageExamples","ui":"<b>Cal.Utilities.Summary.weightedAverageExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.weightedAverage","name":"weightedAverage","type":"CalUtilitiesSummaryweightedAverage","ui":"<b>Cal.Utilities.Summary.weightedAverage<\/b><br\/>[CALDoc] Returns the weighted average of values weighted by weights.\n","terminals":[{"name":"weights","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.averageExamples","name":"averageExamples","type":"CalUtilitiesSummaryaverageExamples","ui":"<b>Cal.Utilities.Summary.averageExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.average","name":"average","type":"CalUtilitiesSummaryaverage","ui":"<b>Cal.Utilities.Summary.average<\/b><br\/>[CALDoc] Computes the average value of a list by first converting all elements of the list to <code>Double<\/code>\nvalues and then averaging them. ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.quartile","name":"quartile","type":"CalUtilitiesSummaryquartile","ui":"<b>Cal.Utilities.Summary.quartile<\/b><br\/>[CALDoc] ","terminals":[{"name":"q","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.quartileEnumToPercentileRank","name":"quartileEnumToPercentileRank","type":"CalUtilitiesSummaryquartileEnumToPercentileRank","ui":"<b>Cal.Utilities.Summary.quartileEnumToPercentileRank<\/b><br\/>[CALDoc] ","terminals":[{"name":"q","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.percentile","name":"percentile","type":"CalUtilitiesSummarypercentile","ui":"<b>Cal.Utilities.Summary.percentile<\/b><br\/>[CALDoc] Returns the percentile for values using interpolation.\n","terminals":[{"name":"rank","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.selectNthRankedElement","name":"selectNthRankedElement","type":"CalUtilitiesSummaryselectNthRankedElement","ui":"<b>Cal.Utilities.Summary.selectNthRankedElement<\/b><br\/>[CALDoc] Returns the element that would be ranked <code>n<\/code> if values were sorted.\n<code>n<\/code> must be between 1 and <code>length values<\/code>, inclusive.","terminals":[{"name":"n","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.simpleSelect","name":"simpleSelect","type":"CalUtilitiesSummarysimpleSelect","ui":"<b>Cal.Utilities.Summary.simpleSelect<\/b><br\/>[CALDoc] A simpler but less-efficient version of <code>selectNthRankedElement<\/code>.\n","terminals":[{"name":"n","input":"text"},{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.maximumIgnoreNaN","name":"maximumIgnoreNaN","type":"CalUtilitiesSummarymaximumIgnoreNaN","ui":"<b>Cal.Utilities.Summary.maximumIgnoreNaN<\/b><br\/>[CALDoc] A custom version of <code>maximum<\/code> that ignores NaN values.  ","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.populationVarianceExamples","name":"populationVarianceExamples","type":"CalUtilitiesSummarypopulationVarianceExamples","ui":"<b>Cal.Utilities.Summary.populationVarianceExamples<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.populationVariance","name":"populationVariance","type":"CalUtilitiesSummarypopulationVariance","ui":"<b>Cal.Utilities.Summary.populationVariance<\/b><br\/>[CALDoc] Calculates the population variance of a list of numbers by first converting all of the\nelements to <code>Double<\/code>s and then finding the sample variance of the resulting set of values.\n","terminals":[{"name":"values","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.random","name":"random","type":"CalUtilitiesSummaryrandom","ui":"<b>Cal.Utilities.Summary.random<\/b><br\/>[CALDoc] <code>selectNthRankedElement<\/code> uses a randomized algorithm to attain average O(n) performance","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.Minimum_0thPercentile","name":"Minimum_0thPercentile","type":"CalUtilitiesSummaryMinimum_0thPercentile","ui":"<b>Cal.Utilities.Summary.Minimum_0thPercentile<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.FirstQuartile_25thPercentile","name":"FirstQuartile_25thPercentile","type":"CalUtilitiesSummaryFirstQuartile_25thPercentile","ui":"<b>Cal.Utilities.Summary.FirstQuartile_25thPercentile<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.Median_50thPercentile","name":"Median_50thPercentile","type":"CalUtilitiesSummaryMedian_50thPercentile","ui":"<b>Cal.Utilities.Summary.Median_50thPercentile<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.ThirdQuartile_75thPercentile","name":"ThirdQuartile_75thPercentile","type":"CalUtilitiesSummaryThirdQuartile_75thPercentile","ui":"<b>Cal.Utilities.Summary.ThirdQuartile_75thPercentile<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Utilities.Summary.Maximum_100thPercentile","name":"Maximum_100thPercentile","type":"CalUtilitiesSummaryMaximum_100thPercentile","ui":"<b>Cal.Utilities.Summary.Maximum_100thPercentile<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Summary"]},{"description":"Cal.Data.Sql.weekExpr","name":"weekExpr","type":"CalDataSqlweekExpr","ui":"<b>Cal.Data.Sql.weekExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.minExpr","name":"minExpr","type":"CalDataSqlminExpr","ui":"<b>Cal.Data.Sql.minExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.intersectionQuery2","name":"intersectionQuery2","type":"CalDataSqlintersectionQuery2","ui":"<b>Cal.Data.Sql.intersectionQuery2<\/b><br\/>[CALDoc] Produces a query which returns the intersection of the two specified queries.\n","terminals":[{"name":"query1","input":"text"},{"name":"compareExprs","input":"text"},{"name":"query2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeSafeSqlNames","name":"makeSafeSqlNames","type":"CalDataSqlmakeSafeSqlNames","ui":"<b>Cal.Data.Sql.makeSafeSqlNames<\/b><br\/>[CALDoc] Returns 'safe' versions of the specified names.\n","terminals":[{"name":"names","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"namesInUse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.notEqualsQueryTable","name":"notEqualsQueryTable","type":"CalDataSqlnotEqualsQueryTable","ui":"<b>Cal.Data.Sql.notEqualsQueryTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"table1","input":"text"},{"name":"table2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.absExpr","name":"absExpr","type":"CalDataSqlabsExpr","ui":"<b>Cal.Data.Sql.absExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeSqlBuilder","name":"makeSqlBuilder","type":"CalDataSqlmakeSqlBuilder","ui":"<b>Cal.Data.Sql.makeSqlBuilder<\/b><br\/>[CALDoc] Constructs a new SQL builder with the specified functions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isNullExpr","name":"isNullExpr","type":"CalDataSqlisNullExpr","ui":"<b>Cal.Data.Sql.isNullExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether an argument expression is null.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.lengthExpr","name":"lengthExpr","type":"CalDataSqllengthExpr","ui":"<b>Cal.Data.Sql.lengthExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.stringConstant","name":"stringConstant","type":"CalDataSqlstringConstant","ui":"<b>Cal.Data.Sql.stringConstant<\/b><br\/>[CALDoc] Construct a database expression for a string literal.","terminals":[{"name":"strValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isNullValue","name":"isNullValue","type":"CalDataSqlisNullValue","ui":"<b>Cal.Data.Sql.isNullValue<\/b><br\/>[CALDoc] Tests whether an untyped expression has the constant value of null.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.exprOperatorPrecedence","name":"exprOperatorPrecedence","type":"CalDataSqlexprOperatorPrecedence","ui":"<b>Cal.Data.Sql.exprOperatorPrecedence<\/b><br\/>[CALDoc] ","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.nullIfExpr","name":"nullIfExpr","type":"CalDataSqlnullIfExpr","ui":"<b>Cal.Data.Sql.nullIfExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.exprUsesBinaryFunction","name":"exprUsesBinaryFunction","type":"CalDataSqlexprUsesBinaryFunction","ui":"<b>Cal.Data.Sql.exprUsesBinaryFunction<\/b><br\/>[CALDoc] Use it to check if the expression's part uses binary function.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.expressionText","name":"expressionText","type":"CalDataSqlexpressionText","ui":"<b>Cal.Data.Sql.expressionText<\/b><br\/>[CALDoc] Builds the query text for a single expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.distinctAvgExpr","name":"distinctAvgExpr","type":"CalDataSqldistinctAvgExpr","ui":"<b>Cal.Data.Sql.distinctAvgExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.dayNameExpr","name":"dayNameExpr","type":"CalDataSqldayNameExpr","ui":"<b>Cal.Data.Sql.dayNameExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ltrimExpr","name":"ltrimExpr","type":"CalDataSqlltrimExpr","ui":"<b>Cal.Data.Sql.ltrimExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.stringParameter","name":"stringParameter","type":"CalDataSqlstringParameter","ui":"<b>Cal.Data.Sql.stringParameter<\/b><br\/>[CALDoc] Constructs an string expression for a database parameter.\n","terminals":[{"name":"maybeParamName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.stdDevPExpr","name":"stdDevPExpr","type":"CalDataSqlstdDevPExpr","ui":"<b>Cal.Data.Sql.stdDevPExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeOpaqueSubQueryTable","name":"makeOpaqueSubQueryTable","type":"CalDataSqlmakeOpaqueSubQueryTable","ui":"<b>Cal.Data.Sql.makeOpaqueSubQueryTable<\/b><br\/>[CALDoc] Constructs a subquery table using the specified query text and alias.\n","terminals":[{"name":"tableAlias","input":"text"},{"name":"subqueryText","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeCreateViewStatement","name":"makeCreateViewStatement","type":"CalDataSqlmakeCreateViewStatement","ui":"<b>Cal.Data.Sql.makeCreateViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.integerParameter","name":"integerParameter","type":"CalDataSqlintegerParameter","ui":"<b>Cal.Data.Sql.integerParameter<\/b><br\/>[CALDoc] Constructs an integer expression for a database parameter.\n","terminals":[{"name":"maybeParamName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.powerExpr","name":"powerExpr","type":"CalDataSqlpowerExpr","ui":"<b>Cal.Data.Sql.powerExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeInsertValuesStatement","name":"makeInsertValuesStatement","type":"CalDataSqlmakeInsertValuesStatement","ui":"<b>Cal.Data.Sql.makeInsertValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"rowValues","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputJoinNodeAsJObject","name":"outputJoinNodeAsJObject","type":"CalDataSqloutputJoinNodeAsJObject","ui":"<b>Cal.Data.Sql.outputJoinNodeAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"joinNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.lcaseExpr","name":"lcaseExpr","type":"CalDataSqllcaseExpr","ui":"<b>Cal.Data.Sql.lcaseExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.varianceExpr","name":"varianceExpr","type":"CalDataSqlvarianceExpr","ui":"<b>Cal.Data.Sql.varianceExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.truncateExpr","name":"truncateExpr","type":"CalDataSqltruncateExpr","ui":"<b>Cal.Data.Sql.truncateExpr<\/b><br\/>[CALDoc] TODO: is this the correct signature?","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.rightExpr","name":"rightExpr","type":"CalDataSqlrightExpr","ui":"<b>Cal.Data.Sql.rightExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.fieldDescriptionText","name":"fieldDescriptionText","type":"CalDataSqlfieldDescriptionText","ui":"<b>Cal.Data.Sql.fieldDescriptionText<\/b><br\/>[CALDoc] Generates the text for a table field description.","terminals":[{"name":"builder","input":"text"},{"name":"fieldDesc","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.degreesExpr","name":"degreesExpr","type":"CalDataSqldegreesExpr","ui":"<b>Cal.Data.Sql.degreesExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeUniqueNames","name":"makeUniqueNames","type":"CalDataSqlmakeUniqueNames","ui":"<b>Cal.Data.Sql.makeUniqueNames<\/b><br\/>[CALDoc] Returns an updated version of the name list where each name is unique.\n","terminals":[{"name":"names","input":"text"},{"name":"namesAlreadyInUse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.restrictionExpressions","name":"restrictionExpressions","type":"CalDataSqlrestrictionExpressions","ui":"<b>Cal.Data.Sql.restrictionExpressions<\/b><br\/>[CALDoc] Returns the restriction expressions (including group restrictions) for the\nquery.\n","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.sumExpr","name":"sumExpr","type":"CalDataSqlsumExpr","ui":"<b>Cal.Data.Sql.sumExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.queryText","name":"queryText","type":"CalDataSqlqueryText","ui":"<b>Cal.Data.Sql.queryText<\/b><br\/>[CALDoc] Generates the SQL text for the specified database query.","terminals":[{"name":"query","input":"text"},{"name":"forDisplay","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ceilingExpr","name":"ceilingExpr","type":"CalDataSqlceilingExpr","ui":"<b>Cal.Data.Sql.ceilingExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.dayOfYearExpr","name":"dayOfYearExpr","type":"CalDataSqldayOfYearExpr","ui":"<b>Cal.Data.Sql.dayOfYearExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.floorExpr","name":"floorExpr","type":"CalDataSqlfloorExpr","ui":"<b>Cal.Data.Sql.floorExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isNumberConstExpr","name":"isNumberConstExpr","type":"CalDataSqlisNumberConstExpr","ui":"<b>Cal.Data.Sql.isNumberConstExpr<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the expression represents a constant containing a number value.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.hourExpr","name":"hourExpr","type":"CalDataSqlhourExpr","ui":"<b>Cal.Data.Sql.hourExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputQueryOptionAsJObject","name":"outputQueryOptionAsJObject","type":"CalDataSqloutputQueryOptionAsJObject","ui":"<b>Cal.Data.Sql.outputQueryOptionAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"queryOption","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.searchedCaseExpr","name":"searchedCaseExpr","type":"CalDataSqlsearchedCaseExpr","ui":"<b>Cal.Data.Sql.searchedCaseExpr<\/b><br\/>[CALDoc] Construct a database expression for a searched case statement.\n","terminals":[{"name":"elseValue","input":"text"},{"name":"whenConditionAndResults","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.spaceExpr","name":"spaceExpr","type":"CalDataSqlspaceExpr","ui":"<b>Cal.Data.Sql.spaceExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"nSpaces","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.showTypedExpr","name":"showTypedExpr","type":"CalDataSqlshowTypedExpr","ui":"<b>Cal.Data.Sql.showTypedExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"typedExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeInsertQueryValuesStatement","name":"makeInsertQueryValuesStatement","type":"CalDataSqlmakeInsertQueryValuesStatement","ui":"<b>Cal.Data.Sql.makeInsertQueryValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"insertQuery","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getBooleanValueFromConstExpr","name":"getBooleanValueFromConstExpr","type":"CalDataSqlgetBooleanValueFromConstExpr","ui":"<b>Cal.Data.Sql.getBooleanValueFromConstExpr<\/b><br\/>[CALDoc] Returns the boolean value from a constant expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.leftExpr","name":"leftExpr","type":"CalDataSqlleftExpr","ui":"<b>Cal.Data.Sql.leftExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.timeField","name":"timeField","type":"CalDataSqltimeField","ui":"<b>Cal.Data.Sql.timeField<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.booleanConstant","name":"booleanConstant","type":"CalDataSqlbooleanConstant","ui":"<b>Cal.Data.Sql.booleanConstant<\/b><br\/>[CALDoc] Construct a database expression for a Boolean value.","terminals":[{"name":"boolValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildTableAndAliasText","name":"buildTableAndAliasText","type":"CalDataSqlbuildTableAndAliasText","ui":"<b>Cal.Data.Sql.buildTableAndAliasText<\/b><br\/>[CALDoc] Builds a table name and optional table alias.","terminals":[{"name":"sqlBuilder","input":"text"},{"name":"queryTable","input":"text"},{"name":"builderState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.order","name":"order","type":"CalDataSqlorder","ui":"<b>Cal.Data.Sql.order<\/b><br\/>[CALDoc] Adds sorting on the specified expression.","terminals":[{"name":"sortAscending","input":"text"},{"name":"query","input":"text"},{"name":"sortExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.showJoinNode","name":"showJoinNode","type":"CalDataSqlshowJoinNode","ui":"<b>Cal.Data.Sql.showJoinNode<\/b><br\/>[CALDoc] ","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getParameterName","name":"getParameterName","type":"CalDataSqlgetParameterName","ui":"<b>Cal.Data.Sql.getParameterName<\/b><br\/>[CALDoc] Returns the name of a named parameter.\n","terminals":[{"name":"param","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getStringValueFromConstExpr","name":"getStringValueFromConstExpr","type":"CalDataSqlgetStringValueFromConstExpr","ui":"<b>Cal.Data.Sql.getStringValueFromConstExpr<\/b><br\/>[CALDoc] Returns the string value from a constant expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.monthNameExpr","name":"monthNameExpr","type":"CalDataSqlmonthNameExpr","ui":"<b>Cal.Data.Sql.monthNameExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.fieldTypeText","name":"fieldTypeText","type":"CalDataSqlfieldTypeText","ui":"<b>Cal.Data.Sql.fieldTypeText<\/b><br\/>[CALDoc] Generates the text for a field data type.","terminals":[{"name":"builder","input":"text"},{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.cotExpr","name":"cotExpr","type":"CalDataSqlcotExpr","ui":"<b>Cal.Data.Sql.cotExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectGroupAndOrder","name":"projectGroupAndOrder","type":"CalDataSqlprojectGroupAndOrder","ui":"<b>Cal.Data.Sql.projectGroupAndOrder<\/b><br\/>[CALDoc] Projects the specified expressions from the query, and group and order (ASC) on the expressions.","terminals":[{"name":"exprs","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.rtrimExpr","name":"rtrimExpr","type":"CalDataSqlrtrimExpr","ui":"<b>Cal.Data.Sql.rtrimExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.unionQuery","name":"unionQuery","type":"CalDataSqlunionQuery","ui":"<b>Cal.Data.Sql.unionQuery<\/b><br\/>[CALDoc] Combines the 2 queries into a Union query.","terminals":[{"name":"unionAll","input":"text"},{"name":"query1","input":"text"},{"name":"query2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeDropViewStatement","name":"makeDropViewStatement","type":"CalDataSqlmakeDropViewStatement","ui":"<b>Cal.Data.Sql.makeDropViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isBooleanConstExpr","name":"isBooleanConstExpr","type":"CalDataSqlisBooleanConstExpr","ui":"<b>Cal.Data.Sql.isBooleanConstExpr<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the expression represents a constant containing a boolean value.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isOperatorExpr","name":"isOperatorExpr","type":"CalDataSqlisOperatorExpr","ui":"<b>Cal.Data.Sql.isOperatorExpr<\/b><br\/>[CALDoc] Returns whether the expression represents an operator applied to one or more\narguments.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isOperator","name":"isOperator","type":"CalDataSqlisOperator","ui":"<b>Cal.Data.Sql.isOperator<\/b><br\/>[CALDoc] Returns whether the function is really an operator (in-fix).","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeDropTableStatement","name":"makeDropTableStatement","type":"CalDataSqlmakeDropTableStatement","ui":"<b>Cal.Data.Sql.makeDropTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.monthExpr","name":"monthExpr","type":"CalDataSqlmonthExpr","ui":"<b>Cal.Data.Sql.monthExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.countAllExpr","name":"countAllExpr","type":"CalDataSqlcountAllExpr","ui":"<b>Cal.Data.Sql.countAllExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.addJoins","name":"addJoins","type":"CalDataSqladdJoins","ui":"<b>Cal.Data.Sql.addJoins<\/b><br\/>[CALDoc] Adds the specified join nodes to the query.","terminals":[{"name":"query","input":"text"},{"name":"newJoins","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.timeParameter","name":"timeParameter","type":"CalDataSqltimeParameter","ui":"<b>Cal.Data.Sql.timeParameter<\/b><br\/>[CALDoc] Constructs an time expression for a database parameter.\n","terminals":[{"name":"maybeParamName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.expExpr","name":"expExpr","type":"CalDataSqlexpExpr","ui":"<b>Cal.Data.Sql.expExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.queryTextDocument","name":"queryTextDocument","type":"CalDataSqlqueryTextDocument","ui":"<b>Cal.Data.Sql.queryTextDocument<\/b><br\/>[CALDoc] Generates the SQL text document for the specified database query.","terminals":[{"name":"builder","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.likeExpr","name":"likeExpr","type":"CalDataSqllikeExpr","ui":"<b>Cal.Data.Sql.likeExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether the first string operand expression matches \nthe pattern of the second operand expression.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modulusExpr","name":"modulusExpr","type":"CalDataSqlmodulusExpr","ui":"<b>Cal.Data.Sql.modulusExpr<\/b><br\/>[CALDoc] Constructs a database expression to return the modulus of two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeInsertValuesByColumnStatement","name":"makeInsertValuesByColumnStatement","type":"CalDataSqlmakeInsertValuesByColumnStatement","ui":"<b>Cal.Data.Sql.makeInsertValuesByColumnStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"rowValues","input":"text"},{"name":"tableRef","input":"text"},{"name":"destColumns","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.insertExpr","name":"insertExpr","type":"CalDataSqlinsertExpr","ui":"<b>Cal.Data.Sql.insertExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"length","input":"text"},{"name":"insertStr","input":"text"},{"name":"stringExpr","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectColumnWithAlias","name":"projectColumnWithAlias","type":"CalDataSqlprojectColumnWithAlias","ui":"<b>Cal.Data.Sql.projectColumnWithAlias<\/b><br\/>[CALDoc] Adds the specified expression as a result column in the query.","terminals":[{"name":"newColumn","input":"text"},{"name":"query","input":"text"},{"name":"columnAlias","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.sqrtExpr","name":"sqrtExpr","type":"CalDataSqlsqrtExpr","ui":"<b>Cal.Data.Sql.sqrtExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.queryOptions","name":"queryOptions","type":"CalDataSqlqueryOptions","ui":"<b>Cal.Data.Sql.queryOptions<\/b><br\/>[CALDoc] Returns the query options.\n","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.sinExpr","name":"sinExpr","type":"CalDataSqlsinExpr","ui":"<b>Cal.Data.Sql.sinExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getListFromListExpr","name":"getListFromListExpr","type":"CalDataSqlgetListFromListExpr","ui":"<b>Cal.Data.Sql.getListFromListExpr<\/b><br\/>[CALDoc] Returns the value expressions from a list expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeInsertQueryValuesByColumnStatement","name":"makeInsertQueryValuesByColumnStatement","type":"CalDataSqlmakeInsertQueryValuesByColumnStatement","ui":"<b>Cal.Data.Sql.makeInsertQueryValuesByColumnStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"destColumns","input":"text"},{"name":"tableRef","input":"text"},{"name":"insertQuery","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getFieldNameFromQueryFieldExpr","name":"getFieldNameFromQueryFieldExpr","type":"CalDataSqlgetFieldNameFromQueryFieldExpr","ui":"<b>Cal.Data.Sql.getFieldNameFromQueryFieldExpr<\/b><br\/>[CALDoc] Returns the query table from a query field expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.negateExpr","name":"negateExpr","type":"CalDataSqlnegateExpr","ui":"<b>Cal.Data.Sql.negateExpr<\/b><br\/>[CALDoc] Constructs a database expression for the negation of the numeric argument expression.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.untypedUnaryExpr","name":"untypedUnaryExpr","type":"CalDataSqluntypedUnaryExpr","ui":"<b>Cal.Data.Sql.untypedUnaryExpr<\/b><br\/>[CALDoc] Constructs an untyped database expression for the application of a unary operator.\n","terminals":[{"name":"func","input":"text"},{"name":"argument","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.setJoins","name":"setJoins","type":"CalDataSqlsetJoins","ui":"<b>Cal.Data.Sql.setJoins<\/b><br\/>[CALDoc] Sets the join information for the query as a list of join node trees.\n","terminals":[{"name":"newJoins","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.locateExpr","name":"locateExpr","type":"CalDataSqllocateExpr","ui":"<b>Cal.Data.Sql.locateExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"searchExpr","input":"text"},{"name":"stringExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.fixQueryForGroupBy","name":"fixQueryForGroupBy","type":"CalDataSqlfixQueryForGroupBy","ui":"<b>Cal.Data.Sql.fixQueryForGroupBy<\/b><br\/>[CALDoc] Adds the necessary grouping to the query to make it valid if there is any\ngrouping or aggregation.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.signExpr","name":"signExpr","type":"CalDataSqlsignExpr","ui":"<b>Cal.Data.Sql.signExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.booleanField","name":"booleanField","type":"CalDataSqlbooleanField","ui":"<b>Cal.Data.Sql.booleanField<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.doubleParameter","name":"doubleParameter","type":"CalDataSqldoubleParameter","ui":"<b>Cal.Data.Sql.doubleParameter<\/b><br\/>[CALDoc] Constructs an double expression for a database parameter.\n","terminals":[{"name":"maybeParamName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.dateTimeAddExpr","name":"dateTimeAddExpr","type":"CalDataSqldateTimeAddExpr","ui":"<b>Cal.Data.Sql.dateTimeAddExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"timeInterval","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getColumnsForTable","name":"getColumnsForTable","type":"CalDataSqlgetColumnsForTable","ui":"<b>Cal.Data.Sql.getColumnsForTable<\/b><br\/>[CALDoc] Returns a list of columns that belong to the given table and that are\nreferenced from within the given query. ","terminals":[{"name":"query","input":"text"},{"name":"targetTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.statementText","name":"statementText","type":"CalDataSqlstatementText","ui":"<b>Cal.Data.Sql.statementText<\/b><br\/>[CALDoc] Generates the SQL text for a statement.","terminals":[{"name":"forDisplay","input":"text"},{"name":"builder","input":"text"},{"name":"statement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.assignMissingColumnAliases","name":"assignMissingColumnAliases","type":"CalDataSqlassignMissingColumnAliases","ui":"<b>Cal.Data.Sql.assignMissingColumnAliases<\/b><br\/>[CALDoc] The <code>assignMissingColumnAliases<\/code> is a transformation function to assign the missing aliases for all columns \nof the passed in query","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeCreateTableStatement","name":"makeCreateTableStatement","type":"CalDataSqlmakeCreateTableStatement","ui":"<b>Cal.Data.Sql.makeCreateTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeSafeSqlName","name":"makeSafeSqlName","type":"CalDataSqlmakeSafeSqlName","ui":"<b>Cal.Data.Sql.makeSafeSqlName<\/b><br\/>[CALDoc] Returns a 'safe' version of the specified name.","terminals":[{"name":"name","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isNotNullExpr","name":"isNotNullExpr","type":"CalDataSqlisNotNullExpr","ui":"<b>Cal.Data.Sql.isNotNullExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether an argument expression is non-null.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.maxExpr","name":"maxExpr","type":"CalDataSqlmaxExpr","ui":"<b>Cal.Data.Sql.maxExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.joinSetUniqueIdentifier","name":"joinSetUniqueIdentifier","type":"CalDataSqljoinSetUniqueIdentifier","ui":"<b>Cal.Data.Sql.joinSetUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"joinSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.divideExpr","name":"divideExpr","type":"CalDataSqldivideExpr","ui":"<b>Cal.Data.Sql.divideExpr<\/b><br\/>[CALDoc] Constructs a database expression to divide two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.booleanParameter","name":"booleanParameter","type":"CalDataSqlbooleanParameter","ui":"<b>Cal.Data.Sql.booleanParameter<\/b><br\/>[CALDoc] Constructs an Boolean expression for a database parameter.\n","terminals":[{"name":"maybeParamName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makePrimitiveValueBuilder","name":"makePrimitiveValueBuilder","type":"CalDataSqlmakePrimitiveValueBuilder","ui":"<b>Cal.Data.Sql.makePrimitiveValueBuilder<\/b><br\/>[CALDoc] Constructs a new SQL primitive value builder with the specified functions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.transformQueryRestrictionExpr","name":"transformQueryRestrictionExpr","type":"CalDataSqltransformQueryRestrictionExpr","ui":"<b>Cal.Data.Sql.transformQueryRestrictionExpr<\/b><br\/>[CALDoc] The <code>transformQueryRestrictionExpr<\/code> takes a conversion function and executes it against \nthe restriction expression of a query.","terminals":[{"name":"query","input":"text"},{"name":"conversionFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeCreateDatabaseStatement","name":"makeCreateDatabaseStatement","type":"CalDataSqlmakeCreateDatabaseStatement","ui":"<b>Cal.Data.Sql.makeCreateDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.timeConstant","name":"timeConstant","type":"CalDataSqltimeConstant","ui":"<b>Cal.Data.Sql.timeConstant<\/b><br\/>[CALDoc] Construct a database expression for a time literal.","terminals":[{"name":"timeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.databaseExpr","name":"databaseExpr","type":"CalDataSqldatabaseExpr","ui":"<b>Cal.Data.Sql.databaseExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputDbFunctionAsJObject","name":"outputDbFunctionAsJObject","type":"CalDataSqloutputDbFunctionAsJObject","ui":"<b>Cal.Data.Sql.outputDbFunctionAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.log10Expr","name":"log10Expr","type":"CalDataSqllog10Expr","ui":"<b>Cal.Data.Sql.log10Expr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.userExpr","name":"userExpr","type":"CalDataSqluserExpr","ui":"<b>Cal.Data.Sql.userExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.prepareToBuildQueryText","name":"prepareToBuildQueryText","type":"CalDataSqlprepareToBuildQueryText","ui":"<b>Cal.Data.Sql.prepareToBuildQueryText<\/b><br\/>[CALDoc] This function gives the SQL builder a chance to alter the structure of the\nquery in order to simplify building of the query text.","terminals":[{"name":"sqlBuilder","input":"text"},{"name":"builderState","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.binaryField","name":"binaryField","type":"CalDataSqlbinaryField","ui":"<b>Cal.Data.Sql.binaryField<\/b><br\/>[CALDoc] ","terminals":[{"name":"table","input":"text"},{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getNumberValueFromConstExpr","name":"getNumberValueFromConstExpr","type":"CalDataSqlgetNumberValueFromConstExpr","ui":"<b>Cal.Data.Sql.getNumberValueFromConstExpr<\/b><br\/>[CALDoc] Returns the number value from a constant expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.convertQueryColumnsToCartesianJoins","name":"convertQueryColumnsToCartesianJoins","type":"CalDataSqlconvertQueryColumnsToCartesianJoins","ui":"<b>Cal.Data.Sql.convertQueryColumnsToCartesianJoins<\/b><br\/>[CALDoc] The <code>convertQueryColumnsToCartesianJoins<\/code> is a transformation function pushing the sub-queries \nnested as select items down to the from clause to perform cartesian join between datasources.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isSubQueryExpr","name":"isSubQueryExpr","type":"CalDataSqlisSubQueryExpr","ui":"<b>Cal.Data.Sql.isSubQueryExpr<\/b><br\/>[CALDoc] The <code>isSubQueryExpr<\/code> tests expression if it is of SubQueryExpr type.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeDropDatabaseStatement","name":"makeDropDatabaseStatement","type":"CalDataSqlmakeDropDatabaseStatement","ui":"<b>Cal.Data.Sql.makeDropDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.intToDoubleExpr","name":"intToDoubleExpr","type":"CalDataSqlintToDoubleExpr","ui":"<b>Cal.Data.Sql.intToDoubleExpr<\/b><br\/>[CALDoc] Converts an integer value to a double value.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.alternateIntersectionQuery","name":"alternateIntersectionQuery","type":"CalDataSqlalternateIntersectionQuery","ui":"<b>Cal.Data.Sql.alternateIntersectionQuery<\/b><br\/>[CALDoc] This is an alternate version of <code>intersectionQuery<\/code>.\n","terminals":[{"name":"query2","input":"text"},{"name":"query1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeProjectedColumn","name":"removeProjectedColumn","type":"CalDataSqlremoveProjectedColumn","ui":"<b>Cal.Data.Sql.removeProjectedColumn<\/b><br\/>[CALDoc] Removes the specified expression from the projected columns list.\n","terminals":[{"name":"query","input":"text"},{"name":"exprToRemove","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modifyQueries","name":"modifyQueries","type":"CalDataSqlmodifyQueries","ui":"<b>Cal.Data.Sql.modifyQueries<\/b><br\/>[CALDoc] Applies the specified query modification function to the query and any\nsubqueries that it contains.","terminals":[{"name":"query","input":"text"},{"name":"updateQueryFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.intToSql","name":"intToSql","type":"CalDataSqlintToSql","ui":"<b>Cal.Data.Sql.intToSql<\/b><br\/>[CALDoc] Builds the SQL text for an int constant.","terminals":[{"name":"intVal","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.yearExpr","name":"yearExpr","type":"CalDataSqlyearExpr","ui":"<b>Cal.Data.Sql.yearExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.linearizeStatement","name":"linearizeStatement","type":"CalDataSqllinearizeStatement","ui":"<b>Cal.Data.Sql.linearizeStatement<\/b><br\/>[CALDoc] Linearizes the structure of the given statement by extracting all\nstatements nested in any compound statement.  ","terminals":[{"name":"statement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.dateTimeDiffExpr","name":"dateTimeDiffExpr","type":"CalDataSqldateTimeDiffExpr","ui":"<b>Cal.Data.Sql.dateTimeDiffExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeInterval","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.avgExpr","name":"avgExpr","type":"CalDataSqlavgExpr","ui":"<b>Cal.Data.Sql.avgExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeJoinSet","name":"makeJoinSet","type":"CalDataSqlmakeJoinSet","ui":"<b>Cal.Data.Sql.makeJoinSet<\/b><br\/>[CALDoc] Construct a join set from a list of JoinInfo values.","terminals":[{"name":"joins","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildJoinTree","name":"buildJoinTree","type":"CalDataSqlbuildJoinTree","ui":"<b>Cal.Data.Sql.buildJoinTree<\/b><br\/>[CALDoc] Constructs a single join tree based on the list of join info items.\n","terminals":[{"name":"joinInfo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeJoinSet2","name":"makeJoinSet2","type":"CalDataSqlmakeJoinSet2","ui":"<b>Cal.Data.Sql.makeJoinSet2<\/b><br\/>[CALDoc] Construct a join set from a JoinNode tree","terminals":[{"name":"name","input":"text"},{"name":"joinTree","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.soundexExpr","name":"soundexExpr","type":"CalDataSqlsoundexExpr","ui":"<b>Cal.Data.Sql.soundexExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.locate2Expr","name":"locate2Expr","type":"CalDataSqllocate2Expr","ui":"<b>Cal.Data.Sql.locate2Expr<\/b><br\/>[CALDoc] ","terminals":[{"name":"stringExpr","input":"text"},{"name":"searchExpr","input":"text"},{"name":"start","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectColumn","name":"projectColumn","type":"CalDataSqlprojectColumn","ui":"<b>Cal.Data.Sql.projectColumn<\/b><br\/>[CALDoc] Adds the specified expression as a result column in the query.","terminals":[{"name":"newColumn","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.logExpr","name":"logExpr","type":"CalDataSqllogExpr","ui":"<b>Cal.Data.Sql.logExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.bitwiseOrExpr","name":"bitwiseOrExpr","type":"CalDataSqlbitwiseOrExpr","ui":"<b>Cal.Data.Sql.bitwiseOrExpr<\/b><br\/>[CALDoc] Constructs a database expression to perform a bitwise 'or' of two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.bitwiseAndExpr","name":"bitwiseAndExpr","type":"CalDataSqlbitwiseAndExpr","ui":"<b>Cal.Data.Sql.bitwiseAndExpr<\/b><br\/>[CALDoc] Constructs a database expression to perform a bitwise 'and' of two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeUniqueTableAliasForQuery","name":"makeUniqueTableAliasForQuery","type":"CalDataSqlmakeUniqueTableAliasForQuery","ui":"<b>Cal.Data.Sql.makeUniqueTableAliasForQuery<\/b><br\/>[CALDoc] Constructs a table alias from the base name which is distinct within the query.","terminals":[{"name":"baseAlias","input":"text"},{"name":"otherReservedAliases","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modifyTablesInTypedExpr","name":"modifyTablesInTypedExpr","type":"CalDataSqlmodifyTablesInTypedExpr","ui":"<b>Cal.Data.Sql.modifyTablesInTypedExpr<\/b><br\/>[CALDoc] Applies the specified table modification function to all tables in the typed expression.","terminals":[{"name":"updateTableFn","input":"text"},{"name":"typedExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.dayOfWeekExpr","name":"dayOfWeekExpr","type":"CalDataSqldayOfWeekExpr","ui":"<b>Cal.Data.Sql.dayOfWeekExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.untypedParameter","name":"untypedParameter","type":"CalDataSqluntypedParameter","ui":"<b>Cal.Data.Sql.untypedParameter<\/b><br\/>[CALDoc] Constructs an untyped expression for a database parameter.\n","terminals":[{"name":"maybeParamName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.randExpr","name":"randExpr","type":"CalDataSqlrandExpr","ui":"<b>Cal.Data.Sql.randExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modifyTablesInJoinSet","name":"modifyTablesInJoinSet","type":"CalDataSqlmodifyTablesInJoinSet","ui":"<b>Cal.Data.Sql.modifyTablesInJoinSet<\/b><br\/>[CALDoc] Applies the specified table modification function to all tables in the join set.","terminals":[{"name":"joinSet","input":"text"},{"name":"updateTableFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.betweenExpr","name":"betweenExpr","type":"CalDataSqlbetweenExpr","ui":"<b>Cal.Data.Sql.betweenExpr<\/b><br\/>[CALDoc] Constructs a database expression which test whether the value of one operand expression is between \nthe value of two other operand expressions.","terminals":[{"name":"lowerExpr","input":"text"},{"name":"upperExpr","input":"text"},{"name":"leftExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.intersectionQuery","name":"intersectionQuery","type":"CalDataSqlintersectionQuery","ui":"<b>Cal.Data.Sql.intersectionQuery<\/b><br\/>[CALDoc] Produces a query which returns the intersection of the two specified queries.\n","terminals":[{"name":"query2","input":"text"},{"name":"query1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.join2","name":"join2","type":"CalDataSqljoin2","ui":"<b>Cal.Data.Sql.join2<\/b><br\/>[CALDoc] Adds the specified joins to the query.","terminals":[{"name":"newJoins","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.join","name":"join","type":"CalDataSqljoin","ui":"<b>Cal.Data.Sql.join<\/b><br\/>[CALDoc] Adds a join between 2 tables.","terminals":[{"name":"query","input":"text"},{"name":"newJoinInfo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.cleanupJoinNodes","name":"cleanupJoinNodes","type":"CalDataSqlcleanupJoinNodes","ui":"<b>Cal.Data.Sql.cleanupJoinNodes<\/b><br\/>[CALDoc] Connects up any separate join trees with common tables.\n","terminals":[{"name":"joinNodes","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.applyJoinInfo","name":"applyJoinInfo","type":"CalDataSqlapplyJoinInfo","ui":"<b>Cal.Data.Sql.applyJoinInfo<\/b><br\/>[CALDoc] Apply a single join info item to the list of join nodes.\n","terminals":[{"name":"oldNodes","input":"text"},{"name":"joinInfo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.joinNodeToJoinInfo","name":"joinNodeToJoinInfo","type":"CalDataSqljoinNodeToJoinInfo","ui":"<b>Cal.Data.Sql.joinNodeToJoinInfo<\/b><br\/>[CALDoc] Attempts to break a <code>JoinNode<\/code> into one or more <code>JoinInfo<\/code>s.\n","terminals":[{"name":"joinNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeJoinInfo2","name":"makeJoinInfo2","type":"CalDataSqlmakeJoinInfo2","ui":"<b>Cal.Data.Sql.makeJoinInfo2<\/b><br\/>[CALDoc] Creates a join info between 2 tables using the specified linking expression.","terminals":[{"name":"joinType","input":"text"},{"name":"leftTable","input":"text"},{"name":"linkingExpr","input":"text"},{"name":"rightTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.stringField","name":"stringField","type":"CalDataSqlstringField","ui":"<b>Cal.Data.Sql.stringField<\/b><br\/>[CALDoc] ","terminals":[{"name":"table","input":"text"},{"name":"fieldName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.notEqualsTypedExpr","name":"notEqualsTypedExpr","type":"CalDataSqlnotEqualsTypedExpr","ui":"<b>Cal.Data.Sql.notEqualsTypedExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"expr1","input":"text"},{"name":"expr2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.equalsTypedExpr","name":"equalsTypedExpr","type":"CalDataSqlequalsTypedExpr","ui":"<b>Cal.Data.Sql.equalsTypedExpr<\/b><br\/>[CALDoc] Checks whether 2 typed expressions are equal.","terminals":[{"name":"expr1","input":"text"},{"name":"expr2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.bitwiseXorExpr","name":"bitwiseXorExpr","type":"CalDataSqlbitwiseXorExpr","ui":"<b>Cal.Data.Sql.bitwiseXorExpr<\/b><br\/>[CALDoc] Constructs a database expression to perform a bitwise 'xor' of two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.intBinaryExpr","name":"intBinaryExpr","type":"CalDataSqlintBinaryExpr","ui":"<b>Cal.Data.Sql.intBinaryExpr<\/b><br\/>[CALDoc] A helper function for constructing an integer binary operator.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.differenceExpr","name":"differenceExpr","type":"CalDataSqldifferenceExpr","ui":"<b>Cal.Data.Sql.differenceExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getArgumentsFromFunctionExpr","name":"getArgumentsFromFunctionExpr","type":"CalDataSqlgetArgumentsFromFunctionExpr","ui":"<b>Cal.Data.Sql.getArgumentsFromFunctionExpr<\/b><br\/>[CALDoc] Returns the arguments from a function expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputParameterAsJObject","name":"outputParameterAsJObject","type":"CalDataSqloutputParameterAsJObject","ui":"<b>Cal.Data.Sql.outputParameterAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"parameter","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeJoinInfo","name":"makeJoinInfo","type":"CalDataSqlmakeJoinInfo","ui":"<b>Cal.Data.Sql.makeJoinInfo<\/b><br\/>[CALDoc] Creates a join info using the query field info specified.\n","terminals":[{"name":"rightField","input":"text"},{"name":"leftField","input":"text"},{"name":"joinType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.eqExpr","name":"eqExpr","type":"CalDataSqleqExpr","ui":"<b>Cal.Data.Sql.eqExpr<\/b><br\/>[CALDoc] Constructs a database expression which test two operand expressions for equality.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getQueryTableFromQueryFieldExpr","name":"getQueryTableFromQueryFieldExpr","type":"CalDataSqlgetQueryTableFromQueryFieldExpr","ui":"<b>Cal.Data.Sql.getQueryTableFromQueryFieldExpr<\/b><br\/>[CALDoc] Returns the field name from a query field expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.group","name":"group","type":"CalDataSqlgroup","ui":"<b>Cal.Data.Sql.group<\/b><br\/>[CALDoc] Adds grouping to the query.","terminals":[{"name":"newGroup","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.groupUntyped","name":"groupUntyped","type":"CalDataSqlgroupUntyped","ui":"<b>Cal.Data.Sql.groupUntyped<\/b><br\/>[CALDoc] Adds grouping to the query.","terminals":[{"name":"newGroup","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeUnusedTables","name":"removeUnusedTables","type":"CalDataSqlremoveUnusedTables","ui":"<b>Cal.Data.Sql.removeUnusedTables<\/b><br\/>[CALDoc] Removed any joins which are including any tables which are otherwise unused\nin the query.\n","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeUnusedTables2","name":"removeUnusedTables2","type":"CalDataSqlremoveUnusedTables2","ui":"<b>Cal.Data.Sql.removeUnusedTables2<\/b><br\/>[CALDoc] Removed any joins which are including any tables which are otherwise unused\nin the query.\n","terminals":[{"name":"anchorFields","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ifNullExpr","name":"ifNullExpr","type":"CalDataSqlifNullExpr","ui":"<b>Cal.Data.Sql.ifNullExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isUnnamedParameter","name":"isUnnamedParameter","type":"CalDataSqlisUnnamedParameter","ui":"<b>Cal.Data.Sql.isUnnamedParameter<\/b><br\/>[CALDoc] Returns whether the parameter is a named one.","terminals":[{"name":"param","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.radiansExpr","name":"radiansExpr","type":"CalDataSqlradiansExpr","ui":"<b>Cal.Data.Sql.radiansExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.untypedAggregationExpr","name":"untypedAggregationExpr","type":"CalDataSqluntypedAggregationExpr","ui":"<b>Cal.Data.Sql.untypedAggregationExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"baseExpr","input":"text"},{"name":"aggrOp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.addUnjoinedTable","name":"addUnjoinedTable","type":"CalDataSqladdUnjoinedTable","ui":"<b>Cal.Data.Sql.addUnjoinedTable<\/b><br\/>[CALDoc] Forces the specified table to be included in the query, even if no fields\nfrom it are used in the rest of the query.","terminals":[{"name":"query","input":"text"},{"name":"newUnjoinedTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.intField","name":"intField","type":"CalDataSqlintField","ui":"<b>Cal.Data.Sql.intField<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isListExpr","name":"isListExpr","type":"CalDataSqlisListExpr","ui":"<b>Cal.Data.Sql.isListExpr<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the expression represents a list.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.replaceExpr","name":"replaceExpr","type":"CalDataSqlreplaceExpr","ui":"<b>Cal.Data.Sql.replaceExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"stringExpr","input":"text"},{"name":"replacementStr","input":"text"},{"name":"searchStr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.dayOfMonthExpr","name":"dayOfMonthExpr","type":"CalDataSqldayOfMonthExpr","ui":"<b>Cal.Data.Sql.dayOfMonthExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.inExpr2","name":"inExpr2","type":"CalDataSqlinExpr2","ui":"<b>Cal.Data.Sql.inExpr2<\/b><br\/>[CALDoc] Constructs a database expression to test whether the value of the first operand is one of the values \nreturned by the list operand expression.","terminals":[{"name":"listValuesExpr","input":"text"},{"name":"leftExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.rangeToRestrictionExpr","name":"rangeToRestrictionExpr","type":"CalDataSqlrangeToRestrictionExpr","ui":"<b>Cal.Data.Sql.rangeToRestrictionExpr<\/b><br\/>[CALDoc] Convert a range of values for a field or expression into the equivalent restriction expression.","terminals":[{"name":"range","input":"text"},{"name":"field","input":"text"},{"name":"makeConstantFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ltEqExpr","name":"ltEqExpr","type":"CalDataSqlltEqExpr","ui":"<b>Cal.Data.Sql.ltEqExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether the first operand is less than or equal to the second.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.gtExpr","name":"gtExpr","type":"CalDataSqlgtExpr","ui":"<b>Cal.Data.Sql.gtExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether the first operand is greater than the second.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputJoinNode","name":"outputJoinNode","type":"CalDataSqloutputJoinNode","ui":"<b>Cal.Data.Sql.outputJoinNode<\/b><br\/>[CALDoc] ","terminals":[{"name":"joinNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.tanExpr","name":"tanExpr","type":"CalDataSqltanExpr","ui":"<b>Cal.Data.Sql.tanExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.orExpr","name":"orExpr","type":"CalDataSqlorExpr","ui":"<b>Cal.Data.Sql.orExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether either of the operand expressions are True.","terminals":[{"name":"b1","input":"text"},{"name":"b2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.NullValue","name":"NullValue","type":"CalDataSqlNullValue","ui":"<b>Cal.Data.Sql.NullValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.functionExpr4","name":"functionExpr4","type":"CalDataSqlfunctionExpr4","ui":"<b>Cal.Data.Sql.functionExpr4<\/b><br\/>[CALDoc] ","terminals":[{"name":"arg1","input":"text"},{"name":"func","input":"text"},{"name":"arg2","input":"text"},{"name":"arg4","input":"text"},{"name":"arg3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.operatorPrecedence","name":"operatorPrecedence","type":"CalDataSqloperatorPrecedence","ui":"<b>Cal.Data.Sql.operatorPrecedence<\/b><br\/>[CALDoc] Returns the precedence of the specified operator.\n","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.equalsQueryTable","name":"equalsQueryTable","type":"CalDataSqlequalsQueryTable","ui":"<b>Cal.Data.Sql.equalsQueryTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"table2","input":"text"},{"name":"table1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.asinExpr","name":"asinExpr","type":"CalDataSqlasinExpr","ui":"<b>Cal.Data.Sql.asinExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ltExpr","name":"ltExpr","type":"CalDataSqlltExpr","ui":"<b>Cal.Data.Sql.ltExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether the first operand is less than the second.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.group2","name":"group2","type":"CalDataSqlgroup2","ui":"<b>Cal.Data.Sql.group2<\/b><br\/>[CALDoc] Adds grouping on the specified fields.","terminals":[{"name":"query","input":"text"},{"name":"groupFields","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.distinctSumExpr","name":"distinctSumExpr","type":"CalDataSqldistinctSumExpr","ui":"<b>Cal.Data.Sql.distinctSumExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getTimeValueFromConstExpr","name":"getTimeValueFromConstExpr","type":"CalDataSqlgetTimeValueFromConstExpr","ui":"<b>Cal.Data.Sql.getTimeValueFromConstExpr<\/b><br\/>[CALDoc] Returns the time value from a constant expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.joins","name":"joins","type":"CalDataSqljoins","ui":"<b>Cal.Data.Sql.joins<\/b><br\/>[CALDoc] Returns the join information from the query.\n","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeCommitStatement","name":"makeCommitStatement","type":"CalDataSqlmakeCommitStatement","ui":"<b>Cal.Data.Sql.makeCommitStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.charExpr","name":"charExpr","type":"CalDataSqlcharExpr","ui":"<b>Cal.Data.Sql.charExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.splitCompoundStatement","name":"splitCompoundStatement","type":"CalDataSqlsplitCompoundStatement","ui":"<b>Cal.Data.Sql.splitCompoundStatement<\/b><br\/>[CALDoc] Breaks a compound statement into multiple compound statements with a smaller\nstatement count.  ","terminals":[{"name":"maxCount","input":"text"},{"name":"stmt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeCompoundStatement","name":"makeCompoundStatement","type":"CalDataSqlmakeCompoundStatement","ui":"<b>Cal.Data.Sql.makeCompoundStatement<\/b><br\/>[CALDoc] Creates a compound statement from a list of statements.  ","terminals":[{"name":"statements","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.addOption","name":"addOption","type":"CalDataSqladdOption","ui":"<b>Cal.Data.Sql.addOption<\/b><br\/>[CALDoc] Adds an option to the query.","terminals":[{"name":"newOption","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.piExpr","name":"piExpr","type":"CalDataSqlpiExpr","ui":"<b>Cal.Data.Sql.piExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.stdDevExpr","name":"stdDevExpr","type":"CalDataSqlstdDevExpr","ui":"<b>Cal.Data.Sql.stdDevExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modifyTablesInExpr","name":"modifyTablesInExpr","type":"CalDataSqlmodifyTablesInExpr","ui":"<b>Cal.Data.Sql.modifyTablesInExpr<\/b><br\/>[CALDoc] Applies the specified table modification function to all tables in the expression.","terminals":[{"name":"expr","input":"text"},{"name":"updateTableFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modifyTablesInJoinNode","name":"modifyTablesInJoinNode","type":"CalDataSqlmodifyTablesInJoinNode","ui":"<b>Cal.Data.Sql.modifyTablesInJoinNode<\/b><br\/>[CALDoc] Applies the specified table modification function to all tables in the join node.","terminals":[{"name":"join","input":"text"},{"name":"updateTableFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modifyTablesInQuery","name":"modifyTablesInQuery","type":"CalDataSqlmodifyTablesInQuery","ui":"<b>Cal.Data.Sql.modifyTablesInQuery<\/b><br\/>[CALDoc] Applies the specified table modification function to all tables in the query.","terminals":[{"name":"updateTableFn","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.atan2Expr","name":"atan2Expr","type":"CalDataSqlatan2Expr","ui":"<b>Cal.Data.Sql.atan2Expr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeUpdateValuesStatement","name":"makeUpdateValuesStatement","type":"CalDataSqlmakeUpdateValuesStatement","ui":"<b>Cal.Data.Sql.makeUpdateValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"destColumns","input":"text"},{"name":"tableRef","input":"text"},{"name":"condition","input":"text"},{"name":"newValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeConstantGroupingAndOrdering","name":"removeConstantGroupingAndOrdering","type":"CalDataSqlremoveConstantGroupingAndOrdering","ui":"<b>Cal.Data.Sql.removeConstantGroupingAndOrdering<\/b><br\/>[CALDoc] Removes any constant expressions from the grouping and ordering lists.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getBestJoinSetForQueryFields","name":"getBestJoinSetForQueryFields","type":"CalDataSqlgetBestJoinSetForQueryFields","ui":"<b>Cal.Data.Sql.getBestJoinSetForQueryFields<\/b><br\/>[CALDoc] Returns the best set of joins for the fields in the specified query.\n","terminals":[{"name":"preferredJoinSetID","input":"text"},{"name":"anchorFieldExpressions","input":"text"},{"name":"sqlQuery","input":"text"},{"name":"joinSets","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeUnusedTablesInJoinSets","name":"removeUnusedTablesInJoinSets","type":"CalDataSqlremoveUnusedTablesInJoinSets","ui":"<b>Cal.Data.Sql.removeUnusedTablesInJoinSets<\/b><br\/>[CALDoc] Returns a modified list of join nodes containing only the joins required for the specified tables.\n","terminals":[{"name":"tablesInUse","input":"text"},{"name":"joins","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.joinSetJoinTree","name":"joinSetJoinTree","type":"CalDataSqljoinSetJoinTree","ui":"<b>Cal.Data.Sql.joinSetJoinTree<\/b><br\/>[CALDoc] Returns the join info from the join set.","terminals":[{"name":"joinSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isSubqueryTable","name":"isSubqueryTable","type":"CalDataSqlisSubqueryTable","ui":"<b>Cal.Data.Sql.isSubqueryTable<\/b><br\/>[CALDoc] Returns whether the specified table is a subquery table.","terminals":[{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeOption","name":"removeOption","type":"CalDataSqlremoveOption","ui":"<b>Cal.Data.Sql.removeOption<\/b><br\/>[CALDoc] Removes the option of the same type as the specified one (even if the exact\nvalues don't match).","terminals":[{"name":"query","input":"text"},{"name":"optionTypeToRemove","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.convertToStringExpr","name":"convertToStringExpr","type":"CalDataSqlconvertToStringExpr","ui":"<b>Cal.Data.Sql.convertToStringExpr<\/b><br\/>[CALDoc] Converts a value to a string value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.variancePExpr","name":"variancePExpr","type":"CalDataSqlvariancePExpr","ui":"<b>Cal.Data.Sql.variancePExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.simpleCaseExpr","name":"simpleCaseExpr","type":"CalDataSqlsimpleCaseExpr","ui":"<b>Cal.Data.Sql.simpleCaseExpr<\/b><br\/>[CALDoc] Constructs a database expression for a simple case statement.\n","terminals":[{"name":"whenValueAndResults","input":"text"},{"name":"caseExpr","input":"text"},{"name":"elseValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.newSqlBuilderState","name":"newSqlBuilderState","type":"CalDataSqlnewSqlBuilderState","ui":"<b>Cal.Data.Sql.newSqlBuilderState<\/b><br\/>[CALDoc] Creates an empty SQL builder state object.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeQueryTable","name":"makeQueryTable","type":"CalDataSqlmakeQueryTable","ui":"<b>Cal.Data.Sql.makeQueryTable<\/b><br\/>[CALDoc] Constructs a query table using the specified table name.\n","terminals":[{"name":"tableName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeQueryTableWithAlias","name":"makeQueryTableWithAlias","type":"CalDataSqlmakeQueryTableWithAlias","ui":"<b>Cal.Data.Sql.makeQueryTableWithAlias<\/b><br\/>[CALDoc] Constructs a query table using the specified table name and base alias name.\n","terminals":[{"name":"tableAlias","input":"text"},{"name":"tableName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.joinSetName","name":"joinSetName","type":"CalDataSqljoinSetName","ui":"<b>Cal.Data.Sql.joinSetName<\/b><br\/>[CALDoc] ","terminals":[{"name":"joinSet","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.convertToIntExpr","name":"convertToIntExpr","type":"CalDataSqlconvertToIntExpr","ui":"<b>Cal.Data.Sql.convertToIntExpr<\/b><br\/>[CALDoc] Converts a value to a int value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getSubQueryFromExpr","name":"getSubQueryFromExpr","type":"CalDataSqlgetSubQueryFromExpr","ui":"<b>Cal.Data.Sql.getSubQueryFromExpr<\/b><br\/>[CALDoc] The <code>isSubQueryExpr<\/code> retrieves the <code>Query<\/code> type from untyped expression.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.untypedListExpr","name":"untypedListExpr","type":"CalDataSqluntypedListExpr","ui":"<b>Cal.Data.Sql.untypedListExpr<\/b><br\/>[CALDoc] Constructs an untyped database expression for a list of values.","terminals":[{"name":"listValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.tableNameText","name":"tableNameText","type":"CalDataSqltableNameText","ui":"<b>Cal.Data.Sql.tableNameText<\/b><br\/>[CALDoc] Builds the query text for a table name (including quotes where needed).","terminals":[{"name":"builder","input":"text"},{"name":"builderState","input":"text"},{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ucaseExpr","name":"ucaseExpr","type":"CalDataSqlucaseExpr","ui":"<b>Cal.Data.Sql.ucaseExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.acosExpr","name":"acosExpr","type":"CalDataSqlacosExpr","ui":"<b>Cal.Data.Sql.acosExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.countExpr","name":"countExpr","type":"CalDataSqlcountExpr","ui":"<b>Cal.Data.Sql.countExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isExprConstant","name":"isExprConstant","type":"CalDataSqlisExprConstant","ui":"<b>Cal.Data.Sql.isExprConstant<\/b><br\/>[CALDoc] Returns whether the expression is a constant value or an expression composed of only constant values.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.gtEqExpr","name":"gtEqExpr","type":"CalDataSqlgtEqExpr","ui":"<b>Cal.Data.Sql.gtEqExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether the first operand is greater than or equal to the second.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.inExpr","name":"inExpr","type":"CalDataSqlinExpr","ui":"<b>Cal.Data.Sql.inExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether the value of the first operand is equal to the value\nreturned by one of the list operand expressions.","terminals":[{"name":"leftExpr","input":"text"},{"name":"listValueExprs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ListExpr","name":"ListExpr","type":"CalDataSqlListExpr","ui":"<b>Cal.Data.Sql.ListExpr<\/b><br\/>[CALDoc] A list of database expressions.","terminals":[{"name":"listValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.numericConstant","name":"numericConstant","type":"CalDataSqlnumericConstant","ui":"<b>Cal.Data.Sql.numericConstant<\/b><br\/>[CALDoc] Construct a database expression for a numeric literal.","terminals":[{"name":"numValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.substringExpr","name":"substringExpr","type":"CalDataSqlsubstringExpr","ui":"<b>Cal.Data.Sql.substringExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"start","input":"text"},{"name":"length","input":"text"},{"name":"stringExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.functionExpr3","name":"functionExpr3","type":"CalDataSqlfunctionExpr3","ui":"<b>Cal.Data.Sql.functionExpr3<\/b><br\/>[CALDoc] ","terminals":[{"name":"arg2","input":"text"},{"name":"func","input":"text"},{"name":"arg1","input":"text"},{"name":"arg3","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.asciiExpr","name":"asciiExpr","type":"CalDataSqlasciiExpr","ui":"<b>Cal.Data.Sql.asciiExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isStringConstExpr","name":"isStringConstExpr","type":"CalDataSqlisStringConstExpr","ui":"<b>Cal.Data.Sql.isStringConstExpr<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the expression represents a constant containing a string value.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputQueryOption","name":"outputQueryOption","type":"CalDataSqloutputQueryOption","ui":"<b>Cal.Data.Sql.outputQueryOption<\/b><br\/>[CALDoc] ","terminals":[{"name":"queryOption","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isSingletonResultQuery","name":"isSingletonResultQuery","type":"CalDataSqlisSingletonResultQuery","ui":"<b>Cal.Data.Sql.isSingletonResultQuery<\/b><br\/>[CALDoc] The <code>isSubQueryExpr<\/code> tests passed in query if it going to retrieve single column and value in the result set.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getGroups","name":"getGroups","type":"CalDataSqlgetGroups","ui":"<b>Cal.Data.Sql.getGroups<\/b><br\/>[CALDoc] Returns: The list of groups for the given query, or if the query is a union\nthen the groups for the first query in the union.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isFunctionExpr","name":"isFunctionExpr","type":"CalDataSqlisFunctionExpr","ui":"<b>Cal.Data.Sql.isFunctionExpr<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the expression represents a function (or operator)\napplication.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getFunctionFromFunctionExpr","name":"getFunctionFromFunctionExpr","type":"CalDataSqlgetFunctionFromFunctionExpr","ui":"<b>Cal.Data.Sql.getFunctionFromFunctionExpr<\/b><br\/>[CALDoc] Returns the function type from a function expression.\n","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.bitwiseNotExpr","name":"bitwiseNotExpr","type":"CalDataSqlbitwiseNotExpr","ui":"<b>Cal.Data.Sql.bitwiseNotExpr<\/b><br\/>[CALDoc] Constructs a database expression for the application of the bitwise 'not' operator to an integer argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.nowExpr","name":"nowExpr","type":"CalDataSqlnowExpr","ui":"<b>Cal.Data.Sql.nowExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.functionExpr0","name":"functionExpr0","type":"CalDataSqlfunctionExpr0","ui":"<b>Cal.Data.Sql.functionExpr0<\/b><br\/>[CALDoc] ","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.atanExpr","name":"atanExpr","type":"CalDataSqlatanExpr","ui":"<b>Cal.Data.Sql.atanExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputExprAsJObject","name":"outputExprAsJObject","type":"CalDataSqloutputExprAsJObject","ui":"<b>Cal.Data.Sql.outputExprAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputJoinTypeAsJObject","name":"outputJoinTypeAsJObject","type":"CalDataSqloutputJoinTypeAsJObject","ui":"<b>Cal.Data.Sql.outputJoinTypeAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"joinType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputJoinType","name":"outputJoinType","type":"CalDataSqloutputJoinType","ui":"<b>Cal.Data.Sql.outputJoinType<\/b><br\/>[CALDoc] ","terminals":[{"name":"joinType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.doubleField","name":"doubleField","type":"CalDataSqldoubleField","ui":"<b>Cal.Data.Sql.doubleField<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isSameOptionType","name":"isSameOptionType","type":"CalDataSqlisSameOptionType","ui":"<b>Cal.Data.Sql.isSameOptionType<\/b><br\/>[CALDoc] Returns whether the specified options are of the same type (not necessarily\nthe same value).","terminals":[{"name":"option2","input":"text"},{"name":"option1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getQueryTableName","name":"getQueryTableName","type":"CalDataSqlgetQueryTableName","ui":"<b>Cal.Data.Sql.getQueryTableName<\/b><br\/>[CALDoc] Returns the name of the table (without quotes).\n","terminals":[{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.addExpr","name":"addExpr","type":"CalDataSqladdExpr","ui":"<b>Cal.Data.Sql.addExpr<\/b><br\/>[CALDoc] Constructs a database expression to add two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputQueryTableAsJObject","name":"outputQueryTableAsJObject","type":"CalDataSqloutputQueryTableAsJObject","ui":"<b>Cal.Data.Sql.outputQueryTableAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.convertDateQueryFieldsToTimeExprs","name":"convertDateQueryFieldsToTimeExprs","type":"CalDataSqlconvertDateQueryFieldsToTimeExprs","ui":"<b>Cal.Data.Sql.convertDateQueryFieldsToTimeExprs<\/b><br\/>[CALDoc] The function recurses the Expr Boolean and makes sure that every item involved in operation against time constant \nis casted to datetime format explictly.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isQueryFieldExpr","name":"isQueryFieldExpr","type":"CalDataSqlisQueryFieldExpr","ui":"<b>Cal.Data.Sql.isQueryFieldExpr<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the expression represents a field in a query table.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isBinaryFunction","name":"isBinaryFunction","type":"CalDataSqlisBinaryFunction","ui":"<b>Cal.Data.Sql.isBinaryFunction<\/b><br\/>[CALDoc] Returns: True when a given function is a function of two parameters","terminals":[{"name":"dbFun","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.convertToTimeExpr","name":"convertToTimeExpr","type":"CalDataSqlconvertToTimeExpr","ui":"<b>Cal.Data.Sql.convertToTimeExpr<\/b><br\/>[CALDoc] It applies ConvertToTime function to the passed in expression. ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isTimeConstExpr","name":"isTimeConstExpr","type":"CalDataSqlisTimeConstExpr","ui":"<b>Cal.Data.Sql.isTimeConstExpr<\/b><br\/>[CALDoc] Returns <code>True<\/code> if the expression represents a constant containing a time value.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.typeOfExpr","name":"typeOfExpr","type":"CalDataSqltypeOfExpr","ui":"<b>Cal.Data.Sql.typeOfExpr<\/b><br\/>[CALDoc] Returns the type of the values represented by this typed expression.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.timeIntervalToSql","name":"timeIntervalToSql","type":"CalDataSqltimeIntervalToSql","ui":"<b>Cal.Data.Sql.timeIntervalToSql<\/b><br\/>[CALDoc] Builds the SQL text for a time interval constant.","terminals":[{"name":"timeInterval","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.modExpr","name":"modExpr","type":"CalDataSqlmodExpr","ui":"<b>Cal.Data.Sql.modExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.repeatExpr","name":"repeatExpr","type":"CalDataSqlrepeatExpr","ui":"<b>Cal.Data.Sql.repeatExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"count","input":"text"},{"name":"stringExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.expressionText2","name":"expressionText2","type":"CalDataSqlexpressionText2","ui":"<b>Cal.Data.Sql.expressionText2<\/b><br\/>[CALDoc] Builds the query text for a single expression.","terminals":[{"name":"builder","input":"text"},{"name":"builderState","input":"text"},{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.queryText2","name":"queryText2","type":"CalDataSqlqueryText2","ui":"<b>Cal.Data.Sql.queryText2<\/b><br\/>[CALDoc] Generates the SQL text for the specified database query.","terminals":[{"name":"builder","input":"text"},{"name":"builderState","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.constructQuery","name":"constructQuery","type":"CalDataSqlconstructQuery","ui":"<b>Cal.Data.Sql.constructQuery<\/b><br\/>[CALDoc] Constructs a complete SQL query from the component parts.","terminals":[{"name":"groupByBody","input":"text"},{"name":"builderState","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"havingBody","input":"text"},{"name":"selectBody","input":"text"},{"name":"fromBody","input":"text"},{"name":"orderByBody","input":"text"},{"name":"whereBody","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildOrderByClause","name":"buildOrderByClause","type":"CalDataSqlbuildOrderByClause","ui":"<b>Cal.Data.Sql.buildOrderByClause<\/b><br\/>[CALDoc] Constructs the text of the ORDER BY clause for the query, not including the\n'ORDER BY' keyword (or equivalent).","terminals":[{"name":"builderState","input":"text"},{"name":"orderExpressions","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildHavingClause","name":"buildHavingClause","type":"CalDataSqlbuildHavingClause","ui":"<b>Cal.Data.Sql.buildHavingClause<\/b><br\/>[CALDoc] Constructs the text of the HAVING clause for the query, not including the\n'HAVING' keywork (or equivalent).","terminals":[{"name":"builderState","input":"text"},{"name":"groupRestrictions","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildGroupByClause","name":"buildGroupByClause","type":"CalDataSqlbuildGroupByClause","ui":"<b>Cal.Data.Sql.buildGroupByClause<\/b><br\/>[CALDoc] Constructs the text of the GROUP BY clause for the query, not including the\n'GROUP BY' keyword (or equivalent).","terminals":[{"name":"sqlBuilder","input":"text"},{"name":"builderState","input":"text"},{"name":"groupExpressions","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildWhereClause","name":"buildWhereClause","type":"CalDataSqlbuildWhereClause","ui":"<b>Cal.Data.Sql.buildWhereClause<\/b><br\/>[CALDoc] Constructs the text of the WHERE clause for the query, not including the\n'WHERE' keyword (or equivalent).","terminals":[{"name":"sqlBuilder","input":"text"},{"name":"builderState","input":"text"},{"name":"joins","input":"text"},{"name":"restrictions","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildFromClause","name":"buildFromClause","type":"CalDataSqlbuildFromClause","ui":"<b>Cal.Data.Sql.buildFromClause<\/b><br\/>[CALDoc] Constructs the text of the FROM clause for the query, not including the 'FROM'\nkeyword (or equivalent).","terminals":[{"name":"builderState","input":"text"},{"name":"joins","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.buildSelectClause","name":"buildSelectClause","type":"CalDataSqlbuildSelectClause","ui":"<b>Cal.Data.Sql.buildSelectClause<\/b><br\/>[CALDoc] Constructs the text of the SELECT clause for the query, not including the\n'SELECT' keyword (or equivalent).","terminals":[{"name":"builderState","input":"text"},{"name":"options","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"exprsAndAliases","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.addQueryTablesToState","name":"addQueryTablesToState","type":"CalDataSqladdQueryTablesToState","ui":"<b>Cal.Data.Sql.addQueryTablesToState<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"newTables","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getStateOuterQueryTables","name":"getStateOuterQueryTables","type":"CalDataSqlgetStateOuterQueryTables","ui":"<b>Cal.Data.Sql.getStateOuterQueryTables<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.checkValidQuery","name":"checkValidQuery","type":"CalDataSqlcheckValidQuery","ui":"<b>Cal.Data.Sql.checkValidQuery<\/b><br\/>[CALDoc] Throws an error if the query is not valid.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.checkValidResultColumns","name":"checkValidResultColumns","type":"CalDataSqlcheckValidResultColumns","ui":"<b>Cal.Data.Sql.checkValidResultColumns<\/b><br\/>[CALDoc] Checks that there is at least one return column.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.checkValidGroupByQuery","name":"checkValidGroupByQuery","type":"CalDataSqlcheckValidGroupByQuery","ui":"<b>Cal.Data.Sql.checkValidGroupByQuery<\/b><br\/>[CALDoc] If there is any grouping fields in the query, then this will\ncheck that all the return column expressions are group on or\nare aggregate expressions.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.functionToSql","name":"functionToSql","type":"CalDataSqlfunctionToSql","ui":"<b>Cal.Data.Sql.functionToSql<\/b><br\/>[CALDoc] Builds the SQL text for a SQL function application.","terminals":[{"name":"builderState","input":"text"},{"name":"argExprs","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.timeToSql","name":"timeToSql","type":"CalDataSqltimeToSql","ui":"<b>Cal.Data.Sql.timeToSql<\/b><br\/>[CALDoc] Builds the SQL text for a time constant.","terminals":[{"name":"timeZone","input":"text"},{"name":"timeVal","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.booleanToSql","name":"booleanToSql","type":"CalDataSqlbooleanToSql","ui":"<b>Cal.Data.Sql.booleanToSql<\/b><br\/>[CALDoc] Builds the SQL text for a boolean constant.","terminals":[{"name":"sqlBuilder","input":"text"},{"name":"boolVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.doubleToSql","name":"doubleToSql","type":"CalDataSqldoubleToSql","ui":"<b>Cal.Data.Sql.doubleToSql<\/b><br\/>[CALDoc] Builds the SQL text for a double constant.","terminals":[{"name":"doubleVal","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.stringToSql","name":"stringToSql","type":"CalDataSqlstringToSql","ui":"<b>Cal.Data.Sql.stringToSql<\/b><br\/>[CALDoc] Builds the SQL text for a string constant.","terminals":[{"name":"sqlBuilder","input":"text"},{"name":"stringVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.nullToSql","name":"nullToSql","type":"CalDataSqlnullToSql","ui":"<b>Cal.Data.Sql.nullToSql<\/b><br\/>[CALDoc] Builds the SQL text for a null value constant.","terminals":[{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.PrimitiveValueBuilder","name":"PrimitiveValueBuilder","type":"CalDataSqlPrimitiveValueBuilder","ui":"<b>Cal.Data.Sql.PrimitiveValueBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeToSqlFn","input":"text"},{"name":"intToSqlFn","input":"text"},{"name":"nullToSqlFn","input":"text"},{"name":"doubleToSqlFn","input":"text"},{"name":"booleanToSqlFn","input":"text"},{"name":"stringToSqlFn","input":"text"},{"name":"_INPUT","input":"text"},{"name":"timeIntervalToSqlFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getQueryTableAlias","name":"getQueryTableAlias","type":"CalDataSqlgetQueryTableAlias","ui":"<b>Cal.Data.Sql.getQueryTableAlias<\/b><br\/>[CALDoc] Returns the table alias for a query table.\n","terminals":[{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.quoteIdentifier","name":"quoteIdentifier","type":"CalDataSqlquoteIdentifier","ui":"<b>Cal.Data.Sql.quoteIdentifier<\/b><br\/>[CALDoc] Adds quotes to a name (such as a table).","terminals":[{"name":"indentifierText","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.differenceQuery","name":"differenceQuery","type":"CalDataSqldifferenceQuery","ui":"<b>Cal.Data.Sql.differenceQuery<\/b><br\/>[CALDoc] Produces a query which returns the difference of the two specified queries.\n","terminals":[{"name":"query2","input":"text"},{"name":"query1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.differenceQuery2","name":"differenceQuery2","type":"CalDataSqldifferenceQuery2","ui":"<b>Cal.Data.Sql.differenceQuery2<\/b><br\/>[CALDoc] Produces a query which returns the difference of the two specified queries.\n","terminals":[{"name":"query1","input":"text"},{"name":"query2","input":"text"},{"name":"compareExprs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeProjectedColumns","name":"removeProjectedColumns","type":"CalDataSqlremoveProjectedColumns","ui":"<b>Cal.Data.Sql.removeProjectedColumns<\/b><br\/>[CALDoc] Removes all projected columns from the query.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.restrict2","name":"restrict2","type":"CalDataSqlrestrict2","ui":"<b>Cal.Data.Sql.restrict2<\/b><br\/>[CALDoc] Adds the specified restrictions on the rows returned by the query.","terminals":[{"name":"query","input":"text"},{"name":"newRestrictions","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.restrict","name":"restrict","type":"CalDataSqlrestrict","ui":"<b>Cal.Data.Sql.restrict<\/b><br\/>[CALDoc] Adds a restriction on the rows returned by the query.","terminals":[{"name":"query","input":"text"},{"name":"newRestriction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isGroupRestriction","name":"isGroupRestriction","type":"CalDataSqlisGroupRestriction","ui":"<b>Cal.Data.Sql.isGroupRestriction<\/b><br\/>[CALDoc] Returns whether the restriction expression applies to groups or record\nvalues.","terminals":[{"name":"restriction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.exprUsesAggregation","name":"exprUsesAggregation","type":"CalDataSqlexprUsesAggregation","ui":"<b>Cal.Data.Sql.exprUsesAggregation<\/b><br\/>[CALDoc] Returns whether the expression uses aggregate functions.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.andExpr","name":"andExpr","type":"CalDataSqlandExpr","ui":"<b>Cal.Data.Sql.andExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether both of the operand expressions are True.","terminals":[{"name":"b1","input":"text"},{"name":"b2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.falseConstant","name":"falseConstant","type":"CalDataSqlfalseConstant","ui":"<b>Cal.Data.Sql.falseConstant<\/b><br\/>[CALDoc] A database expression for the Boolean value False.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SubQueryExpr","name":"SubQueryExpr","type":"CalDataSqlSubQueryExpr","ui":"<b>Cal.Data.Sql.SubQueryExpr<\/b><br\/>[CALDoc] A subquery expression.\n","terminals":[{"name":"subquery","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.existsExpr","name":"existsExpr","type":"CalDataSqlexistsExpr","ui":"<b>Cal.Data.Sql.existsExpr<\/b><br\/>[CALDoc] Constructs a database expression to test whether the argument subquery expression returns any rows.","terminals":[{"name":"subqueryExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.notExpr","name":"notExpr","type":"CalDataSqlnotExpr","ui":"<b>Cal.Data.Sql.notExpr<\/b><br\/>[CALDoc] Constructs a database expression for the application of the 'not' operator to a Boolean argument.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.untypedBinaryExpr","name":"untypedBinaryExpr","type":"CalDataSqluntypedBinaryExpr","ui":"<b>Cal.Data.Sql.untypedBinaryExpr<\/b><br\/>[CALDoc] Constructs an untyped database expression for the application of a binary operator.\n","terminals":[{"name":"rightArgument","input":"text"},{"name":"leftArgument","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.toTypedExpr","name":"toTypedExpr","type":"CalDataSqltoTypedExpr","ui":"<b>Cal.Data.Sql.toTypedExpr<\/b><br\/>[CALDoc] Returns a typed expression from the untyped expression.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.wrapQuery","name":"wrapQuery","type":"CalDataSqlwrapQuery","ui":"<b>Cal.Data.Sql.wrapQuery<\/b><br\/>[CALDoc] Wraps the query in an outer query which projects the same columns as the\noriginal.\n","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.wrapQuery2","name":"wrapQuery2","type":"CalDataSqlwrapQuery2","ui":"<b>Cal.Data.Sql.wrapQuery2<\/b><br\/>[CALDoc] Wraps the query in an outer query which projects the same columns as the\noriginal.\n","terminals":[{"name":"query","input":"text"},{"name":"additionalExprs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.newQuery","name":"newQuery","type":"CalDataSqlnewQuery","ui":"<b>Cal.Data.Sql.newQuery<\/b><br\/>[CALDoc] Creates a new, empty query.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.order2","name":"order2","type":"CalDataSqlorder2","ui":"<b>Cal.Data.Sql.order2<\/b><br\/>[CALDoc] Adds sorting on the specified fields.","terminals":[{"name":"query","input":"text"},{"name":"newOrderings","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.untypedField","name":"untypedField","type":"CalDataSqluntypedField","ui":"<b>Cal.Data.Sql.untypedField<\/b><br\/>[CALDoc] Returns a query field for the specified table.","terminals":[{"name":"fieldName","input":"text"},{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.setColumnAliases","name":"setColumnAliases","type":"CalDataSqlsetColumnAliases","ui":"<b>Cal.Data.Sql.setColumnAliases<\/b><br\/>[CALDoc] Sets the aliases for the first N projected columns.\n","terminals":[{"name":"newAliases","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeSubQueryTable","name":"makeSubQueryTable","type":"CalDataSqlmakeSubQueryTable","ui":"<b>Cal.Data.Sql.makeSubQueryTable<\/b><br\/>[CALDoc] Constructs a subquery table using the specified query and alias.\n","terminals":[{"name":"subquery","input":"text"},{"name":"tableAlias","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.fixSubqueryOrdering","name":"fixSubqueryOrdering","type":"CalDataSqlfixSubqueryOrdering","ui":"<b>Cal.Data.Sql.fixSubqueryOrdering<\/b><br\/>[CALDoc] Removes ordering for the subquery unless it is required (as with a <code>TopN<\/code>\nquery).","terminals":[{"name":"subquery","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.removeOrdering","name":"removeOrdering","type":"CalDataSqlremoveOrdering","ui":"<b>Cal.Data.Sql.removeOrdering<\/b><br\/>[CALDoc] Removes all ordering from the query.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.defaultColumnAlias","name":"defaultColumnAlias","type":"CalDataSqldefaultColumnAlias","ui":"<b>Cal.Data.Sql.defaultColumnAlias<\/b><br\/>[CALDoc] Returns a default column alias.\n","terminals":[{"name":"colIndex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectedColumnAliases","name":"projectedColumnAliases","type":"CalDataSqlprojectedColumnAliases","ui":"<b>Cal.Data.Sql.projectedColumnAliases<\/b><br\/>[CALDoc] Returns the aliases for the query's projected columns.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isTopNQuery","name":"isTopNQuery","type":"CalDataSqlisTopNQuery","ui":"<b>Cal.Data.Sql.isTopNQuery<\/b><br\/>[CALDoc] Returns whether a <code>TopN<\/code> option is specified for the query.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectColumnsIfNecessary","name":"projectColumnsIfNecessary","type":"CalDataSqlprojectColumnsIfNecessary","ui":"<b>Cal.Data.Sql.projectColumnsIfNecessary<\/b><br\/>[CALDoc] Adds the specified expressions to the projected columns, if they aren't\nalready projected.","terminals":[{"name":"query","input":"text"},{"name":"exprs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectColumnIfNecessary","name":"projectColumnIfNecessary","type":"CalDataSqlprojectColumnIfNecessary","ui":"<b>Cal.Data.Sql.projectColumnIfNecessary<\/b><br\/>[CALDoc] Adds the specified expression to the projected columns, if it isn't already\nprojected.","terminals":[{"name":"query","input":"text"},{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.project","name":"project","type":"CalDataSqlproject","ui":"<b>Cal.Data.Sql.project<\/b><br\/>[CALDoc] Adds the specified expressions as result columns in the query.","terminals":[{"name":"newColumns","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectWithAliases","name":"projectWithAliases","type":"CalDataSqlprojectWithAliases","ui":"<b>Cal.Data.Sql.projectWithAliases<\/b><br\/>[CALDoc] Adds the specified expressions as result columns with the corresponding\naliases in the query.","terminals":[{"name":"query","input":"text"},{"name":"newColumns","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getProjectedColumns","name":"getProjectedColumns","type":"CalDataSqlgetProjectedColumns","ui":"<b>Cal.Data.Sql.getProjectedColumns<\/b><br\/>[CALDoc] Returns the projected columns for the query.\n","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.projectedColumnsWithAliases","name":"projectedColumnsWithAliases","type":"CalDataSqlprojectedColumnsWithAliases","ui":"<b>Cal.Data.Sql.projectedColumnsWithAliases<\/b><br\/>[CALDoc] Returns the projected columns for the query.\n","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.secondExpr","name":"secondExpr","type":"CalDataSqlsecondExpr","ui":"<b>Cal.Data.Sql.secondExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.constructUnionQuery","name":"constructUnionQuery","type":"CalDataSqlconstructUnionQuery","ui":"<b>Cal.Data.Sql.constructUnionQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"query2Text","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"builderState","input":"text"},{"name":"query1Text","input":"text"},{"name":"unionAll","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.quarterExpr","name":"quarterExpr","type":"CalDataSqlquarterExpr","ui":"<b>Cal.Data.Sql.quarterExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.subtractExpr","name":"subtractExpr","type":"CalDataSqlsubtractExpr","ui":"<b>Cal.Data.Sql.subtractExpr<\/b><br\/>[CALDoc] Constructs a database expression to subtract two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getExpressionTables","name":"getExpressionTables","type":"CalDataSqlgetExpressionTables","ui":"<b>Cal.Data.Sql.getExpressionTables<\/b><br\/>[CALDoc] Returns all the tables used in the specified expression.","terminals":[{"name":"expr","input":"text"},{"name":"includeSubqueryTables","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getQueryTables","name":"getQueryTables","type":"CalDataSqlgetQueryTables","ui":"<b>Cal.Data.Sql.getQueryTables<\/b><br\/>[CALDoc] Returns a list of the tables used in the query.\n","terminals":[{"name":"query","input":"text"},{"name":"includeSubqueryTables","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.getJoinTreeTables","name":"getJoinTreeTables","type":"CalDataSqlgetJoinTreeTables","ui":"<b>Cal.Data.Sql.getJoinTreeTables<\/b><br\/>[CALDoc] Returns all the leaf tables from the specified join tree.","terminals":[{"name":"rootJoinNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.notEqExpr","name":"notEqExpr","type":"CalDataSqlnotEqExpr","ui":"<b>Cal.Data.Sql.notEqExpr<\/b><br\/>[CALDoc] Constructs a database expression which tests two operand expressions for inequality.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isAggregationFunction","name":"isAggregationFunction","type":"CalDataSqlisAggregationFunction","ui":"<b>Cal.Data.Sql.isAggregationFunction<\/b><br\/>[CALDoc] Indicates whether a specified function is an aggregation function or not.","terminals":[{"name":"fn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputQueryAsJObject","name":"outputQueryAsJObject","type":"CalDataSqloutputQueryAsJObject","ui":"<b>Cal.Data.Sql.outputQueryAsJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.distinctCountExpr","name":"distinctCountExpr","type":"CalDataSqldistinctCountExpr","ui":"<b>Cal.Data.Sql.distinctCountExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputOrdering","name":"outputOrdering","type":"CalDataSqloutputOrdering","ui":"<b>Cal.Data.Sql.outputOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"ordering","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputQuery","name":"outputQuery","type":"CalDataSqloutputQuery","ui":"<b>Cal.Data.Sql.outputQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputQueryTable","name":"outputQueryTable","type":"CalDataSqloutputQueryTable","ui":"<b>Cal.Data.Sql.outputQueryTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputExpression","name":"outputExpression","type":"CalDataSqloutputExpression","ui":"<b>Cal.Data.Sql.outputExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputProjectedColumn","name":"outputProjectedColumn","type":"CalDataSqloutputProjectedColumn","ui":"<b>Cal.Data.Sql.outputProjectedColumn<\/b><br\/>[CALDoc] ","terminals":[{"name":"column","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputDbFunction","name":"outputDbFunction","type":"CalDataSqloutputDbFunction","ui":"<b>Cal.Data.Sql.outputDbFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.defaultFunctionName","name":"defaultFunctionName","type":"CalDataSqldefaultFunctionName","ui":"<b>Cal.Data.Sql.defaultFunctionName<\/b><br\/>[CALDoc] Returns the default name of a database function.","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.outputParameter","name":"outputParameter","type":"CalDataSqloutputParameter","ui":"<b>Cal.Data.Sql.outputParameter<\/b><br\/>[CALDoc] ","terminals":[{"name":"parameter","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.trueConstant","name":"trueConstant","type":"CalDataSqltrueConstant","ui":"<b>Cal.Data.Sql.trueConstant<\/b><br\/>[CALDoc] A database expression for the Boolean value True.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.showQueryTable","name":"showQueryTable","type":"CalDataSqlshowQueryTable","ui":"<b>Cal.Data.Sql.showQueryTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.cosExpr","name":"cosExpr","type":"CalDataSqlcosExpr","ui":"<b>Cal.Data.Sql.cosExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.minuteExpr","name":"minuteExpr","type":"CalDataSqlminuteExpr","ui":"<b>Cal.Data.Sql.minuteExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.listToSql","name":"listToSql","type":"CalDataSqllistToSql","ui":"<b>Cal.Data.Sql.listToSql<\/b><br\/>[CALDoc] Builds the SQL text for a list of expressions.","terminals":[{"name":"exprList","input":"text"},{"name":"builderState","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.convertToDoubleExpr","name":"convertToDoubleExpr","type":"CalDataSqlconvertToDoubleExpr","ui":"<b>Cal.Data.Sql.convertToDoubleExpr<\/b><br\/>[CALDoc] Converts a value to a double value.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.functionExpr1","name":"functionExpr1","type":"CalDataSqlfunctionExpr1","ui":"<b>Cal.Data.Sql.functionExpr1<\/b><br\/>[CALDoc] ","terminals":[{"name":"arg1","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.parameterToSql","name":"parameterToSql","type":"CalDataSqlparameterToSql","ui":"<b>Cal.Data.Sql.parameterToSql<\/b><br\/>[CALDoc] Builds the SQL text for a list of expressions.","terminals":[{"name":"parameter","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.isTopNOption","name":"isTopNOption","type":"CalDataSqlisTopNOption","ui":"<b>Cal.Data.Sql.isTopNOption<\/b><br\/>[CALDoc] Returns whether the query option specifies TopN criteria.","terminals":[{"name":"option","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.multiplyExpr","name":"multiplyExpr","type":"CalDataSqlmultiplyExpr","ui":"<b>Cal.Data.Sql.multiplyExpr<\/b><br\/>[CALDoc] Constructs a database expression to multiply two numeric operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.numBinaryExpr","name":"numBinaryExpr","type":"CalDataSqlnumBinaryExpr","ui":"<b>Cal.Data.Sql.numBinaryExpr<\/b><br\/>[CALDoc] A helper function for constructing a numeric binary operator.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.addParens","name":"addParens","type":"CalDataSqladdParens","ui":"<b>Cal.Data.Sql.addParens<\/b><br\/>[CALDoc] Adds parentheses around some expression text.","terminals":[{"name":"exprText","input":"text"},{"name":"sqlBuilder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.concatExpr","name":"concatExpr","type":"CalDataSqlconcatExpr","ui":"<b>Cal.Data.Sql.concatExpr<\/b><br\/>[CALDoc] Constructs a database expression to concatenate two string operand expressions.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.makeDeleteRowsStatement","name":"makeDeleteRowsStatement","type":"CalDataSqlmakeDeleteRowsStatement","ui":"<b>Cal.Data.Sql.makeDeleteRowsStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"condition","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.roundExpr","name":"roundExpr","type":"CalDataSqlroundExpr","ui":"<b>Cal.Data.Sql.roundExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.functionExpr2","name":"functionExpr2","type":"CalDataSqlfunctionExpr2","ui":"<b>Cal.Data.Sql.functionExpr2<\/b><br\/>[CALDoc] ","terminals":[{"name":"arg1","input":"text"},{"name":"func","input":"text"},{"name":"arg2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.toUntypedExpr","name":"toUntypedExpr","type":"CalDataSqltoUntypedExpr","ui":"<b>Cal.Data.Sql.toUntypedExpr<\/b><br\/>[CALDoc] Returns the untyped expression from a typed expression.","terminals":[{"name":"typedExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.untypedFunctionExpr","name":"untypedFunctionExpr","type":"CalDataSqluntypedFunctionExpr","ui":"<b>Cal.Data.Sql.untypedFunctionExpr<\/b><br\/>[CALDoc] Constructs an untyped database expression for a call to a database function.\n","terminals":[{"name":"arguments","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.orderingExpressions","name":"orderingExpressions","type":"CalDataSqlorderingExpressions","ui":"<b>Cal.Data.Sql.orderingExpressions<\/b><br\/>[CALDoc] Returns the ordering info for the query.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeNamedParameter","name":"jMakeNamedParameter","type":"CalDataSqljMakeNamedParameter","ui":"<b>Cal.Data.Sql.jMakeNamedParameter<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeUnnamedParameter","name":"jMakeUnnamedParameter","type":"CalDataSqljMakeUnnamedParameter","ui":"<b>Cal.Data.Sql.jMakeUnnamedParameter<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeSqlOrdering","name":"jMakeSqlOrdering","type":"CalDataSqljMakeSqlOrdering","ui":"<b>Cal.Data.Sql.jMakeSqlOrdering<\/b><br\/>[CALDoc] ","terminals":[{"name":"ascending","input":"text"},{"name":"expression","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeQueryColumn","name":"jMakeQueryColumn","type":"CalDataSqljMakeQueryColumn","ui":"<b>Cal.Data.Sql.jMakeQueryColumn<\/b><br\/>[CALDoc] ","terminals":[{"name":"alias","input":"text"},{"name":"expression","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeUnionQuery","name":"jMakeUnionQuery","type":"CalDataSqljMakeUnionQuery","ui":"<b>Cal.Data.Sql.jMakeUnionQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"query2","input":"text"},{"name":"query1","input":"text"},{"name":"unionAll","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeSelectQuery","name":"jMakeSelectQuery","type":"CalDataSqljMakeSelectQuery","ui":"<b>Cal.Data.Sql.jMakeSelectQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"orderings","input":"text"},{"name":"joins","input":"text"},{"name":"columns","input":"text"},{"name":"options","input":"text"},{"name":"groups","input":"text"},{"name":"restriction","input":"text"},{"name":"groupRestriction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeSubQueryExpression","name":"jMakeSubQueryExpression","type":"CalDataSqljMakeSubQueryExpression","ui":"<b>Cal.Data.Sql.jMakeSubQueryExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"subquery","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeFunctionExpression","name":"jMakeFunctionExpression","type":"CalDataSqljMakeFunctionExpression","ui":"<b>Cal.Data.Sql.jMakeFunctionExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"databaseFunction","input":"text"},{"name":"arguments","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeListExpression","name":"jMakeListExpression","type":"CalDataSqljMakeListExpression","ui":"<b>Cal.Data.Sql.jMakeListExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"listValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeParameterExpression","name":"jMakeParameterExpression","type":"CalDataSqljMakeParameterExpression","ui":"<b>Cal.Data.Sql.jMakeParameterExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"parameter","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeTimeConstantExpression","name":"jMakeTimeConstantExpression","type":"CalDataSqljMakeTimeConstantExpression","ui":"<b>Cal.Data.Sql.jMakeTimeConstantExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeBooleanConstantExpression","name":"jMakeBooleanConstantExpression","type":"CalDataSqljMakeBooleanConstantExpression","ui":"<b>Cal.Data.Sql.jMakeBooleanConstantExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"booleanValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeNumericConstantExpression","name":"jMakeNumericConstantExpression","type":"CalDataSqljMakeNumericConstantExpression","ui":"<b>Cal.Data.Sql.jMakeNumericConstantExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"numericValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeStringConstantExpression","name":"jMakeStringConstantExpression","type":"CalDataSqljMakeStringConstantExpression","ui":"<b>Cal.Data.Sql.jMakeStringConstantExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"stringValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeNullConstantExpression","name":"jMakeNullConstantExpression","type":"CalDataSqljMakeNullConstantExpression","ui":"<b>Cal.Data.Sql.jMakeNullConstantExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeQueryFieldExpression","name":"jMakeQueryFieldExpression","type":"CalDataSqljMakeQueryFieldExpression","ui":"<b>Cal.Data.Sql.jMakeQueryFieldExpression<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldName","input":"text"},{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jConvertToTime","name":"jConvertToTime","type":"CalDataSqljConvertToTime","ui":"<b>Cal.Data.Sql.jConvertToTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jConvertToDouble","name":"jConvertToDouble","type":"CalDataSqljConvertToDouble","ui":"<b>Cal.Data.Sql.jConvertToDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jConvertToInt","name":"jConvertToInt","type":"CalDataSqljConvertToInt","ui":"<b>Cal.Data.Sql.jConvertToInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jConvertToString","name":"jConvertToString","type":"CalDataSqljConvertToString","ui":"<b>Cal.Data.Sql.jConvertToString<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jSearchedCaseOperator","name":"jSearchedCaseOperator","type":"CalDataSqljSearchedCaseOperator","ui":"<b>Cal.Data.Sql.jSearchedCaseOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jSimpleCaseOperator","name":"jSimpleCaseOperator","type":"CalDataSqljSimpleCaseOperator","ui":"<b>Cal.Data.Sql.jSimpleCaseOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jBetweenOperator","name":"jBetweenOperator","type":"CalDataSqljBetweenOperator","ui":"<b>Cal.Data.Sql.jBetweenOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jBitwiseXOrOperator","name":"jBitwiseXOrOperator","type":"CalDataSqljBitwiseXOrOperator","ui":"<b>Cal.Data.Sql.jBitwiseXOrOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jBitwiseOrOperator","name":"jBitwiseOrOperator","type":"CalDataSqljBitwiseOrOperator","ui":"<b>Cal.Data.Sql.jBitwiseOrOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jBitwiseAndOperator","name":"jBitwiseAndOperator","type":"CalDataSqljBitwiseAndOperator","ui":"<b>Cal.Data.Sql.jBitwiseAndOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jModulusOperator","name":"jModulusOperator","type":"CalDataSqljModulusOperator","ui":"<b>Cal.Data.Sql.jModulusOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jDivideOperator","name":"jDivideOperator","type":"CalDataSqljDivideOperator","ui":"<b>Cal.Data.Sql.jDivideOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMultiplyOperator","name":"jMultiplyOperator","type":"CalDataSqljMultiplyOperator","ui":"<b>Cal.Data.Sql.jMultiplyOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMinusOperator","name":"jMinusOperator","type":"CalDataSqljMinusOperator","ui":"<b>Cal.Data.Sql.jMinusOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jPlusOperator","name":"jPlusOperator","type":"CalDataSqljPlusOperator","ui":"<b>Cal.Data.Sql.jPlusOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jConcatOperator","name":"jConcatOperator","type":"CalDataSqljConcatOperator","ui":"<b>Cal.Data.Sql.jConcatOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jInOperator","name":"jInOperator","type":"CalDataSqljInOperator","ui":"<b>Cal.Data.Sql.jInOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jLikeOperator","name":"jLikeOperator","type":"CalDataSqljLikeOperator","ui":"<b>Cal.Data.Sql.jLikeOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jOrOperator","name":"jOrOperator","type":"CalDataSqljOrOperator","ui":"<b>Cal.Data.Sql.jOrOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jAndOperator","name":"jAndOperator","type":"CalDataSqljAndOperator","ui":"<b>Cal.Data.Sql.jAndOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jNotEqualOperator","name":"jNotEqualOperator","type":"CalDataSqljNotEqualOperator","ui":"<b>Cal.Data.Sql.jNotEqualOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jGreaterThanOrEqualOperator","name":"jGreaterThanOrEqualOperator","type":"CalDataSqljGreaterThanOrEqualOperator","ui":"<b>Cal.Data.Sql.jGreaterThanOrEqualOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jGreaterThanOperator","name":"jGreaterThanOperator","type":"CalDataSqljGreaterThanOperator","ui":"<b>Cal.Data.Sql.jGreaterThanOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jLessThanOrEqualOperator","name":"jLessThanOrEqualOperator","type":"CalDataSqljLessThanOrEqualOperator","ui":"<b>Cal.Data.Sql.jLessThanOrEqualOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jLessThanOperator","name":"jLessThanOperator","type":"CalDataSqljLessThanOperator","ui":"<b>Cal.Data.Sql.jLessThanOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jEqualOperator","name":"jEqualOperator","type":"CalDataSqljEqualOperator","ui":"<b>Cal.Data.Sql.jEqualOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jExistsOperator","name":"jExistsOperator","type":"CalDataSqljExistsOperator","ui":"<b>Cal.Data.Sql.jExistsOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jIsNotNullOperator","name":"jIsNotNullOperator","type":"CalDataSqljIsNotNullOperator","ui":"<b>Cal.Data.Sql.jIsNotNullOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jIsNullOperator","name":"jIsNullOperator","type":"CalDataSqljIsNullOperator","ui":"<b>Cal.Data.Sql.jIsNullOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jNegateOperator","name":"jNegateOperator","type":"CalDataSqljNegateOperator","ui":"<b>Cal.Data.Sql.jNegateOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jBitwiseNotOperator","name":"jBitwiseNotOperator","type":"CalDataSqljBitwiseNotOperator","ui":"<b>Cal.Data.Sql.jBitwiseNotOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jNotOperator","name":"jNotOperator","type":"CalDataSqljNotOperator","ui":"<b>Cal.Data.Sql.jNotOperator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeDatabaseFunction","name":"jMakeDatabaseFunction","type":"CalDataSqljMakeDatabaseFunction","ui":"<b>Cal.Data.Sql.jMakeDatabaseFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"functionName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeJoinSubtreeNode","name":"jMakeJoinSubtreeNode","type":"CalDataSqljMakeJoinSubtreeNode","ui":"<b>Cal.Data.Sql.jMakeJoinSubtreeNode<\/b><br\/>[CALDoc] ","terminals":[{"name":"rightNode","input":"text"},{"name":"joinType","input":"text"},{"name":"linkingExpression","input":"text"},{"name":"leftNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeJoinTableNode","name":"jMakeJoinTableNode","type":"CalDataSqljMakeJoinTableNode","ui":"<b>Cal.Data.Sql.jMakeJoinTableNode<\/b><br\/>[CALDoc] ","terminals":[{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jFULL_OUTER_JOIN","name":"jFULL_OUTER_JOIN","type":"CalDataSqljFULL_OUTER_JOIN","ui":"<b>Cal.Data.Sql.jFULL_OUTER_JOIN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jRIGHT_OUTER_JOIN","name":"jRIGHT_OUTER_JOIN","type":"CalDataSqljRIGHT_OUTER_JOIN","ui":"<b>Cal.Data.Sql.jRIGHT_OUTER_JOIN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jLEFT_OUTER_JOIN","name":"jLEFT_OUTER_JOIN","type":"CalDataSqljLEFT_OUTER_JOIN","ui":"<b>Cal.Data.Sql.jLEFT_OUTER_JOIN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jINNER_JOIN","name":"jINNER_JOIN","type":"CalDataSqljINNER_JOIN","ui":"<b>Cal.Data.Sql.jINNER_JOIN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeTopNOption","name":"jMakeTopNOption","type":"CalDataSqljMakeTopNOption","ui":"<b>Cal.Data.Sql.jMakeTopNOption<\/b><br\/>[CALDoc] ","terminals":[{"name":"n","input":"text"},{"name":"withTies","input":"text"},{"name":"percent","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeDistinctOption","name":"jMakeDistinctOption","type":"CalDataSqljMakeDistinctOption","ui":"<b>Cal.Data.Sql.jMakeDistinctOption<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeSubQueryTable","name":"jMakeSubQueryTable","type":"CalDataSqljMakeSubQueryTable","ui":"<b>Cal.Data.Sql.jMakeSubQueryTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"subquery","input":"text"},{"name":"tableAlias","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.jMakeBaseTable","name":"jMakeBaseTable","type":"CalDataSqljMakeBaseTable","ui":"<b>Cal.Data.Sql.jMakeBaseTable<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableName","input":"text"},{"name":"tableAlias","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.BaseTable","name":"BaseTable","type":"CalDataSqlBaseTable","ui":"<b>Cal.Data.Sql.BaseTable<\/b><br\/>[CALDoc] A reference to an actual database table with a given alias for the query.","terminals":[{"name":"tableRef","input":"text"},{"name":"tableAlias","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SubQueryTable","name":"SubQueryTable","type":"CalDataSqlSubQueryTable","ui":"<b>Cal.Data.Sql.SubQueryTable<\/b><br\/>[CALDoc] A nested SELECT query to be treated as a query table with a given alias.","terminals":[{"name":"tableAlias","input":"text"},{"name":"subquery","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpaqueSubQueryTable","name":"OpaqueSubQueryTable","type":"CalDataSqlOpaqueSubQueryTable","ui":"<b>Cal.Data.Sql.OpaqueSubQueryTable<\/b><br\/>[CALDoc] A nested SELECT statement to be treated as a query table with a given alias.","terminals":[{"name":"subqueryText","input":"text"},{"name":"tableAlias","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.Distinct","name":"Distinct","type":"CalDataSqlDistinct","ui":"<b>Cal.Data.Sql.Distinct<\/b><br\/>[CALDoc] This option indicates that only distinct rows should be returned for the query.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.TopN","name":"TopN","type":"CalDataSqlTopN","ui":"<b>Cal.Data.Sql.TopN<\/b><br\/>[CALDoc] This option indicates that the first N rows should be returned.","terminals":[{"name":"n","input":"text"},{"name":"percent","input":"text"},{"name":"withTies","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.JoinInfo","name":"JoinInfo","type":"CalDataSqlJoinInfo","ui":"<b>Cal.Data.Sql.JoinInfo<\/b><br\/>[CALDoc] Information about a join between 2 tables.","terminals":[{"name":"joinType","input":"text"},{"name":"rightTable","input":"text"},{"name":"fieldJoinExprs","input":"text"},{"name":"leftTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.InnerJoin","name":"InnerJoin","type":"CalDataSqlInnerJoin","ui":"<b>Cal.Data.Sql.InnerJoin<\/b><br\/>[CALDoc] The inner join option indicates that rows should be returned where \nthe join condition between the table is satisfied.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.LeftOuterJoin","name":"LeftOuterJoin","type":"CalDataSqlLeftOuterJoin","ui":"<b>Cal.Data.Sql.LeftOuterJoin<\/b><br\/>[CALDoc] The left outer join option indicates that all rows from the left table should \nbe included along with values from the right table where the join condition is satisfied.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.RightOuterJoin","name":"RightOuterJoin","type":"CalDataSqlRightOuterJoin","ui":"<b>Cal.Data.Sql.RightOuterJoin<\/b><br\/>[CALDoc] The right outer join option indicates that all rows from the right table should \nbe included along with values from the left table where the join condition is satisfied.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.FullOuterJoin","name":"FullOuterJoin","type":"CalDataSqlFullOuterJoin","ui":"<b>Cal.Data.Sql.FullOuterJoin<\/b><br\/>[CALDoc] The full outer join option indicates that all rows satisfying the join condition should be returned\nas well as any unmatched rows from both the left and right tables.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.JoinTable","name":"JoinTable","type":"CalDataSqlJoinTable","ui":"<b>Cal.Data.Sql.JoinTable<\/b><br\/>[CALDoc] A node representing a single query table.","terminals":[{"name":"table","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.JoinSubtree","name":"JoinSubtree","type":"CalDataSqlJoinSubtree","ui":"<b>Cal.Data.Sql.JoinSubtree<\/b><br\/>[CALDoc] A node specifying a join between tables in two join trees.","terminals":[{"name":"joinType","input":"text"},{"name":"linkingExpr","input":"text"},{"name":"leftNode","input":"text"},{"name":"rightNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.JoinSet","name":"JoinSet","type":"CalDataSqlJoinSet","ui":"<b>Cal.Data.Sql.JoinSet<\/b><br\/>[CALDoc] A named set of joins.","terminals":[{"name":"name","input":"text"},{"name":"joins","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.QueryField","name":"QueryField","type":"CalDataSqlQueryField","ui":"<b>Cal.Data.Sql.QueryField<\/b><br\/>[CALDoc] A reference to a field in a query table.","terminals":[{"name":"fieldName","input":"text"},{"name":"queryTable","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ConstExpr","name":"ConstExpr","type":"CalDataSqlConstExpr","ui":"<b>Cal.Data.Sql.ConstExpr<\/b><br\/>[CALDoc] A literal value expression.","terminals":[{"name":"constantValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ParameterExpr","name":"ParameterExpr","type":"CalDataSqlParameterExpr","ui":"<b>Cal.Data.Sql.ParameterExpr<\/b><br\/>[CALDoc] A parameter placeholder expression.","terminals":[{"name":"parameter","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.FunctionExpr","name":"FunctionExpr","type":"CalDataSqlFunctionExpr","ui":"<b>Cal.Data.Sql.FunctionExpr<\/b><br\/>[CALDoc] A function expression.","terminals":[{"name":"func","input":"text"},{"name":"arguments","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.TypedExpr","name":"TypedExpr","type":"CalDataSqlTypedExpr","ui":"<b>Cal.Data.Sql.TypedExpr<\/b><br\/>[CALDoc] ","terminals":[{"name":"untypedExpr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.StringValue","name":"StringValue","type":"CalDataSqlStringValue","ui":"<b>Cal.Data.Sql.StringValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"strValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.NumberValue","name":"NumberValue","type":"CalDataSqlNumberValue","ui":"<b>Cal.Data.Sql.NumberValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"numValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.BooleanValue","name":"BooleanValue","type":"CalDataSqlBooleanValue","ui":"<b>Cal.Data.Sql.BooleanValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"boolValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.TimeValue","name":"TimeValue","type":"CalDataSqlTimeValue","ui":"<b>Cal.Data.Sql.TimeValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.UnnamedParameter","name":"UnnamedParameter","type":"CalDataSqlUnnamedParameter","ui":"<b>Cal.Data.Sql.UnnamedParameter<\/b><br\/>[CALDoc] A parameter without a name.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.NamedParameter","name":"NamedParameter","type":"CalDataSqlNamedParameter","ui":"<b>Cal.Data.Sql.NamedParameter<\/b><br\/>[CALDoc] A parameter with an associated name.\n","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpNot","name":"OpNot","type":"CalDataSqlOpNot","ui":"<b>Cal.Data.Sql.OpNot<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpBitNot","name":"OpBitNot","type":"CalDataSqlOpBitNot","ui":"<b>Cal.Data.Sql.OpBitNot<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpNegate","name":"OpNegate","type":"CalDataSqlOpNegate","ui":"<b>Cal.Data.Sql.OpNegate<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpIsNull","name":"OpIsNull","type":"CalDataSqlOpIsNull","ui":"<b>Cal.Data.Sql.OpIsNull<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpIsNotNull","name":"OpIsNotNull","type":"CalDataSqlOpIsNotNull","ui":"<b>Cal.Data.Sql.OpIsNotNull<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpExists","name":"OpExists","type":"CalDataSqlOpExists","ui":"<b>Cal.Data.Sql.OpExists<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpEq","name":"OpEq","type":"CalDataSqlOpEq","ui":"<b>Cal.Data.Sql.OpEq<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpLt","name":"OpLt","type":"CalDataSqlOpLt","ui":"<b>Cal.Data.Sql.OpLt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpLtEq","name":"OpLtEq","type":"CalDataSqlOpLtEq","ui":"<b>Cal.Data.Sql.OpLtEq<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpGt","name":"OpGt","type":"CalDataSqlOpGt","ui":"<b>Cal.Data.Sql.OpGt<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpGtEq","name":"OpGtEq","type":"CalDataSqlOpGtEq","ui":"<b>Cal.Data.Sql.OpGtEq<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpNotEq","name":"OpNotEq","type":"CalDataSqlOpNotEq","ui":"<b>Cal.Data.Sql.OpNotEq<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpAnd","name":"OpAnd","type":"CalDataSqlOpAnd","ui":"<b>Cal.Data.Sql.OpAnd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpOr","name":"OpOr","type":"CalDataSqlOpOr","ui":"<b>Cal.Data.Sql.OpOr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpLike","name":"OpLike","type":"CalDataSqlOpLike","ui":"<b>Cal.Data.Sql.OpLike<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpIn","name":"OpIn","type":"CalDataSqlOpIn","ui":"<b>Cal.Data.Sql.OpIn<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpCat","name":"OpCat","type":"CalDataSqlOpCat","ui":"<b>Cal.Data.Sql.OpCat<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpPlus","name":"OpPlus","type":"CalDataSqlOpPlus","ui":"<b>Cal.Data.Sql.OpPlus<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpMinus","name":"OpMinus","type":"CalDataSqlOpMinus","ui":"<b>Cal.Data.Sql.OpMinus<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpMul","name":"OpMul","type":"CalDataSqlOpMul","ui":"<b>Cal.Data.Sql.OpMul<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpDiv","name":"OpDiv","type":"CalDataSqlOpDiv","ui":"<b>Cal.Data.Sql.OpDiv<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpMod","name":"OpMod","type":"CalDataSqlOpMod","ui":"<b>Cal.Data.Sql.OpMod<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpBitAnd","name":"OpBitAnd","type":"CalDataSqlOpBitAnd","ui":"<b>Cal.Data.Sql.OpBitAnd<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpBitOr","name":"OpBitOr","type":"CalDataSqlOpBitOr","ui":"<b>Cal.Data.Sql.OpBitOr<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpBitXor","name":"OpBitXor","type":"CalDataSqlOpBitXor","ui":"<b>Cal.Data.Sql.OpBitXor<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpBetween","name":"OpBetween","type":"CalDataSqlOpBetween","ui":"<b>Cal.Data.Sql.OpBetween<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpCase_Simple","name":"OpCase_Simple","type":"CalDataSqlOpCase_Simple","ui":"<b>Cal.Data.Sql.OpCase_Simple<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.OpCase_Searched","name":"OpCase_Searched","type":"CalDataSqlOpCase_Searched","ui":"<b>Cal.Data.Sql.OpCase_Searched<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ConvertToStringFunction","name":"ConvertToStringFunction","type":"CalDataSqlConvertToStringFunction","ui":"<b>Cal.Data.Sql.ConvertToStringFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ConvertToIntFunction","name":"ConvertToIntFunction","type":"CalDataSqlConvertToIntFunction","ui":"<b>Cal.Data.Sql.ConvertToIntFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ConvertToDoubleFunction","name":"ConvertToDoubleFunction","type":"CalDataSqlConvertToDoubleFunction","ui":"<b>Cal.Data.Sql.ConvertToDoubleFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ConvertToTimeFunction","name":"ConvertToTimeFunction","type":"CalDataSqlConvertToTimeFunction","ui":"<b>Cal.Data.Sql.ConvertToTimeFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AbsFunction","name":"AbsFunction","type":"CalDataSqlAbsFunction","ui":"<b>Cal.Data.Sql.AbsFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AcosFunction","name":"AcosFunction","type":"CalDataSqlAcosFunction","ui":"<b>Cal.Data.Sql.AcosFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AsinFucntion","name":"AsinFucntion","type":"CalDataSqlAsinFucntion","ui":"<b>Cal.Data.Sql.AsinFucntion<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AtanFunction","name":"AtanFunction","type":"CalDataSqlAtanFunction","ui":"<b>Cal.Data.Sql.AtanFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.Atan2Function","name":"Atan2Function","type":"CalDataSqlAtan2Function","ui":"<b>Cal.Data.Sql.Atan2Function<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CeilingFunction","name":"CeilingFunction","type":"CalDataSqlCeilingFunction","ui":"<b>Cal.Data.Sql.CeilingFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CosFunction","name":"CosFunction","type":"CalDataSqlCosFunction","ui":"<b>Cal.Data.Sql.CosFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CotFunction","name":"CotFunction","type":"CalDataSqlCotFunction","ui":"<b>Cal.Data.Sql.CotFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DegreesFunction","name":"DegreesFunction","type":"CalDataSqlDegreesFunction","ui":"<b>Cal.Data.Sql.DegreesFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ExpFunction","name":"ExpFunction","type":"CalDataSqlExpFunction","ui":"<b>Cal.Data.Sql.ExpFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.FloorFunction","name":"FloorFunction","type":"CalDataSqlFloorFunction","ui":"<b>Cal.Data.Sql.FloorFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.LogFunction","name":"LogFunction","type":"CalDataSqlLogFunction","ui":"<b>Cal.Data.Sql.LogFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.Log10Function","name":"Log10Function","type":"CalDataSqlLog10Function","ui":"<b>Cal.Data.Sql.Log10Function<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ModFunction","name":"ModFunction","type":"CalDataSqlModFunction","ui":"<b>Cal.Data.Sql.ModFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.PiFunction","name":"PiFunction","type":"CalDataSqlPiFunction","ui":"<b>Cal.Data.Sql.PiFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.PowerFunction","name":"PowerFunction","type":"CalDataSqlPowerFunction","ui":"<b>Cal.Data.Sql.PowerFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.RadiansFunction","name":"RadiansFunction","type":"CalDataSqlRadiansFunction","ui":"<b>Cal.Data.Sql.RadiansFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.RandFunction","name":"RandFunction","type":"CalDataSqlRandFunction","ui":"<b>Cal.Data.Sql.RandFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.RoundFunction","name":"RoundFunction","type":"CalDataSqlRoundFunction","ui":"<b>Cal.Data.Sql.RoundFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SignFunction","name":"SignFunction","type":"CalDataSqlSignFunction","ui":"<b>Cal.Data.Sql.SignFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SinFunction","name":"SinFunction","type":"CalDataSqlSinFunction","ui":"<b>Cal.Data.Sql.SinFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SqrtFunction","name":"SqrtFunction","type":"CalDataSqlSqrtFunction","ui":"<b>Cal.Data.Sql.SqrtFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.TanFunction","name":"TanFunction","type":"CalDataSqlTanFunction","ui":"<b>Cal.Data.Sql.TanFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.TruncateFunction","name":"TruncateFunction","type":"CalDataSqlTruncateFunction","ui":"<b>Cal.Data.Sql.TruncateFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AsciiFunction","name":"AsciiFunction","type":"CalDataSqlAsciiFunction","ui":"<b>Cal.Data.Sql.AsciiFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CharFunction","name":"CharFunction","type":"CalDataSqlCharFunction","ui":"<b>Cal.Data.Sql.CharFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DifferenceFunction","name":"DifferenceFunction","type":"CalDataSqlDifferenceFunction","ui":"<b>Cal.Data.Sql.DifferenceFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.InsertFunction","name":"InsertFunction","type":"CalDataSqlInsertFunction","ui":"<b>Cal.Data.Sql.InsertFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.LcaseFunction","name":"LcaseFunction","type":"CalDataSqlLcaseFunction","ui":"<b>Cal.Data.Sql.LcaseFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.LeftFunction","name":"LeftFunction","type":"CalDataSqlLeftFunction","ui":"<b>Cal.Data.Sql.LeftFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.LengthFunction","name":"LengthFunction","type":"CalDataSqlLengthFunction","ui":"<b>Cal.Data.Sql.LengthFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.LocateFunction","name":"LocateFunction","type":"CalDataSqlLocateFunction","ui":"<b>Cal.Data.Sql.LocateFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.LtrimFunction","name":"LtrimFunction","type":"CalDataSqlLtrimFunction","ui":"<b>Cal.Data.Sql.LtrimFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.RepeatFunction","name":"RepeatFunction","type":"CalDataSqlRepeatFunction","ui":"<b>Cal.Data.Sql.RepeatFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.ReplaceFunction","name":"ReplaceFunction","type":"CalDataSqlReplaceFunction","ui":"<b>Cal.Data.Sql.ReplaceFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.RightFunction","name":"RightFunction","type":"CalDataSqlRightFunction","ui":"<b>Cal.Data.Sql.RightFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.RtrimFunction","name":"RtrimFunction","type":"CalDataSqlRtrimFunction","ui":"<b>Cal.Data.Sql.RtrimFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SoundexFunction","name":"SoundexFunction","type":"CalDataSqlSoundexFunction","ui":"<b>Cal.Data.Sql.SoundexFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SpaceFunction","name":"SpaceFunction","type":"CalDataSqlSpaceFunction","ui":"<b>Cal.Data.Sql.SpaceFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SubstringFunction","name":"SubstringFunction","type":"CalDataSqlSubstringFunction","ui":"<b>Cal.Data.Sql.SubstringFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.UcaseFunction","name":"UcaseFunction","type":"CalDataSqlUcaseFunction","ui":"<b>Cal.Data.Sql.UcaseFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DatabaseFunction","name":"DatabaseFunction","type":"CalDataSqlDatabaseFunction","ui":"<b>Cal.Data.Sql.DatabaseFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.UserFunction","name":"UserFunction","type":"CalDataSqlUserFunction","ui":"<b>Cal.Data.Sql.UserFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.IfNullFunction","name":"IfNullFunction","type":"CalDataSqlIfNullFunction","ui":"<b>Cal.Data.Sql.IfNullFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.NullIfFunction","name":"NullIfFunction","type":"CalDataSqlNullIfFunction","ui":"<b>Cal.Data.Sql.NullIfFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DayNameFunction","name":"DayNameFunction","type":"CalDataSqlDayNameFunction","ui":"<b>Cal.Data.Sql.DayNameFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DayOfWeekFunction","name":"DayOfWeekFunction","type":"CalDataSqlDayOfWeekFunction","ui":"<b>Cal.Data.Sql.DayOfWeekFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DayOfMonthFunction","name":"DayOfMonthFunction","type":"CalDataSqlDayOfMonthFunction","ui":"<b>Cal.Data.Sql.DayOfMonthFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DayOfYearFunction","name":"DayOfYearFunction","type":"CalDataSqlDayOfYearFunction","ui":"<b>Cal.Data.Sql.DayOfYearFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.HourFunction","name":"HourFunction","type":"CalDataSqlHourFunction","ui":"<b>Cal.Data.Sql.HourFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.MinuteFunction","name":"MinuteFunction","type":"CalDataSqlMinuteFunction","ui":"<b>Cal.Data.Sql.MinuteFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.MonthFunction","name":"MonthFunction","type":"CalDataSqlMonthFunction","ui":"<b>Cal.Data.Sql.MonthFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.MonthNameFunction","name":"MonthNameFunction","type":"CalDataSqlMonthNameFunction","ui":"<b>Cal.Data.Sql.MonthNameFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.NowFunction","name":"NowFunction","type":"CalDataSqlNowFunction","ui":"<b>Cal.Data.Sql.NowFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.QuarterFunction","name":"QuarterFunction","type":"CalDataSqlQuarterFunction","ui":"<b>Cal.Data.Sql.QuarterFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SecondFunction","name":"SecondFunction","type":"CalDataSqlSecondFunction","ui":"<b>Cal.Data.Sql.SecondFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.WeekFunction","name":"WeekFunction","type":"CalDataSqlWeekFunction","ui":"<b>Cal.Data.Sql.WeekFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.YearFunction","name":"YearFunction","type":"CalDataSqlYearFunction","ui":"<b>Cal.Data.Sql.YearFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DateTimeAddFunction","name":"DateTimeAddFunction","type":"CalDataSqlDateTimeAddFunction","ui":"<b>Cal.Data.Sql.DateTimeAddFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeInterval","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DateTimeDiffFunction","name":"DateTimeDiffFunction","type":"CalDataSqlDateTimeDiffFunction","ui":"<b>Cal.Data.Sql.DateTimeDiffFunction<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeInterval","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrCount","name":"AggrCount","type":"CalDataSqlAggrCount","ui":"<b>Cal.Data.Sql.AggrCount<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrSum","name":"AggrSum","type":"CalDataSqlAggrSum","ui":"<b>Cal.Data.Sql.AggrSum<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrAvg","name":"AggrAvg","type":"CalDataSqlAggrAvg","ui":"<b>Cal.Data.Sql.AggrAvg<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrMin","name":"AggrMin","type":"CalDataSqlAggrMin","ui":"<b>Cal.Data.Sql.AggrMin<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrMax","name":"AggrMax","type":"CalDataSqlAggrMax","ui":"<b>Cal.Data.Sql.AggrMax<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrDistinctCount","name":"AggrDistinctCount","type":"CalDataSqlAggrDistinctCount","ui":"<b>Cal.Data.Sql.AggrDistinctCount<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrDistinctSum","name":"AggrDistinctSum","type":"CalDataSqlAggrDistinctSum","ui":"<b>Cal.Data.Sql.AggrDistinctSum<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrDistinctAvg","name":"AggrDistinctAvg","type":"CalDataSqlAggrDistinctAvg","ui":"<b>Cal.Data.Sql.AggrDistinctAvg<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrCountAll","name":"AggrCountAll","type":"CalDataSqlAggrCountAll","ui":"<b>Cal.Data.Sql.AggrCountAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrStdDev","name":"AggrStdDev","type":"CalDataSqlAggrStdDev","ui":"<b>Cal.Data.Sql.AggrStdDev<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrStdDevP","name":"AggrStdDevP","type":"CalDataSqlAggrStdDevP","ui":"<b>Cal.Data.Sql.AggrStdDevP<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrVar","name":"AggrVar","type":"CalDataSqlAggrVar","ui":"<b>Cal.Data.Sql.AggrVar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrVarP","name":"AggrVarP","type":"CalDataSqlAggrVarP","ui":"<b>Cal.Data.Sql.AggrVarP<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.AggrOther","name":"AggrOther","type":"CalDataSqlAggrOther","ui":"<b>Cal.Data.Sql.AggrOther<\/b><br\/>[CALDoc] ","terminals":[{"name":"other","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.FunctionOther","name":"FunctionOther","type":"CalDataSqlFunctionOther","ui":"<b>Cal.Data.Sql.FunctionOther<\/b><br\/>[CALDoc] ","terminals":[{"name":"funcName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.YearInterval","name":"YearInterval","type":"CalDataSqlYearInterval","ui":"<b>Cal.Data.Sql.YearInterval<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.QuarterInterval","name":"QuarterInterval","type":"CalDataSqlQuarterInterval","ui":"<b>Cal.Data.Sql.QuarterInterval<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.MonthInterval","name":"MonthInterval","type":"CalDataSqlMonthInterval","ui":"<b>Cal.Data.Sql.MonthInterval<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DayInterval","name":"DayInterval","type":"CalDataSqlDayInterval","ui":"<b>Cal.Data.Sql.DayInterval<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.HourInterval","name":"HourInterval","type":"CalDataSqlHourInterval","ui":"<b>Cal.Data.Sql.HourInterval<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.MinuteInterval","name":"MinuteInterval","type":"CalDataSqlMinuteInterval","ui":"<b>Cal.Data.Sql.MinuteInterval<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SecondInterval","name":"SecondInterval","type":"CalDataSqlSecondInterval","ui":"<b>Cal.Data.Sql.SecondInterval<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.Query","name":"Query","type":"CalDataSqlQuery","ui":"<b>Cal.Data.Sql.Query<\/b><br\/>[CALDoc] ","terminals":[{"name":"joins","input":"text"},{"name":"columns","input":"text"},{"name":"groups","input":"text"},{"name":"orderings","input":"text"},{"name":"options","input":"text"},{"name":"restriction","input":"text"},{"name":"groupRestriction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.Union","name":"Union","type":"CalDataSqlUnion","ui":"<b>Cal.Data.Sql.Union<\/b><br\/>[CALDoc] ","terminals":[{"name":"query1","input":"text"},{"name":"query2","input":"text"},{"name":"unionAll","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SqlBuilderState","name":"SqlBuilderState","type":"CalDataSqlSqlBuilderState","ui":"<b>Cal.Data.Sql.SqlBuilderState<\/b><br\/>[CALDoc] ","terminals":[{"name":"outerQueryTables","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.SqlBuilder","name":"SqlBuilder","type":"CalDataSqlSqlBuilder","ui":"<b>Cal.Data.Sql.SqlBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"buildWhereClauseFn","input":"text"},{"name":"functionToSqlFn","input":"text"},{"name":"addParensFn","input":"text"},{"name":"primitiveValueBuilder","input":"text"},{"name":"buildDropTableStatementFn","input":"text"},{"name":"buildGroupByClauseFn","input":"text"},{"name":"buildOrderByClauseFn","input":"text"},{"name":"buildCreateDatabaseStatementFn","input":"text"},{"name":"prepareQueryFn","input":"text"},{"name":"buildHavingClauseFn","input":"text"},{"name":"buildInsertQueryValuesStatementFn","input":"text"},{"name":"parameterToSqlFn","input":"text"},{"name":"listToSqlFn","input":"text"},{"name":"buildFromClauseFn","input":"text"},{"name":"constructUnionQueryFn","input":"text"},{"name":"buildInsertValuesStatementFn","input":"text"},{"name":"buildCreateTableStatementFn","input":"text"},{"name":"buildDropDatabaseStatementFn","input":"text"},{"name":"buildCommitStatementFn","input":"text"},{"name":"buildDropViewStatementFn","input":"text"},{"name":"quoteIdentifierFn","input":"text"},{"name":"buildSelectClauseFn","input":"text"},{"name":"constructQueryFn","input":"text"},{"name":"buildCreateViewStatementFn","input":"text"},{"name":"buildFieldDescriptionFn","input":"text"},{"name":"makeSafeNameFn","input":"text"},{"name":"buildUpdateValuesStatementFn","input":"text"},{"name":"buildTableAndAliasTextFn","input":"text"},{"name":"buildFieldTypeFn","input":"text"},{"name":"buildDeleteRowsStatementFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CreateDatabaseStatement","name":"CreateDatabaseStatement","type":"CalDataSqlCreateDatabaseStatement","ui":"<b>Cal.Data.Sql.CreateDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"skipIfDatabaseExists","input":"text"},{"name":"databaseRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DropDatabaseStatement","name":"DropDatabaseStatement","type":"CalDataSqlDropDatabaseStatement","ui":"<b>Cal.Data.Sql.DropDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"onlyIfDatabaseExists","input":"text"},{"name":"databaseRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CreateTableStatement","name":"CreateTableStatement","type":"CalDataSqlCreateTableStatement","ui":"<b>Cal.Data.Sql.CreateTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableDesc","input":"text"},{"name":"skipIfTableExists","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CreateViewStatement","name":"CreateViewStatement","type":"CalDataSqlCreateViewStatement","ui":"<b>Cal.Data.Sql.CreateViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"viewDefinition","input":"text"},{"name":"skipIfViewExists","input":"text"},{"name":"viewRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DropTableStatement","name":"DropTableStatement","type":"CalDataSqlDropTableStatement","ui":"<b>Cal.Data.Sql.DropTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"onlyIfTableExists","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DropViewStatement","name":"DropViewStatement","type":"CalDataSqlDropViewStatement","ui":"<b>Cal.Data.Sql.DropViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"viewRef","input":"text"},{"name":"onlyIfViewExists","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.InsertValuesStatement","name":"InsertValuesStatement","type":"CalDataSqlInsertValuesStatement","ui":"<b>Cal.Data.Sql.InsertValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"maybeDestColumns","input":"text"},{"name":"tableRef","input":"text"},{"name":"rowValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.InsertQueryValuesStatement","name":"InsertQueryValuesStatement","type":"CalDataSqlInsertQueryValuesStatement","ui":"<b>Cal.Data.Sql.InsertQueryValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"maybeDestColumns","input":"text"},{"name":"insertQuery","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.UpdateValuesStatement","name":"UpdateValuesStatement","type":"CalDataSqlUpdateValuesStatement","ui":"<b>Cal.Data.Sql.UpdateValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"newValues","input":"text"},{"name":"tableRef","input":"text"},{"name":"destColumns","input":"text"},{"name":"condition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.DeleteRowsStatement","name":"DeleteRowsStatement","type":"CalDataSqlDeleteRowsStatement","ui":"<b>Cal.Data.Sql.DeleteRowsStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"condition","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CommitStatement","name":"CommitStatement","type":"CalDataSqlCommitStatement","ui":"<b>Cal.Data.Sql.CommitStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.Sql.CompoundStatement","name":"CompoundStatement","type":"CalDataSqlCompoundStatement","ui":"<b>Cal.Data.Sql.CompoundStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"statements","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.Sql"]},{"description":"Cal.Data.SqlBuilder.bestSqlBuilderForDatabase","name":"bestSqlBuilderForDatabase","type":"CalDataSqlBuilderbestSqlBuilderForDatabase","ui":"<b>Cal.Data.SqlBuilder.bestSqlBuilderForDatabase<\/b><br\/>[CALDoc] Returns the best <code>SqlBuilder<\/code> for the type of database type name specified.\n","terminals":[{"name":"databaseTypeName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2SqlBuilder","name":"db2SqlBuilder","type":"CalDataSqlBuilderdb2SqlBuilder","ui":"<b>Cal.Data.SqlBuilder.db2SqlBuilder<\/b><br\/>[CALDoc] The DB2 SQL builder generates queries which will work with IBM DB2 databases.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_primitiveValueBuilder","name":"db2_primitiveValueBuilder","type":"CalDataSqlBuilderdb2_primitiveValueBuilder","ui":"<b>Cal.Data.SqlBuilder.db2_primitiveValueBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_functionToSql","name":"db2_functionToSql","type":"CalDataSqlBuilderdb2_functionToSql","ui":"<b>Cal.Data.SqlBuilder.db2_functionToSql<\/b><br\/>[CALDoc] Customizes the SQL generated for certain DB2 functions.","terminals":[{"name":"func","input":"text"},{"name":"builder","input":"text"},{"name":"builderState","input":"text"},{"name":"arguments","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradataSqlBuilder","name":"ncrTeradataSqlBuilder","type":"CalDataSqlBuilderncrTeradataSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.ncrTeradataSqlBuilder<\/b><br\/>[CALDoc] The SQL builder generates queries which will work with Teradata databases.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradataPrimitiveValueBuilder","name":"ncrTeradataPrimitiveValueBuilder","type":"CalDataSqlBuilderncrTeradataPrimitiveValueBuilder","ui":"<b>Cal.Data.SqlBuilder.ncrTeradataPrimitiveValueBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradata_buildFieldType","name":"ncrTeradata_buildFieldType","type":"CalDataSqlBuilderncrTeradata_buildFieldType","ui":"<b>Cal.Data.SqlBuilder.ncrTeradata_buildFieldType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_buildFieldType","name":"db2_buildFieldType","type":"CalDataSqlBuilderdb2_buildFieldType","ui":"<b>Cal.Data.SqlBuilder.db2_buildFieldType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradata_prepareQuery","name":"ncrTeradata_prepareQuery","type":"CalDataSqlBuilderncrTeradata_prepareQuery","ui":"<b>Cal.Data.SqlBuilder.ncrTeradata_prepareQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"query","input":"text"},{"name":"builderState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradata_castDateFieldsToTimeStamps","name":"ncrTeradata_castDateFieldsToTimeStamps","type":"CalDataSqlBuilderncrTeradata_castDateFieldsToTimeStamps","ui":"<b>Cal.Data.SqlBuilder.ncrTeradata_castDateFieldsToTimeStamps<\/b><br\/>[CALDoc] ","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.derbySqlBuilder","name":"derbySqlBuilder","type":"CalDataSqlBuilderderbySqlBuilder","ui":"<b>Cal.Data.SqlBuilder.derbySqlBuilder<\/b><br\/>[CALDoc] The SQL builder for Derby differs from the default SQL builder\nin the identifier quoting characters - double quotes instead of square brackets","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.derby_quoteIdentifier","name":"derby_quoteIdentifier","type":"CalDataSqlBuilderderby_quoteIdentifier","ui":"<b>Cal.Data.SqlBuilder.derby_quoteIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.derby_functionToSql","name":"derby_functionToSql","type":"CalDataSqlBuilderderby_functionToSql","ui":"<b>Cal.Data.SqlBuilder.derby_functionToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"func","input":"text"},{"name":"builderState","input":"text"},{"name":"arguments","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_timeToSql","name":"db2_timeToSql","type":"CalDataSqlBuilderdb2_timeToSql","ui":"<b>Cal.Data.SqlBuilder.db2_timeToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeZone","input":"text"},{"name":"timeVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_timestampPattern","name":"db2_timestampPattern","type":"CalDataSqlBuilderdb2_timestampPattern","ui":"<b>Cal.Data.SqlBuilder.db2_timestampPattern<\/b><br\/>[CALDoc] Generates timestamps in the following form:  '2005-05-20 13:23:45.0'","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_tableAndAliasText","name":"db2_tableAndAliasText","type":"CalDataSqlBuilderdb2_tableAndAliasText","ui":"<b>Cal.Data.SqlBuilder.db2_tableAndAliasText<\/b><br\/>[CALDoc] For DB2, don't include the 'AS' keyword between a table name and the table alias.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.odbcAccessSqlBuilder","name":"odbcAccessSqlBuilder","type":"CalDataSqlBuilderodbcAccessSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.odbcAccessSqlBuilder<\/b><br\/>[CALDoc] For ODBC-Access, there are some problems using the square brackets as quotes inside of the \nODBC function escape syntax, so use back-quotes instead.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.odbcSqlBuilder","name":"odbcSqlBuilder","type":"CalDataSqlBuilderodbcSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.odbcSqlBuilder<\/b><br\/>[CALDoc] The ODBC SQL builder generates queries which will work with typical ODBC datasources.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.odbc_primitiveValueBuilder","name":"odbc_primitiveValueBuilder","type":"CalDataSqlBuilderodbc_primitiveValueBuilder","ui":"<b>Cal.Data.SqlBuilder.odbc_primitiveValueBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.odbc_functionToSql","name":"odbc_functionToSql","type":"CalDataSqlBuilderodbc_functionToSql","ui":"<b>Cal.Data.SqlBuilder.odbc_functionToSql<\/b><br\/>[CALDoc] Generates SQL function SQL is the form:  {fn WEEK(Table1.Field1)}","terminals":[{"name":"builderState","input":"text"},{"name":"func","input":"text"},{"name":"builder","input":"text"},{"name":"arguments","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.odbc_functionNameText","name":"odbc_functionNameText","type":"CalDataSqlBuilderodbc_functionNameText","ui":"<b>Cal.Data.SqlBuilder.odbc_functionNameText<\/b><br\/>[CALDoc] Override the default names of some of the functions for ODBC.","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradata_quoteIdentifier","name":"ncrTeradata_quoteIdentifier","type":"CalDataSqlBuilderncrTeradata_quoteIdentifier","ui":"<b>Cal.Data.SqlBuilder.ncrTeradata_quoteIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradata_functionToSql","name":"ncrTeradata_functionToSql","type":"CalDataSqlBuilderncrTeradata_functionToSql","ui":"<b>Cal.Data.SqlBuilder.ncrTeradata_functionToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"arguments","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracleSqlBuilder","name":"oracleSqlBuilder","type":"CalDataSqlBuilderoracleSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.oracleSqlBuilder<\/b><br\/>[CALDoc] The Oracle SQL builder generates queries which will work with Oracle databases.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_primitiveValueBuilder","name":"oracle_primitiveValueBuilder","type":"CalDataSqlBuilderoracle_primitiveValueBuilder","ui":"<b>Cal.Data.SqlBuilder.oracle_primitiveValueBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_timeToSql","name":"oracle_timeToSql","type":"CalDataSqlBuilderoracle_timeToSql","ui":"<b>Cal.Data.SqlBuilder.oracle_timeToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeVal","input":"text"},{"name":"timeZone","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_timestampPattern","name":"oracle_timestampPattern","type":"CalDataSqlBuilderoracle_timestampPattern","ui":"<b>Cal.Data.SqlBuilder.oracle_timestampPattern<\/b><br\/>[CALDoc] Generates timestamps in the following form:  TIMESTAMP '2005-05-20 13:23:45.0'","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_makeSafeNameWithLengthCheck","name":"default_makeSafeNameWithLengthCheck","type":"CalDataSqlBuilderdefault_makeSafeNameWithLengthCheck","ui":"<b>Cal.Data.SqlBuilder.default_makeSafeNameWithLengthCheck<\/b><br\/>[CALDoc] Returns a SQL-safe version of the specified name and trim the trailing\ncharacters if the length of the name exceeds the specified maximum length.","terminals":[{"name":"name","input":"text"},{"name":"safeNameFn","input":"text"},{"name":"maxLength","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_tableAndAliasText","name":"oracle_tableAndAliasText","type":"CalDataSqlBuilderoracle_tableAndAliasText","ui":"<b>Cal.Data.SqlBuilder.oracle_tableAndAliasText<\/b><br\/>[CALDoc] For Oracle, don't include the 'AS' keyword between a table name and the table alias.","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_quoteIdentifier","name":"oracle_quoteIdentifier","type":"CalDataSqlBuilderoracle_quoteIdentifier","ui":"<b>Cal.Data.SqlBuilder.oracle_quoteIdentifier<\/b><br\/>[CALDoc] Quoting of identifiers is different than the default.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_quotesNeeded","name":"oracle_quotesNeeded","type":"CalDataSqlBuilderoracle_quotesNeeded","ui":"<b>Cal.Data.SqlBuilder.oracle_quotesNeeded<\/b><br\/>[CALDoc] Returns whether the specified identifier needs to be quoted.","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.quotesNeededHelper","name":"quotesNeededHelper","type":"CalDataSqlBuilderquotesNeededHelper","ui":"<b>Cal.Data.SqlBuilder.quotesNeededHelper<\/b><br\/>[CALDoc] Returns whether the specified identifier needs to be quoted.","terminals":[{"name":"isValidFirstSqlChar","input":"text"},{"name":"isValidSqlChar","input":"text"},{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_functionToSql","name":"oracle_functionToSql","type":"CalDataSqlBuilderoracle_functionToSql","ui":"<b>Cal.Data.SqlBuilder.oracle_functionToSql<\/b><br\/>[CALDoc] Customizes the SQL generated for certain Oracle functions.","terminals":[{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"func","input":"text"},{"name":"arguments","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_buildDropViewStatement","name":"oracle_buildDropViewStatement","type":"CalDataSqlBuilderoracle_buildDropViewStatement","ui":"<b>Cal.Data.SqlBuilder.oracle_buildDropViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"onlyIfViewExists","input":"text"},{"name":"viewRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_buildDropTableStatement","name":"oracle_buildDropTableStatement","type":"CalDataSqlBuilderoracle_buildDropTableStatement","ui":"<b>Cal.Data.SqlBuilder.oracle_buildDropTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableRef","input":"text"},{"name":"onlyIfTableExists","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_buildCreateTableStatement","name":"oracle_buildCreateTableStatement","type":"CalDataSqlBuilderoracle_buildCreateTableStatement","ui":"<b>Cal.Data.SqlBuilder.oracle_buildCreateTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"tableDesc","input":"text"},{"name":"skipIfTableExists","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_prepareQuery","name":"oracle_prepareQuery","type":"CalDataSqlBuilderoracle_prepareQuery","ui":"<b>Cal.Data.SqlBuilder.oracle_prepareQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"query","input":"text"},{"name":"builderState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.odbcAccess_quoteIdentifier","name":"odbcAccess_quoteIdentifier","type":"CalDataSqlBuilderodbcAccess_quoteIdentifier","ui":"<b>Cal.Data.SqlBuilder.odbcAccess_quoteIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_buildCreateViewStatement","name":"oracle_buildCreateViewStatement","type":"CalDataSqlBuilderoracle_buildCreateViewStatement","ui":"<b>Cal.Data.SqlBuilder.oracle_buildCreateViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"viewDefinition","input":"text"},{"name":"builder","input":"text"},{"name":"skipIfViewExists","input":"text"},{"name":"viewRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_prepareQuery","name":"db2_prepareQuery","type":"CalDataSqlBuilderdb2_prepareQuery","ui":"<b>Cal.Data.SqlBuilder.db2_prepareQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msJetSqlBuilder","name":"msJetSqlBuilder","type":"CalDataSqlBuildermsJetSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.msJetSqlBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccessSqlBuilder","name":"msAccessSqlBuilder","type":"CalDataSqlBuildermsAccessSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.msAccessSqlBuilder<\/b><br\/>[CALDoc] The Microsoft Jet SQL builder generates queries which will work with the MS Jet database engine \n(which supports MS Access, Excel, Text, and others).\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccess_primitiveValueBuilder","name":"msAccess_primitiveValueBuilder","type":"CalDataSqlBuildermsAccess_primitiveValueBuilder","ui":"<b>Cal.Data.SqlBuilder.msAccess_primitiveValueBuilder<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccess_timeIntervalToSql","name":"msAccess_timeIntervalToSql","type":"CalDataSqlBuildermsAccess_timeIntervalToSql","ui":"<b>Cal.Data.SqlBuilder.msAccess_timeIntervalToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeInterval","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccess_functionToSql","name":"msAccess_functionToSql","type":"CalDataSqlBuildermsAccess_functionToSql","ui":"<b>Cal.Data.SqlBuilder.msAccess_functionToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"arguments","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccess_buildDropDatabaseStatement","name":"msAccess_buildDropDatabaseStatement","type":"CalDataSqlBuildermsAccess_buildDropDatabaseStatement","ui":"<b>Cal.Data.SqlBuilder.msAccess_buildDropDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"skipIfDatabaseExists","input":"text"},{"name":"databaseRef","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccess_buildCreateDatabaseStatement","name":"msAccess_buildCreateDatabaseStatement","type":"CalDataSqlBuildermsAccess_buildCreateDatabaseStatement","ui":"<b>Cal.Data.SqlBuilder.msAccess_buildCreateDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"skipIfDatabaseExists","input":"text"},{"name":"builder","input":"text"},{"name":"databaseRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccess_prepareQuery","name":"msAccess_prepareQuery","type":"CalDataSqlBuildermsAccess_prepareQuery","ui":"<b>Cal.Data.SqlBuilder.msAccess_prepareQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.derby_buildFieldDescription","name":"derby_buildFieldDescription","type":"CalDataSqlBuilderderby_buildFieldDescription","ui":"<b>Cal.Data.SqlBuilder.derby_buildFieldDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldDesc","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_quoteIdentifier","name":"db2_quoteIdentifier","type":"CalDataSqlBuilderdb2_quoteIdentifier","ui":"<b>Cal.Data.SqlBuilder.db2_quoteIdentifier<\/b><br\/>[CALDoc] Quoting of identifiers is different than the default.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.defaultSqlBuilder","name":"defaultSqlBuilder","type":"CalDataSqlBuilderdefaultSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.defaultSqlBuilder<\/b><br\/>[CALDoc] Creates a default implementation of a <code>SqlBuilder<\/code>.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_prepareQuery","name":"default_prepareQuery","type":"CalDataSqlBuilderdefault_prepareQuery","ui":"<b>Cal.Data.SqlBuilder.default_prepareQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildFieldType","name":"default_buildFieldType","type":"CalDataSqlBuilderdefault_buildFieldType","ui":"<b>Cal.Data.SqlBuilder.default_buildFieldType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServerSqlBuilder","name":"msSqlServerSqlBuilder","type":"CalDataSqlBuildermsSqlServerSqlBuilder","ui":"<b>Cal.Data.SqlBuilder.msSqlServerSqlBuilder<\/b><br\/>[CALDoc] The Microsoft SQL Server SQL builder generates queries which will work with SQL Server databases.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.defaultPrimitiveValueBuilder","name":"defaultPrimitiveValueBuilder","type":"CalDataSqlBuilderdefaultPrimitiveValueBuilder","ui":"<b>Cal.Data.SqlBuilder.defaultPrimitiveValueBuilder<\/b><br\/>[CALDoc] Creates a default primitive value builder.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_timeIntervalToSql","name":"default_timeIntervalToSql","type":"CalDataSqlBuilderdefault_timeIntervalToSql","ui":"<b>Cal.Data.SqlBuilder.default_timeIntervalToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeInterval","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_nullToSql","name":"default_nullToSql","type":"CalDataSqlBuilderdefault_nullToSql","ui":"<b>Cal.Data.SqlBuilder.default_nullToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_booleanToSql","name":"default_booleanToSql","type":"CalDataSqlBuilderdefault_booleanToSql","ui":"<b>Cal.Data.SqlBuilder.default_booleanToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"boolVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_timeToSql","name":"default_timeToSql","type":"CalDataSqlBuilderdefault_timeToSql","ui":"<b>Cal.Data.SqlBuilder.default_timeToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeVal","input":"text"},{"name":"timeZone","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_stringToSql","name":"default_stringToSql","type":"CalDataSqlBuilderdefault_stringToSql","ui":"<b>Cal.Data.SqlBuilder.default_stringToSql<\/b><br\/>[CALDoc] Escapes any single quotes in the string value.","terminals":[{"name":"strVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_doubleToSql","name":"default_doubleToSql","type":"CalDataSqlBuilderdefault_doubleToSql","ui":"<b>Cal.Data.SqlBuilder.default_doubleToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.formatNumber","name":"formatNumber","type":"CalDataSqlBuilderformatNumber","ui":"<b>Cal.Data.SqlBuilder.formatNumber<\/b><br\/>[CALDoc] ","terminals":[{"name":"numVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_intToSql","name":"default_intToSql","type":"CalDataSqlBuilderdefault_intToSql","ui":"<b>Cal.Data.SqlBuilder.default_intToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_makeSafeName","name":"default_makeSafeName","type":"CalDataSqlBuilderdefault_makeSafeName","ui":"<b>Cal.Data.SqlBuilder.default_makeSafeName<\/b><br\/>[CALDoc] Returns a SQL-safe version of the specified name.","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_isValidFirstSqlChar","name":"default_isValidFirstSqlChar","type":"CalDataSqlBuilderdefault_isValidFirstSqlChar","ui":"<b>Cal.Data.SqlBuilder.default_isValidFirstSqlChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"char","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_isValidSqlChar","name":"default_isValidSqlChar","type":"CalDataSqlBuilderdefault_isValidSqlChar","ui":"<b>Cal.Data.SqlBuilder.default_isValidSqlChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"char","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildTableAndAliasText","name":"default_buildTableAndAliasText","type":"CalDataSqlBuilderdefault_buildTableAndAliasText","ui":"<b>Cal.Data.SqlBuilder.default_buildTableAndAliasText<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_quoteIdentifier","name":"default_quoteIdentifier","type":"CalDataSqlBuilderdefault_quoteIdentifier","ui":"<b>Cal.Data.SqlBuilder.default_quoteIdentifier<\/b><br\/>[CALDoc] Adds quotes, if needed to the specified identifier.\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_quotesNeeded","name":"default_quotesNeeded","type":"CalDataSqlBuilderdefault_quotesNeeded","ui":"<b>Cal.Data.SqlBuilder.default_quotesNeeded<\/b><br\/>[CALDoc] Returns whether the specified identifier needs to be quoted.","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.quoteIdentifierHelper","name":"quoteIdentifierHelper","type":"CalDataSqlBuilderquoteIdentifierHelper","ui":"<b>Cal.Data.SqlBuilder.quoteIdentifierHelper<\/b><br\/>[CALDoc] Adds quotes, if needed to the specified identifier.\n","terminals":[{"name":"openQuote","input":"text"},{"name":"closeQuote","input":"text"},{"name":"txt","input":"text"},{"name":"quotesNeededFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_addParens","name":"default_addParens","type":"CalDataSqlBuilderdefault_addParens","ui":"<b>Cal.Data.SqlBuilder.default_addParens<\/b><br\/>[CALDoc] ","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_functionToSql","name":"msSqlServer_functionToSql","type":"CalDataSqlBuildermsSqlServer_functionToSql","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_functionToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"arguments","input":"text"},{"name":"func","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_functionNameText","name":"msSqlServer_functionNameText","type":"CalDataSqlBuildermsSqlServer_functionNameText","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_functionNameText<\/b><br\/>[CALDoc] Override the default names of some of the functions for SQL Server.","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_functionToSql","name":"default_functionToSql","type":"CalDataSqlBuilderdefault_functionToSql","ui":"<b>Cal.Data.SqlBuilder.default_functionToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_functionToSql2","name":"default_functionToSql2","type":"CalDataSqlBuilderdefault_functionToSql2","ui":"<b>Cal.Data.SqlBuilder.default_functionToSql2<\/b><br\/>[CALDoc] ","terminals":[{"name":"arguments","input":"text"},{"name":"func","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"functionNameTextFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_parameterToSql","name":"default_parameterToSql","type":"CalDataSqlBuilderdefault_parameterToSql","ui":"<b>Cal.Data.SqlBuilder.default_parameterToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"parameter","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_buildFieldType","name":"msSqlServer_buildFieldType","type":"CalDataSqlBuildermsSqlServer_buildFieldType","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_buildFieldType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildFieldDescription","name":"default_buildFieldDescription","type":"CalDataSqlBuilderdefault_buildFieldDescription","ui":"<b>Cal.Data.SqlBuilder.default_buildFieldDescription<\/b><br\/>[CALDoc] ","terminals":[{"name":"fieldDesc","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildCommitStatement","name":"default_buildCommitStatement","type":"CalDataSqlBuilderdefault_buildCommitStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildCommitStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildDeleteRowsStatement","name":"default_buildDeleteRowsStatement","type":"CalDataSqlBuilderdefault_buildDeleteRowsStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildDeleteRowsStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableRef","input":"text"},{"name":"builder","input":"text"},{"name":"builderState","input":"text"},{"name":"condition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildInsertValuesStatement","name":"default_buildInsertValuesStatement","type":"CalDataSqlBuilderdefault_buildInsertValuesStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildInsertValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"maybeDestColumns","input":"text"},{"name":"tableRef","input":"text"},{"name":"rowValues","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_buildDropViewStatement","name":"msSqlServer_buildDropViewStatement","type":"CalDataSqlBuildermsSqlServer_buildDropViewStatement","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_buildDropViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"onlyIfViewExists","input":"text"},{"name":"viewRef","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildDropViewStatement","name":"default_buildDropViewStatement","type":"CalDataSqlBuilderdefault_buildDropViewStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildDropViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"viewRef","input":"text"},{"name":"onlyIfViewExists","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_buildCreateViewStatement","name":"msSqlServer_buildCreateViewStatement","type":"CalDataSqlBuildermsSqlServer_buildCreateViewStatement","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_buildCreateViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"viewRef","input":"text"},{"name":"viewQuery","input":"text"},{"name":"builder","input":"text"},{"name":"skipIfViewExists","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_buildCreateTableStatement","name":"msSqlServer_buildCreateTableStatement","type":"CalDataSqlBuildermsSqlServer_buildCreateTableStatement","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_buildCreateTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"skipIfTableExists","input":"text"},{"name":"tableDesc","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildCreateTableStatement","name":"default_buildCreateTableStatement","type":"CalDataSqlBuilderdefault_buildCreateTableStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildCreateTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"skipIfTableExists","input":"text"},{"name":"tableDesc","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_buildDropDatabaseStatement","name":"msSqlServer_buildDropDatabaseStatement","type":"CalDataSqlBuildermsSqlServer_buildDropDatabaseStatement","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_buildDropDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"onlyIfDatabaseExists","input":"text"},{"name":"databaseRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildDropDatabaseStatement","name":"default_buildDropDatabaseStatement","type":"CalDataSqlBuilderdefault_buildDropDatabaseStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildDropDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"onlyIfDatabaseExists","input":"text"},{"name":"databaseRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_buildCreateDatabaseStatement","name":"msSqlServer_buildCreateDatabaseStatement","type":"CalDataSqlBuildermsSqlServer_buildCreateDatabaseStatement","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_buildCreateDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"skipIfDatabaseExists","input":"text"},{"name":"databaseRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildCreateDatabaseStatement","name":"default_buildCreateDatabaseStatement","type":"CalDataSqlBuilderdefault_buildCreateDatabaseStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildCreateDatabaseStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"databaseRef","input":"text"},{"name":"builder","input":"text"},{"name":"skipIfDatabaseExists","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildHavingClause","name":"default_buildHavingClause","type":"CalDataSqlBuilderdefault_buildHavingClause","ui":"<b>Cal.Data.SqlBuilder.default_buildHavingClause<\/b><br\/>[CALDoc] ","terminals":[{"name":"groupRestriction","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildGroupByClause","name":"default_buildGroupByClause","type":"CalDataSqlBuilderdefault_buildGroupByClause","ui":"<b>Cal.Data.SqlBuilder.default_buildGroupByClause<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.fillExpressionList","name":"fillExpressionList","type":"CalDataSqlBuilderfillExpressionList","ui":"<b>Cal.Data.SqlBuilder.fillExpressionList<\/b><br\/>[CALDoc] ","terminals":[{"name":"exprs","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildOrderByClause","name":"default_buildOrderByClause","type":"CalDataSqlBuilderdefault_buildOrderByClause","ui":"<b>Cal.Data.SqlBuilder.default_buildOrderByClause<\/b><br\/>[CALDoc] ","terminals":[{"name":"orderExprs","input":"text"},{"name":"builder","input":"text"},{"name":"builderState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildWhereClause","name":"default_buildWhereClause","type":"CalDataSqlBuilderdefault_buildWhereClause","ui":"<b>Cal.Data.SqlBuilder.default_buildWhereClause<\/b><br\/>[CALDoc] ","terminals":[{"name":"restriction","input":"text"},{"name":"builderState","input":"text"},{"name":"joins","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildFromClause","name":"default_buildFromClause","type":"CalDataSqlBuilderdefault_buildFromClause","ui":"<b>Cal.Data.SqlBuilder.default_buildFromClause<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"joins","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.joinNodeText","name":"joinNodeText","type":"CalDataSqlBuilderjoinNodeText","ui":"<b>Cal.Data.SqlBuilder.joinNodeText<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"joinNode","input":"text"},{"name":"rootNode","input":"text"},{"name":"builderState","input":"text"},{"name":"addJoinParens","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.joinTypeText","name":"joinTypeText","type":"CalDataSqlBuilderjoinTypeText","ui":"<b>Cal.Data.SqlBuilder.joinTypeText<\/b><br\/>[CALDoc] Returns the symbol for a join type.","terminals":[{"name":"joinType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.isSimpleBinaryComaprisonExpr","name":"isSimpleBinaryComaprisonExpr","type":"CalDataSqlBuilderisSimpleBinaryComaprisonExpr","ui":"<b>Cal.Data.SqlBuilder.isSimpleBinaryComaprisonExpr<\/b><br\/>[CALDoc] Returns whether the expression compares two simple values using a comparison operator.","terminals":[{"name":"expr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildSelectClause","name":"default_buildSelectClause","type":"CalDataSqlBuilderdefault_buildSelectClause","ui":"<b>Cal.Data.SqlBuilder.default_buildSelectClause<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"columns","input":"text"},{"name":"builderState","input":"text"},{"name":"options","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_constructUnionQuery","name":"default_constructUnionQuery","type":"CalDataSqlBuilderdefault_constructUnionQuery","ui":"<b>Cal.Data.SqlBuilder.default_constructUnionQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"query2Text","input":"text"},{"name":"query1Text","input":"text"},{"name":"unionAll","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_constructQuery","name":"default_constructQuery","type":"CalDataSqlBuilderdefault_constructQuery","ui":"<b>Cal.Data.SqlBuilder.default_constructQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"orderByBody","input":"text"},{"name":"havingBody","input":"text"},{"name":"selectBody","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"whereBody","input":"text"},{"name":"groupByBody","input":"text"},{"name":"fromBody","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_prepareQuery","name":"msSqlServer_prepareQuery","type":"CalDataSqlBuildermsSqlServer_prepareQuery","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_prepareQuery<\/b><br\/>[CALDoc] ","terminals":[{"name":"query","input":"text"},{"name":"builderState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.limitColumnAliasLength","name":"limitColumnAliasLength","type":"CalDataSqlBuilderlimitColumnAliasLength","ui":"<b>Cal.Data.SqlBuilder.limitColumnAliasLength<\/b><br\/>[CALDoc] Limits the length of the projected column aliases in the query.","terminals":[{"name":"query","input":"text"},{"name":"maxColumnAliasLen","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_listToSql","name":"default_listToSql","type":"CalDataSqlBuilderdefault_listToSql","ui":"<b>Cal.Data.SqlBuilder.default_listToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"listValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.buildExpressionList","name":"buildExpressionList","type":"CalDataSqlBuilderbuildExpressionList","ui":"<b>Cal.Data.SqlBuilder.buildExpressionList<\/b><br\/>[CALDoc] Constructs a comma-separated list of expressions.","terminals":[{"name":"builderState","input":"text"},{"name":"exprs","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildCreateViewStatement","name":"default_buildCreateViewStatement","type":"CalDataSqlBuilderdefault_buildCreateViewStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildCreateViewStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"viewRef","input":"text"},{"name":"skipIfViewExists","input":"text"},{"name":"viewDefinition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msSqlServer_buildDropTableStatement","name":"msSqlServer_buildDropTableStatement","type":"CalDataSqlBuildermsSqlServer_buildDropTableStatement","ui":"<b>Cal.Data.SqlBuilder.msSqlServer_buildDropTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"onlyIfTableExists","input":"text"},{"name":"tableRef","input":"text"},{"name":"builder","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.odbc_timeIntervalToSql","name":"odbc_timeIntervalToSql","type":"CalDataSqlBuilderodbc_timeIntervalToSql","ui":"<b>Cal.Data.SqlBuilder.odbc_timeIntervalToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeInterval","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.timestampPattern","name":"timestampPattern","type":"CalDataSqlBuildertimestampPattern","ui":"<b>Cal.Data.SqlBuilder.timestampPattern<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_booleanToSql","name":"oracle_booleanToSql","type":"CalDataSqlBuilderoracle_booleanToSql","ui":"<b>Cal.Data.SqlBuilder.oracle_booleanToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"boolVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.oracle_buildFieldType","name":"oracle_buildFieldType","type":"CalDataSqlBuilderoracle_buildFieldType","ui":"<b>Cal.Data.SqlBuilder.oracle_buildFieldType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.buildTableAndAliasTextHelper","name":"buildTableAndAliasTextHelper","type":"CalDataSqlBuilderbuildTableAndAliasTextHelper","ui":"<b>Cal.Data.SqlBuilder.buildTableAndAliasTextHelper<\/b><br\/>[CALDoc] ","terminals":[{"name":"includeAsKeywordWithAlias","input":"text"},{"name":"builder","input":"text"},{"name":"table","input":"text"},{"name":"builderState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradataSqlBuilder_timeToSql","name":"ncrTeradataSqlBuilder_timeToSql","type":"CalDataSqlBuilderncrTeradataSqlBuilder_timeToSql","ui":"<b>Cal.Data.SqlBuilder.ncrTeradataSqlBuilder_timeToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeZone","input":"text"},{"name":"timeVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.ncrTeradataTimestampPattern","name":"ncrTeradataTimestampPattern","type":"CalDataSqlBuilderncrTeradataTimestampPattern","ui":"<b>Cal.Data.SqlBuilder.ncrTeradataTimestampPattern<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_booleanToSql","name":"db2_booleanToSql","type":"CalDataSqlBuilderdb2_booleanToSql","ui":"<b>Cal.Data.SqlBuilder.db2_booleanToSql<\/b><br\/>[CALDoc] ","terminals":[{"name":"boolVal","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildInsertQueryValuesStatement","name":"default_buildInsertQueryValuesStatement","type":"CalDataSqlBuilderdefault_buildInsertQueryValuesStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildInsertQueryValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"maybeDestColumns","input":"text"},{"name":"tableRef","input":"text"},{"name":"insertQuery","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildDropTableStatement","name":"default_buildDropTableStatement","type":"CalDataSqlBuilderdefault_buildDropTableStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildDropTableStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"builder","input":"text"},{"name":"onlyIfTableExists","input":"text"},{"name":"tableRef","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_buildUpdateValuesStatement","name":"default_buildUpdateValuesStatement","type":"CalDataSqlBuilderdefault_buildUpdateValuesStatement","ui":"<b>Cal.Data.SqlBuilder.default_buildUpdateValuesStatement<\/b><br\/>[CALDoc] ","terminals":[{"name":"tableRef","input":"text"},{"name":"builderState","input":"text"},{"name":"builder","input":"text"},{"name":"condition","input":"text"},{"name":"destColumns","input":"text"},{"name":"newValues","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.db2_functionNameText","name":"db2_functionNameText","type":"CalDataSqlBuilderdb2_functionNameText","ui":"<b>Cal.Data.SqlBuilder.db2_functionNameText<\/b><br\/>[CALDoc] ","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.default_functionNameText","name":"default_functionNameText","type":"CalDataSqlBuilderdefault_functionNameText","ui":"<b>Cal.Data.SqlBuilder.default_functionNameText<\/b><br\/>[CALDoc] ","terminals":[{"name":"func","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.restructureTopN","name":"restructureTopN","type":"CalDataSqlBuilderrestructureTopN","ui":"<b>Cal.Data.SqlBuilder.restructureTopN<\/b><br\/>[CALDoc] ","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.enclose","name":"enclose","type":"CalDataSqlBuilderenclose","ui":"<b>Cal.Data.SqlBuilder.enclose<\/b><br\/>[CALDoc] ","terminals":[{"name":"r","input":"text"},{"name":"l","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Data.SqlBuilder.msAccess_buildFieldType","name":"msAccess_buildFieldType","type":"CalDataSqlBuildermsAccess_buildFieldType","ui":"<b>Cal.Data.SqlBuilder.msAccess_buildFieldType<\/b><br\/>[CALDoc] ","terminals":[{"name":"dataType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlBuilder"]},{"description":"Cal.Utilities.Time.showTime","name":"showTime","type":"CalUtilitiesTimeshowTime","ui":"<b>Cal.Utilities.Time.showTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"timeValue","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.timeParts","name":"timeParts","type":"CalUtilitiesTimetimeParts","ui":"<b>Cal.Utilities.Time.timeParts<\/b><br\/>[CALDoc] Extract the components of a <code>Time<\/code>.","terminals":[{"name":"timeZone","input":"text"},{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.getDayOfWeek","name":"getDayOfWeek","type":"CalUtilitiesTimegetDayOfWeek","ui":"<b>Cal.Utilities.Time.getDayOfWeek<\/b><br\/>[CALDoc] Returns the <code>DayOfWeek<\/code> for a <code>Time<\/code> in a specified <code>TimeZone<\/code>.","terminals":[{"name":"time","input":"text"},{"name":"timeZone","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.zeroDuration","name":"zeroDuration","type":"CalUtilitiesTimezeroDuration","ui":"<b>Cal.Utilities.Time.zeroDuration<\/b><br\/>[CALDoc] Returns a <code>Duration<\/code> of 0 ticks.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.makeUTCTimeFromTuple","name":"makeUTCTimeFromTuple","type":"CalUtilitiesTimemakeUTCTimeFromTuple","ui":"<b>Cal.Utilities.Time.makeUTCTimeFromTuple<\/b><br\/>[CALDoc] Construct a <code>Time<\/code> value from year, month, day, hour, minute, second and tick in the UTC time zone.","terminals":[{"name":"ymdhmst","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.nDaysSinceMonday","name":"nDaysSinceMonday","type":"CalUtilitiesTimenDaysSinceMonday","ui":"<b>Cal.Utilities.Time.nDaysSinceMonday<\/b><br\/>[CALDoc] Returns the number of days since the most recent Monday.","terminals":[{"name":"dow","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.durationToDays","name":"durationToDays","type":"CalUtilitiesTimedurationToDays","ui":"<b>Cal.Utilities.Time.durationToDays<\/b><br\/>[CALDoc] Converts a <code>Duration<\/code> to a number of days, as a <code>Double<\/code>.","terminals":[{"name":"duration","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.nDaysDuration","name":"nDaysDuration","type":"CalUtilitiesTimenDaysDuration","ui":"<b>Cal.Utilities.Time.nDaysDuration<\/b><br\/>[CALDoc] Converts a number of days to a <code>Duration<\/code>.","terminals":[{"name":"nDays","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.durationToMinutes","name":"durationToMinutes","type":"CalUtilitiesTimedurationToMinutes","ui":"<b>Cal.Utilities.Time.durationToMinutes<\/b><br\/>[CALDoc] Converts a <code>Duration<\/code> to a number of minutes, as a <code>Double<\/code>.","terminals":[{"name":"duration","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.deserializeTimeValue","name":"deserializeTimeValue","type":"CalUtilitiesTimedeserializeTimeValue","ui":"<b>Cal.Utilities.Time.deserializeTimeValue<\/b><br\/>[CALDoc] Returns: a <code>Time<\/code> value based on the serialized value provided.","terminals":[{"name":"serializedTime","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.serializeTimeValue","name":"serializeTimeValue","type":"CalUtilitiesTimeserializeTimeValue","ui":"<b>Cal.Utilities.Time.serializeTimeValue<\/b><br\/>[CALDoc] Returns: a string representing the serialized form of the <code>Time<\/code> value.","terminals":[{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.parseTime","name":"parseTime","type":"CalUtilitiesTimeparseTime","ui":"<b>Cal.Utilities.Time.parseTime<\/b><br\/>[CALDoc] Parses a time value from a string using the specified pattern.","terminals":[{"name":"locale","input":"text"},{"name":"cal","input":"text"},{"name":"timeString","input":"text"},{"name":"pattern","input":"text"},{"name":"tz","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.formatTime","name":"formatTime","type":"CalUtilitiesTimeformatTime","ui":"<b>Cal.Utilities.Time.formatTime<\/b><br\/>[CALDoc] Formats a <code>Time<\/code> value as a string.","terminals":[{"name":"pattern","input":"text"},{"name":"t","input":"text"},{"name":"cal","input":"text"},{"name":"tz","input":"text"},{"name":"locale","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.islamicCalendar","name":"islamicCalendar","type":"CalUtilitiesTimeislamicCalendar","ui":"<b>Cal.Utilities.Time.islamicCalendar<\/b><br\/>[CALDoc] The Islamic calendar is a lunar calendar. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.hebrewCalendar","name":"hebrewCalendar","type":"CalUtilitiesTimehebrewCalendar","ui":"<b>Cal.Utilities.Time.hebrewCalendar<\/b><br\/>[CALDoc] The Hebrew calendar is a lunisolar calendar.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.buddhistCalendar","name":"buddhistCalendar","type":"CalUtilitiesTimebuddhistCalendar","ui":"<b>Cal.Utilities.Time.buddhistCalendar<\/b><br\/>[CALDoc] The Buddhist calendar is a lunisolar calendar, and is sometimes used in Thailand and other south-east Asian countries.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.chineseCalendar","name":"chineseCalendar","type":"CalUtilitiesTimechineseCalendar","ui":"<b>Cal.Utilities.Time.chineseCalendar<\/b><br\/>[CALDoc] The Chinese calendar.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.japaneseCalendar","name":"japaneseCalendar","type":"CalUtilitiesTimejapaneseCalendar","ui":"<b>Cal.Utilities.Time.japaneseCalendar<\/b><br\/>[CALDoc] The Japanese Emperor calendar. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.gregorianCalendar","name":"gregorianCalendar","type":"CalUtilitiesTimegregorianCalendar","ui":"<b>Cal.Utilities.Time.gregorianCalendar<\/b><br\/>[CALDoc] The Gregorian calendar, introduced by Pope Gregory in 1582.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.nSecondsDuration","name":"nSecondsDuration","type":"CalUtilitiesTimenSecondsDuration","ui":"<b>Cal.Utilities.Time.nSecondsDuration<\/b><br\/>[CALDoc] Converts a number of seconds to a <code>Duration<\/code>.","terminals":[{"name":"seconds","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.nSecondsAsLongToDuration","name":"nSecondsAsLongToDuration","type":"CalUtilitiesTimenSecondsAsLongToDuration","ui":"<b>Cal.Utilities.Time.nSecondsAsLongToDuration<\/b><br\/>[CALDoc] Converts an integer number of seconds to a <code>Duration<\/code>.","terminals":[{"name":"seconds","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.ticksToDuration","name":"ticksToDuration","type":"CalUtilitiesTimeticksToDuration","ui":"<b>Cal.Utilities.Time.ticksToDuration<\/b><br\/>[CALDoc] Converts a number of ticks to a <code>Duration<\/code>.","terminals":[{"name":"ticks","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.durationToSeconds","name":"durationToSeconds","type":"CalUtilitiesTimedurationToSeconds","ui":"<b>Cal.Utilities.Time.durationToSeconds<\/b><br\/>[CALDoc] Returns: converts a <code>Duration<\/code> to a number of seconds, as a <code>Double<\/code>.","terminals":[{"name":"duration","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.durationToTicks","name":"durationToTicks","type":"CalUtilitiesTimedurationToTicks","ui":"<b>Cal.Utilities.Time.durationToTicks<\/b><br\/>[CALDoc] Converts a <code>Duration<\/code> to a number of ticks, as a <code>Long<\/code>.","terminals":[{"name":"duration","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.addDurationToDuration","name":"addDurationToDuration","type":"CalUtilitiesTimeaddDurationToDuration","ui":"<b>Cal.Utilities.Time.addDurationToDuration<\/b><br\/>[CALDoc] Returns: the sum of two <code>Duration<\/code>s.","terminals":[{"name":"d","input":"text"},{"name":"duration","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.subtractDurationFromDuration","name":"subtractDurationFromDuration","type":"CalUtilitiesTimesubtractDurationFromDuration","ui":"<b>Cal.Utilities.Time.subtractDurationFromDuration<\/b><br\/>[CALDoc] Returns: he difference between two <code>Duration<\/code>s.","terminals":[{"name":"duration","input":"text"},{"name":"d","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.jTime_getDayOfWeek","name":"jTime_getDayOfWeek","type":"CalUtilitiesTimejTime_getDayOfWeek","ui":"<b>Cal.Utilities.Time.jTime_getDayOfWeek<\/b><br\/>[CALDoc] ","terminals":[{"name":"time","input":"text"},{"name":"tz","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.jTimePartList","name":"jTimePartList","type":"CalUtilitiesTimejTimePartList","ui":"<b>Cal.Utilities.Time.jTimePartList<\/b><br\/>[CALDoc] ","terminals":[{"name":"tz","input":"text"},{"name":"time","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.addDurationToTime","name":"addDurationToTime","type":"CalUtilitiesTimeaddDurationToTime","ui":"<b>Cal.Utilities.Time.addDurationToTime<\/b><br\/>[CALDoc] Returns: the <code>Time<\/code> that results from adding a <code>Duration<\/code> to a <code>Time<\/code>.","terminals":[{"name":"time","input":"text"},{"name":"d","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.subtractTimeFromTime","name":"subtractTimeFromTime","type":"CalUtilitiesTimesubtractTimeFromTime","ui":"<b>Cal.Utilities.Time.subtractTimeFromTime<\/b><br\/>[CALDoc] Returns: the <code>Duration<\/code> that represents the difference between two <code>Time<\/code>s.","terminals":[{"name":"time","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.now","name":"now","type":"CalUtilitiesTimenow","ui":"<b>Cal.Utilities.Time.now<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.makeUTCTimeValue","name":"makeUTCTimeValue","type":"CalUtilitiesTimemakeUTCTimeValue","ui":"<b>Cal.Utilities.Time.makeUTCTimeValue<\/b><br\/>[CALDoc] Returns: a <code>Time<\/code> value from year, month, day, hour, minute, second and tick in the UTC time zone.","terminals":[{"name":"hour","input":"text"},{"name":"year","input":"text"},{"name":"month","input":"text"},{"name":"day","input":"text"},{"name":"ticks","input":"text"},{"name":"minute","input":"text"},{"name":"second","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.makeTimeFromTicks","name":"makeTimeFromTicks","type":"CalUtilitiesTimemakeTimeFromTicks","ui":"<b>Cal.Utilities.Time.makeTimeFromTicks<\/b><br\/>[CALDoc] Returns: a <code>Time<\/code> value from an absolute number of ticks.","terminals":[{"name":"ticks","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.makeTimeValue","name":"makeTimeValue","type":"CalUtilitiesTimemakeTimeValue","ui":"<b>Cal.Utilities.Time.makeTimeValue<\/b><br\/>[CALDoc] Returns: a <code>Time<\/code> value from a year, month, day, hour, minute, second, ticks and time zone.","terminals":[{"name":"year","input":"text"},{"name":"tz","input":"text"},{"name":"ticks","input":"text"},{"name":"minute","input":"text"},{"name":"second","input":"text"},{"name":"month","input":"text"},{"name":"hour","input":"text"},{"name":"day","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.Monday","name":"Monday","type":"CalUtilitiesTimeMonday","ui":"<b>Cal.Utilities.Time.Monday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.Tuesday","name":"Tuesday","type":"CalUtilitiesTimeTuesday","ui":"<b>Cal.Utilities.Time.Tuesday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.Wednesday","name":"Wednesday","type":"CalUtilitiesTimeWednesday","ui":"<b>Cal.Utilities.Time.Wednesday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.Thursday","name":"Thursday","type":"CalUtilitiesTimeThursday","ui":"<b>Cal.Utilities.Time.Thursday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.Friday","name":"Friday","type":"CalUtilitiesTimeFriday","ui":"<b>Cal.Utilities.Time.Friday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.Saturday","name":"Saturday","type":"CalUtilitiesTimeSaturday","ui":"<b>Cal.Utilities.Time.Saturday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.Time.Sunday","name":"Sunday","type":"CalUtilitiesTimeSunday","ui":"<b>Cal.Utilities.Time.Sunday<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Time"]},{"description":"Cal.Utilities.UniqueIdentifier.greaterThanUniqueIdentifier","name":"greaterThanUniqueIdentifier","type":"CalUtilitiesUniqueIdentifiergreaterThanUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.greaterThanUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uid2","input":"text"},{"name":"uid1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXmlAttribute","name":"outputUniqueIdentifierXmlAttribute","type":"CalUtilitiesUniqueIdentifieroutputUniqueIdentifierXmlAttribute","ui":"<b>Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"uniqueIdentifier","input":"text"},{"name":"attrName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.showUniqueIdentifier","name":"showUniqueIdentifier","type":"CalUtilitiesUniqueIdentifiershowUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.showUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"id","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.equalUniqueIdentifiers","name":"equalUniqueIdentifiers","type":"CalUtilitiesUniqueIdentifierequalUniqueIdentifiers","ui":"<b>Cal.Utilities.UniqueIdentifier.equalUniqueIdentifiers<\/b><br\/>[CALDoc] Returns <code>True<\/code> if both objects have the same unique ID.","terminals":[{"name":"ndf1","input":"text"},{"name":"ndf2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.outputUniqueIdentifier","name":"outputUniqueIdentifier","type":"CalUtilitiesUniqueIdentifieroutputUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.outputUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uniqueId","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.notEqualsUniqueIdentifiers","name":"notEqualsUniqueIdentifiers","type":"CalUtilitiesUniqueIdentifiernotEqualsUniqueIdentifiers","ui":"<b>Cal.Utilities.UniqueIdentifier.notEqualsUniqueIdentifiers<\/b><br\/>[CALDoc] ","terminals":[{"name":"b","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByNamePath","name":"makeUniqueIdentifierByNamePath","type":"CalUtilitiesUniqueIdentifiermakeUniqueIdentifierByNamePath","ui":"<b>Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByNamePath<\/b><br\/>[CALDoc] Constructs a unique ID using the specified name path.","terminals":[{"name":"namePieces","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.inputUniqueIdentifier","name":"inputUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierinputUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.inputUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uniqueId","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.convertUniqueIdentifier","name":"convertUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierconvertUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.convertUniqueIdentifier<\/b><br\/>[CALDoc] Converts a unique ID of one type to a unique ID of another type.","terminals":[{"name":"uniqueID","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.compareUniqueIdentifier","name":"compareUniqueIdentifier","type":"CalUtilitiesUniqueIdentifiercompareUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.compareUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uid2","input":"text"},{"name":"uid1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierWithinList","name":"makeUniqueIdentifierWithinList","type":"CalUtilitiesUniqueIdentifiermakeUniqueIdentifierWithinList","ui":"<b>Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierWithinList<\/b><br\/>[CALDoc] Contructs a unique ID using the specified name, if it exists in the list of names\nspecified then name2 is tried and so on till we get a name that's unique.","terminals":[{"name":"name","input":"text"},{"name":"identifiers","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.appendStringToUniqueIdentifier","name":"appendStringToUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierappendStringToUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.appendStringToUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"id","input":"text"},{"name":"str","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXml","name":"inputUniqueIdentifierXml","type":"CalUtilitiesUniqueIdentifierinputUniqueIdentifierXml","ui":"<b>Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"attributeOrNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.minUniqueIdentifier","name":"minUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierminUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.minUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uid2","input":"text"},{"name":"uid1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.lessThanEqualsUniqueIdentifier","name":"lessThanEqualsUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierlessThanEqualsUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.lessThanEqualsUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uid2","input":"text"},{"name":"uid1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.equalsUniqueIdentifiers","name":"equalsUniqueIdentifiers","type":"CalUtilitiesUniqueIdentifierequalsUniqueIdentifiers","ui":"<b>Cal.Utilities.UniqueIdentifier.equalsUniqueIdentifiers<\/b><br\/>[CALDoc] ","terminals":[{"name":"b","input":"text"},{"name":"a","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.greaterThanEqualsUniqueIdentifier","name":"greaterThanEqualsUniqueIdentifier","type":"CalUtilitiesUniqueIdentifiergreaterThanEqualsUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.greaterThanEqualsUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uid2","input":"text"},{"name":"uid1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.maxUniqueIdentifier","name":"maxUniqueIdentifier","type":"CalUtilitiesUniqueIdentifiermaxUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.maxUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uid1","input":"text"},{"name":"uid2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.uniqueIdentifierToJUniqueIdentifier","name":"uniqueIdentifierToJUniqueIdentifier","type":"CalUtilitiesUniqueIdentifieruniqueIdentifierToJUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.uniqueIdentifierToJUniqueIdentifier<\/b><br\/>[CALDoc] Converts from <code>UniqueIdentifier<\/code> to <code>JUniqueIdentifier<\/code>","terminals":[{"name":"uniqueId","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.jUniqueIdentifierToUniqueIdentifier","name":"jUniqueIdentifierToUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierjUniqueIdentifierToUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.jUniqueIdentifierToUniqueIdentifier<\/b><br\/>[CALDoc] Converts from <code>JUniqueIdentifier<\/code> to <code>UniqueIdentifier<\/code>","terminals":[{"name":"jUniqueIdentifier","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.lessThanUniqueIdentifier","name":"lessThanUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierlessThanUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.lessThanUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"uid2","input":"text"},{"name":"uid1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.getIndentifierNamePieces","name":"getIndentifierNamePieces","type":"CalUtilitiesUniqueIdentifiergetIndentifierNamePieces","ui":"<b>Cal.Utilities.UniqueIdentifier.getIndentifierNamePieces<\/b><br\/>[CALDoc] Returns the pieces of the qualified name held by unique identifier.","terminals":[{"name":"indentifier","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.findMatchingUniquelyNamedItemById","name":"findMatchingUniquelyNamedItemById","type":"CalUtilitiesUniqueIdentifierfindMatchingUniquelyNamedItemById","ui":"<b>Cal.Utilities.UniqueIdentifier.findMatchingUniquelyNamedItemById<\/b><br\/>[CALDoc] ","terminals":[{"name":"items","input":"text"},{"name":"id","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.getUniqueName","name":"getUniqueName","type":"CalUtilitiesUniqueIdentifiergetUniqueName","ui":"<b>Cal.Utilities.UniqueIdentifier.getUniqueName<\/b><br\/>[CALDoc] Returns the string representation of the unique identifier","terminals":[{"name":"identifier","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXmlAttribute","name":"inputUniqueIdentifierXmlAttribute","type":"CalUtilitiesUniqueIdentifierinputUniqueIdentifierXmlAttribute","ui":"<b>Cal.Utilities.UniqueIdentifier.inputUniqueIdentifierXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByName","name":"makeUniqueIdentifierByName","type":"CalUtilitiesUniqueIdentifiermakeUniqueIdentifierByName","ui":"<b>Cal.Utilities.UniqueIdentifier.makeUniqueIdentifierByName<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXml","name":"outputUniqueIdentifierXml","type":"CalUtilitiesUniqueIdentifieroutputUniqueIdentifierXml","ui":"<b>Cal.Utilities.UniqueIdentifier.outputUniqueIdentifierXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.jGetUniqueName","name":"jGetUniqueName","type":"CalUtilitiesUniqueIdentifierjGetUniqueName","ui":"<b>Cal.Utilities.UniqueIdentifier.jGetUniqueName<\/b><br\/>[CALDoc] ","terminals":[{"name":"jUniqueIdentifier","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.isJUniqueName","name":"isJUniqueName","type":"CalUtilitiesUniqueIdentifierisJUniqueName","ui":"<b>Cal.Utilities.UniqueIdentifier.isJUniqueName<\/b><br\/>[CALDoc] ","terminals":[{"name":"jUniqueIdentifier","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.jUniqueIdentifierFromName","name":"jUniqueIdentifierFromName","type":"CalUtilitiesUniqueIdentifierjUniqueIdentifierFromName","ui":"<b>Cal.Utilities.UniqueIdentifier.jUniqueIdentifierFromName<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.jObjectToJUniqueIdentifier","name":"jObjectToJUniqueIdentifier","type":"CalUtilitiesUniqueIdentifierjObjectToJUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.jObjectToJUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"sofaMember","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.UniqueName","name":"UniqueName","type":"CalUtilitiesUniqueIdentifierUniqueName","ui":"<b>Cal.Utilities.UniqueIdentifier.UniqueName<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.getDisplayName","name":"getDisplayName","type":"CalUtilitiesUniqueIdentifiergetDisplayName","ui":"<b>Cal.Utilities.UniqueIdentifier.getDisplayName<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.UniqueIdentifier.getUniqueIdentifier","name":"getUniqueIdentifier","type":"CalUtilitiesUniqueIdentifiergetUniqueIdentifier","ui":"<b>Cal.Utilities.UniqueIdentifier.getUniqueIdentifier<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.UniqueIdentifier"]},{"description":"Cal.Utilities.ValueType.inputValueTypeXmlAttribute","name":"inputValueTypeXmlAttribute","type":"CalUtilitiesValueTypeinputValueTypeXmlAttribute","ui":"<b>Cal.Utilities.ValueType.inputValueTypeXmlAttribute<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.inputValueType","name":"inputValueType","type":"CalUtilitiesValueTypeinputValueType","ui":"<b>Cal.Utilities.ValueType.inputValueType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"valueType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.inputValueTypeXml","name":"inputValueTypeXml","type":"CalUtilitiesValueTypeinputValueTypeXml","ui":"<b>Cal.Utilities.ValueType.inputValueTypeXml<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"attributeOrNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.outputValueTypeXmlAttribute","name":"outputValueTypeXmlAttribute","type":"CalUtilitiesValueTypeoutputValueTypeXmlAttribute","ui":"<b>Cal.Utilities.ValueType.outputValueTypeXmlAttribute<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"attrName","input":"text"},{"name":"valueType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.showValueType","name":"showValueType","type":"CalUtilitiesValueTypeshowValueType","ui":"<b>Cal.Utilities.ValueType.showValueType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.intToValueType","name":"intToValueType","type":"CalUtilitiesValueTypeintToValueType","ui":"<b>Cal.Utilities.ValueType.intToValueType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"index","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.fromTypeRep","name":"fromTypeRep","type":"CalUtilitiesValueTypefromTypeRep","ui":"<b>Cal.Utilities.ValueType.fromTypeRep<\/b><br\/>[CALDoc] Returns the value type corresponding to the specified type rep.\n<div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"typeRep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.outputValueTypeToJObject","name":"outputValueTypeToJObject","type":"CalUtilitiesValueTypeoutputValueTypeToJObject","ui":"<b>Cal.Utilities.ValueType.outputValueTypeToJObject<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"valueType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.outputValueTypeXml","name":"outputValueTypeXml","type":"CalUtilitiesValueTypeoutputValueTypeXml","ui":"<b>Cal.Utilities.ValueType.outputValueTypeXml<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.outputValueType","name":"outputValueType","type":"CalUtilitiesValueTypeoutputValueType","ui":"<b>Cal.Utilities.ValueType.outputValueType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"valueType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.valueTypeToInt","name":"valueTypeToInt","type":"CalUtilitiesValueTypevalueTypeToInt","ui":"<b>Cal.Utilities.ValueType.valueTypeToInt<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.nameToValueType","name":"nameToValueType","type":"CalUtilitiesValueTypenameToValueType","ui":"<b>Cal.Utilities.ValueType.nameToValueType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"vtName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.isNumericType","name":"isNumericType","type":"CalUtilitiesValueTypeisNumericType","ui":"<b>Cal.Utilities.ValueType.isNumericType<\/b><br\/>[CALDoc] Returns whether the type is one of the numeric types.<div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"valueType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.jIntToJValueObject","name":"jIntToJValueObject","type":"CalUtilitiesValueTypejIntToJValueObject","ui":"<b>Cal.Utilities.ValueType.jIntToJValueObject<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"val","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.jIntToJValue","name":"jIntToJValue","type":"CalUtilitiesValueTypejIntToJValue","ui":"<b>Cal.Utilities.ValueType.jIntToJValue<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"val","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.jValueTypeToInt","name":"jValueTypeToInt","type":"CalUtilitiesValueTypejValueTypeToInt","ui":"<b>Cal.Utilities.ValueType.jValueTypeToInt<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"jValueType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.NullType","name":"NullType","type":"CalUtilitiesValueTypeNullType","ui":"<b>Cal.Utilities.ValueType.NullType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.StringType","name":"StringType","type":"CalUtilitiesValueTypeStringType","ui":"<b>Cal.Utilities.ValueType.StringType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.IntType","name":"IntType","type":"CalUtilitiesValueTypeIntType","ui":"<b>Cal.Utilities.ValueType.IntType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.DoubleType","name":"DoubleType","type":"CalUtilitiesValueTypeDoubleType","ui":"<b>Cal.Utilities.ValueType.DoubleType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.BooleanType","name":"BooleanType","type":"CalUtilitiesValueTypeBooleanType","ui":"<b>Cal.Utilities.ValueType.BooleanType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.TimeType","name":"TimeType","type":"CalUtilitiesValueTypeTimeType","ui":"<b>Cal.Utilities.ValueType.TimeType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.ValueType.BinaryType","name":"BinaryType","type":"CalUtilitiesValueTypeBinaryType","ui":"<b>Cal.Utilities.ValueType.BinaryType<\/b><br\/>[CALDoc] <div label='Value' repeat=\"false\" class=\"horizontal\"><input name=\"_INPUT\" type=\"string\" required=\"true\"\/>","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ValueType"]},{"description":"Cal.Utilities.XmlBuilder.documentNotations","name":"documentNotations","type":"CalUtilitiesXmlBuilderdocumentNotations","ui":"<b>Cal.Utilities.XmlBuilder.documentNotations<\/b><br\/>[CALDoc] Returns the notations declared in the XML document.","terminals":[{"name":"document","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputListXml","name":"outputListXml","type":"CalUtilitiesXmlBuilderoutputListXml","ui":"<b>Cal.Utilities.XmlBuilder.outputListXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.addAttributesToXmlElement","name":"addAttributesToXmlElement","type":"CalUtilitiesXmlBuilderaddAttributesToXmlElement","ui":"<b>Cal.Utilities.XmlBuilder.addAttributesToXmlElement<\/b><br\/>[CALDoc] Adds the specified attributes to an XML element.\n","terminals":[{"name":"newAttributes","input":"text"},{"name":"original","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputIntXmlAttribute","name":"inputIntXmlAttribute","type":"CalUtilitiesXmlBuilderinputIntXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputIntXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.xmlNodeToString","name":"xmlNodeToString","type":"CalUtilitiesXmlBuilderxmlNodeToString","ui":"<b>Cal.Utilities.XmlBuilder.xmlNodeToString<\/b><br\/>[CALDoc] Generates a string representation of the XML node (element, comment, etc...).\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputIntegerXml","name":"outputIntegerXml","type":"CalUtilitiesXmlBuilderoutputIntegerXml","ui":"<b>Cal.Utilities.XmlBuilder.outputIntegerXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.notationName","name":"notationName","type":"CalUtilitiesXmlBuildernotationName","ui":"<b>Cal.Utilities.XmlBuilder.notationName<\/b><br\/>[CALDoc] Returns the name of an XML notation.","terminals":[{"name":"notation","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputDoubleXml","name":"outputDoubleXml","type":"CalUtilitiesXmlBuilderoutputDoubleXml","ui":"<b>Cal.Utilities.XmlBuilder.outputDoubleXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputColorXml","name":"inputColorXml","type":"CalUtilitiesXmlBuilderinputColorXml","ui":"<b>Cal.Utilities.XmlBuilder.inputColorXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.setDocumentNotations","name":"setDocumentNotations","type":"CalUtilitiesXmlBuildersetDocumentNotations","ui":"<b>Cal.Utilities.XmlBuilder.setDocumentNotations<\/b><br\/>[CALDoc] Sets the notations declared in an XML document.","terminals":[{"name":"document","input":"text"},{"name":"notations","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForBoolean","name":"outputXmlAttributeForBoolean","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForBoolean","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForBoolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputDoubleXmlAttribute","name":"inputDoubleXmlAttribute","type":"CalUtilitiesXmlBuilderinputDoubleXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputDoubleXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.containsDuplicate","name":"containsDuplicate","type":"CalUtilitiesXmlBuildercontainsDuplicate","ui":"<b>Cal.Utilities.XmlBuilder.containsDuplicate<\/b><br\/>[CALDoc] Returns whether the list contains at least one duplicate value.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlTextNode","name":"makeXmlTextNode","type":"CalUtilitiesXmlBuildermakeXmlTextNode","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlTextNode<\/b><br\/>[CALDoc] Creates a new XML TEXT node with the specified text content.","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputRangeXml","name":"inputRangeXml","type":"CalUtilitiesXmlBuilderinputRangeXml","ui":"<b>Cal.Utilities.XmlBuilder.inputRangeXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"nodeOrAttribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputRangeFromElement","name":"inputRangeFromElement","type":"CalUtilitiesXmlBuilderinputRangeFromElement","ui":"<b>Cal.Utilities.XmlBuilder.inputRangeFromElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementChildValueMaybe","name":"elementChildValueMaybe","type":"CalUtilitiesXmlBuilderelementChildValueMaybe","ui":"<b>Cal.Utilities.XmlBuilder.elementChildValueMaybe<\/b><br\/>[CALDoc] Returns the deserialized value from the specified child for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"elementName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForDouble","name":"outputXmlAttributeForDouble","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForDouble","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForDouble<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlComment","name":"makeXmlComment","type":"CalUtilitiesXmlBuildermakeXmlComment","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlComment<\/b><br\/>[CALDoc] Creates a new XML comment node with the specified comment text.","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputIntegerXmlAttribute","name":"inputIntegerXmlAttribute","type":"CalUtilitiesXmlBuilderinputIntegerXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputIntegerXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementChildren","name":"elementChildren","type":"CalUtilitiesXmlBuilderelementChildren","ui":"<b>Cal.Utilities.XmlBuilder.elementChildren<\/b><br\/>[CALDoc] Returns the child nodes (not necessarily elements) for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.xmlElementToString","name":"xmlElementToString","type":"CalUtilitiesXmlBuilderxmlElementToString","ui":"<b>Cal.Utilities.XmlBuilder.xmlElementToString<\/b><br\/>[CALDoc] Generates a string representation of an XML document with the specified root node.","terminals":[{"name":"rootElem","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputLongXml","name":"outputLongXml","type":"CalUtilitiesXmlBuilderoutputLongXml","ui":"<b>Cal.Utilities.XmlBuilder.outputLongXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputStringXml","name":"outputStringXml","type":"CalUtilitiesXmlBuilderoutputStringXml","ui":"<b>Cal.Utilities.XmlBuilder.outputStringXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForLong","name":"outputXmlAttributeForLong","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForLong","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForLong<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputListXml","name":"inputListXml","type":"CalUtilitiesXmlBuilderinputListXml","ui":"<b>Cal.Utilities.XmlBuilder.inputListXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"attributeOrNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputListXmlElement","name":"inputListXmlElement","type":"CalUtilitiesXmlBuilderinputListXmlElement","ui":"<b>Cal.Utilities.XmlBuilder.inputListXmlElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlNamespace","name":"makeXmlNamespace","type":"CalUtilitiesXmlBuildermakeXmlNamespace","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlNamespace<\/b><br\/>[CALDoc] Construct an XML namespace with an optional prefix.\n","terminals":[{"name":"uri","input":"text"},{"name":"prefix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlAttributeWithNamespace","name":"makeXmlAttributeWithNamespace","type":"CalUtilitiesXmlBuildermakeXmlAttributeWithNamespace","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlAttributeWithNamespace<\/b><br\/>[CALDoc] Creates a new XML attribute with the specified name, value, and namespace.\n","terminals":[{"name":"name","input":"text"},{"name":"txt","input":"text"},{"name":"namespace","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.buildXmlForRecord","name":"buildXmlForRecord","type":"CalUtilitiesXmlBuilderbuildXmlForRecord","ui":"<b>Cal.Utilities.XmlBuilder.buildXmlForRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.buildXmlElementForRecord","name":"buildXmlElementForRecord","type":"CalUtilitiesXmlBuilderbuildXmlElementForRecord","ui":"<b>Cal.Utilities.XmlBuilder.buildXmlElementForRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputDoubleXml","name":"inputDoubleXml","type":"CalUtilitiesXmlBuilderinputDoubleXml","ui":"<b>Cal.Utilities.XmlBuilder.inputDoubleXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlDocument","name":"makeXmlDocument","type":"CalUtilitiesXmlBuildermakeXmlDocument","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlDocument<\/b><br\/>[CALDoc] Creates an XML document with the specified top-level nodes (one of which must be an element).","terminals":[{"name":"topLevelNodes","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputBooleanXmlAttribute","name":"inputBooleanXmlAttribute","type":"CalUtilitiesXmlBuilderinputBooleanXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputBooleanXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.trueTag","name":"trueTag","type":"CalUtilitiesXmlBuildertrueTag","ui":"<b>Cal.Utilities.XmlBuilder.trueTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementQualifiedName","name":"elementQualifiedName","type":"CalUtilitiesXmlBuilderelementQualifiedName","ui":"<b>Cal.Utilities.XmlBuilder.elementQualifiedName<\/b><br\/>[CALDoc] Returns the qualified name of an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.falseTag","name":"falseTag","type":"CalUtilitiesXmlBuilderfalseTag","ui":"<b>Cal.Utilities.XmlBuilder.falseTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputRecordXml","name":"inputRecordXml","type":"CalUtilitiesXmlBuilderinputRecordXml","ui":"<b>Cal.Utilities.XmlBuilder.inputRecordXml<\/b><br\/>[CALDoc] Records are always serialized as XmlNodes.","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputIntXml","name":"outputIntXml","type":"CalUtilitiesXmlBuilderoutputIntXml","ui":"<b>Cal.Utilities.XmlBuilder.outputIntXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlCDataSectionElement","name":"makeXmlCDataSectionElement","type":"CalUtilitiesXmlBuildermakeXmlCDataSectionElement","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlCDataSectionElement<\/b><br\/>[CALDoc] Creates a new XML element with the specified text content wrapped in\nin a CDATA section.\n","terminals":[{"name":"namespace","input":"text"},{"name":"name","input":"text"},{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementAttributes","name":"elementAttributes","type":"CalUtilitiesXmlBuilderelementAttributes","ui":"<b>Cal.Utilities.XmlBuilder.elementAttributes<\/b><br\/>[CALDoc] Returns the attributes for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementNamespace","name":"elementNamespace","type":"CalUtilitiesXmlBuilderelementNamespace","ui":"<b>Cal.Utilities.XmlBuilder.elementNamespace<\/b><br\/>[CALDoc] Returns the namespace (if any) for an XML Element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputBooleanXml","name":"inputBooleanXml","type":"CalUtilitiesXmlBuilderinputBooleanXml","ui":"<b>Cal.Utilities.XmlBuilder.inputBooleanXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementChildText","name":"elementChildText","type":"CalUtilitiesXmlBuilderelementChildText","ui":"<b>Cal.Utilities.XmlBuilder.elementChildText<\/b><br\/>[CALDoc] Returns the child text for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputFromXmlElementOutputable","name":"outputFromXmlElementOutputable","type":"CalUtilitiesXmlBuilderoutputFromXmlElementOutputable","ui":"<b>Cal.Utilities.XmlBuilder.outputFromXmlElementOutputable<\/b><br\/>[CALDoc] Helper for implementing toXml from XmlElementOutputable types","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForInt","name":"outputXmlAttributeForInt","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForInt","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForInt<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.fromXmlDocument","name":"fromXmlDocument","type":"CalUtilitiesXmlBuilderfromXmlDocument","ui":"<b>Cal.Utilities.XmlBuilder.fromXmlDocument<\/b><br\/>[CALDoc] Deserializes a value from the root XML element of the specified document.","terminals":[{"name":"document","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.documentRootElement","name":"documentRootElement","type":"CalUtilitiesXmlBuilderdocumentRootElement","ui":"<b>Cal.Utilities.XmlBuilder.documentRootElement<\/b><br\/>[CALDoc] Returns the root element of the XML document.","terminals":[{"name":"document","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputLongXml","name":"inputLongXml","type":"CalUtilitiesXmlBuilderinputLongXml","ui":"<b>Cal.Utilities.XmlBuilder.inputLongXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlElementForList","name":"outputXmlElementForList","type":"CalUtilitiesXmlBuilderoutputXmlElementForList","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlElementForList<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.attributeBasedTag","name":"attributeBasedTag","type":"CalUtilitiesXmlBuilderattributeBasedTag","ui":"<b>Cal.Utilities.XmlBuilder.attributeBasedTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.itemTag","name":"itemTag","type":"CalUtilitiesXmlBuilderitemTag","ui":"<b>Cal.Utilities.XmlBuilder.itemTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputTimeXml","name":"inputTimeXml","type":"CalUtilitiesXmlBuilderinputTimeXml","ui":"<b>Cal.Utilities.XmlBuilder.inputTimeXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.notationSystemId","name":"notationSystemId","type":"CalUtilitiesXmlBuildernotationSystemId","ui":"<b>Cal.Utilities.XmlBuilder.notationSystemId<\/b><br\/>[CALDoc] Returns the system ID of an XML notation.","terminals":[{"name":"notation","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputLongXmlAttribute","name":"inputLongXmlAttribute","type":"CalUtilitiesXmlBuilderinputLongXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputLongXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForColor","name":"outputXmlAttributeForColor","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForColor","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForColor<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.colorToString","name":"colorToString","type":"CalUtilitiesXmlBuildercolorToString","ui":"<b>Cal.Utilities.XmlBuilder.colorToString<\/b><br\/>[CALDoc] ","terminals":[{"name":"color","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementChildValue","name":"elementChildValue","type":"CalUtilitiesXmlBuilderelementChildValue","ui":"<b>Cal.Utilities.XmlBuilder.elementChildValue<\/b><br\/>[CALDoc] Returns the deserialized value from the specified child for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"attrName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementFirstChildElementByName","name":"elementFirstChildElementByName","type":"CalUtilitiesXmlBuilderelementFirstChildElementByName","ui":"<b>Cal.Utilities.XmlBuilder.elementFirstChildElementByName<\/b><br\/>[CALDoc] Returns the first child element with a specified name for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"elemName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.xmlDocumentToString","name":"xmlDocumentToString","type":"CalUtilitiesXmlBuilderxmlDocumentToString","ui":"<b>Cal.Utilities.XmlBuilder.xmlDocumentToString<\/b><br\/>[CALDoc] Generates a string representation of the XML document.\n","terminals":[{"name":"document","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputBooleanXml","name":"outputBooleanXml","type":"CalUtilitiesXmlBuilderoutputBooleanXml","ui":"<b>Cal.Utilities.XmlBuilder.outputBooleanXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputStringXmlAttribute","name":"inputStringXmlAttribute","type":"CalUtilitiesXmlBuilderinputStringXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputStringXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputIntXml","name":"inputIntXml","type":"CalUtilitiesXmlBuilderinputIntXml","ui":"<b>Cal.Utilities.XmlBuilder.inputIntXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlNotation","name":"makeXmlNotation","type":"CalUtilitiesXmlBuildermakeXmlNotation","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlNotation<\/b><br\/>[CALDoc] Creates a new XML notation with the specified name, system ID, and public ID.","terminals":[{"name":"systemId","input":"text"},{"name":"publicId","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.checkWellFormedPublicId","name":"checkWellFormedPublicId","type":"CalUtilitiesXmlBuildercheckWellFormedPublicId","ui":"<b>Cal.Utilities.XmlBuilder.checkWellFormedPublicId<\/b><br\/>[CALDoc] Checks that the specified string is a well-formed XML public ID.\n","terminals":[{"name":"pubid","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.checkWellFormedPublicIdChar","name":"checkWellFormedPublicIdChar","type":"CalUtilitiesXmlBuildercheckWellFormedPublicIdChar","ui":"<b>Cal.Utilities.XmlBuilder.checkWellFormedPublicIdChar<\/b><br\/>[CALDoc] Checks that the specified character is well-formed as a character in an XML public ID.\n","terminals":[{"name":"char","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementAttributeValue","name":"elementAttributeValue","type":"CalUtilitiesXmlBuilderelementAttributeValue","ui":"<b>Cal.Utilities.XmlBuilder.elementAttributeValue<\/b><br\/>[CALDoc] Returns the deserialized value from the specified attribute for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"attrName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementAttributeValueMaybe","name":"elementAttributeValueMaybe","type":"CalUtilitiesXmlBuilderelementAttributeValueMaybe","ui":"<b>Cal.Utilities.XmlBuilder.elementAttributeValueMaybe<\/b><br\/>[CALDoc] Returns the deserialized value from the specified attribute for an XML element.\n","terminals":[{"name":"attrName","input":"text"},{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlProcessingInstruction","name":"makeXmlProcessingInstruction","type":"CalUtilitiesXmlBuildermakeXmlProcessingInstruction","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlProcessingInstruction<\/b><br\/>[CALDoc] Creates a new XML processing instruction node.\n","terminals":[{"name":"content","input":"text"},{"name":"target","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlForRange","name":"outputXmlForRange","type":"CalUtilitiesXmlBuilderoutputXmlForRange","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlForRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlElementForRange","name":"outputXmlElementForRange","type":"CalUtilitiesXmlBuilderoutputXmlElementForRange","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlElementForRange<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"elemName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.endTag","name":"endTag","type":"CalUtilitiesXmlBuilderendTag","ui":"<b>Cal.Utilities.XmlBuilder.endTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.startTag","name":"startTag","type":"CalUtilitiesXmlBuilderstartTag","ui":"<b>Cal.Utilities.XmlBuilder.startTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.valueTag","name":"valueTag","type":"CalUtilitiesXmlBuildervalueTag","ui":"<b>Cal.Utilities.XmlBuilder.valueTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inclusiveTag","name":"inclusiveTag","type":"CalUtilitiesXmlBuilderinclusiveTag","ui":"<b>Cal.Utilities.XmlBuilder.inclusiveTag<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementForXmlAttributeOutputable","name":"elementForXmlAttributeOutputable","type":"CalUtilitiesXmlBuilderelementForXmlAttributeOutputable","ui":"<b>Cal.Utilities.XmlBuilder.elementForXmlAttributeOutputable<\/b><br\/>[CALDoc] This is a helper function for the occasional time when during serialization something that's normally serialized as an \nattribute needs to be stored as an element.","terminals":[{"name":"value","input":"text"},{"name":"elementName","input":"text"},{"name":"attributeName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.checkWellFormedSystemId","name":"checkWellFormedSystemId","type":"CalUtilitiesXmlBuildercheckWellFormedSystemId","ui":"<b>Cal.Utilities.XmlBuilder.checkWellFormedSystemId<\/b><br\/>[CALDoc] Checks that the specified string is a well-formed XML system ID.\n","terminals":[{"name":"sysid","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.notationPublicId","name":"notationPublicId","type":"CalUtilitiesXmlBuildernotationPublicId","ui":"<b>Cal.Utilities.XmlBuilder.notationPublicId<\/b><br\/>[CALDoc] Returns the public ID of an XML notation.","terminals":[{"name":"notation","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForTime","name":"outputXmlAttributeForTime","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForTime","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.stringForNode","name":"stringForNode","type":"CalUtilitiesXmlBuilderstringForNode","ui":"<b>Cal.Utilities.XmlBuilder.stringForNode<\/b><br\/>[CALDoc] ","terminals":[{"name":"defaultNamespaceURI","input":"text"},{"name":"node","input":"text"},{"name":"ancestorNamespaceDecls","input":"text"},{"name":"startOnNewLine","input":"text"},{"name":"indentString","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.isTextNode","name":"isTextNode","type":"CalUtilitiesXmlBuilderisTextNode","ui":"<b>Cal.Utilities.XmlBuilder.isTextNode<\/b><br\/>[CALDoc] Returns whether the XML node is TEXT.","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.singleIndent","name":"singleIndent","type":"CalUtilitiesXmlBuildersingleIndent","ui":"<b>Cal.Utilities.XmlBuilder.singleIndent<\/b><br\/>[CALDoc] The string for a single indent level.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.attributesString","name":"attributesString","type":"CalUtilitiesXmlBuilderattributesString","ui":"<b>Cal.Utilities.XmlBuilder.attributesString<\/b><br\/>[CALDoc] Construct the text for the attributes of an element.","terminals":[{"name":"attrs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.stringForAttribute","name":"stringForAttribute","type":"CalUtilitiesXmlBuilderstringForAttribute","ui":"<b>Cal.Utilities.XmlBuilder.stringForAttribute<\/b><br\/>[CALDoc] Generates the xml for an attribute.\neg xx=\"yy\" or a:xx=\"yy\"","terminals":[{"name":"attr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.namespaceDeclarationAttribute","name":"namespaceDeclarationAttribute","type":"CalUtilitiesXmlBuildernamespaceDeclarationAttribute","ui":"<b>Cal.Utilities.XmlBuilder.namespaceDeclarationAttribute<\/b><br\/>[CALDoc] An attribute to associate a prefix with a namespace URI.","terminals":[{"name":"namespace","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.noNamespaceAttribute","name":"noNamespaceAttribute","type":"CalUtilitiesXmlBuildernoNamespaceAttribute","ui":"<b>Cal.Utilities.XmlBuilder.noNamespaceAttribute<\/b><br\/>[CALDoc] An attribute to indicate that an element doesn't belong to a namespace.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.namespaceAttribute","name":"namespaceAttribute","type":"CalUtilitiesXmlBuildernamespaceAttribute","ui":"<b>Cal.Utilities.XmlBuilder.namespaceAttribute<\/b><br\/>[CALDoc] An attribute to indicate that an element belongs to the specified namespace.","terminals":[{"name":"uri","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.escapeXmlChars","name":"escapeXmlChars","type":"CalUtilitiesXmlBuilderescapeXmlChars","ui":"<b>Cal.Utilities.XmlBuilder.escapeXmlChars<\/b><br\/>[CALDoc] Replaces the chars <code>'&amp;'<\/code>, <code>'&lt;'<\/code>, and <code>'&gt;'<\/code> with the appropriate XML escape sequences.","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.substituteStrings","name":"substituteStrings","type":"CalUtilitiesXmlBuildersubstituteStrings","ui":"<b>Cal.Utilities.XmlBuilder.substituteStrings<\/b><br\/>[CALDoc] Returns the specified string with items in the substitutions list\nreplaced by the corresponding substitution strings.","terminals":[{"name":"strVal","input":"text"},{"name":"substitutions","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementFirstChildElement","name":"elementFirstChildElement","type":"CalUtilitiesXmlBuilderelementFirstChildElement","ui":"<b>Cal.Utilities.XmlBuilder.elementFirstChildElement<\/b><br\/>[CALDoc] Returns the first child element for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForInteger","name":"outputXmlAttributeForInteger","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForInteger","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForInteger<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputXmlAttributeForString","name":"outputXmlAttributeForString","type":"CalUtilitiesXmlBuilderoutputXmlAttributeForString","ui":"<b>Cal.Utilities.XmlBuilder.outputXmlAttributeForString<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlAttribute","name":"makeXmlAttribute","type":"CalUtilitiesXmlBuildermakeXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlAttribute<\/b><br\/>[CALDoc] Creates a new XML attribute with the specified name and value.","terminals":[{"name":"txt","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.fromXmlRecord","name":"fromXmlRecord","type":"CalUtilitiesXmlBuilderfromXmlRecord","ui":"<b>Cal.Utilities.XmlBuilder.fromXmlRecord<\/b><br\/>[CALDoc] ","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementAttributeByName","name":"elementAttributeByName","type":"CalUtilitiesXmlBuilderelementAttributeByName","ui":"<b>Cal.Utilities.XmlBuilder.elementAttributeByName<\/b><br\/>[CALDoc] Returns the first attribute with the given name\nAn error is thrown if the node is not an XML element.","terminals":[{"name":"attrName","input":"text"},{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.fieldNameToXmlName","name":"fieldNameToXmlName","type":"CalUtilitiesXmlBuilderfieldNameToXmlName","ui":"<b>Cal.Utilities.XmlBuilder.fieldNameToXmlName<\/b><br\/>[CALDoc] This function converts a record field name to a well-formed xml name -\nit replaces the leading '#' in oridinal field name with an '_'","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputFromXmlElementInputable","name":"inputFromXmlElementInputable","type":"CalUtilitiesXmlBuilderinputFromXmlElementInputable","ui":"<b>Cal.Utilities.XmlBuilder.inputFromXmlElementInputable<\/b><br\/>[CALDoc] Helper for implementing fromXml from XmlAttributeOutputable types","terminals":[{"name":"either","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputStringXml","name":"inputStringXml","type":"CalUtilitiesXmlBuilderinputStringXml","ui":"<b>Cal.Utilities.XmlBuilder.inputStringXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementChildElementByName","name":"elementChildElementByName","type":"CalUtilitiesXmlBuilderelementChildElementByName","ui":"<b>Cal.Utilities.XmlBuilder.elementChildElementByName<\/b><br\/>[CALDoc] Returns the fist child elements with a specified name (if any) for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"elemName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementChildElementsByName","name":"elementChildElementsByName","type":"CalUtilitiesXmlBuilderelementChildElementsByName","ui":"<b>Cal.Utilities.XmlBuilder.elementChildElementsByName<\/b><br\/>[CALDoc] Returns the child elements with a specified name for an XML element.\n","terminals":[{"name":"elemName","input":"text"},{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementLocalName","name":"elementLocalName","type":"CalUtilitiesXmlBuilderelementLocalName","ui":"<b>Cal.Utilities.XmlBuilder.elementLocalName<\/b><br\/>[CALDoc] Returns the local name of an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.indentSize","name":"indentSize","type":"CalUtilitiesXmlBuilderindentSize","ui":"<b>Cal.Utilities.XmlBuilder.indentSize<\/b><br\/>[CALDoc] The number of spaces to insert per indent level.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlCDataNode","name":"makeXmlCDataNode","type":"CalUtilitiesXmlBuildermakeXmlCDataNode","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlCDataNode<\/b><br\/>[CALDoc] Creates a new XML CDATA section with the specific text context.  ","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputTimeXml","name":"outputTimeXml","type":"CalUtilitiesXmlBuilderoutputTimeXml","ui":"<b>Cal.Utilities.XmlBuilder.outputTimeXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"name","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputColorXmlAttribute","name":"inputColorXmlAttribute","type":"CalUtilitiesXmlBuilderinputColorXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputColorXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.stringToColor","name":"stringToColor","type":"CalUtilitiesXmlBuilderstringToColor","ui":"<b>Cal.Utilities.XmlBuilder.stringToColor<\/b><br\/>[CALDoc] ","terminals":[{"name":"string","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.textNodeText","name":"textNodeText","type":"CalUtilitiesXmlBuildertextNodeText","ui":"<b>Cal.Utilities.XmlBuilder.textNodeText<\/b><br\/>[CALDoc] Returns the text of an XML text node.\n","terminals":[{"name":"textNode","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputColorXml","name":"outputColorXml","type":"CalUtilitiesXmlBuilderoutputColorXml","ui":"<b>Cal.Utilities.XmlBuilder.outputColorXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.outputFromXmlAttributeOutputable","name":"outputFromXmlAttributeOutputable","type":"CalUtilitiesXmlBuilderoutputFromXmlAttributeOutputable","ui":"<b>Cal.Utilities.XmlBuilder.outputFromXmlAttributeOutputable<\/b><br\/>[CALDoc] Helper for implementing toXml from XmlAttributeOutputable types","terminals":[{"name":"value","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.elementChildElements","name":"elementChildElements","type":"CalUtilitiesXmlBuilderelementChildElements","ui":"<b>Cal.Utilities.XmlBuilder.elementChildElements<\/b><br\/>[CALDoc] Returns the child elements for an XML element.\n","terminals":[{"name":"xmlElement","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.isElementNode","name":"isElementNode","type":"CalUtilitiesXmlBuilderisElementNode","ui":"<b>Cal.Utilities.XmlBuilder.isElementNode<\/b><br\/>[CALDoc] Returns whether the XML node is an element.","terminals":[{"name":"node","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlStyleSheet","name":"makeXmlStyleSheet","type":"CalUtilitiesXmlBuildermakeXmlStyleSheet","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlStyleSheet<\/b><br\/>[CALDoc] Creates a new XML stylesheet node with the specified url and type.\n","terminals":[{"name":"href","input":"text"},{"name":"type","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputTimeXmlAttribute","name":"inputTimeXmlAttribute","type":"CalUtilitiesXmlBuilderinputTimeXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.inputTimeXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"attribute","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.attributeValue","name":"attributeValue","type":"CalUtilitiesXmlBuilderattributeValue","ui":"<b>Cal.Utilities.XmlBuilder.attributeValue<\/b><br\/>[CALDoc] Returns the value of an XML attribute.","terminals":[{"name":"attr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlTextElement","name":"makeXmlTextElement","type":"CalUtilitiesXmlBuildermakeXmlTextElement","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlTextElement<\/b><br\/>[CALDoc] Creates a new XML element with the specified text content.\n","terminals":[{"name":"txt","input":"text"},{"name":"name","input":"text"},{"name":"namespace","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.makeXmlElement","name":"makeXmlElement","type":"CalUtilitiesXmlBuildermakeXmlElement","ui":"<b>Cal.Utilities.XmlBuilder.makeXmlElement<\/b><br\/>[CALDoc] Creates a new XML element.\n","terminals":[{"name":"childElements","input":"text"},{"name":"attributes","input":"text"},{"name":"namespace","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.attributeQualifiedName","name":"attributeQualifiedName","type":"CalUtilitiesXmlBuilderattributeQualifiedName","ui":"<b>Cal.Utilities.XmlBuilder.attributeQualifiedName<\/b><br\/>[CALDoc] Returns the qualified name of an XML attribute.\n","terminals":[{"name":"attr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.namespacePrefix","name":"namespacePrefix","type":"CalUtilitiesXmlBuildernamespacePrefix","ui":"<b>Cal.Utilities.XmlBuilder.namespacePrefix<\/b><br\/>[CALDoc] Returns the prefix associated with a namespace.\n","terminals":[{"name":"namespace","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.attributeNamespace","name":"attributeNamespace","type":"CalUtilitiesXmlBuilderattributeNamespace","ui":"<b>Cal.Utilities.XmlBuilder.attributeNamespace<\/b><br\/>[CALDoc] Returns the namespace (if any) for the attribute.","terminals":[{"name":"attr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.namespaceURI","name":"namespaceURI","type":"CalUtilitiesXmlBuildernamespaceURI","ui":"<b>Cal.Utilities.XmlBuilder.namespaceURI<\/b><br\/>[CALDoc] Returns the URI for a namespace.","terminals":[{"name":"namespace","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.attributeLocalName","name":"attributeLocalName","type":"CalUtilitiesXmlBuilderattributeLocalName","ui":"<b>Cal.Utilities.XmlBuilder.attributeLocalName<\/b><br\/>[CALDoc] Returns the local name of an XML attribute.\n","terminals":[{"name":"attr","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.findDuplicate","name":"findDuplicate","type":"CalUtilitiesXmlBuilderfindDuplicate","ui":"<b>Cal.Utilities.XmlBuilder.findDuplicate<\/b><br\/>[CALDoc] Returns the first duplicate value found in the specified list, if any.\n","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.checkWellFormedXmlName","name":"checkWellFormedXmlName","type":"CalUtilitiesXmlBuildercheckWellFormedXmlName","ui":"<b>Cal.Utilities.XmlBuilder.checkWellFormedXmlName<\/b><br\/>[CALDoc] Checks that the specified name is a well-formed XML name.\n","terminals":[{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.checkWellFormedFirstNameChar","name":"checkWellFormedFirstNameChar","type":"CalUtilitiesXmlBuildercheckWellFormedFirstNameChar","ui":"<b>Cal.Utilities.XmlBuilder.checkWellFormedFirstNameChar<\/b><br\/>[CALDoc] Checks that the specified character is well-formed as the first character in an XML name.\n","terminals":[{"name":"firstChar","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.isWellFormedFirstXmlNameChar","name":"isWellFormedFirstXmlNameChar","type":"CalUtilitiesXmlBuilderisWellFormedFirstXmlNameChar","ui":"<b>Cal.Utilities.XmlBuilder.isWellFormedFirstXmlNameChar<\/b><br\/>[CALDoc] Returns whether the specified character is well-formed as the first character in an XML name.","terminals":[{"name":"firstChar","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.checkWellFormedNameChar","name":"checkWellFormedNameChar","type":"CalUtilitiesXmlBuildercheckWellFormedNameChar","ui":"<b>Cal.Utilities.XmlBuilder.checkWellFormedNameChar<\/b><br\/>[CALDoc] Checks that the specified character is well-formed as a character in an XML name.\n","terminals":[{"name":"char","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.isWellFormedXmlNameChar","name":"isWellFormedXmlNameChar","type":"CalUtilitiesXmlBuilderisWellFormedXmlNameChar","ui":"<b>Cal.Utilities.XmlBuilder.isWellFormedXmlNameChar<\/b><br\/>[CALDoc] Returns whether the specified character is well-formed as a character in an XML name (not the first character).","terminals":[{"name":"char","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputIntegerXml","name":"inputIntegerXml","type":"CalUtilitiesXmlBuilderinputIntegerXml","ui":"<b>Cal.Utilities.XmlBuilder.inputIntegerXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.inputFromXmlAttributeInputable","name":"inputFromXmlAttributeInputable","type":"CalUtilitiesXmlBuilderinputFromXmlAttributeInputable","ui":"<b>Cal.Utilities.XmlBuilder.inputFromXmlAttributeInputable<\/b><br\/>[CALDoc] Helper for implementing fromXml from XmlAttributeInputable types","terminals":[{"name":"either","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlDocument","name":"XmlDocument","type":"CalUtilitiesXmlBuilderXmlDocument","ui":"<b>Cal.Utilities.XmlBuilder.XmlDocument<\/b><br\/>[CALDoc] ","terminals":[{"name":"notations","input":"text"},{"name":"topLevelNodes","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlNamespace","name":"XmlNamespace","type":"CalUtilitiesXmlBuilderXmlNamespace","ui":"<b>Cal.Utilities.XmlBuilder.XmlNamespace<\/b><br\/>[CALDoc] ","terminals":[{"name":"prefix","input":"text"},{"name":"uri","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlProcessingInstruction","name":"XmlProcessingInstruction","type":"CalUtilitiesXmlBuilderXmlProcessingInstruction","ui":"<b>Cal.Utilities.XmlBuilder.XmlProcessingInstruction<\/b><br\/>[CALDoc] ","terminals":[{"name":"content","input":"text"},{"name":"target","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlStyleSheet","name":"XmlStyleSheet","type":"CalUtilitiesXmlBuilderXmlStyleSheet","ui":"<b>Cal.Utilities.XmlBuilder.XmlStyleSheet<\/b><br\/>[CALDoc] ","terminals":[{"name":"href","input":"text"},{"name":"type","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlElement","name":"XmlElement","type":"CalUtilitiesXmlBuilderXmlElement","ui":"<b>Cal.Utilities.XmlBuilder.XmlElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"namespace","input":"text"},{"name":"children","input":"text"},{"name":"name","input":"text"},{"name":"attributes","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlText","name":"XmlText","type":"CalUtilitiesXmlBuilderXmlText","ui":"<b>Cal.Utilities.XmlBuilder.XmlText<\/b><br\/>[CALDoc] ","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlCDataSection","name":"XmlCDataSection","type":"CalUtilitiesXmlBuilderXmlCDataSection","ui":"<b>Cal.Utilities.XmlBuilder.XmlCDataSection<\/b><br\/>[CALDoc] ","terminals":[{"name":"txt","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlComment","name":"XmlComment","type":"CalUtilitiesXmlBuilderXmlComment","ui":"<b>Cal.Utilities.XmlBuilder.XmlComment<\/b><br\/>[CALDoc] ","terminals":[{"name":"commentText","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlAttribute","name":"XmlAttribute","type":"CalUtilitiesXmlBuilderXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.XmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"namespace","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.XmlNotation","name":"XmlNotation","type":"CalUtilitiesXmlBuilderXmlNotation","ui":"<b>Cal.Utilities.XmlBuilder.XmlNotation<\/b><br\/>[CALDoc] ","terminals":[{"name":"systemId","input":"text"},{"name":"publicId","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.toXml","name":"toXml","type":"CalUtilitiesXmlBuildertoXml","ui":"<b>Cal.Utilities.XmlBuilder.toXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.toXmlElement","name":"toXmlElement","type":"CalUtilitiesXmlBuildertoXmlElement","ui":"<b>Cal.Utilities.XmlBuilder.toXmlElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.toXmlAttribute","name":"toXmlAttribute","type":"CalUtilitiesXmlBuildertoXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.toXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.fromXml","name":"fromXml","type":"CalUtilitiesXmlBuilderfromXml","ui":"<b>Cal.Utilities.XmlBuilder.fromXml<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.fromXmlElement","name":"fromXmlElement","type":"CalUtilitiesXmlBuilderfromXmlElement","ui":"<b>Cal.Utilities.XmlBuilder.fromXmlElement<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.XmlBuilder.fromXmlAttribute","name":"fromXmlAttribute","type":"CalUtilitiesXmlBuilderfromXmlAttribute","ui":"<b>Cal.Utilities.XmlBuilder.fromXmlAttribute<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.XmlBuilder"]},{"description":"Cal.Utilities.Parser.spaces","name":"spaces","type":"CalUtilitiesParserspaces","ui":"<b>Cal.Utilities.Parser.spaces<\/b><br\/>[CALDoc] A parser that parses <em>zero<\/em> or more whitespace characters and discards the result.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pOrT5","name":"pOrT5","type":"CalUtilitiesParserpOrT5","ui":"<b>Cal.Utilities.Parser.pOrT5<\/b><br\/>[CALDoc] The parser <code>pOrT5 p1 p2 p3 p4 p5<\/code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n (try p4) `pOr`\n p5<\/pre>\n","terminals":[{"name":"parser1","input":"text"},{"name":"parser3","input":"text"},{"name":"parser2","input":"text"},{"name":"parser4","input":"text"},{"name":"parser5","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.token","name":"token","type":"CalUtilitiesParsertoken","ui":"<b>Cal.Utilities.Parser.token<\/b><br\/>[CALDoc] The parser <code>token showTok posFromTok testTok<\/code> accepts a token <code>t<\/code> with\nresult <code>x<\/code> when the function <code>testTok t<\/code> returns <code>Just x<\/code>.\nThe source position of <code>t<\/code> should be returned by <code>posFromTok t<\/code> and the token can be shown\nusing <code>showTok t<\/code>.","terminals":[{"name":"test","input":"text"},{"name":"tokpos","input":"text"},{"name":"_INPUT","input":"text"},{"name":"show","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.octDigit","name":"octDigit","type":"CalUtilitiesParseroctDigit","ui":"<b>Cal.Utilities.Parser.octDigit<\/b><br\/>[CALDoc] A parser that parses an octal digit (a character between <code>'0'<\/code> and <code>'7'<\/code>), and returns the parsed\ncharacter.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setPosition","name":"setPosition","type":"CalUtilitiesParsersetPosition","ui":"<b>Cal.Utilities.Parser.setPosition<\/b><br\/>[CALDoc] The parser <code>setPosition pos<\/code> sets the current source position to <code>pos<\/code>.","terminals":[{"name":"pos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.caseStringU","name":"caseStringU","type":"CalUtilitiesParsercaseStringU","ui":"<b>Cal.Utilities.Parser.caseStringU<\/b><br\/>[CALDoc] The parser <code>caseStringU s<\/code> parses a sequence of characters <code>chars<\/code> satisfying\n<code>(map toUpperCase chars) == s<\/code>, and returns the parsed characters in a list.","terminals":[{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sourceName","name":"sourceName","type":"CalUtilitiesParsersourceName","ui":"<b>Cal.Utilities.Parser.sourceName<\/b><br\/>[CALDoc] Extracts the name of the source from a source position.","terminals":[{"name":"sp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.isOctDigit","name":"isOctDigit","type":"CalUtilitiesParserisOctDigit","ui":"<b>Cal.Utilities.Parser.isOctDigit<\/b><br\/>[CALDoc] ","terminals":[{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.newline","name":"newline","type":"CalUtilitiesParsernewline","ui":"<b>Cal.Utilities.Parser.newline<\/b><br\/>[CALDoc] A parser that parses a newline character (<code>'\\n'<\/code>), and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pFail","name":"pFail","type":"CalUtilitiesParserpFail","ui":"<b>Cal.Utilities.Parser.pFail<\/b><br\/>[CALDoc] The parser <code>pFail msg<\/code> always fails with the error message <code>msg<\/code>\nwithout consuming any input.","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tab","name":"tab","type":"CalUtilitiesParsertab","ui":"<b>Cal.Utilities.Parser.tab<\/b><br\/>[CALDoc] A parser that parses a tab character (<code>'\\t'<\/code>), and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.getInput","name":"getInput","type":"CalUtilitiesParsergetInput","ui":"<b>Cal.Utilities.Parser.getInput<\/b><br\/>[CALDoc] Same as <code>getInputSeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pOrT7","name":"pOrT7","type":"CalUtilitiesParserpOrT7","ui":"<b>Cal.Utilities.Parser.pOrT7<\/b><br\/>[CALDoc] The parser <code>pOrT7 p1 p2 p3 p4 p5 p6 p7<\/code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n (try p4) `pOr`\n (try p5) `pOr`\n (try p6) `pOr`\n p7<\/pre>\n","terminals":[{"name":"parser3","input":"text"},{"name":"parser7","input":"text"},{"name":"parser6","input":"text"},{"name":"parser2","input":"text"},{"name":"parser4","input":"text"},{"name":"parser5","input":"text"},{"name":"parser1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setInput","name":"setInput","type":"CalUtilitiesParsersetInput","ui":"<b>Cal.Utilities.Parser.setInput<\/b><br\/>[CALDoc] Same as <code>setInputSeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"input","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.between","name":"between","type":"CalUtilitiesParserbetween","ui":"<b>Cal.Utilities.Parser.between<\/b><br\/>[CALDoc] The parser <code>between open close p<\/code> parses <code>open<\/code>, followed by <code>p<\/code> and <code>close<\/code>,\nand returns the value returned by <code>p<\/code>.","terminals":[{"name":"close","input":"text"},{"name":"p","input":"text"},{"name":"open","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.oneOf","name":"oneOf","type":"CalUtilitiesParseroneOf","ui":"<b>Cal.Utilities.Parser.oneOf<\/b><br\/>[CALDoc] The parser <code>oneOf cs<\/code> succeeds if the current character is in the supplied list of characters\n<code>cs<\/code>, and returns the parsed character.","terminals":[{"name":"cs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.char","name":"char","type":"CalUtilitiesParserchar","ui":"<b>Cal.Utilities.Parser.char<\/b><br\/>[CALDoc] The parser <code>char c<\/code> parses a single character <code>c<\/code>, and returns the parsed character (i.e. <code>c<\/code>).","terminals":[{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.lookAhead","name":"lookAhead","type":"CalUtilitiesParserlookAhead","ui":"<b>Cal.Utilities.Parser.lookAhead<\/b><br\/>[CALDoc] The parser <code>lookAhead p<\/code> implements the functionality of lookahead: it applies parser <code>p<\/code> and\ncaptures its return value <em>without changing the parser's state and without consuming input<\/em>.","terminals":[{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sourceColumn","name":"sourceColumn","type":"CalUtilitiesParsersourceColumn","ui":"<b>Cal.Utilities.Parser.sourceColumn<\/b><br\/>[CALDoc] Extracts the column number from a source position.","terminals":[{"name":"sp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setSourceColumn","name":"setSourceColumn","type":"CalUtilitiesParsersetSourceColumn","ui":"<b>Cal.Utilities.Parser.setSourceColumn<\/b><br\/>[CALDoc] Sets the column number of a source position to the given value.","terminals":[{"name":"sp","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.count","name":"count","type":"CalUtilitiesParsercount","ui":"<b>Cal.Utilities.Parser.count<\/b><br\/>[CALDoc] The parser <code>count n p<\/code> parses <code>n<\/code> occurrences of <code>p<\/code>. ","terminals":[{"name":"n","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pAppend","name":"pAppend","type":"CalUtilitiesParserpAppend","ui":"<b>Cal.Utilities.Parser.pAppend<\/b><br\/>[CALDoc] The parser <code>p `pAppend` q<\/code> first applies the parser <code>p<\/code>, then applies the parser <code>q<\/code>,\nand finally returns the concatenation of the <code>Appendable<\/code> results of the parsers <code>p<\/code> and <code>q<\/code>.","terminals":[{"name":"p1","input":"text"},{"name":"p2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.choiceT","name":"choiceT","type":"CalUtilitiesParserchoiceT","ui":"<b>Cal.Utilities.Parser.choiceT<\/b><br\/>[CALDoc] The parser <code>choiceT ps<\/code> tries to apply the parsers in the list <code>ps<\/code> in order using\nthe <code>pOrT<\/code> combinator, until one of them succeeds. ","terminals":[{"name":"ps","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setSourceLine","name":"setSourceLine","type":"CalUtilitiesParsersetSourceLine","ui":"<b>Cal.Utilities.Parser.setSourceLine<\/b><br\/>[CALDoc] Sets the line number of a source position to the given value.","terminals":[{"name":"sp","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sepEndBy","name":"sepEndBy","type":"CalUtilitiesParsersepEndBy","ui":"<b>Cal.Utilities.Parser.sepEndBy<\/b><br\/>[CALDoc] The parser <code>sepEndBy p sep<\/code> parses <em>zero<\/em> or more occurrences of <code>p<\/code>,\nseparated and <em>optionally<\/em> ended by <code>sep<\/code>, and returns a list of values returned by the applications\nof <code>p<\/code>.","terminals":[{"name":"p","input":"text"},{"name":"sep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sepEndBy1","name":"sepEndBy1","type":"CalUtilitiesParsersepEndBy1","ui":"<b>Cal.Utilities.Parser.sepEndBy1<\/b><br\/>[CALDoc] The parser <code>sepEndBy1 p sep<\/code> parses <em>one<\/em> or more occurrences of <code>p<\/code>,\nseparated and <em>optionally<\/em> ended by <code>sep<\/code>, and returns a list of values returned by the applications\nof <code>p<\/code>.","terminals":[{"name":"sep","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sourceLine","name":"sourceLine","type":"CalUtilitiesParsersourceLine","ui":"<b>Cal.Utilities.Parser.sourceLine<\/b><br\/>[CALDoc] Extracts the line number from a source position.","terminals":[{"name":"sp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.updateState","name":"updateState","type":"CalUtilitiesParserupdateState","ui":"<b>Cal.Utilities.Parser.updateState<\/b><br\/>[CALDoc] The parser <code>updateState f<\/code> updates the user state by applying the update function <code>f<\/code>\non it. ","terminals":[{"name":"f","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.caseString","name":"caseString","type":"CalUtilitiesParsercaseString","ui":"<b>Cal.Utilities.Parser.caseString<\/b><br\/>[CALDoc] The parser <code>caseString s<\/code> parses a sequence of characters <code>chars<\/code> satisfying\n<code>(map toLowerCase chars) == s<\/code>, and returns the parsed characters in a list.","terminals":[{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.runParser","name":"runParser","type":"CalUtilitiesParserrunParser","ui":"<b>Cal.Utilities.Parser.runParser<\/b><br\/>[CALDoc] Same as <code>runParserSeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"st","input":"text"},{"name":"input","input":"text"},{"name":"name","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.lower","name":"lower","type":"CalUtilitiesParserlower","ui":"<b>Cal.Utilities.Parser.lower<\/b><br\/>[CALDoc] A parser that parses a lowercase letter (according to <code>Char.isLowerCase<\/code>) and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.parseTest","name":"parseTest","type":"CalUtilitiesParserparseTest","ui":"<b>Cal.Utilities.Parser.parseTest<\/b><br\/>[CALDoc] Same as <code>parseTestSeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"p","input":"text"},{"name":"input","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.parseTestSeq","name":"parseTestSeq","type":"CalUtilitiesParserparseTestSeq","ui":"<b>Cal.Utilities.Parser.parseTestSeq<\/b><br\/>[CALDoc] <code>parseTestSeq p input<\/code> applies a parser <code>p<\/code> against input <code>input<\/code>\nand returns the result as a string. ","terminals":[{"name":"p","input":"text"},{"name":"input","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pOrT3","name":"pOrT3","type":"CalUtilitiesParserpOrT3","ui":"<b>Cal.Utilities.Parser.pOrT3<\/b><br\/>[CALDoc] The parser <code>pOrT3 p1 p2 p3<\/code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n p3<\/pre>\n","terminals":[{"name":"parser3","input":"text"},{"name":"parser2","input":"text"},{"name":"parser1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.caseChar","name":"caseChar","type":"CalUtilitiesParsercaseChar","ui":"<b>Cal.Utilities.Parser.caseChar<\/b><br\/>[CALDoc] The parser <code>caseChar c<\/code> parses a single character <code>x<\/code> where <code>(toLowerCase x) == c<\/code>,\nand returns the parsed character (i.e. <code>x<\/code>).","terminals":[{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.getPosition","name":"getPosition","type":"CalUtilitiesParsergetPosition","ui":"<b>Cal.Utilities.Parser.getPosition<\/b><br\/>[CALDoc] A parser that returns the current source position.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setParserState","name":"setParserState","type":"CalUtilitiesParsersetParserState","ui":"<b>Cal.Utilities.Parser.setParserState<\/b><br\/>[CALDoc] The parser <code>setParserState st<\/code> sets the parser's state to <code>st<\/code>.","terminals":[{"name":"st","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.makeTSString","name":"makeTSString","type":"CalUtilitiesParsermakeTSString","ui":"<b>Cal.Utilities.Parser.makeTSString<\/b><br\/>[CALDoc] Constructs a token sequence using the input string as its internal representation.\n","terminals":[{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.digit","name":"digit","type":"CalUtilitiesParserdigit","ui":"<b>Cal.Utilities.Parser.digit<\/b><br\/>[CALDoc] A parser that parses a digit (according to <code>Char.isDigit<\/code>) and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.getInputSeq","name":"getInputSeq","type":"CalUtilitiesParsergetInputSeq","ui":"<b>Cal.Utilities.Parser.getInputSeq<\/b><br\/>[CALDoc] A parser that returns the current input.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setSourceName","name":"setSourceName","type":"CalUtilitiesParsersetSourceName","ui":"<b>Cal.Utilities.Parser.setSourceName<\/b><br\/>[CALDoc] Sets the source name of a source position to the given string.","terminals":[{"name":"sp","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.choice","name":"choice","type":"CalUtilitiesParserchoice","ui":"<b>Cal.Utilities.Parser.choice<\/b><br\/>[CALDoc] The parser <code>choice ps<\/code> tries to apply the parsers in the list <code>ps<\/code> in order using\nthe <code>pOr<\/code> combinator, until one of them succeeds. ","terminals":[{"name":"ps","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pZero","name":"pZero","type":"CalUtilitiesParserpZero","ui":"<b>Cal.Utilities.Parser.pZero<\/b><br\/>[CALDoc] The parser <code>pZero<\/code> always fails without consuming any input. ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setInputSeq","name":"setInputSeq","type":"CalUtilitiesParsersetInputSeq","ui":"<b>Cal.Utilities.Parser.setInputSeq<\/b><br\/>[CALDoc] The parser <code>setInput input<\/code> continues parsing with <code>input<\/code>. ","terminals":[{"name":"input","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.optional","name":"optional","type":"CalUtilitiesParseroptional","ui":"<b>Cal.Utilities.Parser.optional<\/b><br\/>[CALDoc] The parser <code>optional p<\/code> tries to apply parser <code>p<\/code>. ","terminals":[{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sepBy","name":"sepBy","type":"CalUtilitiesParsersepBy","ui":"<b>Cal.Utilities.Parser.sepBy<\/b><br\/>[CALDoc] The parser <code>sepBy p sep<\/code> parses <em>zero<\/em> or more occurrences of <code>p<\/code>,\nseparated by <code>sep<\/code>, and returns a list of the values returned by the applications of <code>p<\/code>.","terminals":[{"name":"sep","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sepBy1","name":"sepBy1","type":"CalUtilitiesParsersepBy1","ui":"<b>Cal.Utilities.Parser.sepBy1<\/b><br\/>[CALDoc] The parser <code>sepBy1 p sep<\/code> parses <em>one<\/em> or more occurrences of <code>p<\/code>,\nseparated by <code>sep<\/code>, and returns a list of the values returned by the applications of <code>p<\/code>.","terminals":[{"name":"p","input":"text"},{"name":"sep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pMap","name":"pMap","type":"CalUtilitiesParserpMap","ui":"<b>Cal.Utilities.Parser.pMap<\/b><br\/>[CALDoc] The parser <code>pMap f parser<\/code> is an optimized implementation of\n\n<pre> parser `pBind` (\\x -&gt;\n pReturn (f x))\n<\/pre>\n","terminals":[{"name":"parser","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sequence","name":"sequence","type":"CalUtilitiesParsersequence","ui":"<b>Cal.Utilities.Parser.sequence<\/b><br\/>[CALDoc] The parser <code>sequence list<\/code> applies the parsers in <code>list<\/code> in sequence, and returns\na list containing the values returned by each parser.","terminals":[{"name":"list","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.incSourceColumn","name":"incSourceColumn","type":"CalUtilitiesParserincSourceColumn","ui":"<b>Cal.Utilities.Parser.incSourceColumn<\/b><br\/>[CALDoc] Increments the column number of a source position by the given amount.","terminals":[{"name":"n","input":"text"},{"name":"sp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.chainRight","name":"chainRight","type":"CalUtilitiesParserchainRight","ui":"<b>Cal.Utilities.Parser.chainRight<\/b><br\/>[CALDoc] The parser <code>chainRight p op x<\/code> parses <em>zero<\/em> or more occurrences of <code>p<\/code>,\nseparated by <code>op<\/code>, and returns a value obtained by <em>right<\/em>-associative applications\nof the function returned by <code>op<\/code> to the values returned by <code>p<\/code>. ","terminals":[{"name":"p","input":"text"},{"name":"op","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.chainRight1","name":"chainRight1","type":"CalUtilitiesParserchainRight1","ui":"<b>Cal.Utilities.Parser.chainRight1<\/b><br\/>[CALDoc] The parser <code>chainRight1 p op<\/code> parses <em>one<\/em> or more occurrences of <code>p<\/code>,\nseparated by <code>op<\/code>, and returns a value obtained by <em>right<\/em>-associative applications\nof the function returned by <code>op<\/code> to the values returned by <code>p<\/code>.","terminals":[{"name":"op","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.alphaNum","name":"alphaNum","type":"CalUtilitiesParseralphaNum","ui":"<b>Cal.Utilities.Parser.alphaNum<\/b><br\/>[CALDoc] A parser that parses a letter or digit (according to <code>Char.isLetterOrDigit<\/code>) and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.isAlphaNum","name":"isAlphaNum","type":"CalUtilitiesParserisAlphaNum","ui":"<b>Cal.Utilities.Parser.isAlphaNum<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.parseErrorShow","name":"parseErrorShow","type":"CalUtilitiesParserparseErrorShow","ui":"<b>Cal.Utilities.Parser.parseErrorShow<\/b><br\/>[CALDoc] ","terminals":[{"name":"pe","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pOrT6","name":"pOrT6","type":"CalUtilitiesParserpOrT6","ui":"<b>Cal.Utilities.Parser.pOrT6<\/b><br\/>[CALDoc] The parser <code>pOrT6 p1 p2 p3 p4 p5 p6<\/code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n (try p4) `pOr`\n (try p5) `pOr`\n p6<\/pre>\n","terminals":[{"name":"parser5","input":"text"},{"name":"parser6","input":"text"},{"name":"parser2","input":"text"},{"name":"parser4","input":"text"},{"name":"parser3","input":"text"},{"name":"parser1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokenSatisfy","name":"tokenSatisfy","type":"CalUtilitiesParsertokenSatisfy","ui":"<b>Cal.Utilities.Parser.tokenSatisfy<\/b><br\/>[CALDoc] Same as <code>tokenSatisfySeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"nextpos","input":"text"},{"name":"show","input":"text"},{"name":"f","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.incSourceLine","name":"incSourceLine","type":"CalUtilitiesParserincSourceLine","ui":"<b>Cal.Utilities.Parser.incSourceLine<\/b><br\/>[CALDoc] Increments the line number of a source position by the given amount.","terminals":[{"name":"sp","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.endBy","name":"endBy","type":"CalUtilitiesParserendBy","ui":"<b>Cal.Utilities.Parser.endBy<\/b><br\/>[CALDoc] The parser <code>endBy p sep<\/code> parses <em>zero<\/em> or more occurrences of <code>p<\/code>,\nseparated and ended by <code>sep<\/code>, and returns a list of values returned by the applications of <code>p<\/code>.","terminals":[{"name":"sep","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.spaces1","name":"spaces1","type":"CalUtilitiesParserspaces1","ui":"<b>Cal.Utilities.Parser.spaces1<\/b><br\/>[CALDoc] A parser that parses <em>one<\/em> or more whitespace characters and discards the result.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.skipMany1","name":"skipMany1","type":"CalUtilitiesParserskipMany1","ui":"<b>Cal.Utilities.Parser.skipMany1<\/b><br\/>[CALDoc] The parser <code>skipMany1 p<\/code> applies the parser <code>p<\/code> <em>one<\/em> or more times, but discarding the results\nreturned by <code>p<\/code>. ","terminals":[{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.skipMany","name":"skipMany","type":"CalUtilitiesParserskipMany","ui":"<b>Cal.Utilities.Parser.skipMany<\/b><br\/>[CALDoc] The parser <code>skipMany p<\/code> applies the parser <code>p<\/code> <em>zero<\/em> or more times, but discarding the results\nreturned by <code>p<\/code>. ","terminals":[{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.letter","name":"letter","type":"CalUtilitiesParserletter","ui":"<b>Cal.Utilities.Parser.letter<\/b><br\/>[CALDoc] A parser that parses a letter (according to <code>Char.isLetter<\/code>) and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.isAlpha","name":"isAlpha","type":"CalUtilitiesParserisAlpha","ui":"<b>Cal.Utilities.Parser.isAlpha<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.endBy1","name":"endBy1","type":"CalUtilitiesParserendBy1","ui":"<b>Cal.Utilities.Parser.endBy1<\/b><br\/>[CALDoc] The parser <code>endBy1 p sep<\/code> parses <em>one<\/em> or more occurrences of <code>p<\/code>,\nseparated and ended by <code>sep<\/code>, and returns a list of values returned by the applications of <code>p<\/code>.","terminals":[{"name":"p","input":"text"},{"name":"sep","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.many1","name":"many1","type":"CalUtilitiesParsermany1","ui":"<b>Cal.Utilities.Parser.many1<\/b><br\/>[CALDoc] The parser <code>many1 p<\/code> applies the parser <code>p<\/code> <em>one<\/em> or more times, and returns\na list of the values returned by applications of <code>p<\/code>.","terminals":[{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.stateInput","name":"stateInput","type":"CalUtilitiesParserstateInput","ui":"<b>Cal.Utilities.Parser.stateInput<\/b><br\/>[CALDoc] ","terminals":[{"name":"state","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.parse","name":"parse","type":"CalUtilitiesParserparse","ui":"<b>Cal.Utilities.Parser.parse<\/b><br\/>[CALDoc] Same as <code>parseSeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"p","input":"text"},{"name":"name","input":"text"},{"name":"input","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.makeTSList","name":"makeTSList","type":"CalUtilitiesParsermakeTSList","ui":"<b>Cal.Utilities.Parser.makeTSList<\/b><br\/>[CALDoc] Constructs a token sequence using the input list as its internal representation.\n","terminals":[{"name":"ts","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokenPrimEx","name":"tokenPrimEx","type":"CalUtilitiesParsertokenPrimEx","ui":"<b>Cal.Utilities.Parser.tokenPrimEx<\/b><br\/>[CALDoc] Same as <code>tokenPrimExSeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"nextpos","input":"text"},{"name":"mbNextState","input":"text"},{"name":"_INPUT","input":"text"},{"name":"test","input":"text"},{"name":"show","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.chainLeft","name":"chainLeft","type":"CalUtilitiesParserchainLeft","ui":"<b>Cal.Utilities.Parser.chainLeft<\/b><br\/>[CALDoc] The parser <code>chainLeft p op x<\/code> parses <em>zero<\/em> or more occurrences of <code>p<\/code>,\nseparated by <code>op<\/code>, and returns a value obtained by <em>left<\/em>-associative applications\nof the function returned by <code>op<\/code> to the values returned by <code>p<\/code>. ","terminals":[{"name":"op","input":"text"},{"name":"p","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.chainLeft1","name":"chainLeft1","type":"CalUtilitiesParserchainLeft1","ui":"<b>Cal.Utilities.Parser.chainLeft1<\/b><br\/>[CALDoc] The parser <code>chainLeft1 p op<\/code> parses <em>one<\/em> or more occurrences of <code>p<\/code>,\nseparated by <code>op<\/code>, and returns a value obtained by <em>left<\/em>-associative applications\nof the function returned by <code>op<\/code> to the values returned by <code>p<\/code>.","terminals":[{"name":"op","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.upper","name":"upper","type":"CalUtilitiesParserupper","ui":"<b>Cal.Utilities.Parser.upper<\/b><br\/>[CALDoc] A parser that parses an uppercase letter (according to <code>Char.isUpperCase<\/code>) and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.eof","name":"eof","type":"CalUtilitiesParsereof","ui":"<b>Cal.Utilities.Parser.eof<\/b><br\/>[CALDoc] A parser that only succeeds at the end of the input.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.anyToken","name":"anyToken","type":"CalUtilitiesParseranyToken","ui":"<b>Cal.Utilities.Parser.anyToken<\/b><br\/>[CALDoc] The parser <code>anyToken showTok<\/code> accepts any kind of token (that can\nbe shown using <code>showTok<\/code>), and returns the accepted token.","terminals":[{"name":"show","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokenPrim","name":"tokenPrim","type":"CalUtilitiesParsertokenPrim","ui":"<b>Cal.Utilities.Parser.tokenPrim<\/b><br\/>[CALDoc] Same as <code>tokenPrimSeq<\/code>, but with a list of tokens instead of a token sequence.","terminals":[{"name":"nextpos","input":"text"},{"name":"show","input":"text"},{"name":"_INPUT","input":"text"},{"name":"test","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.wrapNextPos","name":"wrapNextPos","type":"CalUtilitiesParserwrapNextPos","ui":"<b>Cal.Utilities.Parser.wrapNextPos<\/b><br\/>[CALDoc] Convert a nextpos function from accepting a list of tokens to accepting a token sequence.","terminals":[{"name":"nextpos","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokenSequenceToList","name":"tokenSequenceToList","type":"CalUtilitiesParsertokenSequenceToList","ui":"<b>Cal.Utilities.Parser.tokenSequenceToList<\/b><br\/>[CALDoc] Converts a token sequence to a list of tokens.","terminals":[{"name":"tokseq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.showParseError","name":"showParseError","type":"CalUtilitiesParsershowParseError","ui":"<b>Cal.Utilities.Parser.showParseError<\/b><br\/>[CALDoc] Formats the given <code>ParseError<\/code> into a string for display.","terminals":[{"name":"err","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.errorMessages","name":"errorMessages","type":"CalUtilitiesParsererrorMessages","ui":"<b>Cal.Utilities.Parser.errorMessages<\/b><br\/>[CALDoc] Extracts the list of error messages from the parse error, sorted according to ordering function <code>messageCompare<\/code>.","terminals":[{"name":"parser","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.showErrorMessages","name":"showErrorMessages","type":"CalUtilitiesParsershowErrorMessages","ui":"<b>Cal.Utilities.Parser.showErrorMessages<\/b><br\/>[CALDoc] The standard function for showing error messages. ","terminals":[{"name":"msgs","input":"text"},{"name":"msgExpecting","input":"text"},{"name":"msgOr","input":"text"},{"name":"msgUnknown","input":"text"},{"name":"msgUnExpected","input":"text"},{"name":"msgEndOfInput","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.errorPos","name":"errorPos","type":"CalUtilitiesParsererrorPos","ui":"<b>Cal.Utilities.Parser.errorPos<\/b><br\/>[CALDoc] Extracts the source position from the parse error.","terminals":[{"name":"parser","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.showSourcePos","name":"showSourcePos","type":"CalUtilitiesParsershowSourcePos","ui":"<b>Cal.Utilities.Parser.showSourcePos<\/b><br\/>[CALDoc] Formats the given <code>SourcePos<\/code> into a string for display.","terminals":[{"name":"sp","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.noneOf","name":"noneOf","type":"CalUtilitiesParsernoneOf","ui":"<b>Cal.Utilities.Parser.noneOf<\/b><br\/>[CALDoc] The parser <code>noneOf cs<\/code> succeeds if the current character is <em>not<\/em> in the supplied list of characters\n<code>cs<\/code>, and returns the parsed character.","terminals":[{"name":"cs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.space","name":"space","type":"CalUtilitiesParserspace","ui":"<b>Cal.Utilities.Parser.space<\/b><br\/>[CALDoc] A parser that parses a whitespace character (according to <code>Char.isWhitespace<\/code>), and returns the\nparsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.manyUntil","name":"manyUntil","type":"CalUtilitiesParsermanyUntil","ui":"<b>Cal.Utilities.Parser.manyUntil<\/b><br\/>[CALDoc] The parser <code>manyUntil p end<\/code> applies parser <code>p<\/code> <em>zero<\/em> or more times until either\n1) the parser <code>end<\/code> would succeed if applied on the remaining input, or\n2) the end of the input is reached.\nIt returns the list of values returned by applications of <code>p<\/code>.\n<p>This parser combinator is exactly the same as:\n\n<pre> manyUntil p end =\n     many ((notFollowedBy end) `pSeq` p)<\/pre>\n\n","terminals":[{"name":"end","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.notFollowedBy","name":"notFollowedBy","type":"CalUtilitiesParsernotFollowedBy","ui":"<b>Cal.Utilities.Parser.notFollowedBy<\/b><br\/>[CALDoc] The parser <code>notFollowedBy p<\/code> only succeeds when parser <code>p<\/code> fails.\nThis parser does not consume any input.","terminals":[{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.unexpected","name":"unexpected","type":"CalUtilitiesParserunexpected","ui":"<b>Cal.Utilities.Parser.unexpected<\/b><br\/>[CALDoc] The parser <code>unexpected msg<\/code> always fails with an <em>unexpected<\/em> error message\n<code>msg<\/code> without consuming any input.","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.many","name":"many","type":"CalUtilitiesParsermany","ui":"<b>Cal.Utilities.Parser.many<\/b><br\/>[CALDoc] The parser <code>many p<\/code> applies the parser <code>p<\/code> <em>zero<\/em> or more times, and returns\na list of the values returned by applications of <code>p<\/code>.","terminals":[{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.manyAccum","name":"manyAccum","type":"CalUtilitiesParsermanyAccum","ui":"<b>Cal.Utilities.Parser.manyAccum<\/b><br\/>[CALDoc] ","terminals":[{"name":"parser","input":"text"},{"name":"accum","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.option","name":"option","type":"CalUtilitiesParseroption","ui":"<b>Cal.Utilities.Parser.option<\/b><br\/>[CALDoc] The parser <code>option x p<\/code> tries to apply parser <code>p<\/code>. If <code>p<\/code> fails without consuming\ninput, it returns the value <code>x<\/code>, otherwise it returns the value returned by <code>p<\/code>.","terminals":[{"name":"p","input":"text"},{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.parseSeq","name":"parseSeq","type":"CalUtilitiesParserparseSeq","ui":"<b>Cal.Utilities.Parser.parseSeq<\/b><br\/>[CALDoc] <code>parseSeq p name input<\/code> runs a parser <code>p<\/code> without user state. ","terminals":[{"name":"p","input":"text"},{"name":"input","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.runParserSeq","name":"runParserSeq","type":"CalUtilitiesParserrunParserSeq","ui":"<b>Cal.Utilities.Parser.runParserSeq<\/b><br\/>[CALDoc] <code>runParserSeq p state name input<\/code> runs parser <code>p<\/code> on the input token sequence\n<code>input<\/code>, obtained from source named by <code>name<\/code> with the initial user state <code>st<\/code>.\n","terminals":[{"name":"p","input":"text"},{"name":"input","input":"text"},{"name":"name","input":"text"},{"name":"st","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.initialPos","name":"initialPos","type":"CalUtilitiesParserinitialPos","ui":"<b>Cal.Utilities.Parser.initialPos<\/b><br\/>[CALDoc] Constructs a <code>SourcePos<\/code> with the given source name, for the position of line 1, column 1.","terminals":[{"name":"sourceName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.newPos","name":"newPos","type":"CalUtilitiesParsernewPos","ui":"<b>Cal.Utilities.Parser.newPos<\/b><br\/>[CALDoc] Constructs a <code>SourcePos<\/code> with the given source name, line and column.","terminals":[{"name":"line","input":"text"},{"name":"column","input":"text"},{"name":"sourceName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.parserReply","name":"parserReply","type":"CalUtilitiesParserparserReply","ui":"<b>Cal.Utilities.Parser.parserReply<\/b><br\/>[CALDoc] ","terminals":[{"name":"result","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.anyChar","name":"anyChar","type":"CalUtilitiesParseranyChar","ui":"<b>Cal.Utilities.Parser.anyChar<\/b><br\/>[CALDoc] A parser that succeeds for any character and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokenSatisfySeq","name":"tokenSatisfySeq","type":"CalUtilitiesParsertokenSatisfySeq","ui":"<b>Cal.Utilities.Parser.tokenSatisfySeq<\/b><br\/>[CALDoc] The parser <code>tokenSatisfy showTok nextPos f<\/code> accepts and returns token <code>t<\/code> when the function\n<code>f t<\/code> returns <code>True<\/code>. The token can be shown using <code>showTok t<\/code>. The position of the\n<em>next<\/em> token should be returned when <code>nextPos<\/code> is called with the current source position\n<code>pos<\/code>, the current token <code>t<\/code> and the rest of the token <code>toks<\/code>, i.e. <code>(nextPos pos t toks)<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"_INPUT","input":"text"},{"name":"show","input":"text"},{"name":"nextpos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.manyTill","name":"manyTill","type":"CalUtilitiesParsermanyTill","ui":"<b>Cal.Utilities.Parser.manyTill<\/b><br\/>[CALDoc] The parser <code>manyTill p end<\/code> applies parser <code>p<\/code> <em>zero<\/em> or more times until parser\n<code>end<\/code> succeeds. It returns the list of values returned by applications of <code>p<\/code>.\n<p>This parser combinator is an optimized implementation of the following specification:\n\n<pre> manyTill p end =\n     (end `pSeq` pReturn []) `pOr`\n     (p `pBind` (\\x -&gt;\n      manyTill p end `pBind` (\\xs -&gt;\n      pReturn (x:xs)\n     )));<\/pre>\n\n","terminals":[{"name":"p","input":"text"},{"name":"end","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.manyTillAccum","name":"manyTillAccum","type":"CalUtilitiesParsermanyTillAccum","ui":"<b>Cal.Utilities.Parser.manyTillAccum<\/b><br\/>[CALDoc] ","terminals":[{"name":"end","input":"text"},{"name":"parser","input":"text"},{"name":"accum","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.getState","name":"getState","type":"CalUtilitiesParsergetState","ui":"<b>Cal.Utilities.Parser.getState<\/b><br\/>[CALDoc] A parser that returns the current user state.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.getParserState","name":"getParserState","type":"CalUtilitiesParsergetParserState","ui":"<b>Cal.Utilities.Parser.getParserState<\/b><br\/>[CALDoc] A parser that returns the current complete state of the parser.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pBind","name":"pBind","type":"CalUtilitiesParserpBind","ui":"<b>Cal.Utilities.Parser.pBind<\/b><br\/>[CALDoc] <code>pBind<\/code> implements a parser combinator for sequencing. The parser <code>p `pBind` f<\/code>\nfirst applies parser <code>p<\/code>, then applies <code>f<\/code> to the returned value of <code>p<\/code>,\nand finally applies the parser returned by <code>f<\/code>.","terminals":[{"name":"f","input":"text"},{"name":"_INPUT","input":"text"},{"name":"parser","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.exactString","name":"exactString","type":"CalUtilitiesParserexactString","ui":"<b>Cal.Utilities.Parser.exactString<\/b><br\/>[CALDoc] The parser <code>exactString s<\/code> parses a sequence of characters given by <code>s<\/code>, and returns\nthe parsed characters in a list.","terminals":[{"name":"s","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.updatePosString","name":"updatePosString","type":"CalUtilitiesParserupdatePosString","ui":"<b>Cal.Utilities.Parser.updatePosString<\/b><br\/>[CALDoc] The expression <code>updatePosString pos s<\/code> updates the source position <code>pos<\/code>\nby calling <code>updatePosChar<\/code> on every character in <code>s<\/code>.","terminals":[{"name":"aString","input":"text"},{"name":"pos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokens","name":"tokens","type":"CalUtilitiesParsertokens","ui":"<b>Cal.Utilities.Parser.tokens<\/b><br\/>[CALDoc] This parser combinator is an optimized implementation of the following specification.\n\n<pre> tokens shows nextposs s =\n     let\n         show c = shows [c];\n         nextpos pos c cs = nextposs pos [c];\n         testtok x = if (x == c) then Just c else Nothing;\n         \n         scan toks =\n             case toks of\n             []   -&gt; pReturn s;\n             c:cs -&gt; (tokenPrim show nextpos testtok `label` shows s) `pSeq`\n                     (scan cs);\n             ;\n     in\n         scan s;<\/pre>\n","terminals":[{"name":"shows","input":"text"},{"name":"s","input":"text"},{"name":"nextposs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokensCompare","name":"tokensCompare","type":"CalUtilitiesParsertokensCompare","ui":"<b>Cal.Utilities.Parser.tokensCompare<\/b><br\/>[CALDoc] This parser combinator is an optimized implementation of the following specification.\n\n<pre> tokensCompare shows nextposs compareToken s =\n     let\n         show c = shows [c];\n         nextpos pos c cs = nextposs pos [c];\n         testtok x = if (compareToken x c) then Just c else Nothing;\n         \n         scan toks =\n             case toks of\n             []   -&gt; pReturn s;\n             c:cs -&gt; (tokenPrim show nextpos testtok `label` shows s) `pSeq`\n                     (scan cs);\n             ;\n     in\n         scan s;<\/pre>\n","terminals":[{"name":"s","input":"text"},{"name":"nextposs","input":"text"},{"name":"compareToken","input":"text"},{"name":"shows","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.messageString","name":"messageString","type":"CalUtilitiesParsermessageString","ui":"<b>Cal.Utilities.Parser.messageString<\/b><br\/>[CALDoc] Extracts the message string from an error message.","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pOrT4","name":"pOrT4","type":"CalUtilitiesParserpOrT4","ui":"<b>Cal.Utilities.Parser.pOrT4<\/b><br\/>[CALDoc] The parser <code>pOrT4 p1 p2 p3 p4<\/code> is exactly the same as\n\n<pre> (try p1) `pOr`\n (try p2) `pOr`\n (try p3) `pOr`\n p4<\/pre>\n","terminals":[{"name":"parser4","input":"text"},{"name":"parser3","input":"text"},{"name":"parser1","input":"text"},{"name":"parser2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pOrT","name":"pOrT","type":"CalUtilitiesParserpOrT","ui":"<b>Cal.Utilities.Parser.pOrT<\/b><br\/>[CALDoc] The parser <code>p `pOrT` q<\/code> is exactly the same as <code>(try p) `pOr` q<\/code>.\n","terminals":[{"name":"parser1","input":"text"},{"name":"parser2","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.try","name":"try","type":"CalUtilitiesParsertry","ui":"<b>Cal.Utilities.Parser.try<\/b><br\/>[CALDoc] The parser <code>try p<\/code> behaves like the parser <code>p<\/code>, except that it pretends that\nit has not consumed any input when an error occurs.","terminals":[{"name":"parser","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setErrorPos","name":"setErrorPos","type":"CalUtilitiesParsersetErrorPos","ui":"<b>Cal.Utilities.Parser.setErrorPos<\/b><br\/>[CALDoc] Sets the source position of the given <code>ParseError<\/code>.","terminals":[{"name":"parser","input":"text"},{"name":"pos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pOr","name":"pOr","type":"CalUtilitiesParserpOr","ui":"<b>Cal.Utilities.Parser.pOr<\/b><br\/>[CALDoc] This parser combinator implements an alternative. The parser <code>p `pOr` q<\/code> first applies\n<code>p<\/code>. If it succeeds, the value of <code>p<\/code> is returned. If <code>p<\/code> fails\n<em>without consuming any input<\/em>, then parser <code>q<\/code> is tried.","terminals":[{"name":"parser2","input":"text"},{"name":"parser1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.translateState","name":"translateState","type":"CalUtilitiesParsertranslateState","ui":"<b>Cal.Utilities.Parser.translateState<\/b><br\/>[CALDoc] The parser <code>translateState inputFn outputFn parser<\/code> updates the user state by \napplying the first function <code>inputFn<\/code> to it, applies the parser <code>p<\/code>, \nupdates the user state by applying the second function <code>outputFn<\/code> to the original\nstate and the new state, then returns the value returned by <code>p<\/code>. ","terminals":[{"name":"p","input":"text"},{"name":"inputFn","input":"text"},{"name":"outputFn","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.mapConsumed","name":"mapConsumed","type":"CalUtilitiesParsermapConsumed","ui":"<b>Cal.Utilities.Parser.mapConsumed<\/b><br\/>[CALDoc] ","terminals":[{"name":"consumed","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.hexDigit","name":"hexDigit","type":"CalUtilitiesParserhexDigit","ui":"<b>Cal.Utilities.Parser.hexDigit<\/b><br\/>[CALDoc] A parser that parses a hexadecimal digit (a <code>digit<\/code> or a letter between <code>'a'<\/code> and <code>'f'<\/code> or\n<code>'A'<\/code> and <code>'F'<\/code>), and returns the parsed character.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.isHexDigit","name":"isHexDigit","type":"CalUtilitiesParserisHexDigit","ui":"<b>Cal.Utilities.Parser.isHexDigit<\/b><br\/>[CALDoc] ","terminals":[{"name":"c","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.satisfy","name":"satisfy","type":"CalUtilitiesParsersatisfy","ui":"<b>Cal.Utilities.Parser.satisfy<\/b><br\/>[CALDoc] The parser <code>satisfy f<\/code> succeeds for any character for which the supplied predicate\n<code>f<\/code> returns <code>True<\/code>, and returns the parsed character.","terminals":[{"name":"_INPUT","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.satisfyInternal","name":"satisfyInternal","type":"CalUtilitiesParsersatisfyInternal","ui":"<b>Cal.Utilities.Parser.satisfyInternal<\/b><br\/>[CALDoc] This parser combinator is exactly the same as:\n\n<pre> satisfy f =\n     tokenPrim\n         (\\c -&gt; String.fromChar c)\n         (\\pos c cs -&gt; updatePosChar pos c)\n         (\\c -&gt; if (f c) then Just c else Nothing)\n<\/pre>\n","terminals":[{"name":"_INPUT","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.updatePosChar","name":"updatePosChar","type":"CalUtilitiesParserupdatePosChar","ui":"<b>Cal.Utilities.Parser.updatePosChar<\/b><br\/>[CALDoc] Updates the source position given a character.","terminals":[{"name":"c","input":"text"},{"name":"pos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokenPrimSeq","name":"tokenPrimSeq","type":"CalUtilitiesParsertokenPrimSeq","ui":"<b>Cal.Utilities.Parser.tokenPrimSeq<\/b><br\/>[CALDoc] The parser <code>tokenPrim showTok nextPos testTok<\/code> accepts a token <code>t<\/code> with result\n<code>x<\/code> when the function <code>testTok t<\/code> returns <code>Just x<\/code>. The token can\nbe shown using <code>showTok t<\/code>. The position of the <em>next<\/em> token should be returned when\n<code>nextPos<\/code> is called with the current source position <code>pos<\/code>, the current token <code>t<\/code>\nand the rest of the token <code>toks<\/code>, i.e. <code>(nextPos pos t toks)<\/code>.","terminals":[{"name":"nextpos","input":"text"},{"name":"_INPUT","input":"text"},{"name":"test","input":"text"},{"name":"show","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tokenPrimExSeq","name":"tokenPrimExSeq","type":"CalUtilitiesParsertokenPrimExSeq","ui":"<b>Cal.Utilities.Parser.tokenPrimExSeq<\/b><br\/>[CALDoc] The parser <code>tokenPrimEx show nextpos mbnextstate test<\/code>, recognises tokens when <code>test<\/code> returns\n<code>Just x<\/code> (and returns the value <code>x<\/code>). Tokens are shown in error messages using <code>show<\/code>.\nThe position is calculated using <code>nextpos<\/code>, and finally, <code>mbnextstate<\/code>, can hold a function that updates\nthe user state on every token recognised (e.g. for counting tokens).","terminals":[{"name":"_INPUT","input":"text"},{"name":"nextpos","input":"text"},{"name":"show","input":"text"},{"name":"test","input":"text"},{"name":"mbNextState","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tsTail","name":"tsTail","type":"CalUtilitiesParsertsTail","ui":"<b>Cal.Utilities.Parser.tsTail<\/b><br\/>[CALDoc] Returns a sequence of the tokens after the first token in the sequence. ","terminals":[{"name":"tokseq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tsHead","name":"tsHead","type":"CalUtilitiesParsertsHead","ui":"<b>Cal.Utilities.Parser.tsHead<\/b><br\/>[CALDoc] Returns the first token of the specified token sequence. ","terminals":[{"name":"tokseq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.tsIsEmpty","name":"tsIsEmpty","type":"CalUtilitiesParsertsIsEmpty","ui":"<b>Cal.Utilities.Parser.tsIsEmpty<\/b><br\/>[CALDoc] Returns whether the token sequence is empty.","terminals":[{"name":"tokseq","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.label","name":"label","type":"CalUtilitiesParserlabel","ui":"<b>Cal.Utilities.Parser.label<\/b><br\/>[CALDoc] The parser <code>p `label` msg<\/code> behaves as the parser <code>p<\/code>, but whenever the parser <code>p<\/code>\nfails <em>without consuming any input<\/em>, it replaces the <em>expected<\/em> error messages with the message\n<code>msg<\/code>.","terminals":[{"name":"msg","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.labels","name":"labels","type":"CalUtilitiesParserlabels","ui":"<b>Cal.Utilities.Parser.labels<\/b><br\/>[CALDoc] ","terminals":[{"name":"parser","input":"text"},{"name":"msgs","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.errorIsUnknown","name":"errorIsUnknown","type":"CalUtilitiesParsererrorIsUnknown","ui":"<b>Cal.Utilities.Parser.errorIsUnknown<\/b><br\/>[CALDoc] Returns: <code>True<\/code> iff the error is an unknown error.","terminals":[{"name":"parser","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setExpectErrors","name":"setExpectErrors","type":"CalUtilitiesParsersetExpectErrors","ui":"<b>Cal.Utilities.Parser.setExpectErrors<\/b><br\/>[CALDoc] ","terminals":[{"name":"msgs","input":"text"},{"name":"err","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setErrorMessage","name":"setErrorMessage","type":"CalUtilitiesParsersetErrorMessage","ui":"<b>Cal.Utilities.Parser.setErrorMessage<\/b><br\/>[CALDoc] Sets the error message of the given <code>ParseError<\/code>.","terminals":[{"name":"parser","input":"text"},{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.messageEq","name":"messageEq","type":"CalUtilitiesParsermessageEq","ui":"<b>Cal.Utilities.Parser.messageEq<\/b><br\/>[CALDoc] <code>messageEq m1 m2<\/code> equals <code>True<\/code> if <code>messageCompare m1 m2<\/code> equals <code>EQ<\/code>,\nin all other cases it equals <code>False<\/code>.","terminals":[{"name":"msg2","input":"text"},{"name":"msg1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.messageCompare","name":"messageCompare","type":"CalUtilitiesParsermessageCompare","ui":"<b>Cal.Utilities.Parser.messageCompare<\/b><br\/>[CALDoc] Compares two error messages without regards to their content. ","terminals":[{"name":"msg2","input":"text"},{"name":"msg1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.messageToEnum","name":"messageToEnum","type":"CalUtilitiesParsermessageToEnum","ui":"<b>Cal.Utilities.Parser.messageToEnum<\/b><br\/>[CALDoc] ","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.addErrorMessage","name":"addErrorMessage","type":"CalUtilitiesParseraddErrorMessage","ui":"<b>Cal.Utilities.Parser.addErrorMessage<\/b><br\/>[CALDoc] Adds an error message to the given <code>ParseError<\/code>.","terminals":[{"name":"parser","input":"text"},{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.setState","name":"setState","type":"CalUtilitiesParsersetState","ui":"<b>Cal.Utilities.Parser.setState<\/b><br\/>[CALDoc] The parser <code>setState st<\/code> sets the user state to <code>st<\/code>.","terminals":[{"name":"st","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pReturn","name":"pReturn","type":"CalUtilitiesParserpReturn","ui":"<b>Cal.Utilities.Parser.pReturn<\/b><br\/>[CALDoc] The parser <code>pReturn x<\/code> always succeeds with value <code>x<\/code> without consuming any input.","terminals":[{"name":"x","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.updateParserState","name":"updateParserState","type":"CalUtilitiesParserupdateParserState","ui":"<b>Cal.Utilities.Parser.updateParserState<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"f","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.unknownError","name":"unknownError","type":"CalUtilitiesParserunknownError","ui":"<b>Cal.Utilities.Parser.unknownError<\/b><br\/>[CALDoc] ","terminals":[{"name":"state","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.statePos","name":"statePos","type":"CalUtilitiesParserstatePos","ui":"<b>Cal.Utilities.Parser.statePos<\/b><br\/>[CALDoc] ","terminals":[{"name":"state","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.newErrorUnknown","name":"newErrorUnknown","type":"CalUtilitiesParsernewErrorUnknown","ui":"<b>Cal.Utilities.Parser.newErrorUnknown<\/b><br\/>[CALDoc] Constructs a <code>ParseError<\/code> representing an unknown error at the given source position.","terminals":[{"name":"pos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.pSeq","name":"pSeq","type":"CalUtilitiesParserpSeq","ui":"<b>Cal.Utilities.Parser.pSeq<\/b><br\/>[CALDoc] <code>pSeq<\/code> implements a parser combinator for sequencing. The parser <code>p `pSeq` q<\/code>\nfirst applies the parser <code>p<\/code>, then applies the parser <code>q<\/code>, discarding the value\nreturned by the first parser.","terminals":[{"name":"k","input":"text"},{"name":"parser","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.mergeErrorReply","name":"mergeErrorReply","type":"CalUtilitiesParsermergeErrorReply","ui":"<b>Cal.Utilities.Parser.mergeErrorReply<\/b><br\/>[CALDoc] ","terminals":[{"name":"err1","input":"text"},{"name":"reply","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.mergeError","name":"mergeError","type":"CalUtilitiesParsermergeError","ui":"<b>Cal.Utilities.Parser.mergeError<\/b><br\/>[CALDoc] Merges the two given <code>ParseError<\/code> values into one.","terminals":[{"name":"error2","input":"text"},{"name":"error1","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.sysUnExpectError","name":"sysUnExpectError","type":"CalUtilitiesParsersysUnExpectError","ui":"<b>Cal.Utilities.Parser.sysUnExpectError<\/b><br\/>[CALDoc] ","terminals":[{"name":"pos","input":"text"},{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.newErrorMessage","name":"newErrorMessage","type":"CalUtilitiesParsernewErrorMessage","ui":"<b>Cal.Utilities.Parser.newErrorMessage<\/b><br\/>[CALDoc] Constructs a <code>ParseError<\/code> representing an error at the given source position with the given message.","terminals":[{"name":"pos","input":"text"},{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.stateUser","name":"stateUser","type":"CalUtilitiesParserstateUser","ui":"<b>Cal.Utilities.Parser.stateUser<\/b><br\/>[CALDoc] ","terminals":[{"name":"state","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.SourcePos","name":"SourcePos","type":"CalUtilitiesParserSourcePos","ui":"<b>Cal.Utilities.Parser.SourcePos<\/b><br\/>[CALDoc] Encapsulates a source position.","terminals":[{"name":"line","input":"text"},{"name":"column","input":"text"},{"name":"name","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.SysUnExpect","name":"SysUnExpect","type":"CalUtilitiesParserSysUnExpect","ui":"<b>Cal.Utilities.Parser.SysUnExpect<\/b><br\/>[CALDoc] A <code>SysUnExpect<\/code> message is generated internally by the <code>satisfy<\/code>\ncombinator.","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.UnExpect","name":"UnExpect","type":"CalUtilitiesParserUnExpect","ui":"<b>Cal.Utilities.Parser.UnExpect<\/b><br\/>[CALDoc] An <code>UnExpect<\/code> message is generated by the <code>unexpected<\/code> combinator.","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.Expect","name":"Expect","type":"CalUtilitiesParserExpect","ui":"<b>Cal.Utilities.Parser.Expect<\/b><br\/>[CALDoc] An <code>Expect<\/code> message is generated by the <code>label<\/code> combinator.","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.Message","name":"Message","type":"CalUtilitiesParserMessage","ui":"<b>Cal.Utilities.Parser.Message<\/b><br\/>[CALDoc] A <code>Message<\/code> message is generated by the <code>pFail<\/code> combinator.","terminals":[{"name":"msg","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.ParseError","name":"ParseError","type":"CalUtilitiesParserParseError","ui":"<b>Cal.Utilities.Parser.ParseError<\/b><br\/>[CALDoc] A parse error consists of a source position and a list of error messages.","terminals":[{"name":"messages","input":"text"},{"name":"sourcePos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.TSList","name":"TSList","type":"CalUtilitiesParserTSList","ui":"<b>Cal.Utilities.Parser.TSList<\/b><br\/>[CALDoc] ","terminals":[{"name":"ts","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.TSString","name":"TSString","type":"CalUtilitiesParserTSString","ui":"<b>Cal.Utilities.Parser.TSString<\/b><br\/>[CALDoc] ","terminals":[{"name":"s","input":"text"},{"name":"subscript","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.Parser","name":"Parser","type":"CalUtilitiesParserParser","ui":"<b>Cal.Utilities.Parser.Parser<\/b><br\/>[CALDoc] The parser is embodied in a parsing function.","terminals":[{"name":"_INPUT","input":"text"},{"name":"parseFunction","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.Consumed","name":"Consumed","type":"CalUtilitiesParserConsumed","ui":"<b>Cal.Utilities.Parser.Consumed<\/b><br\/>[CALDoc] Represents that input is consumed.","terminals":[{"name":"reply","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.Empty","name":"Empty","type":"CalUtilitiesParserEmpty","ui":"<b>Cal.Utilities.Parser.Empty<\/b><br\/>[CALDoc] Represents that no input is consumed.","terminals":[{"name":"reply","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.Ok","name":"Ok","type":"CalUtilitiesParserOk","ui":"<b>Cal.Utilities.Parser.Ok<\/b><br\/>[CALDoc] Represents that the parsing has succeeded.","terminals":[{"name":"state","input":"text"},{"name":"x","input":"text"},{"name":"err","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.Error","name":"Error","type":"CalUtilitiesParserError","ui":"<b>Cal.Utilities.Parser.Error<\/b><br\/>[CALDoc] Represents that the parsing has failed.","terminals":[{"name":"err","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.Parser.State","name":"State","type":"CalUtilitiesParserState","ui":"<b>Cal.Utilities.Parser.State<\/b><br\/>[CALDoc] Represents the internal state of the parser.","terminals":[{"name":"user","input":"text"},{"name":"pos","input":"text"},{"name":"input","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Parser"]},{"description":"Cal.Utilities.ExpressionLexer.gtToken","name":"gtToken","type":"CalUtilitiesExpressionLexergtToken","ui":"<b>Cal.Utilities.ExpressionLexer.gtToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.keywordToken","name":"keywordToken","type":"CalUtilitiesExpressionLexerkeywordToken","ui":"<b>Cal.Utilities.ExpressionLexer.keywordToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"keyword","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.caretToken","name":"caretToken","type":"CalUtilitiesExpressionLexercaretToken","ui":"<b>Cal.Utilities.ExpressionLexer.caretToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.plusToken","name":"plusToken","type":"CalUtilitiesExpressionLexerplusToken","ui":"<b>Cal.Utilities.ExpressionLexer.plusToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.ltToken","name":"ltToken","type":"CalUtilitiesExpressionLexerltToken","ui":"<b>Cal.Utilities.ExpressionLexer.ltToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.percentToken","name":"percentToken","type":"CalUtilitiesExpressionLexerpercentToken","ui":"<b>Cal.Utilities.ExpressionLexer.percentToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.stringToken","name":"stringToken","type":"CalUtilitiesExpressionLexerstringToken","ui":"<b>Cal.Utilities.ExpressionLexer.stringToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.stringTokenValue","name":"stringTokenValue","type":"CalUtilitiesExpressionLexerstringTokenValue","ui":"<b>Cal.Utilities.ExpressionLexer.stringTokenValue<\/b><br\/>[CALDoc] Gets the string value from a string token.","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.commaToken","name":"commaToken","type":"CalUtilitiesExpressionLexercommaToken","ui":"<b>Cal.Utilities.ExpressionLexer.commaToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.eqToken","name":"eqToken","type":"CalUtilitiesExpressionLexereqToken","ui":"<b>Cal.Utilities.ExpressionLexer.eqToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.colonToken","name":"colonToken","type":"CalUtilitiesExpressionLexercolonToken","ui":"<b>Cal.Utilities.ExpressionLexer.colonToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.openParenToken","name":"openParenToken","type":"CalUtilitiesExpressionLexeropenParenToken","ui":"<b>Cal.Utilities.ExpressionLexer.openParenToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.parseErrorText","name":"parseErrorText","type":"CalUtilitiesExpressionLexerparseErrorText","ui":"<b>Cal.Utilities.ExpressionLexer.parseErrorText<\/b><br\/>[CALDoc] ","terminals":[{"name":"err","input":"text"},{"name":"text","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.asteriskToken","name":"asteriskToken","type":"CalUtilitiesExpressionLexerasteriskToken","ui":"<b>Cal.Utilities.ExpressionLexer.asteriskToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.closeParenToken","name":"closeParenToken","type":"CalUtilitiesExpressionLexercloseParenToken","ui":"<b>Cal.Utilities.ExpressionLexer.closeParenToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.exclmnToken","name":"exclmnToken","type":"CalUtilitiesExpressionLexerexclmnToken","ui":"<b>Cal.Utilities.ExpressionLexer.exclmnToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.dotToken","name":"dotToken","type":"CalUtilitiesExpressionLexerdotToken","ui":"<b>Cal.Utilities.ExpressionLexer.dotToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.numberToken","name":"numberToken","type":"CalUtilitiesExpressionLexernumberToken","ui":"<b>Cal.Utilities.ExpressionLexer.numberToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.integerToken","name":"integerToken","type":"CalUtilitiesExpressionLexerintegerToken","ui":"<b>Cal.Utilities.ExpressionLexer.integerToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.intTokenValue","name":"intTokenValue","type":"CalUtilitiesExpressionLexerintTokenValue","ui":"<b>Cal.Utilities.ExpressionLexer.intTokenValue<\/b><br\/>[CALDoc] ","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.booleanToken","name":"booleanToken","type":"CalUtilitiesExpressionLexerbooleanToken","ui":"<b>Cal.Utilities.ExpressionLexer.booleanToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.openBraceToken","name":"openBraceToken","type":"CalUtilitiesExpressionLexeropenBraceToken","ui":"<b>Cal.Utilities.ExpressionLexer.openBraceToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.ampersandToken","name":"ampersandToken","type":"CalUtilitiesExpressionLexerampersandToken","ui":"<b>Cal.Utilities.ExpressionLexer.ampersandToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.hashToken","name":"hashToken","type":"CalUtilitiesExpressionLexerhashToken","ui":"<b>Cal.Utilities.ExpressionLexer.hashToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.vertBarToken","name":"vertBarToken","type":"CalUtilitiesExpressionLexervertBarToken","ui":"<b>Cal.Utilities.ExpressionLexer.vertBarToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.slashToken","name":"slashToken","type":"CalUtilitiesExpressionLexerslashToken","ui":"<b>Cal.Utilities.ExpressionLexer.slashToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.functionToken","name":"functionToken","type":"CalUtilitiesExpressionLexerfunctionToken","ui":"<b>Cal.Utilities.ExpressionLexer.functionToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.functionTokenValue","name":"functionTokenValue","type":"CalUtilitiesExpressionLexerfunctionTokenValue","ui":"<b>Cal.Utilities.ExpressionLexer.functionTokenValue<\/b><br\/>[CALDoc] Gets the name of the function from a function token.","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.getTokenIm","name":"getTokenIm","type":"CalUtilitiesExpressionLexergetTokenIm","ui":"<b>Cal.Utilities.ExpressionLexer.getTokenIm<\/b><br\/>[CALDoc] Gets the image from a <code>Token<\/code>","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.minusToken","name":"minusToken","type":"CalUtilitiesExpressionLexerminusToken","ui":"<b>Cal.Utilities.ExpressionLexer.minusToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.tildeToken","name":"tildeToken","type":"CalUtilitiesExpressionLexertildeToken","ui":"<b>Cal.Utilities.ExpressionLexer.tildeToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.specificNameToken","name":"specificNameToken","type":"CalUtilitiesExpressionLexerspecificNameToken","ui":"<b>Cal.Utilities.ExpressionLexer.specificNameToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"nameExpected","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.nameToken","name":"nameToken","type":"CalUtilitiesExpressionLexernameToken","ui":"<b>Cal.Utilities.ExpressionLexer.nameToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.nameTokenValue","name":"nameTokenValue","type":"CalUtilitiesExpressionLexernameTokenValue","ui":"<b>Cal.Utilities.ExpressionLexer.nameTokenValue<\/b><br\/>[CALDoc] Gets the name value from a name token.","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.booleanTokenValue","name":"booleanTokenValue","type":"CalUtilitiesExpressionLexerbooleanTokenValue","ui":"<b>Cal.Utilities.ExpressionLexer.booleanTokenValue<\/b><br\/>[CALDoc] Gets the boolean value from a boolean token.","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.numericTokenValue","name":"numericTokenValue","type":"CalUtilitiesExpressionLexernumericTokenValue","ui":"<b>Cal.Utilities.ExpressionLexer.numericTokenValue<\/b><br\/>[CALDoc] Gets the number value from a number token.","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.tokenStream","name":"tokenStream","type":"CalUtilitiesExpressionLexertokenStream","ui":"<b>Cal.Utilities.ExpressionLexer.tokenStream<\/b><br\/>[CALDoc] String of lexemes with whitespace\/comments between\nThis is the top level rule for the expression lexer","terminals":[{"name":"keywords","input":"text"},{"name":"identifierNonAlphaChars","input":"text"},{"name":"identifierQuoteChars","input":"text"},{"name":"specialCharSequences","input":"text"},{"name":"functionNames","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.tokenStream2","name":"tokenStream2","type":"CalUtilitiesExpressionLexertokenStream2","ui":"<b>Cal.Utilities.ExpressionLexer.tokenStream2<\/b><br\/>[CALDoc] String of lexemes with whitespace\/comments between\nThis is the top level rule for the expression lexer","terminals":[{"name":"commentDelimiters","input":"text"},{"name":"identifierQuoteChars","input":"text"},{"name":"keywords","input":"text"},{"name":"functionNames","input":"text"},{"name":"specialCharSequences","input":"text"},{"name":"indentifier_rule","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeSpecialCharSequenceToken","name":"makeSpecialCharSequenceToken","type":"CalUtilitiesExpressionLexermakeSpecialCharSequenceToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeSpecialCharSequenceToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeIntegerToken","name":"makeIntegerToken","type":"CalUtilitiesExpressionLexermakeIntegerToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeIntegerToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeDoubleToken","name":"makeDoubleToken","type":"CalUtilitiesExpressionLexermakeDoubleToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeDoubleToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeStringToken","name":"makeStringToken","type":"CalUtilitiesExpressionLexermakeStringToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeStringToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.literalQuote","name":"literalQuote","type":"CalUtilitiesExpressionLexerliteralQuote","ui":"<b>Cal.Utilities.ExpressionLexer.literalQuote<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.literalQuoteChar","name":"literalQuoteChar","type":"CalUtilitiesExpressionLexerliteralQuoteChar","ui":"<b>Cal.Utilities.ExpressionLexer.literalQuoteChar<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeNameToken","name":"makeNameToken","type":"CalUtilitiesExpressionLexermakeNameToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeNameToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeFunctionToken","name":"makeFunctionToken","type":"CalUtilitiesExpressionLexermakeFunctionToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeFunctionToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeBooleanToken","name":"makeBooleanToken","type":"CalUtilitiesExpressionLexermakeBooleanToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeBooleanToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeKeywordToken","name":"makeKeywordToken","type":"CalUtilitiesExpressionLexermakeKeywordToken","ui":"<b>Cal.Utilities.ExpressionLexer.makeKeywordToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.makeTokenImage","name":"makeTokenImage","type":"CalUtilitiesExpressionLexermakeTokenImage","ui":"<b>Cal.Utilities.ExpressionLexer.makeTokenImage<\/b><br\/>[CALDoc] Makes a <code>TokenImage<\/code> from a lex results","terminals":[{"name":"image","input":"text"},{"name":"startPos","input":"text"},{"name":"dataCons","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.sourcePosToPosition","name":"sourcePosToPosition","type":"CalUtilitiesExpressionLexersourcePosToPosition","ui":"<b>Cal.Utilities.ExpressionLexer.sourcePosToPosition<\/b><br\/>[CALDoc] ","terminals":[{"name":"sourcePos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.closeBraceToken","name":"closeBraceToken","type":"CalUtilitiesExpressionLexercloseBraceToken","ui":"<b>Cal.Utilities.ExpressionLexer.closeBraceToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.specialCharToken","name":"specialCharToken","type":"CalUtilitiesExpressionLexerspecialCharToken","ui":"<b>Cal.Utilities.ExpressionLexer.specialCharToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"specialChar","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.specialCharSequenceToken","name":"specialCharSequenceToken","type":"CalUtilitiesExpressionLexerspecialCharSequenceToken","ui":"<b>Cal.Utilities.ExpressionLexer.specialCharSequenceToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"specialChars","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.satisfyT","name":"satisfyT","type":"CalUtilitiesExpressionLexersatisfyT","ui":"<b>Cal.Utilities.ExpressionLexer.satisfyT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.showToken","name":"showToken","type":"CalUtilitiesExpressionLexershowToken","ui":"<b>Cal.Utilities.ExpressionLexer.showToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.showTokenImage","name":"showTokenImage","type":"CalUtilitiesExpressionLexershowTokenImage","ui":"<b>Cal.Utilities.ExpressionLexer.showTokenImage<\/b><br\/>[CALDoc] ","terminals":[{"name":"ti","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.showPosition","name":"showPosition","type":"CalUtilitiesExpressionLexershowPosition","ui":"<b>Cal.Utilities.ExpressionLexer.showPosition<\/b><br\/>[CALDoc] ","terminals":[{"name":"position","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.getImage","name":"getImage","type":"CalUtilitiesExpressionLexergetImage","ui":"<b>Cal.Utilities.ExpressionLexer.getImage<\/b><br\/>[CALDoc] Gets the image from a <code>TokenImage<\/code>","terminals":[{"name":"tokenImage","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.updatePosToken","name":"updatePosToken","type":"CalUtilitiesExpressionLexerupdatePosToken","ui":"<b>Cal.Utilities.ExpressionLexer.updatePosToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"pos","input":"text"},{"name":"t","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.getPosCol","name":"getPosCol","type":"CalUtilitiesExpressionLexergetPosCol","ui":"<b>Cal.Utilities.ExpressionLexer.getPosCol<\/b><br\/>[CALDoc] Gets the Col# from a <code>Position<\/code>","terminals":[{"name":"pos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.getPosLine","name":"getPosLine","type":"CalUtilitiesExpressionLexergetPosLine","ui":"<b>Cal.Utilities.ExpressionLexer.getPosLine<\/b><br\/>[CALDoc] Gets the Line# from a <code>Position<\/code>","terminals":[{"name":"pos","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.getTokenPos","name":"getTokenPos","type":"CalUtilitiesExpressionLexergetTokenPos","ui":"<b>Cal.Utilities.ExpressionLexer.getTokenPos<\/b><br\/>[CALDoc] Gets the <code>Position<\/code> from a <code>Token<\/code>","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.getTokenImage","name":"getTokenImage","type":"CalUtilitiesExpressionLexergetTokenImage","ui":"<b>Cal.Utilities.ExpressionLexer.getTokenImage<\/b><br\/>[CALDoc] Gets a <code>TokenImage<\/code> from a <code>Token<\/code>","terminals":[{"name":"token","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.getPosition","name":"getPosition","type":"CalUtilitiesExpressionLexergetPosition","ui":"<b>Cal.Utilities.ExpressionLexer.getPosition<\/b><br\/>[CALDoc] Gets the <code>Position<\/code> from a <code>TokenImage<\/code>","terminals":[{"name":"tokenImage","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.Position","name":"Position","type":"CalUtilitiesExpressionLexerPosition","ui":"<b>Cal.Utilities.ExpressionLexer.Position<\/b><br\/>[CALDoc] ","terminals":[{"name":"col","input":"text"},{"name":"line","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.TokenImage","name":"TokenImage","type":"CalUtilitiesExpressionLexerTokenImage","ui":"<b>Cal.Utilities.ExpressionLexer.TokenImage<\/b><br\/>[CALDoc] ","terminals":[{"name":"pos","input":"text"},{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.Keyword","name":"Keyword","type":"CalUtilitiesExpressionLexerKeyword","ui":"<b>Cal.Utilities.ExpressionLexer.Keyword<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.Function","name":"Function","type":"CalUtilitiesExpressionLexerFunction","ui":"<b>Cal.Utilities.ExpressionLexer.Function<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.String","name":"String","type":"CalUtilitiesExpressionLexerString","ui":"<b>Cal.Utilities.ExpressionLexer.String<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.Name","name":"Name","type":"CalUtilitiesExpressionLexerName","ui":"<b>Cal.Utilities.ExpressionLexer.Name<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.Double","name":"Double","type":"CalUtilitiesExpressionLexerDouble","ui":"<b>Cal.Utilities.ExpressionLexer.Double<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.Integer","name":"Integer","type":"CalUtilitiesExpressionLexerInteger","ui":"<b>Cal.Utilities.ExpressionLexer.Integer<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.Boolean","name":"Boolean","type":"CalUtilitiesExpressionLexerBoolean","ui":"<b>Cal.Utilities.ExpressionLexer.Boolean<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Utilities.ExpressionLexer.SpecialCharSequence","name":"SpecialCharSequence","type":"CalUtilitiesExpressionLexerSpecialCharSequence","ui":"<b>Cal.Utilities.ExpressionLexer.SpecialCharSequence<\/b><br\/>[CALDoc] ","terminals":[{"name":"image","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.ExpressionLexer"]},{"description":"Cal.Data.SqlParser.testTokens","name":"testTokens","type":"CalDataSqlParsertestTokens","ui":"<b>Cal.Data.SqlParser.testTokens<\/b><br\/>[CALDoc] ","terminals":[{"name":"sql","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.parseExpression","name":"parseExpression","type":"CalDataSqlParserparseExpression","ui":"<b>Cal.Data.SqlParser.parseExpression<\/b><br\/>[CALDoc] Parses the specified SQL expression text.\n","terminals":[{"name":"sqlExprText","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.parseSelectStatement","name":"parseSelectStatement","type":"CalDataSqlParserparseSelectStatement","ui":"<b>Cal.Data.SqlParser.parseSelectStatement<\/b><br\/>[CALDoc] Parses the SQL text as a SELECT statement.\n","terminals":[{"name":"sql","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.parseSQL","name":"parseSQL","type":"CalDataSqlParserparseSQL","ui":"<b>Cal.Data.SqlParser.parseSQL<\/b><br\/>[CALDoc] Parses the SQL text using the specified rule.","terminals":[{"name":"sql","input":"text"},{"name":"rule","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.sqlTokens","name":"sqlTokens","type":"CalDataSqlParsersqlTokens","ui":"<b>Cal.Data.SqlParser.sqlTokens<\/b><br\/>[CALDoc] Parses the SQL into tokens.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.identifierQuoteChars","name":"identifierQuoteChars","type":"CalDataSqlParseridentifierQuoteChars","ui":"<b>Cal.Data.SqlParser.identifierQuoteChars<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.allFunctionNames","name":"allFunctionNames","type":"CalDataSqlParserallFunctionNames","ui":"<b>Cal.Data.SqlParser.allFunctionNames<\/b><br\/>[CALDoc] Put the function names in order such that the longest names are first (for greedy consumption).","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.sqlKeywords","name":"sqlKeywords","type":"CalDataSqlParsersqlKeywords","ui":"<b>Cal.Data.SqlParser.sqlKeywords<\/b><br\/>[CALDoc] SQL Keywords.  ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.specialCharSequences","name":"specialCharSequences","type":"CalDataSqlParserspecialCharSequences","ui":"<b>Cal.Data.SqlParser.specialCharSequences<\/b><br\/>[CALDoc] Special SQL character sequences.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.test2","name":"test2","type":"CalDataSqlParsertest2","ui":"<b>Cal.Data.SqlParser.test2<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.identifierNonAlphaChars","name":"identifierNonAlphaChars","type":"CalDataSqlParseridentifierNonAlphaChars","ui":"<b>Cal.Data.SqlParser.identifierNonAlphaChars<\/b><br\/>[CALDoc] The non alphanumerics in a SQL identifier","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.parseTestRaw","name":"parseTestRaw","type":"CalDataSqlParserparseTestRaw","ui":"<b>Cal.Data.SqlParser.parseTestRaw<\/b><br\/>[CALDoc] ","terminals":[{"name":"p","input":"text"},{"name":"input","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_ESCAPE","name":"k_ESCAPE","type":"CalDataSqlParserk_ESCAPE","ui":"<b>Cal.Data.SqlParser.k_ESCAPE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.aliased_scalar_expression","name":"aliased_scalar_expression","type":"CalDataSqlParseraliased_scalar_expression","ui":"<b>Cal.Data.SqlParser.aliased_scalar_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.aliased_scalar_expression_list","name":"aliased_scalar_expression_list","type":"CalDataSqlParseraliased_scalar_expression_list","ui":"<b>Cal.Data.SqlParser.aliased_scalar_expression_list<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.boolean_factor","name":"boolean_factor","type":"CalDataSqlParserboolean_factor","ui":"<b>Cal.Data.SqlParser.boolean_factor<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.boolean_term","name":"boolean_term","type":"CalDataSqlParserboolean_term","ui":"<b>Cal.Data.SqlParser.boolean_term<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.boolean_expression","name":"boolean_expression","type":"CalDataSqlParserboolean_expression","ui":"<b>Cal.Data.SqlParser.boolean_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.join_node","name":"join_node","type":"CalDataSqlParserjoin_node","ui":"<b>Cal.Data.SqlParser.join_node<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.scalar_expression_list","name":"scalar_expression_list","type":"CalDataSqlParserscalar_expression_list","ui":"<b>Cal.Data.SqlParser.scalar_expression_list<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.comparison_expression","name":"comparison_expression","type":"CalDataSqlParsercomparison_expression","ui":"<b>Cal.Data.SqlParser.comparison_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.where_clause_info","name":"where_clause_info","type":"CalDataSqlParserwhere_clause_info","ui":"<b>Cal.Data.SqlParser.where_clause_info<\/b><br\/>[CALDoc] Extracts both regular restriction expressions and outer join expressions from the WHERE clause body.","terminals":[{"name":"query","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.order_by_expression_list","name":"order_by_expression_list","type":"CalDataSqlParserorder_by_expression_list","ui":"<b>Cal.Data.SqlParser.order_by_expression_list<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.select_statement_helper","name":"select_statement_helper","type":"CalDataSqlParserselect_statement_helper","ui":"<b>Cal.Data.SqlParser.select_statement_helper<\/b><br\/>[CALDoc] Parses an entire SQL SELECT statement.","terminals":[{"name":"allowUnion","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.select_statement","name":"select_statement","type":"CalDataSqlParserselect_statement","ui":"<b>Cal.Data.SqlParser.select_statement<\/b><br\/>[CALDoc] Parses an entire SQL SELECT statement.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.subquery","name":"subquery","type":"CalDataSqlParsersubquery","ui":"<b>Cal.Data.SqlParser.subquery<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.case_expression","name":"case_expression","type":"CalDataSqlParsercase_expression","ui":"<b>Cal.Data.SqlParser.case_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.aggregate_function_expression","name":"aggregate_function_expression","type":"CalDataSqlParseraggregate_function_expression","ui":"<b>Cal.Data.SqlParser.aggregate_function_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.function_expression","name":"function_expression","type":"CalDataSqlParserfunction_expression","ui":"<b>Cal.Data.SqlParser.function_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.scalar_factor","name":"scalar_factor","type":"CalDataSqlParserscalar_factor","ui":"<b>Cal.Data.SqlParser.scalar_factor<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.scalar_expression","name":"scalar_expression","type":"CalDataSqlParserscalar_expression","ui":"<b>Cal.Data.SqlParser.scalar_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.boolean_predicate","name":"boolean_predicate","type":"CalDataSqlParserboolean_predicate","ui":"<b>Cal.Data.SqlParser.boolean_predicate<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_EXISTS","name":"k_EXISTS","type":"CalDataSqlParserk_EXISTS","ui":"<b>Cal.Data.SqlParser.k_EXISTS<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_NULL","name":"k_NULL","type":"CalDataSqlParserk_NULL","ui":"<b>Cal.Data.SqlParser.k_NULL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_IS","name":"k_IS","type":"CalDataSqlParserk_IS","ui":"<b>Cal.Data.SqlParser.k_IS<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.field_reference","name":"field_reference","type":"CalDataSqlParserfield_reference","ui":"<b>Cal.Data.SqlParser.field_reference<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.functionsInfo","name":"functionsInfo","type":"CalDataSqlParserfunctionsInfo","ui":"<b>Cal.Data.SqlParser.functionsInfo<\/b><br\/>[CALDoc] Associate the <code>DbFunction<\/code> and the possible arities with each available function name.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.aggregateFunctionsInfo","name":"aggregateFunctionsInfo","type":"CalDataSqlParseraggregateFunctionsInfo","ui":"<b>Cal.Data.SqlParser.aggregateFunctionsInfo<\/b><br\/>[CALDoc] Information about aggregate functions.\n","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_END","name":"k_END","type":"CalDataSqlParserk_END","ui":"<b>Cal.Data.SqlParser.k_END<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_CASE","name":"k_CASE","type":"CalDataSqlParserk_CASE","ui":"<b>Cal.Data.SqlParser.k_CASE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_THEN","name":"k_THEN","type":"CalDataSqlParserk_THEN","ui":"<b>Cal.Data.SqlParser.k_THEN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_WHEN","name":"k_WHEN","type":"CalDataSqlParserk_WHEN","ui":"<b>Cal.Data.SqlParser.k_WHEN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_ELSE","name":"k_ELSE","type":"CalDataSqlParserk_ELSE","ui":"<b>Cal.Data.SqlParser.k_ELSE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.literal_expression","name":"literal_expression","type":"CalDataSqlParserliteral_expression","ui":"<b>Cal.Data.SqlParser.literal_expression<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.sql_time","name":"sql_time","type":"CalDataSqlParsersql_time","ui":"<b>Cal.Data.SqlParser.sql_time<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_UNION","name":"k_UNION","type":"CalDataSqlParserk_UNION","ui":"<b>Cal.Data.SqlParser.k_UNION<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_DESC","name":"k_DESC","type":"CalDataSqlParserk_DESC","ui":"<b>Cal.Data.SqlParser.k_DESC<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_ORDERBY","name":"k_ORDERBY","type":"CalDataSqlParserk_ORDERBY","ui":"<b>Cal.Data.SqlParser.k_ORDERBY<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_HAVING","name":"k_HAVING","type":"CalDataSqlParserk_HAVING","ui":"<b>Cal.Data.SqlParser.k_HAVING<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_GROUPBY","name":"k_GROUPBY","type":"CalDataSqlParserk_GROUPBY","ui":"<b>Cal.Data.SqlParser.k_GROUPBY<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.oracleOjToken","name":"oracleOjToken","type":"CalDataSqlParseroracleOjToken","ui":"<b>Cal.Data.SqlParser.oracleOjToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.starEqualsStarToken","name":"starEqualsStarToken","type":"CalDataSqlParserstarEqualsStarToken","ui":"<b>Cal.Data.SqlParser.starEqualsStarToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.equalsStarToken","name":"equalsStarToken","type":"CalDataSqlParserequalsStarToken","ui":"<b>Cal.Data.SqlParser.equalsStarToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.starEqualsToken","name":"starEqualsToken","type":"CalDataSqlParserstarEqualsToken","ui":"<b>Cal.Data.SqlParser.starEqualsToken<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_IN","name":"k_IN","type":"CalDataSqlParserk_IN","ui":"<b>Cal.Data.SqlParser.k_IN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_LIKE","name":"k_LIKE","type":"CalDataSqlParserk_LIKE","ui":"<b>Cal.Data.SqlParser.k_LIKE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_BETWEEN","name":"k_BETWEEN","type":"CalDataSqlParserk_BETWEEN","ui":"<b>Cal.Data.SqlParser.k_BETWEEN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.comparison_operator","name":"comparison_operator","type":"CalDataSqlParsercomparison_operator","ui":"<b>Cal.Data.SqlParser.comparison_operator<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_WHERE","name":"k_WHERE","type":"CalDataSqlParserk_WHERE","ui":"<b>Cal.Data.SqlParser.k_WHERE<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_OR","name":"k_OR","type":"CalDataSqlParserk_OR","ui":"<b>Cal.Data.SqlParser.k_OR<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_AND","name":"k_AND","type":"CalDataSqlParserk_AND","ui":"<b>Cal.Data.SqlParser.k_AND<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_NOT","name":"k_NOT","type":"CalDataSqlParserk_NOT","ui":"<b>Cal.Data.SqlParser.k_NOT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_ON","name":"k_ON","type":"CalDataSqlParserk_ON","ui":"<b>Cal.Data.SqlParser.k_ON<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_FULL_OJ","name":"k_FULL_OJ","type":"CalDataSqlParserk_FULL_OJ","ui":"<b>Cal.Data.SqlParser.k_FULL_OJ<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_RIGHT_OJ","name":"k_RIGHT_OJ","type":"CalDataSqlParserk_RIGHT_OJ","ui":"<b>Cal.Data.SqlParser.k_RIGHT_OJ<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_LEFT_OJ","name":"k_LEFT_OJ","type":"CalDataSqlParserk_LEFT_OJ","ui":"<b>Cal.Data.SqlParser.k_LEFT_OJ<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_INNER_JOIN","name":"k_INNER_JOIN","type":"CalDataSqlParserk_INNER_JOIN","ui":"<b>Cal.Data.SqlParser.k_INNER_JOIN<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_FROM","name":"k_FROM","type":"CalDataSqlParserk_FROM","ui":"<b>Cal.Data.SqlParser.k_FROM<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_SELECT","name":"k_SELECT","type":"CalDataSqlParserk_SELECT","ui":"<b>Cal.Data.SqlParser.k_SELECT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_AS","name":"k_AS","type":"CalDataSqlParserk_AS","ui":"<b>Cal.Data.SqlParser.k_AS<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.sql_name","name":"sql_name","type":"CalDataSqlParsersql_name","ui":"<b>Cal.Data.SqlParser.sql_name<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_WITH_TIES","name":"k_WITH_TIES","type":"CalDataSqlParserk_WITH_TIES","ui":"<b>Cal.Data.SqlParser.k_WITH_TIES<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_PERCENT","name":"k_PERCENT","type":"CalDataSqlParserk_PERCENT","ui":"<b>Cal.Data.SqlParser.k_PERCENT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.sql_number","name":"sql_number","type":"CalDataSqlParsersql_number","ui":"<b>Cal.Data.SqlParser.sql_number<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_TOP","name":"k_TOP","type":"CalDataSqlParserk_TOP","ui":"<b>Cal.Data.SqlParser.k_TOP<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_DISTINCT","name":"k_DISTINCT","type":"CalDataSqlParserk_DISTINCT","ui":"<b>Cal.Data.SqlParser.k_DISTINCT<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_ALL","name":"k_ALL","type":"CalDataSqlParserk_ALL","ui":"<b>Cal.Data.SqlParser.k_ALL<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.k_ASC","name":"k_ASC","type":"CalDataSqlParserk_ASC","ui":"<b>Cal.Data.SqlParser.k_ASC<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.Data.SqlParser.sql_string","name":"sql_string","type":"CalDataSqlParsersql_string","ui":"<b>Cal.Data.SqlParser.sql_string<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Data.SqlParser"]},{"description":"Cal.IO.File.getFileLength","name":"getFileLength","type":"CalIOFilegetFileLength","ui":"<b>Cal.IO.File.getFileLength<\/b><br\/>[CALDoc] Returns the length, in bytes, of the file.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.deleteFile","name":"deleteFile","type":"CalIOFiledeleteFile","ui":"<b>Cal.IO.File.deleteFile<\/b><br\/>[CALDoc] Deletes the specified file.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isPermissionErrorType","name":"isPermissionErrorType","type":"CalIOFileisPermissionErrorType","ui":"<b>Cal.IO.File.isPermissionErrorType<\/b><br\/>[CALDoc] Checks to see whether the error type represents an error that arose because\nthe user did not having sufficient privileges to perform the operation.","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isFileOrDirectoryWritable","name":"isFileOrDirectoryWritable","type":"CalIOFileisFileOrDirectoryWritable","ui":"<b>Cal.IO.File.isFileOrDirectoryWritable<\/b><br\/>[CALDoc] Returns whether the specified file or directory is writable.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getModificationTime","name":"getModificationTime","type":"CalIOFilegetModificationTime","ui":"<b>Cal.IO.File.getModificationTime<\/b><br\/>[CALDoc] Gets the last modification time of the specified file or directory.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isFile","name":"isFile","type":"CalIOFileisFile","ui":"<b>Cal.IO.File.isFile<\/b><br\/>[CALDoc] Returns whether the specified path refers to an existent file.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.appendFile","name":"appendFile","type":"CalIOFileappendFile","ui":"<b>Cal.IO.File.appendFile<\/b><br\/>[CALDoc] Appends the specified contents to the file specified by the file name.","terminals":[{"name":"contents","input":"text"},{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.renameFile","name":"renameFile","type":"CalIOFilerenameFile","ui":"<b>Cal.IO.File.renameFile<\/b><br\/>[CALDoc] Renames the specified file.","terminals":[{"name":"destFileName","input":"text"},{"name":"sourceFileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.outputIOErrorAsString","name":"outputIOErrorAsString","type":"CalIOFileoutputIOErrorAsString","ui":"<b>Cal.IO.File.outputIOErrorAsString<\/b><br\/>[CALDoc] ","terminals":[{"name":"ioError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.inputFileNameFromJObject","name":"inputFileNameFromJObject","type":"CalIOFileinputFileNameFromJObject","ui":"<b>Cal.IO.File.inputFileNameFromJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObject","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isFullErrorType","name":"isFullErrorType","type":"CalIOFileisFullErrorType","ui":"<b>Cal.IO.File.isFullErrorType<\/b><br\/>[CALDoc] Checks to see whether the error type represents an error that arose because\nthe hardware device (e.g. the disk) was full.","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.extendPath","name":"extendPath","type":"CalIOFileextendPath","ui":"<b>Cal.IO.File.extendPath<\/b><br\/>[CALDoc] Constructs a new file path representing a file or a subdirectory in a given\nparent directory.","terminals":[{"name":"parent","input":"text"},{"name":"child","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isAbsolutePath","name":"isAbsolutePath","type":"CalIOFileisAbsolutePath","ui":"<b>Cal.IO.File.isAbsolutePath<\/b><br\/>[CALDoc] Returns whether the given path is absolute.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getParentFromPath","name":"getParentFromPath","type":"CalIOFilegetParentFromPath","ui":"<b>Cal.IO.File.getParentFromPath<\/b><br\/>[CALDoc] Gets the file path's parent. ","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.createDirectory","name":"createDirectory","type":"CalIOFilecreateDirectory","ui":"<b>Cal.IO.File.createDirectory<\/b><br\/>[CALDoc] Creates the specified directory. ","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getCanonicalPath","name":"getCanonicalPath","type":"CalIOFilegetCanonicalPath","ui":"<b>Cal.IO.File.getCanonicalPath<\/b><br\/>[CALDoc] Gets the canonical path of the specified file path.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.fromIOSuccess","name":"fromIOSuccess","type":"CalIOFilefromIOSuccess","ui":"<b>Cal.IO.File.fromIOSuccess<\/b><br\/>[CALDoc] Extracts the return value from an\n<code>(Either IOError a)<\/code> value. ","terminals":[{"name":"resultOrError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ioeGetErrorLocation","name":"ioeGetErrorLocation","type":"CalIOFileioeGetErrorLocation","ui":"<b>Cal.IO.File.ioeGetErrorLocation<\/b><br\/>[CALDoc] Gets the error location of the specified IO error.","terminals":[{"name":"ioError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.renameDirectory","name":"renameDirectory","type":"CalIOFilerenameDirectory","ui":"<b>Cal.IO.File.renameDirectory<\/b><br\/>[CALDoc] Renames the specified directory.","terminals":[{"name":"sourceDirName","input":"text"},{"name":"destDirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isDeviceNotReadyErrorType","name":"isDeviceNotReadyErrorType","type":"CalIOFileisDeviceNotReadyErrorType","ui":"<b>Cal.IO.File.isDeviceNotReadyErrorType<\/b><br\/>[CALDoc] Checks to see whether the error type represents an error that arose because a\nhardware device was not ready.","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isDoesNotExistErrorType","name":"isDoesNotExistErrorType","type":"CalIOFileisDoesNotExistErrorType","ui":"<b>Cal.IO.File.isDoesNotExistErrorType<\/b><br\/>[CALDoc] Checks to see whether the error type represents an error that arose because\nthe specified file or directory did not exist.","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.doesFileOrDirectoryExist","name":"doesFileOrDirectoryExist","type":"CalIOFiledoesFileOrDirectoryExist","ui":"<b>Cal.IO.File.doesFileOrDirectoryExist<\/b><br\/>[CALDoc] Returns whether the file or directory denoted by the given path exists.","terminals":[{"name":"fileOrDirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isDirectory","name":"isDirectory","type":"CalIOFileisDirectory","ui":"<b>Cal.IO.File.isDirectory<\/b><br\/>[CALDoc] Returns whether the specified path refers to an existent directory.","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.deleteDirectoryTree","name":"deleteDirectoryTree","type":"CalIOFiledeleteDirectoryTree","ui":"<b>Cal.IO.File.deleteDirectoryTree<\/b><br\/>[CALDoc] Recursively deletes the directory tree rooted at the specified directory.","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getFilteredDirectoryContents","name":"getFilteredDirectoryContents","type":"CalIOFilegetFilteredDirectoryContents","ui":"<b>Cal.IO.File.getFilteredDirectoryContents<\/b><br\/>[CALDoc] Fetches a list of files, or a list of files and subdirectories, in a directory\nmatching the specified pattern (such as <code>\"*.txt\"<\/code> or <code>\"test?.rpt\"<\/code>).","terminals":[{"name":"fileNamePattern","input":"text"},{"name":"filesOnly","input":"text"},{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.readFileBinary","name":"readFileBinary","type":"CalIOFilereadFileBinary","ui":"<b>Cal.IO.File.readFileBinary<\/b><br\/>[CALDoc] Reads the contents of the specified file into a byte array.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isAlreadyInUseErrorType","name":"isAlreadyInUseErrorType","type":"CalIOFileisAlreadyInUseErrorType","ui":"<b>Cal.IO.File.isAlreadyInUseErrorType<\/b><br\/>[CALDoc] Checks to see whether the error type represents an error that arose because\nthe specified file or directory was already in use.","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.createDirectoryAndNonexistentParentDirectories","name":"createDirectoryAndNonexistentParentDirectories","type":"CalIOFilecreateDirectoryAndNonexistentParentDirectories","ui":"<b>Cal.IO.File.createDirectoryAndNonexistentParentDirectories<\/b><br\/>[CALDoc] Creates the specified directory, and all nonexistent parent directories.","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getDirectoryContents","name":"getDirectoryContents","type":"CalIOFilegetDirectoryContents","ui":"<b>Cal.IO.File.getDirectoryContents<\/b><br\/>[CALDoc] Gets a list of all the files and subdirectories within the specified\ndirectory.","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.deleteFileOrDirectory","name":"deleteFileOrDirectory","type":"CalIOFiledeleteFileOrDirectory","ui":"<b>Cal.IO.File.deleteFileOrDirectory<\/b><br\/>[CALDoc] Deletes the specified file or directory. ","terminals":[{"name":"fileOrDirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.writeFileBinary","name":"writeFileBinary","type":"CalIOFilewriteFileBinary","ui":"<b>Cal.IO.File.writeFileBinary<\/b><br\/>[CALDoc] Writes the specified binary contents into the file specified by the file name.\n","terminals":[{"name":"fileName","input":"text"},{"name":"contents","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isFileOrDirectoryHidden","name":"isFileOrDirectoryHidden","type":"CalIOFileisFileOrDirectoryHidden","ui":"<b>Cal.IO.File.isFileOrDirectoryHidden<\/b><br\/>[CALDoc] Returns whether the specified file or directory is hidden. ","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.renameFileOrDirectory","name":"renameFileOrDirectory","type":"CalIOFilerenameFileOrDirectory","ui":"<b>Cal.IO.File.renameFileOrDirectory<\/b><br\/>[CALDoc] Renames the specified file or directory.","terminals":[{"name":"source","input":"text"},{"name":"dest","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ioeGetExceptionMessage","name":"ioeGetExceptionMessage","type":"CalIOFileioeGetExceptionMessage","ui":"<b>Cal.IO.File.ioeGetExceptionMessage<\/b><br\/>[CALDoc] Gets the associated exception message (if any) of the specified IO error.","terminals":[{"name":"ioError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ioeGetErrorType","name":"ioeGetErrorType","type":"CalIOFileioeGetErrorType","ui":"<b>Cal.IO.File.ioeGetErrorType<\/b><br\/>[CALDoc] Gets the error type of the specified IO error.","terminals":[{"name":"ioError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.readFileLines","name":"readFileLines","type":"CalIOFilereadFileLines","ui":"<b>Cal.IO.File.readFileLines<\/b><br\/>[CALDoc] Reads the lines of the specified text file.\n","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.catchIOException","name":"catchIOException","type":"CalIOFilecatchIOException","ui":"<b>Cal.IO.File.catchIOException<\/b><br\/>[CALDoc] Evaluates the specified value and catches IOExceptions thrown.\n","terminals":[{"name":"fileName","input":"text"},{"name":"location","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.readBinaryContentsFromFileOrUrl","name":"readBinaryContentsFromFileOrUrl","type":"CalIOFilereadBinaryContentsFromFileOrUrl","ui":"<b>Cal.IO.File.readBinaryContentsFromFileOrUrl<\/b><br\/>[CALDoc] Reads the contents of the file specified by its file name or URL into a byte array.","terminals":[{"name":"fileNameOrUrl","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jByteArrayToByteArray","name":"jByteArrayToByteArray","type":"CalIOFilejByteArrayToByteArray","ui":"<b>Cal.IO.File.jByteArrayToByteArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.showIOErrorType","name":"showIOErrorType","type":"CalIOFileshowIOErrorType","ui":"<b>Cal.IO.File.showIOErrorType<\/b><br\/>[CALDoc] ","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isFileOrDirectoryReadable","name":"isFileOrDirectoryReadable","type":"CalIOFileisFileOrDirectoryReadable","ui":"<b>Cal.IO.File.isFileOrDirectoryReadable<\/b><br\/>[CALDoc] Returns whether the specified file or directory is readable.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ioeGetFileName","name":"ioeGetFileName","type":"CalIOFileioeGetFileName","ui":"<b>Cal.IO.File.ioeGetFileName<\/b><br\/>[CALDoc] Gets the associated file name (if any) of the specified IO error.","terminals":[{"name":"ioError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.buildPathFromComponents","name":"buildPathFromComponents","type":"CalIOFilebuildPathFromComponents","ui":"<b>Cal.IO.File.buildPathFromComponents<\/b><br\/>[CALDoc] Constructs a file path from a list of components. ","terminals":[{"name":"components","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.showIOError","name":"showIOError","type":"CalIOFileshowIOError","ui":"<b>Cal.IO.File.showIOError<\/b><br\/>[CALDoc] ","terminals":[{"name":"ioError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.readFile","name":"readFile","type":"CalIOFilereadFile","ui":"<b>Cal.IO.File.readFile<\/b><br\/>[CALDoc] Reads the contents of the specified file into a string.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.outputFileNameToJObject","name":"outputFileNameToJObject","type":"CalIOFileoutputFileNameToJObject","ui":"<b>Cal.IO.File.outputFileNameToJObject<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getPathFromFileName","name":"getPathFromFileName","type":"CalIOFilegetPathFromFileName","ui":"<b>Cal.IO.File.getPathFromFileName<\/b><br\/>[CALDoc] Gets the file path represented by the given <code>FileName<\/code> value as a string.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.appendFileBinary","name":"appendFileBinary","type":"CalIOFileappendFileBinary","ui":"<b>Cal.IO.File.appendFileBinary<\/b><br\/>[CALDoc] Appends the specified binary contents to the file specified by the file name.","terminals":[{"name":"contents","input":"text"},{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.byteArrayToJByteArray","name":"byteArrayToJByteArray","type":"CalIOFilebyteArrayToJByteArray","ui":"<b>Cal.IO.File.byteArrayToJByteArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isIOSuccess","name":"isIOSuccess","type":"CalIOFileisIOSuccess","ui":"<b>Cal.IO.File.isIOSuccess<\/b><br\/>[CALDoc] Determines whether an <code>(Either IOError a)<\/code>\nvalue represents an IO error, i.e. in fact the value is of the form <code>Left ioError<\/code>.\n","terminals":[{"name":"resultOrError","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.writeFile","name":"writeFile","type":"CalIOFilewriteFile","ui":"<b>Cal.IO.File.writeFile<\/b><br\/>[CALDoc] Writes the specified contents into the file specified by the file name. ","terminals":[{"name":"contents","input":"text"},{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ioTry","name":"ioTry","type":"CalIOFileioTry","ui":"<b>Cal.IO.File.ioTry<\/b><br\/>[CALDoc] Translates a <code>JIOResult<\/code> value into an\n<code>(Either IOError a)<\/code> value, which can then\nbe consumed by the caller of the IO operation. ","terminals":[{"name":"ioResult","input":"text"},{"name":"errorLocation","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ioTryWith","name":"ioTryWith","type":"CalIOFileioTryWith","ui":"<b>Cal.IO.File.ioTryWith<\/b><br\/>[CALDoc] Translates a <code>JIOResult<\/code> value into an\n<code>(Either IOError a)<\/code> value, which can then\nbe consumed by the caller of the IO operation. ","terminals":[{"name":"f","input":"text"},{"name":"ioResult","input":"text"},{"name":"errorLocation","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFileToFileName","name":"jFileToFileName","type":"CalIOFilejFileToFileName","ui":"<b>Cal.IO.File.jFileToFileName<\/b><br\/>[CALDoc] Converts a <code>JFile<\/code> value into a <code>FileName<\/code>.","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIOExceptionToIOErrorType","name":"jIOExceptionToIOErrorType","type":"CalIOFilejIOExceptionToIOErrorType","ui":"<b>Cal.IO.File.jIOExceptionToIOErrorType<\/b><br\/>[CALDoc] Translates a Java IOException into an appropriate <code>IOErrorType<\/code>. ","terminals":[{"name":"exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getAbsolutePath","name":"getAbsolutePath","type":"CalIOFilegetAbsolutePath","ui":"<b>Cal.IO.File.getAbsolutePath<\/b><br\/>[CALDoc] Gets the absolute path of the specified file path.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isUnknownHostErrorType","name":"isUnknownHostErrorType","type":"CalIOFileisUnknownHostErrorType","ui":"<b>Cal.IO.File.isUnknownHostErrorType<\/b><br\/>[CALDoc] Checks to see whether the error type represents an error that arose because\nthe specified network host could not be found.","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getNameFromPath","name":"getNameFromPath","type":"CalIOFilegetNameFromPath","ui":"<b>Cal.IO.File.getNameFromPath<\/b><br\/>[CALDoc] Gets the file name from the file path. ","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isUnhandledIOExceptionErrorType","name":"isUnhandledIOExceptionErrorType","type":"CalIOFileisUnhandledIOExceptionErrorType","ui":"<b>Cal.IO.File.isUnhandledIOExceptionErrorType<\/b><br\/>[CALDoc] Checks to see whether the error type represents an unrecognized Java\nIOException.","terminals":[{"name":"ioErrorType","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.getCurrentDirectory","name":"getCurrentDirectory","type":"CalIOFilegetCurrentDirectory","ui":"<b>Cal.IO.File.getCurrentDirectory<\/b><br\/>[CALDoc] Gets the path of the current working directory.","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.makeFileName","name":"makeFileName","type":"CalIOFilemakeFileName","ui":"<b>Cal.IO.File.makeFileName<\/b><br\/>[CALDoc] Constructs a <code>FileName<\/code> from a file path.","terminals":[{"name":"path","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.deleteDirectory","name":"deleteDirectory","type":"CalIOFiledeleteDirectory","ui":"<b>Cal.IO.File.deleteDirectory<\/b><br\/>[CALDoc] Deletes the specified directory. ","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.fileNameToJFile","name":"fileNameToJFile","type":"CalIOFilefileNameToJFile","ui":"<b>Cal.IO.File.fileNameToJFile<\/b><br\/>[CALDoc] Converts a <code>FileName<\/code> into a <code>JFile<\/code> value.","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIsUnknownHostException","name":"jIsUnknownHostException","type":"CalIOFilejIsUnknownHostException","ui":"<b>Cal.IO.File.jIsUnknownHostException<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIsResourceExhaustedException","name":"jIsResourceExhaustedException","type":"CalIOFilejIsResourceExhaustedException","ui":"<b>Cal.IO.File.jIsResourceExhaustedException<\/b><br\/>[CALDoc] ","terminals":[{"name":"ex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIsResourceBusyException","name":"jIsResourceBusyException","type":"CalIOFilejIsResourceBusyException","ui":"<b>Cal.IO.File.jIsResourceBusyException<\/b><br\/>[CALDoc] ","terminals":[{"name":"ex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIsGenericFileNotFoundException","name":"jIsGenericFileNotFoundException","type":"CalIOFilejIsGenericFileNotFoundException","ui":"<b>Cal.IO.File.jIsGenericFileNotFoundException<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIsDeviceNotReady_FileNotFoundException","name":"jIsDeviceNotReady_FileNotFoundException","type":"CalIOFilejIsDeviceNotReady_FileNotFoundException","ui":"<b>Cal.IO.File.jIsDeviceNotReady_FileNotFoundException<\/b><br\/>[CALDoc] ","terminals":[{"name":"ex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIsPermissionDenied_FileNotFoundException","name":"jIsPermissionDenied_FileNotFoundException","type":"CalIOFilejIsPermissionDenied_FileNotFoundException","ui":"<b>Cal.IO.File.jIsPermissionDenied_FileNotFoundException<\/b><br\/>[CALDoc] ","terminals":[{"name":"ex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isNullFile","name":"isNullFile","type":"CalIOFileisNullFile","ui":"<b>Cal.IO.File.isNullFile<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIOResult_getFile","name":"jIOResult_getFile","type":"CalIOFilejIOResult_getFile","ui":"<b>Cal.IO.File.jIOResult_getFile<\/b><br\/>[CALDoc] ","terminals":[{"name":"jioResult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIOResult_getException","name":"jIOResult_getException","type":"CalIOFilejIOResult_getException","ui":"<b>Cal.IO.File.jIOResult_getException<\/b><br\/>[CALDoc] ","terminals":[{"name":"jioResult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIOResult_getResult","name":"jIOResult_getResult","type":"CalIOFilejIOResult_getResult","ui":"<b>Cal.IO.File.jIOResult_getResult<\/b><br\/>[CALDoc] ","terminals":[{"name":"jioResult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIOResult_isError","name":"jIOResult_isError","type":"CalIOFilejIOResult_isError","ui":"<b>Cal.IO.File.jIOResult_isError<\/b><br\/>[CALDoc] ","terminals":[{"name":"jioResult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jIOException_getMessage","name":"jIOException_getMessage","type":"CalIOFilejIOException_getMessage","ui":"<b>Cal.IO.File.jIOException_getMessage<\/b><br\/>[CALDoc] ","terminals":[{"name":"jioException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jGetStackTrace","name":"jGetStackTrace","type":"CalIOFilejGetStackTrace","ui":"<b>Cal.IO.File.jGetStackTrace<\/b><br\/>[CALDoc] ","terminals":[{"name":"ex","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jGetFilteredDirectoryContents","name":"jGetFilteredDirectoryContents","type":"CalIOFilejGetFilteredDirectoryContents","ui":"<b>Cal.IO.File.jGetFilteredDirectoryContents<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileNamePattern","input":"text"},{"name":"filesOnly","input":"text"},{"name":"directory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jGetDirectoryContents","name":"jGetDirectoryContents","type":"CalIOFilejGetDirectoryContents","ui":"<b>Cal.IO.File.jGetDirectoryContents<\/b><br\/>[CALDoc] ","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_renameTo","name":"jFile_renameTo","type":"CalIOFilejFile_renameTo","ui":"<b>Cal.IO.File.jFile_renameTo<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jDeleteDirectoryTree","name":"jDeleteDirectoryTree","type":"CalIOFilejDeleteDirectoryTree","ui":"<b>Cal.IO.File.jDeleteDirectoryTree<\/b><br\/>[CALDoc] ","terminals":[{"name":"dirName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_delete","name":"jFile_delete","type":"CalIOFilejFile_delete","ui":"<b>Cal.IO.File.jFile_delete<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_mkdirs","name":"jFile_mkdirs","type":"CalIOFilejFile_mkdirs","ui":"<b>Cal.IO.File.jFile_mkdirs<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_mkdir","name":"jFile_mkdir","type":"CalIOFilejFile_mkdir","ui":"<b>Cal.IO.File.jFile_mkdir<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jBufferedReader_close","name":"jBufferedReader_close","type":"CalIOFilejBufferedReader_close","ui":"<b>Cal.IO.File.jBufferedReader_close<\/b><br\/>[CALDoc] ","terminals":[{"name":"jBufferedReader","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jBufferedReader_readLine","name":"jBufferedReader_readLine","type":"CalIOFilejBufferedReader_readLine","ui":"<b>Cal.IO.File.jBufferedReader_readLine<\/b><br\/>[CALDoc] ","terminals":[{"name":"jBufferedReader","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jNewBufferedReader","name":"jNewBufferedReader","type":"CalIOFilejNewBufferedReader","ui":"<b>Cal.IO.File.jNewBufferedReader<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jNewFileReader","name":"jNewFileReader","type":"CalIOFilejNewFileReader","ui":"<b>Cal.IO.File.jNewFileReader<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jAppendFileBinary","name":"jAppendFileBinary","type":"CalIOFilejAppendFileBinary","ui":"<b>Cal.IO.File.jAppendFileBinary<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"contents","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jAppendFile","name":"jAppendFile","type":"CalIOFilejAppendFile","ui":"<b>Cal.IO.File.jAppendFile<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"contents","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jWriteFileBinary","name":"jWriteFileBinary","type":"CalIOFilejWriteFileBinary","ui":"<b>Cal.IO.File.jWriteFileBinary<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"contents","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jWriteFile","name":"jWriteFile","type":"CalIOFilejWriteFile","ui":"<b>Cal.IO.File.jWriteFile<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"contents","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jReadBinaryContentsFromFileOrUrl","name":"jReadBinaryContentsFromFileOrUrl","type":"CalIOFilejReadBinaryContentsFromFileOrUrl","ui":"<b>Cal.IO.File.jReadBinaryContentsFromFileOrUrl<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileNameOrUrl","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jReadFileBinary","name":"jReadFileBinary","type":"CalIOFilejReadFileBinary","ui":"<b>Cal.IO.File.jReadFileBinary<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jReadFile","name":"jReadFile","type":"CalIOFilejReadFile","ui":"<b>Cal.IO.File.jReadFile<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jGetModificationTime","name":"jGetModificationTime","type":"CalIOFilejGetModificationTime","ui":"<b>Cal.IO.File.jGetModificationTime<\/b><br\/>[CALDoc] ","terminals":[{"name":"fileName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_length","name":"jFile_length","type":"CalIOFilejFile_length","ui":"<b>Cal.IO.File.jFile_length<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_isHidden","name":"jFile_isHidden","type":"CalIOFilejFile_isHidden","ui":"<b>Cal.IO.File.jFile_isHidden<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_exists","name":"jFile_exists","type":"CalIOFilejFile_exists","ui":"<b>Cal.IO.File.jFile_exists<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_isFile","name":"jFile_isFile","type":"CalIOFilejFile_isFile","ui":"<b>Cal.IO.File.jFile_isFile<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_isDirectory","name":"jFile_isDirectory","type":"CalIOFilejFile_isDirectory","ui":"<b>Cal.IO.File.jFile_isDirectory<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_canWrite","name":"jFile_canWrite","type":"CalIOFilejFile_canWrite","ui":"<b>Cal.IO.File.jFile_canWrite<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_canRead","name":"jFile_canRead","type":"CalIOFilejFile_canRead","ui":"<b>Cal.IO.File.jFile_canRead<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.isNullString","name":"isNullString","type":"CalIOFileisNullString","ui":"<b>Cal.IO.File.isNullString<\/b><br\/>[CALDoc] ","terminals":[{"name":"_INPUT","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_new_withJFileParentChild","name":"jFile_new_withJFileParentChild","type":"CalIOFilejFile_new_withJFileParentChild","ui":"<b>Cal.IO.File.jFile_new_withJFileParentChild<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_new_withParentChild","name":"jFile_new_withParentChild","type":"CalIOFilejFile_new_withParentChild","ui":"<b>Cal.IO.File.jFile_new_withParentChild<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_getParent","name":"jFile_getParent","type":"CalIOFilejFile_getParent","ui":"<b>Cal.IO.File.jFile_getParent<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_getName","name":"jFile_getName","type":"CalIOFilejFile_getName","ui":"<b>Cal.IO.File.jFile_getName<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_getCanonicalPath","name":"jFile_getCanonicalPath","type":"CalIOFilejFile_getCanonicalPath","ui":"<b>Cal.IO.File.jFile_getCanonicalPath<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_getAbsolutePath","name":"jFile_getAbsolutePath","type":"CalIOFilejFile_getAbsolutePath","ui":"<b>Cal.IO.File.jFile_getAbsolutePath<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_isAbsolute","name":"jFile_isAbsolute","type":"CalIOFilejFile_isAbsolute","ui":"<b>Cal.IO.File.jFile_isAbsolute<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_toString","name":"jFile_toString","type":"CalIOFilejFile_toString","ui":"<b>Cal.IO.File.jFile_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jFile","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.jFile_new_withPathName","name":"jFile_new_withPathName","type":"CalIOFilejFile_new_withPathName","ui":"<b>Cal.IO.File.jFile_new_withPathName<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.FileName","name":"FileName","type":"CalIOFileFileName","ui":"<b>Cal.IO.File.FileName<\/b><br\/>[CALDoc] ","terminals":[{"name":"path","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.PermissionDenied","name":"PermissionDenied","type":"CalIOFilePermissionDenied","ui":"<b>Cal.IO.File.PermissionDenied<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.DeviceNotReady","name":"DeviceNotReady","type":"CalIOFileDeviceNotReady","ui":"<b>Cal.IO.File.DeviceNotReady<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.NoSuchThing","name":"NoSuchThing","type":"CalIOFileNoSuchThing","ui":"<b>Cal.IO.File.NoSuchThing<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ResourceBusy","name":"ResourceBusy","type":"CalIOFileResourceBusy","ui":"<b>Cal.IO.File.ResourceBusy<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.ResourceExhausted","name":"ResourceExhausted","type":"CalIOFileResourceExhausted","ui":"<b>Cal.IO.File.ResourceExhausted<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.UnknownHost","name":"UnknownHost","type":"CalIOFileUnknownHost","ui":"<b>Cal.IO.File.UnknownHost<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.UnhandledIOException","name":"UnhandledIOException","type":"CalIOFileUnhandledIOException","ui":"<b>Cal.IO.File.UnhandledIOException<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.IO.File.IOError","name":"IOError","type":"CalIOFileIOError","ui":"<b>Cal.IO.File.IOError<\/b><br\/>[CALDoc] ","terminals":[{"name":"maybeExceptionMessage","input":"text"},{"name":"type","input":"text"},{"name":"maybeFileName","input":"text"},{"name":"location","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.IO.File"]},{"description":"Cal.Utilities.Format.formatInColumns","name":"formatInColumns","type":"CalUtilitiesFormatformatInColumns","ui":"<b>Cal.Utilities.Format.formatInColumns<\/b><br\/>[CALDoc] Returns a string which can be used to display the specified values in columns.","terminals":[{"name":"values","input":"text"},{"name":"columnGap","input":"text"},{"name":"nColumns","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Format"]},{"description":"Cal.Utilities.Format.formatTruncatedTable","name":"formatTruncatedTable","type":"CalUtilitiesFormatformatTruncatedTable","ui":"<b>Cal.Utilities.Format.formatTruncatedTable<\/b><br\/>[CALDoc] Returns a string which can be used to display the specified rows of values in a nice table.\n","terminals":[{"name":"rows","input":"text"},{"name":"maxNRows","input":"text"},{"name":"columnGap","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Format"]},{"description":"Cal.Utilities.Format.formatTable","name":"formatTable","type":"CalUtilitiesFormatformatTable","ui":"<b>Cal.Utilities.Format.formatTable<\/b><br\/>[CALDoc] Returns a string which can be used to display the specified rows of values in a nice table.\n","terminals":[{"name":"columnGap","input":"text"},{"name":"rows","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Utilities.Format"]},{"description":"Cal.Experimental.Quant.VAR.vectorAutoRegressiveModel","name":"vectorAutoRegressiveModel","type":"CalExperimentalQuantVARvectorAutoRegressiveModel","ui":"<b>Cal.Experimental.Quant.VAR.vectorAutoRegressiveModel<\/b><br\/>[CALDoc] Placeholder for an implementation of a vector autoregressive model","terminals":[{"name":"d3","input":"text"},{"name":"d2","input":"text"},{"name":"d4","input":"text"},{"name":"d1","input":"text"},{"name":"p","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.VAR"]},{"description":"Cal.Experimental.Quant.VAR.timeseries4","name":"timeseries4","type":"CalExperimentalQuantVARtimeseries4","ui":"<b>Cal.Experimental.Quant.VAR.timeseries4<\/b><br\/>[CALDoc] Placeholder for a timeseries","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.VAR"]},{"description":"Cal.Experimental.Quant.VAR.timeseries1","name":"timeseries1","type":"CalExperimentalQuantVARtimeseries1","ui":"<b>Cal.Experimental.Quant.VAR.timeseries1<\/b><br\/>[CALDoc] Placeholder for a timeseries","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.VAR"]},{"description":"Cal.Experimental.Quant.VAR.timeseries2","name":"timeseries2","type":"CalExperimentalQuantVARtimeseries2","ui":"<b>Cal.Experimental.Quant.VAR.timeseries2<\/b><br\/>[CALDoc] Placeholder for a timeseries","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.VAR"]},{"description":"Cal.Experimental.Quant.VAR.timeseries3","name":"timeseries3","type":"CalExperimentalQuantVARtimeseries3","ui":"<b>Cal.Experimental.Quant.VAR.timeseries3<\/b><br\/>[CALDoc] Placeholder for a timeseries","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.VAR"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_wait_Long_Int","name":"qrDecomposition_wait_Long_Int","type":"CalExperimentalQuantLinearqrDecomposition_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jqrDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_wait_Long","name":"qrDecomposition_wait_Long","type":"CalExperimentalQuantLinearqrDecomposition_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_wait","name":"qrDecomposition_wait","type":"CalExperimentalQuantLinearqrDecomposition_wait","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_toString","name":"qrDecomposition_toString","type":"CalExperimentalQuantLinearqrDecomposition_toString","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_solve","name":"qrDecomposition_solve","type":"CalExperimentalQuantLinearqrDecomposition_solve","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_solve<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_notifyAll","name":"qrDecomposition_notifyAll","type":"CalExperimentalQuantLinearqrDecomposition_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_notify","name":"qrDecomposition_notify","type":"CalExperimentalQuantLinearqrDecomposition_notify","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_isFullRank","name":"qrDecomposition_isFullRank","type":"CalExperimentalQuantLinearqrDecomposition_isFullRank","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_isFullRank<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_hashCode","name":"qrDecomposition_hashCode","type":"CalExperimentalQuantLinearqrDecomposition_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_getR","name":"qrDecomposition_getR","type":"CalExperimentalQuantLinearqrDecomposition_getR","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_getR<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_getQ","name":"qrDecomposition_getQ","type":"CalExperimentalQuantLinearqrDecomposition_getQ","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_getQ<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_getH","name":"qrDecomposition_getH","type":"CalExperimentalQuantLinearqrDecomposition_getH","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_getH<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_getClass","name":"qrDecomposition_getClass","type":"CalExperimentalQuantLinearqrDecomposition_getClass","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_equals","name":"qrDecomposition_equals","type":"CalExperimentalQuantLinearqrDecomposition_equals","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jqrDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.qrDecomposition_new","name":"qrDecomposition_new","type":"CalExperimentalQuantLinearqrDecomposition_new","ui":"<b>Cal.Experimental.Quant.Linear.qrDecomposition_new<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_wait_Long_Int","name":"maths_wait_Long_Int","type":"CalExperimentalQuantLinearmaths_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.maths_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaths","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_wait_Long","name":"maths_wait_Long","type":"CalExperimentalQuantLinearmaths_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.maths_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_wait","name":"maths_wait","type":"CalExperimentalQuantLinearmaths_wait","ui":"<b>Cal.Experimental.Quant.Linear.maths_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_toString","name":"maths_toString","type":"CalExperimentalQuantLinearmaths_toString","ui":"<b>Cal.Experimental.Quant.Linear.maths_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_notifyAll","name":"maths_notifyAll","type":"CalExperimentalQuantLinearmaths_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.maths_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_notify","name":"maths_notify","type":"CalExperimentalQuantLinearmaths_notify","ui":"<b>Cal.Experimental.Quant.Linear.maths_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_hypot","name":"maths_hypot","type":"CalExperimentalQuantLinearmaths_hypot","ui":"<b>Cal.Experimental.Quant.Linear.maths_hypot<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_hashCode","name":"maths_hashCode","type":"CalExperimentalQuantLinearmaths_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.maths_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_getClass","name":"maths_getClass","type":"CalExperimentalQuantLinearmaths_getClass","ui":"<b>Cal.Experimental.Quant.Linear.maths_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_equals","name":"maths_equals","type":"CalExperimentalQuantLinearmaths_equals","ui":"<b>Cal.Experimental.Quant.Linear.maths_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMaths","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.maths_new","name":"maths_new","type":"CalExperimentalQuantLinearmaths_new","ui":"<b>Cal.Experimental.Quant.Linear.maths_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_wait_Long_Int","name":"choleskyDecomposition_wait_Long_Int","type":"CalExperimentalQuantLinearcholeskyDecomposition_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_wait_Long","name":"choleskyDecomposition_wait_Long","type":"CalExperimentalQuantLinearcholeskyDecomposition_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_wait","name":"choleskyDecomposition_wait","type":"CalExperimentalQuantLinearcholeskyDecomposition_wait","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_toString","name":"choleskyDecomposition_toString","type":"CalExperimentalQuantLinearcholeskyDecomposition_toString","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_solve","name":"choleskyDecomposition_solve","type":"CalExperimentalQuantLinearcholeskyDecomposition_solve","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_solve<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_notifyAll","name":"choleskyDecomposition_notifyAll","type":"CalExperimentalQuantLinearcholeskyDecomposition_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_notify","name":"choleskyDecomposition_notify","type":"CalExperimentalQuantLinearcholeskyDecomposition_notify","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_isSPD","name":"choleskyDecomposition_isSPD","type":"CalExperimentalQuantLinearcholeskyDecomposition_isSPD","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_isSPD<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_hashCode","name":"choleskyDecomposition_hashCode","type":"CalExperimentalQuantLinearcholeskyDecomposition_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_getL","name":"choleskyDecomposition_getL","type":"CalExperimentalQuantLinearcholeskyDecomposition_getL","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_getL<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_getClass","name":"choleskyDecomposition_getClass","type":"CalExperimentalQuantLinearcholeskyDecomposition_getClass","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_equals","name":"choleskyDecomposition_equals","type":"CalExperimentalQuantLinearcholeskyDecomposition_equals","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jCholeskyDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.choleskyDecomposition_new","name":"choleskyDecomposition_new","type":"CalExperimentalQuantLinearcholeskyDecomposition_new","ui":"<b>Cal.Experimental.Quant.Linear.choleskyDecomposition_new<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_wait_Long_Int","name":"eigenvalueDecomposition_wait_Long_Int","type":"CalExperimentalQuantLineareigenvalueDecomposition_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_wait_Long","name":"eigenvalueDecomposition_wait_Long","type":"CalExperimentalQuantLineareigenvalueDecomposition_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_wait","name":"eigenvalueDecomposition_wait","type":"CalExperimentalQuantLineareigenvalueDecomposition_wait","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_toString","name":"eigenvalueDecomposition_toString","type":"CalExperimentalQuantLineareigenvalueDecomposition_toString","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_notifyAll","name":"eigenvalueDecomposition_notifyAll","type":"CalExperimentalQuantLineareigenvalueDecomposition_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_notify","name":"eigenvalueDecomposition_notify","type":"CalExperimentalQuantLineareigenvalueDecomposition_notify","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_hashCode","name":"eigenvalueDecomposition_hashCode","type":"CalExperimentalQuantLineareigenvalueDecomposition_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getV","name":"eigenvalueDecomposition_getV","type":"CalExperimentalQuantLineareigenvalueDecomposition_getV","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getV<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getRealEigenvalues","name":"eigenvalueDecomposition_getRealEigenvalues","type":"CalExperimentalQuantLineareigenvalueDecomposition_getRealEigenvalues","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getRealEigenvalues<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getImagEigenvalues","name":"eigenvalueDecomposition_getImagEigenvalues","type":"CalExperimentalQuantLineareigenvalueDecomposition_getImagEigenvalues","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getImagEigenvalues<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getD","name":"eigenvalueDecomposition_getD","type":"CalExperimentalQuantLineareigenvalueDecomposition_getD","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getD<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getClass","name":"eigenvalueDecomposition_getClass","type":"CalExperimentalQuantLineareigenvalueDecomposition_getClass","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_equals","name":"eigenvalueDecomposition_equals","type":"CalExperimentalQuantLineareigenvalueDecomposition_equals","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jEigenvalueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.eigenvalueDecomposition_new","name":"eigenvalueDecomposition_new","type":"CalExperimentalQuantLineareigenvalueDecomposition_new","ui":"<b>Cal.Experimental.Quant.Linear.eigenvalueDecomposition_new<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_wait_Long_Int","name":"matrix_wait_Long_Int","type":"CalExperimentalQuantLinearmatrix_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_wait_Long","name":"matrix_wait_Long","type":"CalExperimentalQuantLinearmatrix_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.matrix_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_wait","name":"matrix_wait","type":"CalExperimentalQuantLinearmatrix_wait","ui":"<b>Cal.Experimental.Quant.Linear.matrix_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_uminus","name":"matrix_uminus","type":"CalExperimentalQuantLinearmatrix_uminus","ui":"<b>Cal.Experimental.Quant.Linear.matrix_uminus<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_transpose","name":"matrix_transpose","type":"CalExperimentalQuantLinearmatrix_transpose","ui":"<b>Cal.Experimental.Quant.Linear.matrix_transpose<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_trace","name":"matrix_trace","type":"CalExperimentalQuantLinearmatrix_trace","ui":"<b>Cal.Experimental.Quant.Linear.matrix_trace<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_toString","name":"matrix_toString","type":"CalExperimentalQuantLinearmatrix_toString","ui":"<b>Cal.Experimental.Quant.Linear.matrix_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_timesEquals","name":"matrix_timesEquals","type":"CalExperimentalQuantLinearmatrix_timesEquals","ui":"<b>Cal.Experimental.Quant.Linear.matrix_timesEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_times_JMatrix","name":"matrix_times_JMatrix","type":"CalExperimentalQuantLinearmatrix_times_JMatrix","ui":"<b>Cal.Experimental.Quant.Linear.matrix_times_JMatrix<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_times_Double","name":"matrix_times_Double","type":"CalExperimentalQuantLinearmatrix_times_Double","ui":"<b>Cal.Experimental.Quant.Linear.matrix_times_Double<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_svd","name":"matrix_svd","type":"CalExperimentalQuantLinearmatrix_svd","ui":"<b>Cal.Experimental.Quant.Linear.matrix_svd<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_solveTranspose","name":"matrix_solveTranspose","type":"CalExperimentalQuantLinearmatrix_solveTranspose","ui":"<b>Cal.Experimental.Quant.Linear.matrix_solveTranspose<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_solve","name":"matrix_solve","type":"CalExperimentalQuantLinearmatrix_solve","ui":"<b>Cal.Experimental.Quant.Linear.matrix_solve<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_setMatrix_Int_Int_Int_Int_JMatrix","name":"matrix_setMatrix_Int_Int_Int_Int_JMatrix","type":"CalExperimentalQuantLinearmatrix_setMatrix_Int_Int_Int_Int_JMatrix","ui":"<b>Cal.Experimental.Quant.Linear.matrix_setMatrix_Int_Int_Int_Int_JMatrix<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_setMatrix_JIntArray_Int_Int_JMatrix","name":"matrix_setMatrix_JIntArray_Int_Int_JMatrix","type":"CalExperimentalQuantLinearmatrix_setMatrix_JIntArray_Int_Int_JMatrix","ui":"<b>Cal.Experimental.Quant.Linear.matrix_setMatrix_JIntArray_Int_Int_JMatrix<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_setMatrix_Int_Int_JIntArray_JMatrix","name":"matrix_setMatrix_Int_Int_JIntArray_JMatrix","type":"CalExperimentalQuantLinearmatrix_setMatrix_Int_Int_JIntArray_JMatrix","ui":"<b>Cal.Experimental.Quant.Linear.matrix_setMatrix_Int_Int_JIntArray_JMatrix<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_setMatrix_JIntArray_JIntArray_JMatrix","name":"matrix_setMatrix_JIntArray_JIntArray_JMatrix","type":"CalExperimentalQuantLinearmatrix_setMatrix_JIntArray_JIntArray_JMatrix","ui":"<b>Cal.Experimental.Quant.Linear.matrix_setMatrix_JIntArray_JIntArray_JMatrix<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_set","name":"matrix_set","type":"CalExperimentalQuantLinearmatrix_set","ui":"<b>Cal.Experimental.Quant.Linear.matrix_set<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_read","name":"matrix_read","type":"CalExperimentalQuantLinearmatrix_read","ui":"<b>Cal.Experimental.Quant.Linear.matrix_read<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_rank","name":"matrix_rank","type":"CalExperimentalQuantLinearmatrix_rank","ui":"<b>Cal.Experimental.Quant.Linear.matrix_rank<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_random","name":"matrix_random","type":"CalExperimentalQuantLinearmatrix_random","ui":"<b>Cal.Experimental.Quant.Linear.matrix_random<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_qr","name":"matrix_qr","type":"CalExperimentalQuantLinearmatrix_qr","ui":"<b>Cal.Experimental.Quant.Linear.matrix_qr<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_print_JPrintWriter_JNumberFormat_Int","name":"matrix_print_JPrintWriter_JNumberFormat_Int","type":"CalExperimentalQuantLinearmatrix_print_JPrintWriter_JNumberFormat_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_print_JPrintWriter_JNumberFormat_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_print_JPrintWriter_Int_Int","name":"matrix_print_JPrintWriter_Int_Int","type":"CalExperimentalQuantLinearmatrix_print_JPrintWriter_Int_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_print_JPrintWriter_Int_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_print_JNumberFormat_Int","name":"matrix_print_JNumberFormat_Int","type":"CalExperimentalQuantLinearmatrix_print_JNumberFormat_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_print_JNumberFormat_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_print_Int_Int","name":"matrix_print_Int_Int","type":"CalExperimentalQuantLinearmatrix_print_Int_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_print_Int_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_plusEquals","name":"matrix_plusEquals","type":"CalExperimentalQuantLinearmatrix_plusEquals","ui":"<b>Cal.Experimental.Quant.Linear.matrix_plusEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_plus","name":"matrix_plus","type":"CalExperimentalQuantLinearmatrix_plus","ui":"<b>Cal.Experimental.Quant.Linear.matrix_plus<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_notifyAll","name":"matrix_notifyAll","type":"CalExperimentalQuantLinearmatrix_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.matrix_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_notify","name":"matrix_notify","type":"CalExperimentalQuantLinearmatrix_notify","ui":"<b>Cal.Experimental.Quant.Linear.matrix_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_normInf","name":"matrix_normInf","type":"CalExperimentalQuantLinearmatrix_normInf","ui":"<b>Cal.Experimental.Quant.Linear.matrix_normInf<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_normF","name":"matrix_normF","type":"CalExperimentalQuantLinearmatrix_normF","ui":"<b>Cal.Experimental.Quant.Linear.matrix_normF<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_norm2","name":"matrix_norm2","type":"CalExperimentalQuantLinearmatrix_norm2","ui":"<b>Cal.Experimental.Quant.Linear.matrix_norm2<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_norm1","name":"matrix_norm1","type":"CalExperimentalQuantLinearmatrix_norm1","ui":"<b>Cal.Experimental.Quant.Linear.matrix_norm1<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_minusEquals","name":"matrix_minusEquals","type":"CalExperimentalQuantLinearmatrix_minusEquals","ui":"<b>Cal.Experimental.Quant.Linear.matrix_minusEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_minus","name":"matrix_minus","type":"CalExperimentalQuantLinearmatrix_minus","ui":"<b>Cal.Experimental.Quant.Linear.matrix_minus<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_lu","name":"matrix_lu","type":"CalExperimentalQuantLinearmatrix_lu","ui":"<b>Cal.Experimental.Quant.Linear.matrix_lu<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_inverse","name":"matrix_inverse","type":"CalExperimentalQuantLinearmatrix_inverse","ui":"<b>Cal.Experimental.Quant.Linear.matrix_inverse<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_identity","name":"matrix_identity","type":"CalExperimentalQuantLinearmatrix_identity","ui":"<b>Cal.Experimental.Quant.Linear.matrix_identity<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_hashCode","name":"matrix_hashCode","type":"CalExperimentalQuantLinearmatrix_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.matrix_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getRowPackedCopy","name":"matrix_getRowPackedCopy","type":"CalExperimentalQuantLinearmatrix_getRowPackedCopy","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getRowPackedCopy<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getRowDimension","name":"matrix_getRowDimension","type":"CalExperimentalQuantLinearmatrix_getRowDimension","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getRowDimension<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getMatrix_Int_Int_Int_Int","name":"matrix_getMatrix_Int_Int_Int_Int","type":"CalExperimentalQuantLinearmatrix_getMatrix_Int_Int_Int_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getMatrix_Int_Int_Int_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getMatrix_JIntArray_Int_Int","name":"matrix_getMatrix_JIntArray_Int_Int","type":"CalExperimentalQuantLinearmatrix_getMatrix_JIntArray_Int_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getMatrix_JIntArray_Int_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getMatrix_Int_Int_JIntArray","name":"matrix_getMatrix_Int_Int_JIntArray","type":"CalExperimentalQuantLinearmatrix_getMatrix_Int_Int_JIntArray","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getMatrix_Int_Int_JIntArray<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getMatrix_JIntArray_JIntArray","name":"matrix_getMatrix_JIntArray_JIntArray","type":"CalExperimentalQuantLinearmatrix_getMatrix_JIntArray_JIntArray","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getMatrix_JIntArray_JIntArray<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getColumnPackedCopy","name":"matrix_getColumnPackedCopy","type":"CalExperimentalQuantLinearmatrix_getColumnPackedCopy","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getColumnPackedCopy<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getColumnDimension","name":"matrix_getColumnDimension","type":"CalExperimentalQuantLinearmatrix_getColumnDimension","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getColumnDimension<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getClass","name":"matrix_getClass","type":"CalExperimentalQuantLinearmatrix_getClass","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getArrayCopy","name":"matrix_getArrayCopy","type":"CalExperimentalQuantLinearmatrix_getArrayCopy","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getArrayCopy<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_getArray","name":"matrix_getArray","type":"CalExperimentalQuantLinearmatrix_getArray","ui":"<b>Cal.Experimental.Quant.Linear.matrix_getArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_get","name":"matrix_get","type":"CalExperimentalQuantLinearmatrix_get","ui":"<b>Cal.Experimental.Quant.Linear.matrix_get<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_equals","name":"matrix_equals","type":"CalExperimentalQuantLinearmatrix_equals","ui":"<b>Cal.Experimental.Quant.Linear.matrix_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_eig","name":"matrix_eig","type":"CalExperimentalQuantLinearmatrix_eig","ui":"<b>Cal.Experimental.Quant.Linear.matrix_eig<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_det","name":"matrix_det","type":"CalExperimentalQuantLinearmatrix_det","ui":"<b>Cal.Experimental.Quant.Linear.matrix_det<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_copy","name":"matrix_copy","type":"CalExperimentalQuantLinearmatrix_copy","ui":"<b>Cal.Experimental.Quant.Linear.matrix_copy<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_constructWithCopy","name":"matrix_constructWithCopy","type":"CalExperimentalQuantLinearmatrix_constructWithCopy","ui":"<b>Cal.Experimental.Quant.Linear.matrix_constructWithCopy<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_cond","name":"matrix_cond","type":"CalExperimentalQuantLinearmatrix_cond","ui":"<b>Cal.Experimental.Quant.Linear.matrix_cond<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_clone","name":"matrix_clone","type":"CalExperimentalQuantLinearmatrix_clone","ui":"<b>Cal.Experimental.Quant.Linear.matrix_clone<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_chol","name":"matrix_chol","type":"CalExperimentalQuantLinearmatrix_chol","ui":"<b>Cal.Experimental.Quant.Linear.matrix_chol<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_arrayTimesEquals","name":"matrix_arrayTimesEquals","type":"CalExperimentalQuantLinearmatrix_arrayTimesEquals","ui":"<b>Cal.Experimental.Quant.Linear.matrix_arrayTimesEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_arrayTimes","name":"matrix_arrayTimes","type":"CalExperimentalQuantLinearmatrix_arrayTimes","ui":"<b>Cal.Experimental.Quant.Linear.matrix_arrayTimes<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_arrayRightDivideEquals","name":"matrix_arrayRightDivideEquals","type":"CalExperimentalQuantLinearmatrix_arrayRightDivideEquals","ui":"<b>Cal.Experimental.Quant.Linear.matrix_arrayRightDivideEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_arrayRightDivide","name":"matrix_arrayRightDivide","type":"CalExperimentalQuantLinearmatrix_arrayRightDivide","ui":"<b>Cal.Experimental.Quant.Linear.matrix_arrayRightDivide<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_arrayLeftDivideEquals","name":"matrix_arrayLeftDivideEquals","type":"CalExperimentalQuantLinearmatrix_arrayLeftDivideEquals","ui":"<b>Cal.Experimental.Quant.Linear.matrix_arrayLeftDivideEquals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMatrix","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_arrayLeftDivide","name":"matrix_arrayLeftDivide","type":"CalExperimentalQuantLinearmatrix_arrayLeftDivide","ui":"<b>Cal.Experimental.Quant.Linear.matrix_arrayLeftDivide<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_new_JDoubleArray2_Int_Int","name":"matrix_new_JDoubleArray2_Int_Int","type":"CalExperimentalQuantLinearmatrix_new_JDoubleArray2_Int_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_new_JDoubleArray2_Int_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_new_Int_Int_Double","name":"matrix_new_Int_Int_Double","type":"CalExperimentalQuantLinearmatrix_new_Int_Int_Double","ui":"<b>Cal.Experimental.Quant.Linear.matrix_new_Int_Int_Double<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_new_JDoubleArray_Int","name":"matrix_new_JDoubleArray_Int","type":"CalExperimentalQuantLinearmatrix_new_JDoubleArray_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_new_JDoubleArray_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_new_Int_Int","name":"matrix_new_Int_Int","type":"CalExperimentalQuantLinearmatrix_new_Int_Int","ui":"<b>Cal.Experimental.Quant.Linear.matrix_new_Int_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.matrix_new_JDoubleArray2","name":"matrix_new_JDoubleArray2","type":"CalExperimentalQuantLinearmatrix_new_JDoubleArray2","ui":"<b>Cal.Experimental.Quant.Linear.matrix_new_JDoubleArray2<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_wait_Long_Int","name":"magicSquareExample_wait_Long_Int","type":"CalExperimentalQuantLinearmagicSquareExample_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMagicSquareExample","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_wait_Long","name":"magicSquareExample_wait_Long","type":"CalExperimentalQuantLinearmagicSquareExample_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_wait","name":"magicSquareExample_wait","type":"CalExperimentalQuantLinearmagicSquareExample_wait","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_toString","name":"magicSquareExample_toString","type":"CalExperimentalQuantLinearmagicSquareExample_toString","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_notifyAll","name":"magicSquareExample_notifyAll","type":"CalExperimentalQuantLinearmagicSquareExample_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_notify","name":"magicSquareExample_notify","type":"CalExperimentalQuantLinearmagicSquareExample_notify","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_main","name":"magicSquareExample_main","type":"CalExperimentalQuantLinearmagicSquareExample_main","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_main<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_magic","name":"magicSquareExample_magic","type":"CalExperimentalQuantLinearmagicSquareExample_magic","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_magic<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_hashCode","name":"magicSquareExample_hashCode","type":"CalExperimentalQuantLinearmagicSquareExample_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_getClass","name":"magicSquareExample_getClass","type":"CalExperimentalQuantLinearmagicSquareExample_getClass","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_fixedWidthIntegertoString","name":"magicSquareExample_fixedWidthIntegertoString","type":"CalExperimentalQuantLinearmagicSquareExample_fixedWidthIntegertoString","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_fixedWidthIntegertoString<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_fixedWidthDoubletoString","name":"magicSquareExample_fixedWidthDoubletoString","type":"CalExperimentalQuantLinearmagicSquareExample_fixedWidthDoubletoString","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_fixedWidthDoubletoString<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_equals","name":"magicSquareExample_equals","type":"CalExperimentalQuantLinearmagicSquareExample_equals","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMagicSquareExample","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.magicSquareExample_new","name":"magicSquareExample_new","type":"CalExperimentalQuantLinearmagicSquareExample_new","ui":"<b>Cal.Experimental.Quant.Linear.magicSquareExample_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_wait_Long_Int","name":"testMatrix_wait_Long_Int","type":"CalExperimentalQuantLineartestMatrix_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jTestMatrix","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_wait_Long","name":"testMatrix_wait_Long","type":"CalExperimentalQuantLineartestMatrix_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_wait","name":"testMatrix_wait","type":"CalExperimentalQuantLineartestMatrix_wait","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_toString","name":"testMatrix_toString","type":"CalExperimentalQuantLineartestMatrix_toString","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_notifyAll","name":"testMatrix_notifyAll","type":"CalExperimentalQuantLineartestMatrix_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_notify","name":"testMatrix_notify","type":"CalExperimentalQuantLineartestMatrix_notify","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_main","name":"testMatrix_main","type":"CalExperimentalQuantLineartestMatrix_main","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_main<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_hashCode","name":"testMatrix_hashCode","type":"CalExperimentalQuantLineartestMatrix_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_getClass","name":"testMatrix_getClass","type":"CalExperimentalQuantLineartestMatrix_getClass","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_equals","name":"testMatrix_equals","type":"CalExperimentalQuantLineartestMatrix_equals","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jTestMatrix","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.testMatrix_new","name":"testMatrix_new","type":"CalExperimentalQuantLineartestMatrix_new","ui":"<b>Cal.Experimental.Quant.Linear.testMatrix_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_wait_Long_Int","name":"luDecomposition_wait_Long_Int","type":"CalExperimentalQuantLinearluDecomposition_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jluDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_wait_Long","name":"luDecomposition_wait_Long","type":"CalExperimentalQuantLinearluDecomposition_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_wait","name":"luDecomposition_wait","type":"CalExperimentalQuantLinearluDecomposition_wait","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_toString","name":"luDecomposition_toString","type":"CalExperimentalQuantLinearluDecomposition_toString","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_solve","name":"luDecomposition_solve","type":"CalExperimentalQuantLinearluDecomposition_solve","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_solve<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_notifyAll","name":"luDecomposition_notifyAll","type":"CalExperimentalQuantLinearluDecomposition_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_notify","name":"luDecomposition_notify","type":"CalExperimentalQuantLinearluDecomposition_notify","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_isNonsingular","name":"luDecomposition_isNonsingular","type":"CalExperimentalQuantLinearluDecomposition_isNonsingular","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_isNonsingular<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_hashCode","name":"luDecomposition_hashCode","type":"CalExperimentalQuantLinearluDecomposition_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_getU","name":"luDecomposition_getU","type":"CalExperimentalQuantLinearluDecomposition_getU","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_getU<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_getPivot","name":"luDecomposition_getPivot","type":"CalExperimentalQuantLinearluDecomposition_getPivot","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_getPivot<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_getL","name":"luDecomposition_getL","type":"CalExperimentalQuantLinearluDecomposition_getL","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_getL<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_getDoublePivot","name":"luDecomposition_getDoublePivot","type":"CalExperimentalQuantLinearluDecomposition_getDoublePivot","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_getDoublePivot<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_getClass","name":"luDecomposition_getClass","type":"CalExperimentalQuantLinearluDecomposition_getClass","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_equals","name":"luDecomposition_equals","type":"CalExperimentalQuantLinearluDecomposition_equals","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_det","name":"luDecomposition_det","type":"CalExperimentalQuantLinearluDecomposition_det","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_det<\/b><br\/>[CALDoc] ","terminals":[{"name":"jluDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.luDecomposition_new","name":"luDecomposition_new","type":"CalExperimentalQuantLinearluDecomposition_new","ui":"<b>Cal.Experimental.Quant.Linear.luDecomposition_new<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_wait_Long_Int","name":"singularValueDecomposition_wait_Long_Int","type":"CalExperimentalQuantLinearsingularValueDecomposition_wait_Long_Int","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jSingularValueDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_wait_Long","name":"singularValueDecomposition_wait_Long","type":"CalExperimentalQuantLinearsingularValueDecomposition_wait_Long","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_wait","name":"singularValueDecomposition_wait","type":"CalExperimentalQuantLinearsingularValueDecomposition_wait","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_toString","name":"singularValueDecomposition_toString","type":"CalExperimentalQuantLinearsingularValueDecomposition_toString","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_rank","name":"singularValueDecomposition_rank","type":"CalExperimentalQuantLinearsingularValueDecomposition_rank","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_rank<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_notifyAll","name":"singularValueDecomposition_notifyAll","type":"CalExperimentalQuantLinearsingularValueDecomposition_notifyAll","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_notify","name":"singularValueDecomposition_notify","type":"CalExperimentalQuantLinearsingularValueDecomposition_notify","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_norm2","name":"singularValueDecomposition_norm2","type":"CalExperimentalQuantLinearsingularValueDecomposition_norm2","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_norm2<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_hashCode","name":"singularValueDecomposition_hashCode","type":"CalExperimentalQuantLinearsingularValueDecomposition_hashCode","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_getV","name":"singularValueDecomposition_getV","type":"CalExperimentalQuantLinearsingularValueDecomposition_getV","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_getV<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_getU","name":"singularValueDecomposition_getU","type":"CalExperimentalQuantLinearsingularValueDecomposition_getU","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_getU<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_getSingularValues","name":"singularValueDecomposition_getSingularValues","type":"CalExperimentalQuantLinearsingularValueDecomposition_getSingularValues","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_getSingularValues<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_getS","name":"singularValueDecomposition_getS","type":"CalExperimentalQuantLinearsingularValueDecomposition_getS","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_getS<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_getClass","name":"singularValueDecomposition_getClass","type":"CalExperimentalQuantLinearsingularValueDecomposition_getClass","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_equals","name":"singularValueDecomposition_equals","type":"CalExperimentalQuantLinearsingularValueDecomposition_equals","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_cond","name":"singularValueDecomposition_cond","type":"CalExperimentalQuantLinearsingularValueDecomposition_cond","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_cond<\/b><br\/>[CALDoc] ","terminals":[{"name":"jSingularValueDecomposition","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.Experimental.Quant.Linear.singularValueDecomposition_new","name":"singularValueDecomposition_new","type":"CalExperimentalQuantLinearsingularValueDecomposition_new","ui":"<b>Cal.Experimental.Quant.Linear.singularValueDecomposition_new<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.Experimental.Quant.Linear"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_wait_Long_Int","name":"calculatorWSService_4CALTrampoline_wait_Long_Int","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_wait_Long","name":"calculatorWSService_4CALTrampoline_wait_Long","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_wait_Long","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_wait","name":"calculatorWSService_4CALTrampoline_wait","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_wait","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_toString","name":"calculatorWSService_4CALTrampoline_toString","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_toString","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_notifyAll","name":"calculatorWSService_4CALTrampoline_notifyAll","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_notifyAll","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_notify","name":"calculatorWSService_4CALTrampoline_notify","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_notify","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_mult","name":"calculatorWSService_4CALTrampoline_mult","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_mult","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_mult<\/b><br\/>[CALDoc] ","terminals":[{"name":"m","input":"text"},{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"n","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_hashCode","name":"calculatorWSService_4CALTrampoline_hashCode","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_hashCode","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_getClass","name":"calculatorWSService_4CALTrampoline_getClass","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_getClass","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_equals","name":"calculatorWSService_4CALTrampoline_equals","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_equals","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_add","name":"calculatorWSService_4CALTrampoline_add","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_add","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_add<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService_4CALTrampoline","input":"text"},{"name":"j","input":"text"},{"name":"i","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_new","name":"calculatorWSService_4CALTrampoline_new","type":"CalWSTrampolinecalculatorWSService_4CALTrampoline_new","ui":"<b>Cal.WS.Trampoline.calculatorWSService_4CALTrampoline_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWS_mult","name":"calculatorWS_mult","type":"CalWSTrampolinecalculatorWS_mult","ui":"<b>Cal.WS.Trampoline.calculatorWS_mult<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWS","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWS_add","name":"calculatorWS_add","type":"CalWSTrampolinecalculatorWS_add","ui":"<b>Cal.WS.Trampoline.calculatorWS_add<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jCalculatorWS","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_wait_Long_Int","name":"mult_wait_Long_Int","type":"CalWSTrampolinemult_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.mult_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_wait_Long","name":"mult_wait_Long","type":"CalWSTrampolinemult_wait_Long","ui":"<b>Cal.WS.Trampoline.mult_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_wait","name":"mult_wait","type":"CalWSTrampolinemult_wait","ui":"<b>Cal.WS.Trampoline.mult_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_toString","name":"mult_toString","type":"CalWSTrampolinemult_toString","ui":"<b>Cal.WS.Trampoline.mult_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_setN","name":"mult_setN","type":"CalWSTrampolinemult_setN","ui":"<b>Cal.WS.Trampoline.mult_setN<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_setM","name":"mult_setM","type":"CalWSTrampolinemult_setM","ui":"<b>Cal.WS.Trampoline.mult_setM<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_notifyAll","name":"mult_notifyAll","type":"CalWSTrampolinemult_notifyAll","ui":"<b>Cal.WS.Trampoline.mult_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_notify","name":"mult_notify","type":"CalWSTrampolinemult_notify","ui":"<b>Cal.WS.Trampoline.mult_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_hashCode","name":"mult_hashCode","type":"CalWSTrampolinemult_hashCode","ui":"<b>Cal.WS.Trampoline.mult_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_getN","name":"mult_getN","type":"CalWSTrampolinemult_getN","ui":"<b>Cal.WS.Trampoline.mult_getN<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_getM","name":"mult_getM","type":"CalWSTrampolinemult_getM","ui":"<b>Cal.WS.Trampoline.mult_getM<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_getClass","name":"mult_getClass","type":"CalWSTrampolinemult_getClass","ui":"<b>Cal.WS.Trampoline.mult_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_equals","name":"mult_equals","type":"CalWSTrampolinemult_equals","ui":"<b>Cal.WS.Trampoline.mult_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMult","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.mult_new","name":"mult_new","type":"CalWSTrampolinemult_new","ui":"<b>Cal.WS.Trampoline.mult_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_wait_Long_Int","name":"arithmeticException_Exception_wait_Long_Int","type":"CalWSTrampolinearithmeticException_Exception_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException_Exception","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_wait_Long","name":"arithmeticException_Exception_wait_Long","type":"CalWSTrampolinearithmeticException_Exception_wait_Long","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_wait","name":"arithmeticException_Exception_wait","type":"CalWSTrampolinearithmeticException_Exception_wait","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_toString","name":"arithmeticException_Exception_toString","type":"CalWSTrampolinearithmeticException_Exception_toString","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_setStackTrace","name":"arithmeticException_Exception_setStackTrace","type":"CalWSTrampolinearithmeticException_Exception_setStackTrace","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_setStackTrace<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_printStackTrace_JPrintWriter","name":"arithmeticException_Exception_printStackTrace_JPrintWriter","type":"CalWSTrampolinearithmeticException_Exception_printStackTrace_JPrintWriter","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_printStackTrace_JPrintWriter<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_printStackTrace_JPrintStream","name":"arithmeticException_Exception_printStackTrace_JPrintStream","type":"CalWSTrampolinearithmeticException_Exception_printStackTrace_JPrintStream","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_printStackTrace_JPrintStream<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_printStackTrace","name":"arithmeticException_Exception_printStackTrace","type":"CalWSTrampolinearithmeticException_Exception_printStackTrace","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_printStackTrace<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_notifyAll","name":"arithmeticException_Exception_notifyAll","type":"CalWSTrampolinearithmeticException_Exception_notifyAll","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_notify","name":"arithmeticException_Exception_notify","type":"CalWSTrampolinearithmeticException_Exception_notify","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_initCause","name":"arithmeticException_Exception_initCause","type":"CalWSTrampolinearithmeticException_Exception_initCause","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_initCause<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_hashCode","name":"arithmeticException_Exception_hashCode","type":"CalWSTrampolinearithmeticException_Exception_hashCode","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_getStackTrace","name":"arithmeticException_Exception_getStackTrace","type":"CalWSTrampolinearithmeticException_Exception_getStackTrace","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_getStackTrace<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_getMessage","name":"arithmeticException_Exception_getMessage","type":"CalWSTrampolinearithmeticException_Exception_getMessage","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_getMessage<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_getLocalizedMessage","name":"arithmeticException_Exception_getLocalizedMessage","type":"CalWSTrampolinearithmeticException_Exception_getLocalizedMessage","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_getLocalizedMessage<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_getFaultInfo","name":"arithmeticException_Exception_getFaultInfo","type":"CalWSTrampolinearithmeticException_Exception_getFaultInfo","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_getFaultInfo<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_getClass","name":"arithmeticException_Exception_getClass","type":"CalWSTrampolinearithmeticException_Exception_getClass","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_getCause","name":"arithmeticException_Exception_getCause","type":"CalWSTrampolinearithmeticException_Exception_getCause","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_getCause<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_fillInStackTrace","name":"arithmeticException_Exception_fillInStackTrace","type":"CalWSTrampolinearithmeticException_Exception_fillInStackTrace","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_fillInStackTrace<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_equals","name":"arithmeticException_Exception_equals","type":"CalWSTrampolinearithmeticException_Exception_equals","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException_Exception","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_new_String_JArithmeticException_JThrowable","name":"arithmeticException_Exception_new_String_JArithmeticException_JThrowable","type":"CalWSTrampolinearithmeticException_Exception_new_String_JArithmeticException_JThrowable","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_new_String_JArithmeticException_JThrowable<\/b><br\/>[CALDoc] ","terminals":[{"name":"cause","input":"text"},{"name":"faultInfo","input":"text"},{"name":"message","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_Exception_new_String_JArithmeticException","name":"arithmeticException_Exception_new_String_JArithmeticException","type":"CalWSTrampolinearithmeticException_Exception_new_String_JArithmeticException","ui":"<b>Cal.WS.Trampoline.arithmeticException_Exception_new_String_JArithmeticException<\/b><br\/>[CALDoc] ","terminals":[{"name":"message","input":"text"},{"name":"faultInfo","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_wait_Long_Int","name":"addResponse_wait_Long_Int","type":"CalWSTrampolineaddResponse_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.addResponse_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jAddResponse","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_wait_Long","name":"addResponse_wait_Long","type":"CalWSTrampolineaddResponse_wait_Long","ui":"<b>Cal.WS.Trampoline.addResponse_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_wait","name":"addResponse_wait","type":"CalWSTrampolineaddResponse_wait","ui":"<b>Cal.WS.Trampoline.addResponse_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_toString","name":"addResponse_toString","type":"CalWSTrampolineaddResponse_toString","ui":"<b>Cal.WS.Trampoline.addResponse_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_setReturn","name":"addResponse_setReturn","type":"CalWSTrampolineaddResponse_setReturn","ui":"<b>Cal.WS.Trampoline.addResponse_setReturn<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_notifyAll","name":"addResponse_notifyAll","type":"CalWSTrampolineaddResponse_notifyAll","ui":"<b>Cal.WS.Trampoline.addResponse_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_notify","name":"addResponse_notify","type":"CalWSTrampolineaddResponse_notify","ui":"<b>Cal.WS.Trampoline.addResponse_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_hashCode","name":"addResponse_hashCode","type":"CalWSTrampolineaddResponse_hashCode","ui":"<b>Cal.WS.Trampoline.addResponse_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_getReturn","name":"addResponse_getReturn","type":"CalWSTrampolineaddResponse_getReturn","ui":"<b>Cal.WS.Trampoline.addResponse_getReturn<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_getClass","name":"addResponse_getClass","type":"CalWSTrampolineaddResponse_getClass","ui":"<b>Cal.WS.Trampoline.addResponse_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_equals","name":"addResponse_equals","type":"CalWSTrampolineaddResponse_equals","ui":"<b>Cal.WS.Trampoline.addResponse_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAddResponse","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.addResponse_new","name":"addResponse_new","type":"CalWSTrampolineaddResponse_new","ui":"<b>Cal.WS.Trampoline.addResponse_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_wait_Long_Int","name":"add_wait_Long_Int","type":"CalWSTrampolineadd_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.add_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_wait_Long","name":"add_wait_Long","type":"CalWSTrampolineadd_wait_Long","ui":"<b>Cal.WS.Trampoline.add_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_wait","name":"add_wait","type":"CalWSTrampolineadd_wait","ui":"<b>Cal.WS.Trampoline.add_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_toString","name":"add_toString","type":"CalWSTrampolineadd_toString","ui":"<b>Cal.WS.Trampoline.add_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_setJ","name":"add_setJ","type":"CalWSTrampolineadd_setJ","ui":"<b>Cal.WS.Trampoline.add_setJ<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_setI","name":"add_setI","type":"CalWSTrampolineadd_setI","ui":"<b>Cal.WS.Trampoline.add_setI<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_notifyAll","name":"add_notifyAll","type":"CalWSTrampolineadd_notifyAll","ui":"<b>Cal.WS.Trampoline.add_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_notify","name":"add_notify","type":"CalWSTrampolineadd_notify","ui":"<b>Cal.WS.Trampoline.add_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_hashCode","name":"add_hashCode","type":"CalWSTrampolineadd_hashCode","ui":"<b>Cal.WS.Trampoline.add_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_getJ","name":"add_getJ","type":"CalWSTrampolineadd_getJ","ui":"<b>Cal.WS.Trampoline.add_getJ<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_getI","name":"add_getI","type":"CalWSTrampolineadd_getI","ui":"<b>Cal.WS.Trampoline.add_getI<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_getClass","name":"add_getClass","type":"CalWSTrampolineadd_getClass","ui":"<b>Cal.WS.Trampoline.add_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_equals","name":"add_equals","type":"CalWSTrampolineadd_equals","ui":"<b>Cal.WS.Trampoline.add_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jAdd","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.add_new","name":"add_new","type":"CalWSTrampolineadd_new","ui":"<b>Cal.WS.Trampoline.add_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_wait_Long_Int","name":"calculatorWSService_wait_Long_Int","type":"CalWSTrampolinecalculatorWSService_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.calculatorWSService_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_wait_Long","name":"calculatorWSService_wait_Long","type":"CalWSTrampolinecalculatorWSService_wait_Long","ui":"<b>Cal.WS.Trampoline.calculatorWSService_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_wait","name":"calculatorWSService_wait","type":"CalWSTrampolinecalculatorWSService_wait","ui":"<b>Cal.WS.Trampoline.calculatorWSService_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_toString","name":"calculatorWSService_toString","type":"CalWSTrampolinecalculatorWSService_toString","ui":"<b>Cal.WS.Trampoline.calculatorWSService_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_setHandlerResolver","name":"calculatorWSService_setHandlerResolver","type":"CalWSTrampolinecalculatorWSService_setHandlerResolver","ui":"<b>Cal.WS.Trampoline.calculatorWSService_setHandlerResolver<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"handlerResolver","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_setExecutor","name":"calculatorWSService_setExecutor","type":"CalWSTrampolinecalculatorWSService_setExecutor","ui":"<b>Cal.WS.Trampoline.calculatorWSService_setExecutor<\/b><br\/>[CALDoc] ","terminals":[{"name":"executor","input":"text"},{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_notifyAll","name":"calculatorWSService_notifyAll","type":"CalWSTrampolinecalculatorWSService_notifyAll","ui":"<b>Cal.WS.Trampoline.calculatorWSService_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_notify","name":"calculatorWSService_notify","type":"CalWSTrampolinecalculatorWSService_notify","ui":"<b>Cal.WS.Trampoline.calculatorWSService_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_hashCode","name":"calculatorWSService_hashCode","type":"CalWSTrampolinecalculatorWSService_hashCode","ui":"<b>Cal.WS.Trampoline.calculatorWSService_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getWSDLDocumentLocation","name":"calculatorWSService_getWSDLDocumentLocation","type":"CalWSTrampolinecalculatorWSService_getWSDLDocumentLocation","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getWSDLDocumentLocation<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getServiceName","name":"calculatorWSService_getServiceName","type":"CalWSTrampolinecalculatorWSService_getServiceName","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getServiceName<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getPorts","name":"calculatorWSService_getPorts","type":"CalWSTrampolinecalculatorWSService_getPorts","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getPorts<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getHandlerResolver","name":"calculatorWSService_getHandlerResolver","type":"CalWSTrampolinecalculatorWSService_getHandlerResolver","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getHandlerResolver<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getExecutor","name":"calculatorWSService_getExecutor","type":"CalWSTrampolinecalculatorWSService_getExecutor","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getExecutor<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getClass","name":"calculatorWSService_getClass","type":"CalWSTrampolinecalculatorWSService_getClass","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getCalculatorWSPort_JWebServiceFeatureArray","name":"calculatorWSService_getCalculatorWSPort_JWebServiceFeatureArray","type":"CalWSTrampolinecalculatorWSService_getCalculatorWSPort_JWebServiceFeatureArray","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getCalculatorWSPort_JWebServiceFeatureArray<\/b><br\/>[CALDoc] ","terminals":[{"name":"features","input":"text"},{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_getCalculatorWSPort","name":"calculatorWSService_getCalculatorWSPort","type":"CalWSTrampolinecalculatorWSService_getCalculatorWSPort","ui":"<b>Cal.WS.Trampoline.calculatorWSService_getCalculatorWSPort<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_equals","name":"calculatorWSService_equals","type":"CalWSTrampolinecalculatorWSService_equals","ui":"<b>Cal.WS.Trampoline.calculatorWSService_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_create_JURL_JQName","name":"calculatorWSService_create_JURL_JQName","type":"CalWSTrampolinecalculatorWSService_create_JURL_JQName","ui":"<b>Cal.WS.Trampoline.calculatorWSService_create_JURL_JQName<\/b><br\/>[CALDoc] ","terminals":[{"name":"serviceName","input":"text"},{"name":"wsdlDocumentLocation","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_create_JQName","name":"calculatorWSService_create_JQName","type":"CalWSTrampolinecalculatorWSService_create_JQName","ui":"<b>Cal.WS.Trampoline.calculatorWSService_create_JQName<\/b><br\/>[CALDoc] ","terminals":[{"name":"serviceName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_addPort","name":"calculatorWSService_addPort","type":"CalWSTrampolinecalculatorWSService_addPort","ui":"<b>Cal.WS.Trampoline.calculatorWSService_addPort<\/b><br\/>[CALDoc] ","terminals":[{"name":"jCalculatorWSService","input":"text"},{"name":"endpointAddress","input":"text"},{"name":"bindingId","input":"text"},{"name":"portName","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_new_JURL_JQName","name":"calculatorWSService_new_JURL_JQName","type":"CalWSTrampolinecalculatorWSService_new_JURL_JQName","ui":"<b>Cal.WS.Trampoline.calculatorWSService_new_JURL_JQName<\/b><br\/>[CALDoc] ","terminals":[{"name":"serviceName","input":"text"},{"name":"wsdlLocation","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.calculatorWSService_new","name":"calculatorWSService_new","type":"CalWSTrampolinecalculatorWSService_new","ui":"<b>Cal.WS.Trampoline.calculatorWSService_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_wait_Long_Int","name":"multResponse_wait_Long_Int","type":"CalWSTrampolinemultResponse_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.multResponse_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_wait_Long","name":"multResponse_wait_Long","type":"CalWSTrampolinemultResponse_wait_Long","ui":"<b>Cal.WS.Trampoline.multResponse_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_wait","name":"multResponse_wait","type":"CalWSTrampolinemultResponse_wait","ui":"<b>Cal.WS.Trampoline.multResponse_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_toString","name":"multResponse_toString","type":"CalWSTrampolinemultResponse_toString","ui":"<b>Cal.WS.Trampoline.multResponse_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_setReturn","name":"multResponse_setReturn","type":"CalWSTrampolinemultResponse_setReturn","ui":"<b>Cal.WS.Trampoline.multResponse_setReturn<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_notifyAll","name":"multResponse_notifyAll","type":"CalWSTrampolinemultResponse_notifyAll","ui":"<b>Cal.WS.Trampoline.multResponse_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_notify","name":"multResponse_notify","type":"CalWSTrampolinemultResponse_notify","ui":"<b>Cal.WS.Trampoline.multResponse_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_hashCode","name":"multResponse_hashCode","type":"CalWSTrampolinemultResponse_hashCode","ui":"<b>Cal.WS.Trampoline.multResponse_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_getReturn","name":"multResponse_getReturn","type":"CalWSTrampolinemultResponse_getReturn","ui":"<b>Cal.WS.Trampoline.multResponse_getReturn<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_getClass","name":"multResponse_getClass","type":"CalWSTrampolinemultResponse_getClass","ui":"<b>Cal.WS.Trampoline.multResponse_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_equals","name":"multResponse_equals","type":"CalWSTrampolinemultResponse_equals","ui":"<b>Cal.WS.Trampoline.multResponse_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jMultResponse","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.multResponse_new","name":"multResponse_new","type":"CalWSTrampolinemultResponse_new","ui":"<b>Cal.WS.Trampoline.multResponse_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_wait_Long_Int","name":"objectFactory_wait_Long_Int","type":"CalWSTrampolineobjectFactory_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.objectFactory_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":null,"input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_wait_Long","name":"objectFactory_wait_Long","type":"CalWSTrampolineobjectFactory_wait_Long","ui":"<b>Cal.WS.Trampoline.objectFactory_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_wait","name":"objectFactory_wait","type":"CalWSTrampolineobjectFactory_wait","ui":"<b>Cal.WS.Trampoline.objectFactory_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_toString","name":"objectFactory_toString","type":"CalWSTrampolineobjectFactory_toString","ui":"<b>Cal.WS.Trampoline.objectFactory_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_notifyAll","name":"objectFactory_notifyAll","type":"CalWSTrampolineobjectFactory_notifyAll","ui":"<b>Cal.WS.Trampoline.objectFactory_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_notify","name":"objectFactory_notify","type":"CalWSTrampolineobjectFactory_notify","ui":"<b>Cal.WS.Trampoline.objectFactory_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_hashCode","name":"objectFactory_hashCode","type":"CalWSTrampolineobjectFactory_hashCode","ui":"<b>Cal.WS.Trampoline.objectFactory_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_getClass","name":"objectFactory_getClass","type":"CalWSTrampolineobjectFactory_getClass","ui":"<b>Cal.WS.Trampoline.objectFactory_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_equals","name":"objectFactory_equals","type":"CalWSTrampolineobjectFactory_equals","ui":"<b>Cal.WS.Trampoline.objectFactory_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createMultResponse_JMultResponse","name":"objectFactory_createMultResponse_JMultResponse","type":"CalWSTrampolineobjectFactory_createMultResponse_JMultResponse","ui":"<b>Cal.WS.Trampoline.objectFactory_createMultResponse_JMultResponse<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createMultResponse","name":"objectFactory_createMultResponse","type":"CalWSTrampolineobjectFactory_createMultResponse","ui":"<b>Cal.WS.Trampoline.objectFactory_createMultResponse<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createMult_JMult","name":"objectFactory_createMult_JMult","type":"CalWSTrampolineobjectFactory_createMult_JMult","ui":"<b>Cal.WS.Trampoline.objectFactory_createMult_JMult<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createMult","name":"objectFactory_createMult","type":"CalWSTrampolineobjectFactory_createMult","ui":"<b>Cal.WS.Trampoline.objectFactory_createMult<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createArithmeticException_JArithmeticException","name":"objectFactory_createArithmeticException_JArithmeticException","type":"CalWSTrampolineobjectFactory_createArithmeticException_JArithmeticException","ui":"<b>Cal.WS.Trampoline.objectFactory_createArithmeticException_JArithmeticException<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createArithmeticException","name":"objectFactory_createArithmeticException","type":"CalWSTrampolineobjectFactory_createArithmeticException","ui":"<b>Cal.WS.Trampoline.objectFactory_createArithmeticException<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createAddResponse_JAddResponse","name":"objectFactory_createAddResponse_JAddResponse","type":"CalWSTrampolineobjectFactory_createAddResponse_JAddResponse","ui":"<b>Cal.WS.Trampoline.objectFactory_createAddResponse_JAddResponse<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createAddResponse","name":"objectFactory_createAddResponse","type":"CalWSTrampolineobjectFactory_createAddResponse","ui":"<b>Cal.WS.Trampoline.objectFactory_createAddResponse<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createAdd_JAdd","name":"objectFactory_createAdd_JAdd","type":"CalWSTrampolineobjectFactory_createAdd_JAdd","ui":"<b>Cal.WS.Trampoline.objectFactory_createAdd_JAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"value","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_createAdd","name":"objectFactory_createAdd","type":"CalWSTrampolineobjectFactory_createAdd","ui":"<b>Cal.WS.Trampoline.objectFactory_createAdd<\/b><br\/>[CALDoc] ","terminals":[{"name":"jObjectFactory","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.objectFactory_new","name":"objectFactory_new","type":"CalWSTrampolineobjectFactory_new","ui":"<b>Cal.WS.Trampoline.objectFactory_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_wait_Long_Int","name":"arithmeticException_wait_Long_Int","type":"CalWSTrampolinearithmeticException_wait_Long_Int","ui":"<b>Cal.WS.Trampoline.arithmeticException_wait_Long_Int<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException","input":"text"},{"name":null,"input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_wait_Long","name":"arithmeticException_wait_Long","type":"CalWSTrampolinearithmeticException_wait_Long","ui":"<b>Cal.WS.Trampoline.arithmeticException_wait_Long<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_wait","name":"arithmeticException_wait","type":"CalWSTrampolinearithmeticException_wait","ui":"<b>Cal.WS.Trampoline.arithmeticException_wait<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_toString","name":"arithmeticException_toString","type":"CalWSTrampolinearithmeticException_toString","ui":"<b>Cal.WS.Trampoline.arithmeticException_toString<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_setMessage","name":"arithmeticException_setMessage","type":"CalWSTrampolinearithmeticException_setMessage","ui":"<b>Cal.WS.Trampoline.arithmeticException_setMessage<\/b><br\/>[CALDoc] ","terminals":[{"name":"value","input":"text"},{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_notifyAll","name":"arithmeticException_notifyAll","type":"CalWSTrampolinearithmeticException_notifyAll","ui":"<b>Cal.WS.Trampoline.arithmeticException_notifyAll<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_notify","name":"arithmeticException_notify","type":"CalWSTrampolinearithmeticException_notify","ui":"<b>Cal.WS.Trampoline.arithmeticException_notify<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_hashCode","name":"arithmeticException_hashCode","type":"CalWSTrampolinearithmeticException_hashCode","ui":"<b>Cal.WS.Trampoline.arithmeticException_hashCode<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_getMessage","name":"arithmeticException_getMessage","type":"CalWSTrampolinearithmeticException_getMessage","ui":"<b>Cal.WS.Trampoline.arithmeticException_getMessage<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_getClass","name":"arithmeticException_getClass","type":"CalWSTrampolinearithmeticException_getClass","ui":"<b>Cal.WS.Trampoline.arithmeticException_getClass<\/b><br\/>[CALDoc] ","terminals":[{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_equals","name":"arithmeticException_equals","type":"CalWSTrampolinearithmeticException_equals","ui":"<b>Cal.WS.Trampoline.arithmeticException_equals<\/b><br\/>[CALDoc] ","terminals":[{"name":null,"input":"text"},{"name":"jArithmeticException","input":"text"},{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]},{"description":"Cal.WS.Trampoline.arithmeticException_new","name":"arithmeticException_new","type":"CalWSTrampolinearithmeticException_new","ui":"<b>Cal.WS.Trampoline.arithmeticException_new<\/b><br\/>[CALDoc] ","terminals":[{"name":"_OUTPUT","output":"text"}],"tags":["system:Cal.WS.Trampoline"]}]